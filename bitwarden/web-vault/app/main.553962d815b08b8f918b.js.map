{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./jslib/src/abstractions/i18n.service.ts","webpack:///./jslib/src/abstractions/api.service.ts","webpack:///./jslib/src/abstractions/platformUtils.service.ts","webpack:///./jslib/src/angular/pipes/i18n.pipe.ts","webpack:///./jslib/src/abstractions/user.service.ts","webpack:///./jslib/src/angular/services/validation.service.ts","webpack:///./jslib/src/angular/directives/api-action.directive.ts","webpack:///./jslib/src/abstractions/messaging.service.ts","webpack:///./jslib/src/abstractions/crypto.service.ts","webpack:///./jslib/src/abstractions/cipher.service.ts","webpack:///./jslib/src/importers/baseImporter.ts","webpack:///./jslib/src/models/domain/importResult.ts","webpack:///./jslib/src/abstractions/state.service.ts","webpack:///./src/app/components/callout.component.ts","webpack:///./src/app/components/callout.component.html","webpack:///./jslib/src/models/response/baseResponse.ts","webpack:///./jslib/src/misc/utils.ts","webpack:///./jslib/src/enums/cipherType.ts","webpack:///./jslib/src/angular/directives/stop-click.directive.ts","webpack:///./jslib/src/abstractions/collection.service.ts","webpack:///./jslib/src/angular/directives/input-verbatim.directive.ts","webpack:///./jslib/src/abstractions/storage.service.ts","webpack:///./jslib/src/abstractions/folder.service.ts","webpack:///./jslib/src/abstractions/sync.service.ts","webpack:///./jslib/src/abstractions/passwordGeneration.service.ts","webpack:///./jslib/src/abstractions/environment.service.ts","webpack:///./jslib/src/models/request/passwordVerificationRequest.ts","webpack:///./jslib/src/services/constants.service.ts","webpack:///./jslib/src/abstractions/event.service.ts","webpack:///./jslib/src/abstractions/token.service.ts","webpack:///./jslib/src/models/view/cardView.ts","webpack:///./jslib/src/models/view/secureNoteView.ts","webpack:///./jslib/src/angular/directives/autofocus.directive.ts","webpack:///./jslib/src/abstractions/auth.service.ts","webpack:///./jslib/src/angular/components/icon.component.ts","webpack:///./jslib/src/angular/services/broadcaster.service.ts","webpack:///./src/app/modal.component.ts","webpack:///./jslib/src/enums/twoFactorProviderType.ts","webpack:///./jslib/src/angular/directives/stop-prop.directive.ts","webpack:///./jslib/src/angular/components/icon.component.html","webpack:///./jslib/src/enums/secureNoteType.ts","webpack:///./jslib/src/abstractions/cryptoFunction.service.ts","webpack:///./jslib/src/abstractions/audit.service.ts","webpack:///./src/app/settings/payment.component.ts","webpack:///./jslib/src/models/domain/domainBase.ts","webpack:///./jslib/src/abstractions/lock.service.ts","webpack:///./jslib/src/abstractions/search.service.ts","webpack:///./jslib/src/models/view/cipherView.ts","webpack:///./jslib/src/models/view/identityView.ts","webpack:///./src/app/components/avatar.component.ts","webpack:///./jslib/src/models/view/loginView.ts","webpack:///./jslib/src/models/view/folderView.ts","webpack:///./jslib/src/models/view/collectionView.ts","webpack:///./src/app/components/avatar.component.ts.AvatarComponent.html","webpack:///./jslib/src/enums/fieldType.ts","webpack:///./jslib/src/models/data/cipherData.ts","webpack:///./jslib/src/models/data/collectionData.ts","webpack:///./src/app/settings/two-factor-verify.component.ts","webpack:///./jslib/src/models/request/cipherRequest.ts","webpack:///./jslib/src/models/view/fieldView.ts","webpack:///./jslib/src/models/domain/collection.ts","webpack:///./src/app/settings/two-factor-verify.component.html","webpack:///./src/app/services/router.service.ts","webpack:///./jslib/src/models/domain/cipherString.ts","webpack:///./jslib/src/enums/eventType.ts","webpack:///./src/app/settings/organizations.component.ts","webpack:///./jslib/src/abstractions/totp.service.ts","webpack:///./jslib/src/enums/organizationUserStatusType.ts","webpack:///./jslib/src/models/view/loginUriView.ts","webpack:///./src/app/settings/two-factor-base.component.ts","webpack:///./src/app/settings/payment.component.html","webpack:///./jslib/src/abstractions/import.service.ts","webpack:///./jslib/src/abstractions/export.service.ts","webpack:///./src/app/tools/cipher-report.component.ts","webpack:///./jslib/src/models/domain/cipher.ts","webpack:///./src/app/services/event.service.ts","webpack:///./jslib/src/enums/deviceType.ts","webpack:///./jslib/src/enums/organizationUserType.ts","webpack:///./jslib/src/services/auth.service.ts","webpack:///./src/app/vault/groupings.component.ts","webpack:///./src/app/vault/ciphers.component.ts","webpack:///./src/app/vault/add-edit.component.ts","webpack:///./jslib/src/enums/uriMatchType.ts","webpack:///./src/app/settings/two-factor-setup.component.ts","webpack:///./jslib/src/enums/paymentMethodType.ts","webpack:///./src/app/settings/user-billing.component.ts","webpack:///./src/app/settings/organization-plans.component.ts","webpack:///./src/app/tools/import.component.ts","webpack:///./src/app/tools/export.component.ts","webpack:///./src/app/tools/reused-passwords-report.component.ts","webpack:///./src/app/tools/unsecured-websites-report.component.ts","webpack:///./src/app/tools/weak-passwords-report.component.ts","webpack:///./src/app/tools/exposed-passwords-report.component.ts","webpack:///./src/app/tools/inactive-two-factor-report.component.ts","webpack:///./jslib/src/angular/pipes/search.pipe.ts","webpack:///./jslib/src/models/request/selectionReadOnlyRequest.ts","webpack:///./jslib/src/models/response/selectionReadOnlyResponse.ts","webpack:///./jslib/src/abstractions/notifications.service.ts","webpack:///./jslib/src/abstractions/settings.service.ts","webpack:///./src/app/layouts/frontend-layout.component.ts","webpack:///./src/app/accounts/login.component.ts","webpack:///./src/app/accounts/two-factor.component.ts","webpack:///./src/app/components/password-strength.component.ts","webpack:///./src/app/accounts/register.component.ts","webpack:///./jslib/src/enums/kdfType.ts","webpack:///./src/app/accounts/hint.component.ts","webpack:///./src/app/accounts/lock.component.ts","webpack:///./jslib/src/enums/encryptionType.ts","webpack:///./src/app/accounts/verify-email-token.component.ts","webpack:///./src/app/accounts/accept-organization.component.ts","webpack:///./src/app/accounts/recover-two-factor.component.ts","webpack:///./src/app/accounts/recover-delete.component.ts","webpack:///./src/app/accounts/verify-recover-delete.component.ts","webpack:///./src/app/layouts/navbar.component.ts","webpack:///./src/app/layouts/footer.component.ts","webpack:///./src/app/layouts/user-layout.component.ts","webpack:///./src/app/vault/vault.component.ts","webpack:///./jslib/src/models/request/cipherWithIdRequest.ts","webpack:///./jslib/src/models/request/folderRequest.ts","webpack:///./src/app/vault/attachments.component.ts","webpack:///./src/app/vault/collections.component.ts","webpack:///./src/app/settings/settings.component.ts","webpack:///./src/app/settings/account.component.ts","webpack:///./src/app/settings/purge-vault.component.ts","webpack:///./src/app/settings/options.component.ts","webpack:///./src/app/settings/domain-rules.component.ts","webpack:///./src/app/settings/two-factor-duo.component.ts","webpack:///./src/app/settings/premium.component.ts","webpack:///./src/app/settings/add-credit.component.ts","webpack:///./src/app/settings/adjust-payment.component.ts","webpack:///./src/app/settings/update-license.component.ts","webpack:///./src/app/settings/adjust-storage.component.ts","webpack:///./src/app/settings/user-subscription.component.ts","webpack:///./src/app/settings/create-organization.component.ts","webpack:///./src/app/tools/tools.component.ts","webpack:///./src/app/tools/password-generator.component.ts","webpack:///./src/app/tools/breach-report.component.ts","webpack:///./src/app/organizations/vault/add-edit.component.ts","webpack:///./jslib/src/models/view/passwordHistoryView.ts","webpack:///./src/app/layouts/organization-layout.component.ts","webpack:///./src/app/organizations/vault/groupings.component.ts","webpack:///./src/app/organizations/vault/ciphers.component.ts","webpack:///./src/app/organizations/vault/vault.component.ts","webpack:///./src/app/organizations/manage/entity-events.component.ts","webpack:///./src/app/organizations/tools/tools.component.ts","webpack:///./src/app/organizations/tools/import.component.ts","webpack:///./src/app/organizations/tools/export.component.ts","webpack:///./src/app/organizations/tools/exposed-passwords-report.component.ts","webpack:///./src/app/organizations/tools/inactive-two-factor-report.component.ts","webpack:///./src/app/organizations/tools/reused-passwords-report.component.ts","webpack:///./src/app/organizations/tools/unsecured-websites-report.component.ts","webpack:///./src/app/organizations/tools/weak-passwords-report.component.ts","webpack:///./src/app/organizations/manage/manage.component.ts","webpack:///./src/app/organizations/manage/collections.component.ts","webpack:///./src/app/organizations/manage/entity-users.component.ts","webpack:///./src/app/organizations/manage/events.component.ts","webpack:///./src/app/organizations/manage/groups.component.ts","webpack:///./src/app/organizations/manage/people.component.ts","webpack:///./src/app/organizations/settings/settings.component.ts","webpack:///./src/app/organizations/settings/account.component.ts","webpack:///./src/app/organizations/settings/two-factor-setup.component.ts","webpack:///./src/app/organizations/settings/organization-billing.component.ts","webpack:///./src/app/organizations/settings/organization-subscription.component.ts","webpack:///./jslib/src/models/response/profileResponse.ts","webpack:///./src lazy namespace object","webpack:///./src/app/app.component.ts","webpack:///./src/app/accounts/two-factor-options.component.ts","webpack:///./jslib/src/models/request/twoFactorEmailRequest.ts","webpack:///./jslib/src/models/request/keysRequest.ts","webpack:///./src/app/components/password-strength.component.html","webpack:///./src/app/layouts/navbar.component.html","webpack:///./src/app/layouts/footer.component.html","webpack:///./src/app/settings/verify-email.component.ts","webpack:///./src/app/settings/organizations.component.html","webpack:///./src/app/settings/update-key.component.ts","webpack:///./jslib/src/models/api/cardApi.ts","webpack:///./jslib/src/models/api/fieldApi.ts","webpack:///./jslib/src/models/api/identityApi.ts","webpack:///./jslib/src/models/api/loginApi.ts","webpack:///./jslib/src/models/api/loginUriApi.ts","webpack:///./jslib/src/models/api/secureNoteApi.ts","webpack:///./jslib/src/models/request/folderWithIdRequest.ts","webpack:///./jslib/src/models/request/updateKeyRequest.ts","webpack:///./src/app/vault/bulk-delete.component.ts","webpack:///./src/app/vault/bulk-move.component.ts","webpack:///./src/app/vault/bulk-share.component.ts","webpack:///./src/app/vault/folder-add-edit.component.ts","webpack:///./src/app/vault/share.component.ts","webpack:///./src/app/settings/profile.component.ts","webpack:///./src/app/settings/change-email.component.ts","webpack:///./jslib/src/models/request/emailTokenRequest.ts","webpack:///./src/app/settings/change-password.component.ts","webpack:///./jslib/src/models/request/passwordRequest.ts","webpack:///./src/app/settings/change-kdf.component.ts","webpack:///./src/app/settings/deauthorize-sessions.component.ts","webpack:///./src/app/settings/delete-account.component.ts","webpack:///./src/app/settings/two-factor-authenticator.component.ts","webpack:///./src/app/settings/two-factor-email.component.ts","webpack:///./src/app/settings/two-factor-recovery.component.ts","webpack:///./src/app/settings/two-factor-u2f.component.ts","webpack:///./src/app/settings/two-factor-yubikey.component.ts","webpack:///./src/services/webConstants.ts","webpack:///./src/app/settings/add-credit.component.html","webpack:///./src/app/settings/adjust-payment.component.html","webpack:///./src/app/settings/update-license.component.html","webpack:///./src/app/settings/adjust-storage.component.html","webpack:///./src/app/settings/organization-plans.component.html","webpack:///./jslib/src/enums/planType.ts","webpack:///./jslib/src/angular/pipes/color-password.pipe.ts","webpack:///./jslib/src/angular/directives/select-copy.directive.ts","webpack:///./src/app/tools/password-generator-history.component.ts","webpack:///./jslib/src/models/data/attachmentData.ts","webpack:///./jslib/src/models/data/cardData.ts","webpack:///./jslib/src/models/data/fieldData.ts","webpack:///./jslib/src/models/data/identityData.ts","webpack:///./jslib/src/models/data/loginData.ts","webpack:///./jslib/src/models/data/loginUriData.ts","webpack:///./jslib/src/models/data/passwordHistoryData.ts","webpack:///./jslib/src/models/data/secureNoteData.ts","webpack:///./jslib/src/models/domain/attachment.ts","webpack:///./jslib/src/models/view/attachmentView.ts","webpack:///./jslib/src/models/domain/symmetricCryptoKey.ts","webpack:///./jslib/src/models/domain/card.ts","webpack:///./jslib/src/models/domain/field.ts","webpack:///./jslib/src/models/domain/identity.ts","webpack:///./jslib/src/models/domain/login.ts","webpack:///./jslib/src/models/domain/loginUri.ts","webpack:///./jslib/src/models/domain/password.ts","webpack:///./jslib/src/models/domain/secureNote.ts","webpack:///./jslib/src/models/request/cipherCreateRequest.ts","webpack:///./src/app/organizations/vault/attachments.component.ts","webpack:///./src/app/organizations/vault/collections.component.ts","webpack:///./jslib/src/models/request/cipherCollectionsRequest.ts","webpack:///./src/app/organizations/manage/collection-add-edit.component.ts","webpack:///./jslib/src/models/request/collectionRequest.ts","webpack:///./src/app/organizations/manage/group-add-edit.component.ts","webpack:///./jslib/src/models/request/organizationUserConfirmRequest.ts","webpack:///./src/app/organizations/manage/user-add-edit.component.ts","webpack:///./src/app/organizations/manage/user-confirm.component.ts","webpack:///./src/app/organizations/manage/user-groups.component.ts","webpack:///./src/app/organizations/settings/api-key.component.ts","webpack:///./src/app/organizations/settings/delete-organization.component.ts","webpack:///./src/app/organizations/settings/rotate-api-key.component.ts","webpack:///./src/app/organizations/settings/change-plan.component.ts","webpack:///./src/app/organizations/settings/download-license.component.ts","webpack:///./src/app/organizations/settings/adjust-seats.component.ts","webpack:///./jslib/src/angular/directives/true-false-value.directive.ts","webpack:///./jslib/src/services/api.service.ts","webpack:///./jslib/src/models/response/cipherResponse.ts","webpack:///./jslib/src/models/response/collectionResponse.ts","webpack:///./jslib/src/models/response/domainsResponse.ts","webpack:///./jslib/src/models/response/folderResponse.ts","webpack:///./jslib/src/models/response/organizationResponse.ts","webpack:///./jslib/src/models/response/subscriptionResponse.ts","webpack:///./jslib/src/services/appId.service.ts","webpack:///./jslib/src/services/audit.service.ts","webpack:///./jslib/src/services/cipher.service.ts","webpack:///./jslib/src/misc/sequentialize.ts","webpack:///./jslib/src/services/collection.service.ts","webpack:///./jslib/src/misc/serviceUtils.ts","webpack:///./jslib/src/services/container.service.ts","webpack:///./jslib/src/services/crypto.service.ts","webpack:///./jslib/src/misc/wordlist.ts","webpack:///./jslib/src/services/environment.service.ts","webpack:///./jslib/src/services/folder.service.ts","webpack:///./jslib/src/models/data/folderData.ts","webpack:///./jslib/src/services/i18n.service.ts","webpack:///./jslib/src/services/lock.service.ts","webpack:///./jslib/src/services/passwordGeneration.service.ts","webpack:///./jslib/src/services/settings.service.ts","webpack:///./jslib/src/services/state.service.ts","webpack:///./jslib/src/services/sync.service.ts","webpack:///./jslib/src/services/token.service.ts","webpack:///./jslib/src/services/totp.service.ts","webpack:///./jslib/src/services/user.service.ts","webpack:///./jslib/src/models/export/cipherWithIds.ts","webpack:///./jslib/src/models/export/collectionWithId.ts","webpack:///./jslib/src/models/export/folderWithId.ts","webpack:///./jslib/src/enums/notificationType.ts","webpack:///./jslib/src/angular/services/auth-guard.service.ts","webpack:///./src/app/services/organization-guard.service.ts","webpack:///./src/app/services/organization-type-guard.service.ts","webpack:///./src/app/services/unauth-guard.service.ts","webpack:///./src/app/main.ts","webpack:///./src/app/app.module.ts","webpack:///./jslib/src/services/broadcaster.service.ts","webpack:///./src/app/layouts/frontend-layout.component.html","webpack:///./src/app/accounts/login.component.html","webpack:///./jslib/src/angular/components/login.component.ts","webpack:///./jslib/src/misc/tldjs.noop.ts","webpack:///./src/app/accounts/two-factor.component.html","webpack:///./jslib/src/angular/components/two-factor-options.component.ts","webpack:///./jslib/src/angular/components/modal.component.ts","webpack:///./jslib/src/angular/components/two-factor.component.ts","webpack:///./jslib/src/models/domain/authResult.ts","webpack:///./jslib/src/models/request/deviceRequest.ts","webpack:///./jslib/src/models/request/preloginRequest.ts","webpack:///./jslib/src/models/request/tokenRequest.ts","webpack:///./jslib/src/misc/u2f.ts","webpack:///./src/app/accounts/register.component.html","webpack:///./jslib/src/angular/components/register.component.ts","webpack:///./jslib/src/models/request/registerRequest.ts","webpack:///./src/app/accounts/hint.component.html","webpack:///./jslib/src/angular/components/hint.component.ts","webpack:///./jslib/src/models/request/passwordHintRequest.ts","webpack:///./src/app/accounts/lock.component.html","webpack:///./jslib/src/angular/components/lock.component.ts","webpack:///./src/app/accounts/verify-email-token.component.html","webpack:///./jslib/src/models/request/verifyEmailRequest.ts","webpack:///./src/app/accounts/accept-organization.component.html","webpack:///./jslib/src/models/request/organizationUserAcceptRequest.ts","webpack:///./src/app/accounts/recover-two-factor.component.html","webpack:///./jslib/src/models/request/twoFactorRecoveryRequest.ts","webpack:///./src/app/accounts/recover-delete.component.html","webpack:///./jslib/src/models/request/deleteRecoverRequest.ts","webpack:///./src/app/accounts/verify-recover-delete.component.html","webpack:///./jslib/src/models/request/verifyDeleteRecoverRequest.ts","webpack:///./src/app/layouts/user-layout.component.html","webpack:///./src/app/vault/vault.component.html","webpack:///./src/app/settings/verify-email.component.html","webpack:///./src/app/vault/groupings.component.html","webpack:///./jslib/src/angular/components/groupings.component.ts","webpack:///./src/app/vault/ciphers.component.html","webpack:///./jslib/src/angular/directives/fallback-src.directive.ts","webpack:///./jslib/src/angular/components/ciphers.component.ts","webpack:///./jslib/src/models/request/attachmentRequest.ts","webpack:///./jslib/src/angular/components/add-edit.component.ts","webpack:///./jslib/src/angular/components/attachments.component.ts","webpack:///./jslib/src/angular/components/collections.component.ts","webpack:///./jslib/src/angular/components/folder-add-edit.component.ts","webpack:///./jslib/src/angular/components/share.component.ts","webpack:///./src/app/settings/settings.component.html","webpack:///./src/app/settings/account.component.html","webpack:///./src/app/settings/profile.component.html","webpack:///./jslib/src/models/request/updateProfileRequest.ts","webpack:///./src/app/settings/change-email.component.html","webpack:///./jslib/src/models/request/emailRequest.ts","webpack:///./src/app/settings/change-password.component.html","webpack:///./src/app/settings/change-kdf.component.html","webpack:///./jslib/src/models/request/kdfRequest.ts","webpack:///./src/app/settings/options.component.html","webpack:///./src/app/settings/domain-rules.component.html","webpack:///./jslib/src/models/request/updateDomainsRequest.ts","webpack:///./src/app/settings/two-factor-setup.component.html","webpack:///./jslib/src/models/request/updateTwoFactorAuthenticatorRequest.ts","webpack:///./jslib/src/models/request/twoFactorProviderRequest.ts","webpack:///./jslib/src/models/request/updateTwoFactorDuoRequest.ts","webpack:///./jslib/src/models/request/updateTwoFactorEmailRequest.ts","webpack:///./jslib/src/models/request/updateTwoFactorU2fDeleteRequest.ts","webpack:///./jslib/src/models/request/updateTwoFactorU2fRequest.ts","webpack:///./jslib/src/models/request/updateTwoFactorYubioOtpRequest.ts","webpack:///./src/app/settings/premium.component.html","webpack:///./src/app/settings/user-billing.component.html","webpack:///./jslib/src/models/request/bitPayInvoiceRequest.ts","webpack:///./jslib/src/models/request/paymentRequest.ts","webpack:///./jslib/src/enums/transactionType.ts","webpack:///./jslib/src/models/request/verifyBankRequest.ts","webpack:///./src/app/settings/user-subscription.component.html","webpack:///./jslib/src/models/request/storageRequest.ts","webpack:///./src/app/settings/create-organization.component.html","webpack:///./jslib/src/models/request/organizationCreateRequest.ts","webpack:///./jslib/src/models/request/organizationUpgradeRequest.ts","webpack:///./src/app/tools/tools.component.html","webpack:///./src/app/tools/import.component.html","webpack:///./src/app/tools/export.component.html","webpack:///./jslib/src/angular/components/export.component.ts","webpack:///./src/app/tools/password-generator.component.html","webpack:///./jslib/src/angular/components/password-generator.component.ts","webpack:///./jslib/src/angular/components/password-generator-history.component.ts","webpack:///./src/app/tools/breach-report.component.html","webpack:///./src/app/tools/reused-passwords-report.component.html","webpack:///./src/app/tools/unsecured-websites-report.component.html","webpack:///./src/app/tools/weak-passwords-report.component.html","webpack:///./src/app/tools/exposed-passwords-report.component.html","webpack:///./src/app/tools/inactive-two-factor-report.component.html","webpack:///./src/app/layouts/organization-layout.component.html","webpack:///./src/app/organizations/vault/vault.component.html","webpack:///./src/app/organizations/tools/tools.component.html","webpack:///./src/app/organizations/manage/manage.component.html","webpack:///./src/app/organizations/manage/collections.component.html","webpack:///./src/app/organizations/manage/events.component.html","webpack:///./src/app/organizations/manage/groups.component.html","webpack:///./jslib/src/models/request/groupRequest.ts","webpack:///./src/app/organizations/manage/people.component.html","webpack:///./jslib/src/models/request/organizationUserInviteRequest.ts","webpack:///./jslib/src/models/request/organizationUserUpdateRequest.ts","webpack:///./jslib/src/models/request/organizationUserUpdateGroupsRequest.ts","webpack:///./src/app/organizations/settings/settings.component.html","webpack:///./src/app/organizations/settings/account.component.html","webpack:///./jslib/src/models/request/organizationUpdateRequest.ts","webpack:///./src/app/organizations/settings/organization-subscription.component.html","webpack:///./src/app/organizations/settings/change-plan.component.html","webpack:///./src/app/organizations/settings/download-license.component.html","webpack:///./src/app/organizations/settings/adjust-seats.component.html","webpack:///./jslib/src/models/request/seatRequest.ts","webpack:///./src/app/vault/add-edit.component.html","webpack:///./src/app/vault/attachments.component.html","webpack:///./src/app/vault/bulk-delete.component.html","webpack:///./src/app/vault/bulk-move.component.html","webpack:///./src/app/vault/bulk-share.component.html","webpack:///./src/app/vault/collections.component.html","webpack:///./src/app/settings/deauthorize-sessions.component.html","webpack:///./src/app/settings/delete-account.component.html","webpack:///./src/app/organizations/settings/delete-organization.component.html","webpack:///./src/app/vault/folder-add-edit.component.html","webpack:///./src/app/modal.component.ts.ModalComponent.html","webpack:///./src/app/organizations/settings/api-key.component.html","webpack:///./src/app/organizations/manage/collection-add-edit.component.html","webpack:///./src/app/organizations/manage/entity-events.component.html","webpack:///./src/app/organizations/manage/entity-users.component.html","webpack:///./src/app/organizations/manage/group-add-edit.component.html","webpack:///./src/app/organizations/settings/rotate-api-key.component.html","webpack:///./src/app/organizations/manage/user-add-edit.component.html","webpack:///./src/app/organizations/manage/user-confirm.component.html","webpack:///./src/app/organizations/manage/user-groups.component.html","webpack:///./src/app/tools/password-generator-history.component.html","webpack:///./src/app/settings/purge-vault.component.html","webpack:///./src/app/vault/share.component.html","webpack:///./src/app/settings/two-factor-authenticator.component.html","webpack:///./src/app/settings/two-factor-duo.component.html","webpack:///./src/app/settings/two-factor-email.component.html","webpack:///./src/app/accounts/two-factor-options.component.html","webpack:///./src/app/settings/two-factor-recovery.component.html","webpack:///./src/app/settings/two-factor-u2f.component.html","webpack:///./src/app/settings/two-factor-yubikey.component.html","webpack:///./src/app/settings/update-key.component.html","webpack:///./src/app/app.component.html","webpack:///./src/app/services/services.module.ts","webpack:///./src/services/broadcasterMessaging.service.ts","webpack:///./src/services/htmlStorage.service.ts","webpack:///./jslib/src/services/index.ts","webpack:///./jslib/src/models/response/apiKeyResponse.ts","webpack:///./jslib/src/models/response/billingResponse.ts","webpack:///./jslib/src/models/response/breachAccountResponse.ts","webpack:///./jslib/src/models/response/attachmentResponse.ts","webpack:///./jslib/src/models/response/passwordHistoryResponse.ts","webpack:///./jslib/src/models/response/globalDomainResponse.ts","webpack:///./jslib/src/models/response/errorResponse.ts","webpack:///./jslib/src/models/response/eventResponse.ts","webpack:///./jslib/src/models/response/groupResponse.ts","webpack:///./jslib/src/models/response/identityTokenResponse.ts","webpack:///./jslib/src/models/response/identityTwoFactorResponse.ts","webpack:///./jslib/src/models/response/listResponse.ts","webpack:///./jslib/src/models/response/organizationSubscriptionResponse.ts","webpack:///./jslib/src/models/response/organizationUserResponse.ts","webpack:///./jslib/src/models/response/paymentResponse.ts","webpack:///./jslib/src/models/response/profileOrganizationResponse.ts","webpack:///./jslib/src/models/response/preloginResponse.ts","webpack:///./jslib/src/models/response/syncResponse.ts","webpack:///./jslib/src/models/response/twoFactorAuthenticatorResponse.ts","webpack:///./jslib/src/models/response/twoFactorDuoResponse.ts","webpack:///./jslib/src/models/response/twoFactorEmailResponse.ts","webpack:///./jslib/src/models/response/twoFactorProviderResponse.ts","webpack:///./jslib/src/models/response/twoFactorRescoverResponse.ts","webpack:///./jslib/src/models/response/twoFactorU2fResponse.ts","webpack:///./jslib/src/models/response/twoFactorYubiKeyResponse.ts","webpack:///./jslib/src/models/response/userKeyResponse.ts","webpack:///./jslib/src/misc/throttle.ts","webpack:///./jslib/src/models/request/cipherBulkDeleteRequest.ts","webpack:///./jslib/src/models/request/cipherBulkMoveRequest.ts","webpack:///./jslib/src/models/request/cipherBulkShareRequest.ts","webpack:///./jslib/src/models/request/cipherShareRequest.ts","webpack:///./jslib/src/models/domain/treeNode.ts","webpack:///./jslib/src/models/domain/encryptedObject.ts","webpack:///./jslib/src/models/domain/environmentUrls.ts","webpack:///./jslib/src/models/domain/folder.ts","webpack:///./jslib/src/models/domain/generatedPasswordHistory.ts","webpack:///./jslib/src/models/data/organizationData.ts","webpack:///./jslib/src/models/domain/organization.ts","webpack:///./src/services/i18n.service.ts","webpack:///./src/services/memoryStorage.service.ts","webpack:///./src/services/webPlatformUtils.service.ts","webpack:///./jslib/src/misc/analytics.ts","webpack:///./jslib/src/services/event.service.ts","webpack:///./jslib/src/models/data/eventData.ts","webpack:///./jslib/src/models/request/eventRequest.ts","webpack:///./jslib/src/services/export.service.ts","webpack:///./jslib/src/models/export/cipher.ts","webpack:///./jslib/src/models/export/card.ts","webpack:///./jslib/src/models/export/field.ts","webpack:///./jslib/src/models/export/identity.ts","webpack:///./jslib/src/models/export/login.ts","webpack:///./jslib/src/models/export/loginUri.ts","webpack:///./jslib/src/models/export/secureNote.ts","webpack:///./jslib/src/models/export/collection.ts","webpack:///./jslib/src/models/export/folder.ts","webpack:///./jslib/src/services/import.service.ts","webpack:///./jslib/src/models/request/importCiphersRequest.ts","webpack:///./jslib/src/models/request/importOrganizationCiphersRequest.ts","webpack:///./jslib/src/models/request/kvpRequest.ts","webpack:///./jslib/src/importers/ascendoCsvImporter.ts","webpack:///./jslib/src/importers/avastCsvImporter.ts","webpack:///./jslib/src/importers/aviraCsvImporter.ts","webpack:///./jslib/src/importers/bitwardenCsvImporter.ts","webpack:///./jslib/src/importers/bitwardenJsonImporter.ts","webpack:///./jslib/src/importers/blurCsvImporter.ts","webpack:///./jslib/src/importers/chromeCsvImporter.ts","webpack:///./jslib/src/importers/clipperzHtmlImporter.ts","webpack:///./jslib/src/importers/dashlaneJsonImporter.ts","webpack:///./jslib/src/importers/enpassCsvImporter.ts","webpack:///./jslib/src/importers/enpassJsonImporter.ts","webpack:///./jslib/src/importers/firefoxCsvImporter.ts","webpack:///./jslib/src/importers/fsecureFskImporter.ts","webpack:///./jslib/src/importers/gnomeJsonImporter.ts","webpack:///./jslib/src/importers/kasperskyTxtImporter.ts","webpack:///./jslib/src/importers/keepass2XmlImporter.ts","webpack:///./jslib/src/importers/keepassxCsvImporter.ts","webpack:///./jslib/src/importers/keeperCsvImporter.ts","webpack:///./jslib/src/importers/lastpassCsvImporter.ts","webpack:///./jslib/src/importers/logMeOnceCsvImporter.ts","webpack:///./jslib/src/importers/meldiumCsvImporter.ts","webpack:///./jslib/src/importers/msecureCsvImporter.ts","webpack:///./jslib/src/importers/mykiCsvImporter.ts","webpack:///./jslib/src/importers/onepassword1PifImporter.ts","webpack:///./jslib/src/importers/onepasswordWinCsvImporter.ts","webpack:///./jslib/src/models/view/index.ts","webpack:///./jslib/src/models/view/view.ts","webpack:///./jslib/src/importers/padlockCsvImporter.ts","webpack:///./jslib/src/importers/passkeepCsvImporter.ts","webpack:///./jslib/src/importers/passmanJsonImporter.ts","webpack:///./jslib/src/importers/passpackCsvImporter.ts","webpack:///./jslib/src/importers/passwordAgentCsvImporter.ts","webpack:///./jslib/src/importers/passwordBossJsonImporter.ts","webpack:///./jslib/src/importers/passwordDragonXmlImporter.ts","webpack:///./jslib/src/importers/passwordSafeXmlImporter.ts","webpack:///./jslib/src/importers/passwordWalletTxtImporter.ts","webpack:///./jslib/src/importers/rememBearCsvImporter.ts","webpack:///./jslib/src/importers/roboformCsvImporter.ts","webpack:///./jslib/src/importers/safeInCloudXmlImporter.ts","webpack:///./jslib/src/importers/saferpassCsvImport.ts","webpack:///./jslib/src/importers/secureSafeCsvImporter.ts","webpack:///./jslib/src/importers/splashIdCsvImporter.ts","webpack:///./jslib/src/importers/stickyPasswordXmlImporter.ts","webpack:///./jslib/src/importers/truekeyCsvImporter.ts","webpack:///./jslib/src/importers/upmCsvImporter.ts","webpack:///./jslib/src/importers/zohoVaultCsvImporter.ts","webpack:///./jslib/src/services/notifications.service.ts","webpack:///./jslib/src/models/response/notificationResponse.ts","webpack:///./jslib/src/services/search.service.ts","webpack:///./jslib/src/services/webCryptoFunction.service.ts","webpack:///./jslib/src/models/domain/decryptParameters.ts","webpack:///./src/app/app-routing.module.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","I18nService","ApiService","PlatformUtilsService","i18nService","transform","id","p1","p2","p3","this","I18nPipe","UserService","platformUtilsService","showError","defaultErrorMessage","errors","validationErrors","concat","getAllMessages","message","showToast","timeout","ValidationService","el","validationService","ngOnChanges","changes","appApiAction","then","nativeElement","loading","response","e","ApiActionDirective","MessagingService","CryptoService","CipherService","organization","newLineRegex","passwordFieldNames","usernameFieldNames","notesFieldNames","uriFieldNames","parseXml","doc","DOMParser","parseFromString","querySelector","parseCsv","header","splitNewLine","join","trim","papa","parse","encoding","skipEmptyLines","forEach","row","console","warn","parseSingleRowCsv","rowData","isNullOrWhitespace","parsedRow","makeUriArray","uri","loginUri","LoginUriView","fixUri","match","u","indexOf","substring","nameFromUrl","url","hostname","Utils","getHostname","startsWith","replace","str","getValueOrDefault","defaultValue","split","getCardBrand","cardNum","re","RegExp","test","setCardExpiration","cipher","expiration","parts","month","year","substr","card","expMonth","expYear","moveFoldersToCollections","folderRelationships","collectionRelationships","collections","folders","map","f","collection","CollectionView","querySelectorDirectChild","parentEl","query","els","querySelectorAllDirectChild","Array","from","querySelectorAll","filter","parentNode","initLoginCipher","CipherView","favorite","notes","fields","login","LoginView","type","CipherType","Login","cleanupCipher","processKvp","FieldType","Text","search","field","FieldView","processFolder","folderName","folderIndex","hasFolder","addFolder","FolderView","ciphers","convertToNoteIfNeeded","username","password","uris","SecureNote","secureNote","SecureNoteView","SecureNoteType","Generic","BaseImporter","success","ImportResult","StateService","ngOnInit","calloutStyle","undefined","title","icon","CalloutComponent","getResponseProperty","propertyName","exactName","Error","otherCasePropertyName","charAt","toUpperCase","toLowerCase","BaseResponse","nodeURL","init","inited","isNode","process","release","isBrowser","isNativeScript","isMobileBrowser","isMobile","isAppleMobileBrowser","isAppleMobile","global","fromB64ToArray","Uint8Array","Buffer","binaryString","atob","bytes","charCodeAt","fromHexToArray","parseInt","fromUtf8ToArray","strUtf8","unescape","encodeURIComponent","arr","fromByteStringToArray","fromBufferToB64","buffer","toString","binary","byteLength","String","fromCharCode","btoa","fromBufferToUtf8","encodedString","decodeURIComponent","escape","fromBufferToByteString","fromBufferToHex","x","fromUrlB64ToUtf8","b64Str","output","fromB64ToUtf8","newGuid","Math","random","uriString","getUrl","getHost","host","getDomain","httpUrl","tldEndingRegex","getUrlObject","validIpAddress","urlDomain","tldjs","domain","getQueryParams","Map","pair","set","getSortFunction","prop","a","b","collator","compare","localeCompare","ipString","win","mobile","navigator","userAgent","vendor","opera","hasProtocol","URL","anchor","document","createElement","href","onClick","$event","preventDefault","StopClickDirective","CollectionService","renderer","condition","disableComplete","hasAttribute","setAttribute","InputVerbatimDirective","StorageService","FolderService","SyncService","PasswordGenerationService","EnvironmentService","PasswordVerificationRequest","environmentUrlsKey","ConstantsService","disableGaKey","disableAddLoginNotificationKey","disableContextMenuItemKey","disableFaviconKey","disableAutoTotpCopyKey","enableAutoFillOnPageLoadKey","lockOptionKey","lastActiveKey","neverDomainsKey","installedVersionKey","localeKey","themeKey","collapsedGroupingsKey","autoConfirmFingerprints","dontShowCardsCurrentTab","dontShowIdentitiesCurrentTab","defaultUriMatch","pinProtectedKey","protectedPin","clearClipboardKey","eventCollectionKey","disableChangedPasswordNotificationKey","EventService","TokenService","cardholderName","code","_brand","_number","_subTitle","repeat","brand","number","count","exp","formatYear","CardView","autofocus","focus","AutofocusDirective","AuthService","IconMap","environmentService","stateService","iconsUrl","baseUrl","imageEnabled","load","setLoginIcon","Card","Identity","hostnameUri","isWebsite","image","fallbackImage","IconComponent","BroadcasterService","componentFactoryResolver","messagingService","ngOnDestroy","show","parentContainer","fade","setComponentParameters","factory","resolveComponentFactory","componentRef","container","createComponent","instance","modals","jq","modal","on","onShow","emit","send","onShown","find","onClose","onClosed","clear","close","ModalComponent","TwoFactorProviderType","stopPropagation","StopPropDirective","CryptoFunctionService","AuditService","StripeElementStyle","base","color","fontFamily","fontSize","fontSmoothing","invalid","StripeElementClasses","empty","apiService","showMethods","showOptions","method","PaymentMethodType","hideBank","hidePaypal","hideCredit","bank","routing_number","account_number","account_holder_name","account_holder_type","currency","country","paymentMethodType","btInstance","stripe","stripeElements","stripeCardNumberElement","stripeCardExpiryElement","stripeCardCvcElement","stripeScript","src","async","onload","Stripe","isDev","WebConstants","stripeTestKey","stripeLiveKey","elements","setStripeElement","btScript","PayPal","BankAccount","Credit","head","appendChild","removeChild","setTimeout","body","btStylesheet","changeMethod","braintree","dropin","authorization","btSandboxKey","btProductionKey","paymentOptionPriority","paypal","flow","buttonStyle","label","size","shape","createErr","error","createPaymentToken","Promise","resolve","reject","requestPaymentMethod","payload","nonce","catch","err","postSetupPayment","clientSecret","handleCardSetup","setupIntent","status","payment_method","createToken","token","handleStripeCardPayment","successCallback","handleCardPayment","paymentIntent","style","classes","placeholder","mount","PaymentComponent","buildDomainModel","dataObj","alreadyEncrypted","notEncList","objProp","CipherString","buildDataModel","notCipherStringList","encryptedString","decryptObj","viewModel","orgId","promises","self","theProp","mapProp","decrypt","val","all","LockService","SearchService","organizationId","folderId","organizationUseTotp","edit","identity","IdentityView","attachments","passwordHistory","collectionIds","revisionDate","localData","subTitle","hasAttachments","passwordRevisionDate","middleName","address1","address2","address3","city","state","postalCode","company","email","phone","ssn","passportNumber","licenseNumber","_firstName","_lastName","firstName","lastName","address","sanitizer","cryptoFunctionService","charCount","textColor","fontWeight","dynamic","circle","generate","hash","hashBytes","chars","upperData","getFirstLetters","charObj","getCharText","stringToColor","svg","getSvg","html","outerHTML","svgHtml","text","svgTag","backgroundColor","width","height","character","textTag","textContent","AvatarComponent","totp","hasUris","some","canLaunch","launchUri","externalId","readOnly","userId","LoginData","SecureNoteData","CardData","IdentityData","FieldData","AttachmentData","ph","PasswordHistoryData","CipherData","CollectionData","toasterService","cryptoService","onAuthed","EventEmitter","submit","masterPassword","popAsync","request","hashPassword","masterPasswordHash","formPromise","getTwoFactorRecover","Duo","OrganizationDuo","getTwoFactorOrganizationDuo","getTwoFactorDuo","Email","getTwoFactorEmail","U2f","getTwoFactorU2f","Authenticator","getTwoFactorAuthenticator","Yubikey","getTwoFactorYubiKey","TwoFactorVerifyComponent","LoginApi","toISOString","LoginUriApi","SecureNoteApi","CardApi","IdentityApi","FieldApi","lastUsedDate","attachments2","attachment","fileName","attachmentRequest","AttachmentRequest","CipherRequest","obj","Collection","router","activatedRoute","titleService","previousUrl","currentUrl","events","subscribe","event","NavigationEnd","titleId","rawTitle","child","firstChild","snapshot","newTitle","setTitle","getPreviousUrl","setPreviousUrl","RouterService","encryptedStringOrType","iv","mac","encType","encryptionType","headerPieces","encPieces","EncryptionType","AesCbc128_HmacSha256_B64","AesCbc256_B64","AesCbc256_HmacSha256_B64","Rsa2048_OaepSha256_B64","Rsa2048_OaepSha1_B64","decryptedValue","containerService","bitwardenContainerService","getCryptoService","getOrgKey","orgKey","decryptToUtf8","EventType","userService","analytics","syncService","vault","loaded","getAllOrganizations","orgs","sort","organizations","leave","org","showDialog","actionPromise","postLeaveOrganization","fullSync","eventTrack","next","action","OrganizationsComponent","TotpService","OrganizationUserStatusType","CanLaunchWhitelist","_uri","_domain","_hostname","_canLaunch","UriMatchType","RegularExpression","onUpdated","twoFactorProviderType","enabled","authed","auth","authResponse","enable","enableFunction","disable","promise","TwoFactorProviderRequest","putTwoFactorOrganizationDisable","putTwoFactorDisable","TwoFactorBaseComponent","ImportService","ExportService","requiresPaid","hasLoaded","setCiphers","selectCipher","childComponent","cipherAddEditModalRef","AddEditComponent","cipherId","onSavedCipher","onDeletedCipher","checkAccess","useTotp","canAccessPremium","accessPremium","CipherReportComponent","Date","Attachment","Field","Password","model","reduce","decAttachment","decField","decPh","toCipherData","toLoginData","toSecureNoteData","toCardData","toIdentityData","toFieldData","toAttachmentData","toPasswordHistoryData","Cipher","getDefaultDateFilters","end","getFullYear","getMonth","getDate","setDate","start","toDateTimeLocalString","formatDateFilters","filterStart","filterEnd","isNaN","getTime","getEventInfo","ev","options","EventOptions","appInfo","getAppInfo","deviceType","getEventMessage","appIcon","appName","msg","User_LoggedIn","User_ChangedPassword","User_Updated2fa","User_Disabled2fa","User_Recovered2fa","User_FailedLogIn","User_FailedLogIn2fa","User_ClientExportedVault","Cipher_Created","formatCipherId","Cipher_Updated","Cipher_Deleted","Cipher_AttachmentCreated","Cipher_AttachmentDeleted","Cipher_Shared","Cipher_ClientViewed","Cipher_ClientToggledPasswordVisible","Cipher_ClientToggledHiddenFieldVisible","Cipher_ClientToggledCardCodeVisible","Cipher_ClientCopiedHiddenField","Cipher_ClientCopiedPassword","Cipher_ClientCopiedCardCode","Cipher_ClientAutofilled","Cipher_UpdatedCollections","Collection_Created","formatCollectionId","Collection_Updated","Collection_Deleted","Group_Created","formatGroupId","Group_Updated","Group_Deleted","OrganizationUser_Invited","formatOrgUserId","OrganizationUser_Confirmed","OrganizationUser_Updated","OrganizationUser_Removed","OrganizationUser_UpdatedGroups","Organization_Updated","Organization_PurgedVault","DeviceType","Android","iOS","UWP","ChromeExtension","FirefoxExtension","OperaExtension","EdgeExtension","VivaldiExtension","SafariExtension","WindowsDesktop","MacOsDesktop","LinuxDesktop","ChromeBrowser","FirefoxBrowser","OperaBrowser","SafariBrowser","VivaldiBrowser","EdgeBrowser","IEBrowser","UnknownBrowser","shortId","getShortId","cipherInfo","makeAnchor","groupId","collectionId","organizationUserId","innerHTML","date","pad","getHours","getMinutes","num","norm","floor","abs","EventInfo","OrganizationUserType","TwoFactorProviders","description","priority","premium","tokenService","appIdService","setCryptoKeys","selectedTwoFactorProviderType","logIn","makePreloginKey","hashedPassword","logInHelper","logInTwoFactor","twoFactorProvider","twoFactorToken","remember","logInComplete","logOut","callback","getSupportedTwoFactorProviders","providers","twoFactorProvidersData","has","supportsDuo","supportsU2f","getDefaultTwoFactorProvider","u2fSupported","providerType","providerPriority","provider","kdf","kdfIterations","postPrelogin","PreloginRequest","preloginResponse","statusCode","makeKey","getTwoFactorToken","storedTwoFactorToken","getAppId","appId","deviceRequest","DeviceRequest","TokenRequest","Remember","postIdentityToken","clearState","AuthResult","twoFactor","accessToken","twoFactorResponse","twoFactorProviders2","twoFactorProviders","tokenResponse","setTwoFactorToken","setTokens","refreshToken","setInformation","getUserId","getEmail","setKey","setKeyHash","setEncKey","privateKey","makeKeyPair","keyPair","postAccountKeys","KeysRequest","setEncPrivateKey","collectionService","folderService","storageService","onSearchTextChanged","searchText","searchPlaceholder","searchTextChanged","GroupingsComponent","searchService","cipherService","eventService","showAddNew","onAttachmentsClicked","onShareClicked","onCollectionsClicked","cipherType","pageSize","selectAll","checkCipher","select","checked","launch","selectCount","getSelected","getSelectedIds","share","delete","deleteCipher","refresh","copy","typeI18nKey","aType","copyToClipboard","collect","deleteWithServer","showFixOldAttachments","hasOldAttachments","CiphersComponent","auditService","totpService","passwordGenerationService","showRevisionDate","hasPasswordHistory","viewingPasswordHistory","passwordRevisionDisplayDate","cleanUp","totpUpdateCode","getTimeInterval","totpTick","totpInterval","setInterval","toggleFavorite","editMode","generatePassword","confirmed","getOptions","premiumRequired","upgradeOrganization","viewHistory","clearInterval","getCode","totpCode","half","totpCodeFormatted","intervalSeconds","epoch","round","mod","totpSec","totpDash","totpLow","filterProvider","getTwoFactorProviders","manage","openModal","authenticatorModalRef","TwoFactorAuthenticatorComponent","updateStatus","yubikeyModalRef","TwoFactorYubiKeyComponent","duoModalRef","TwoFactorDuoComponent","emailModalRef","TwoFactorEmailComponent","u2fModalRef","TwoFactorU2fComponent","recoveryCode","recoveryModalRef","TwoFactorRecoveryComponent","ref","TwoFactorSetupComponent","firstLoaded","showAdjustPayment","showAddCredit","transactionType","TransactionType","getOrganizationBilling","billing","getUserBilling","verifyBank","VerifyBankRequest","amount1","verifyAmount1","amount2","verifyAmount2","verifyBankPromise","postOrganizationVerifyBank","addCredit","closeAddCredit","changePayment","closePayment","balance","paymentSource","invoices","transactions","UserBillingComponent","showFree","showCancel","plan","onSuccess","onCanceled","selfHosted","ownedBusiness","premiumAccessAddon","storageGbPriceMonthly","additionalStorage","additionalSeats","interval","storageGb","price","monthlyPrice","yearlyPrice","plans","free","basePrice","noAdditionalSeats","noPayment","families","annualBasePrice","baseSeats","annualPlanType","PlanType","FamiliesAnnually","canBuyPremiumAccessAddon","teams","monthlyBasePrice","seatPrice","annualSeatPrice","monthlySeatPrice","monthPlanType","TeamsMonthly","TeamsAnnually","enterprise","EnterpriseMonthly","EnterpriseAnnually","isSelfHost","files","createOrganization","fileEl","getElementById","doSubmit","tokenResult","paymentComponent","makeShareKey","shareKey","encrypt","collectionCt","fd","FormData","append","postOrganizationLicense","OrganizationCreateRequest","collectionName","billingEmail","planType","Free","paymentToken","businessName","additionalStorageGb","postOrganization","OrganizationUpgradeRequest","postOrganizationUpgrade","paymentIntentClientSecret","refreshIdentityToken","navigate","cancel","changedPlan","changedOwnedBusiness","additionalStorageTotal","annual","seatTotal","baseTotal","premiumAccessTotal","OrganizationPlansComponent","importService","format","successNavigate","setImportOptions","importOptions","importer","getImporter","fileContents","getFileContents","content","import","properties","getFormatInstructionTitle","results","featuredImportOptions","regularImportOptions","file","reader","FileReader","readAsText","evt","pre","target","onerror","ImportComponent","exportService","saved","ExportComponent","getAllCiphers","allCiphers","ciphersWithPasswords","passwordUseMap","reusedPasswordCiphers","getAllDecrypted","ReusedPasswordsReportComponent","unsecuredCiphers","UnsecuredWebsitesReportComponent","passwordStrengthMap","passwordStrengthCache","weakPasswordCiphers","hasUsername","cacheKey","userInput","atPosition","passwordStrength","score","scoreKey","WeakPasswordsReportComponent","exposedPasswordMap","exposedPasswordCiphers","passwordLeaked","exposedCount","ExposedPasswordsReportComponent","services","cipherDocs","load2fa","fetch","Request","json","categoryName","responseJson","serviceName","category","service","tfa","software","InactiveTwoFactorReportComponent","items","prop1","prop2","prop3","SearchPipe","SelectionReadOnlyRequest","SelectionReadOnlyResponse","NotificationsService","SettingsService","version","getApplicationVersion","classList","add","remove","FrontendLayoutComponent","authService","route","onSuccessfulLoginNavigate","goAfterLogIn","queryParamsSub","queryParams","qParams","save","unsubscribe","invite","loginRedirect","successRoute","LoginComponent","anotherMethod","twoFactorOptionsModal","TwoFactorOptionsComponent","onProviderSelected","selectedProviderType","onRecoverSelected","TwoFactorComponent","showText","scoreWidth","PasswordStrengthComponent","showCreateOrgMessage","showTerms","RegisterComponent","KdfType","HintComponent","lockService","routerService","isAuthenticated","hasKey","onSuccessfulSubmit","LockComponent","fired","postAccountVerifyEmailToken","VerifyEmailRequest","VerifyEmailTokenComponent","OrganizationUserAcceptRequest","postOrganizationUserAccept","toast","orgName","organizationName","AcceptOrganizationComponent","TwoFactorRecoveryRequest","postTwoFactorRecover","RecoverTwoFactorComponent","DeleteRecoverRequest","postAccountRecoverDelete","RecoverDeleteComponent","VerifyDeleteRecoverRequest","postAccountRecoverDeleteToken","VerifyRecoverDeleteComponent","getName","lock","NavbarComponent","FooterComponent","UserLayoutComponent","changeDetectorRef","broadcasterService","ngZone","favorites","showVerifyEmail","showBrowserOutdated","showUpdateKey","showPremiumCallout","getEmailVerified","params","hasEncKey","groupingsComponent","organizationsComponent","selectedAll","ciphersComponent","reload","selectedFavorites","filterFavorites","selectedType","filterCipherType","selectedFolder","selectedFolderId","filterFolder","selectedCollectionId","filterCollection","run","command","successfully","detectChanges","clearGroupingFilters","clearFilters","go","filterSearchText","editCipherAttachments","getOrganization","maxStorageGb","attachmentsModalRef","AttachmentsComponent","madeAttachmentChanges","onUploadedAttachment","onDeletedAttachment","onReuploadedAttachment","shareCipher","shareModalRef","ShareComponent","onSharedCipher","editCipherCollections","collectionsModalRef","CollectionsComponent","onSavedCollections","folderAddEditModalRef","FolderAddEditComponent","onSavedFolder","loadFolders","editFolder","onDeletedFolder","addCipher","component","editCipher","bulkDelete","selectedIds","bulkDeleteModalRef","BulkDeleteComponent","cipherIds","onDeleted","bulkShare","selectedCiphers","bulkShareModalRef","BulkShareComponent","onShared","bulkMove","bulkMoveModalRef","BulkMoveComponent","onMoved","updateKey","updateKeyModalRef","UpdateKeyComponent","relativeTo","replaceUrl","VaultComponent","CipherWithIdRequest","folder","FolderRequest","reupload","reuploadCipherAttachment","check","getPremium","SettingsComponent","deauthorizeSessions","deauthModalRef","DeauthorizeSessionsComponent","purgeVault","purgeModalRef","PurgeVaultComponent","deleteAccount","deleteModalRef","DeleteAccountComponent","AccountComponent","postPurgeCiphers","lockOption","lockOptions","localeOptions","supportedTranslationLocales","locale","localeNames","disableIcons","enableGravatars","startingLocale","setLockOption","location","OptionsComponent","custom","getSettingsDomains","equivalentDomains","globalEquivalentDomains","domains","excluded","toggleExcluded","globalDomain","customize","index","UpdateDomainsRequest","excludedGlobalEquivalentDomains","d2","putSettingsDomains","indexTrackBy","DomainRulesComponent","processResponse","UpdateTwoFactorDuoRequest","integrationKey","ikey","secretKey","skey","putTwoFactorOrganizationDuo","putTwoFactorDuo","premiumPrice","storageGbPrice","postAccountLicense","finalizePremium","postPremium","paymentResponse","PremiumComponent","onAdded","ppButtonFormAction","buttonActionProduction","ppButtonBusinessId","businessIdProduction","ppLoading","buttonActionSandbox","businessIdSandbox","creditAmount","ppButtonCustomField","subject","returnUrl","ppButtonFormRef","BitPay","req","BitPayInvoiceRequest","credit","amount","creditAmountNumber","postBitPayInvoice","bitPayUrl","formatAmount","floatAmount","parseFloat","toFixed","AddCreditComponent","onAdjusted","PaymentRequest","postAccountPayment","postOrganizationPayment","currentType","AdjustPaymentComponent","updatePromise","postOrganizationLicenseUpdate","UpdateLicenseComponent","storageAdjustment","StorageRequest","storageGbAdjustment","postAccountStorage","postOrganizationStorage","AdjustStorageComponent","adjustStorageAdd","showAdjustStorage","showUpdateLicense","getUserSubscription","sub","reinstate","reinstatePromise","postReinstatePremium","cancelPromise","postCancelPremium","downloadLicense","licenseString","JSON","stringify","license","saveFile","updateLicense","closeUpdateLicense","adjustStorage","closeStorage","subscription","cancelled","cancelAtEndDate","upcomingInvoice","storagePercentage","UserSubscriptionComponent","orgPlansComponent","CreateOrganizationComponent","ToolsComponent","history","historyModalRef","PasswordGeneratorHistoryComponent","lengthChanged","PasswordGeneratorComponent","breachedAccounts","checkedUsername","BreachReportComponent","originalCipher","loadCollections","isAdmin","loadCipher","getCipherAdmin","encryptCipher","saveCipher","putCipherAdmin","CipherCreateRequest","postCipherAdmin","deleteCipherAdmin","PasswordHistoryView","OrganizationLayoutComponent","getCollections","collectionDomains","decryptMany","unassignedCollection","getAllNested","nestedCollections","collapse","grouping","isCollapsed","onEventsClicked","accessEvents","useEvents","getAllFromApiForOrganization","applyFilter","searchPending","filteredCiphers","searchCiphersBasic","resetPaging","parent","viewEvents","eventsModalRef","EntityEventsComponent","entityId","showUser","entity","orgUsersUserIdMap","orgUsersIdMap","defaultDates","getOrganizationUsers","loadEvents","clearExisting","refreshPromise","morePromise","dates","getEventsOrganizationUser","continuationToken","getEventsCipher","actingUserId","eventInfo","user","userName","userEmail","ip","ipAddress","accessReports","getExportData","getOrganizationExport","getFileName","collectEvent","accessGroups","useGroups","ManageComponent","getUserCollections","addEditModalRef","CollectionAddEditComponent","onSavedCollection","onDeletedCollection","removeCollection","deleteCollection","users","usersModalRef","EntityUsersComponent","entityName","onEditedUsers","organizationUserType","organizationUserStatusType","showSelected","selectedCount","allUsers","loadUsers","getGroupUsers","getCollectionUsers","accessAll","selectedChanged","filterSelected","selections","putGroupUsers","putCollectionUsers","getEventsOrganization","EventsComponent","getGroups","groups","group","GroupAddEditComponent","onSavedGroup","onDeletedGroup","removeGroup","deleteGroup","GroupsComponent","statusMap","Confirmed","Invited","Accepted","confirmedCount","acceptedCount","UserAddEditComponent","onSavedUser","onDeletedUser","removeUser","groupsModalRef","UserGroupsComponent","deleteOrganizationUser","reinvite","postOrganizationUserReinvite","confirm","updateUser","mapIndex","autoConfirm","doConfirmation","confirmModalRef","UserConfirmComponent","onConfirmedUser","getUserPublicKey","publicKeyResponse","publicKey","log","getFingerprint","rsaEncrypt","OrganizationUserConfirmRequest","postOrganizationUserConfirm","PeopleComponent","access2fa","use2fa","canUseApi","useApi","OrganizationUpdateRequest","putOrganization","deleteOrganization","DeleteOrganizationComponent","viewApiKey","apiKeyModalRef","ApiKeyComponent","rotateApiKey","rotateApiKeyModalRef","RotateApiKeyComponent","duoComp","getTwoFactorOrganizationProviders","OrganizationBillingComponent","adjustSeatsAdd","showAdjustSeats","showDownloadLicense","showChangePlan","getOrganizationSubscription","postOrganizationReinstate","postOrganizationCancel","changePlan","closeChangePlan","changed","closeDownloadLicense","updated","adjustSeats","closeSeats","billingInterval","OrganizationSubscriptionComponent","emailVerified","masterPasswordHint","culture","twoFactorEnabled","securityStamp","ProfileOrganizationResponse","ProfileResponse","webpackEmptyAsyncContext","keys","swal","_swal","angulartics2GoogleAnalytics","settingsService","notificationsService","toasterConfig","ToasterConfig","showCloseButton","mouseoverTimerStop","animation","limit","lastActivity","idleTimer","isIdle","runOutsideAngular","onmousemove","recordActivity","onmousedown","ontouchstart","onclick","onscroll","onkeypress","updateConnection","expired","uploadEvents","clearEvents","setLastSync","clearToken","clearKeys","purge","clearIndex","now","idleStateChanged","clearTimeout","sanitize","SecurityContext","HTML","bodyOutputType","BodyOutputType","TrustedHtml","trustedHtml","disconnectFromInactivity","reconnectFromActivity","AppComponent","TwoFactorEmailRequest","encryptedPrivateKey","postAccountVerifyEmail","VerifyEmailComponent","makeRequest","postAccountKey","getKey","makeEncKey","encKey","getPrivateKey","encPrivateKey","UpdateKeyRequest","FolderWithIdRequest","deleteManyWithServer","moveManyWithServer","nonShareableCount","shareableCiphers","writeableCollections","allCollections","filterCollections","checkedCollectionIds","shareManyWithServer","getProfile","profile","fingerprint","UpdateProfileRequest","putProfile","ProfileComponent","tokenSent","newEmail","EmailTokenRequest","postEmailToken","EmailRequest","getKdf","getKdfIterations","newKey","newMasterPasswordHash","remakeEncKey","newEncKey","postEmail","reset","ChangeEmailComponent","rotateEncKey","currentMasterPassword","newMasterPassword","confirmNewMasterPassword","strengthResult","getPasswordStrengthUserInput","PasswordRequest","postPassword","updatePasswordStrength","masterPasswordStrengthTimeout","masterPasswordScore","rotateEncKeyClicked","ChangePasswordComponent","PBKDF2_SHA256","kdfOptions","KdfRequest","postAccountKdf","ChangeKdfComponent","postSecurityStamp","qrScript","UpdateTwoFactorAuthenticatorRequest","putTwoFactorAuthenticator","QRious","element","sendEmail","emailPromise","postTwoFactorEmailSetup","sentEmail","UpdateTwoFactorEmailRequest","putTwoFactorEmail","print","w","open","write","formatString","keyIdAvailable","keysConfiguredCount","u2fScript","u2fResponse","UpdateTwoFactorU2fRequest","deviceResponse","putTwoFactorU2f","removePromise","UpdateTwoFactorU2fDeleteRequest","deleteTwoFactorU2f","readKey","challengePromise","getTwoFactorU2fChallenge","challenge","readDevice","u2fChallenge","resetU2f","u2f","register","attestation","u2fListening","errorCode","u2fError","listening","k","configured","compromised","nfc","UpdateTwoFactorYubioOtpRequest","key1","key2","key3","key4","key5","putTwoFactorYubiKey","disablePromise","existingKey","padRight","max","colorizedPassword","isSpecial","ColorPasswordPipe","onCopy","copyText","selection","getSelection","rangeCount","getRangeAt","stringEndPos","newLinePos","SelectCopyDirective","sizeName","LoginUriData","AttachmentView","view","decryptToBytes","decValue","SymmetricCryptoKey","macKey","keyB64","encKeyB64","macKeyB64","LoginUri","toLoginUriData","saveCipherAttachment","saveAttachmentWithServer","cipherDomain","deleteCipherAttachment","attachmentId","deleteCipherAttachmentAdmin","allowSelectNone","loadCipherCollections","saveCollections","CipherCollectionsRequest","putCipherCollectionsAdmin","groupsResponse","getCollectionDetails","g","CollectionRequest","putCollection","postCollection","deletePromise","access","getGroupDetails","GroupRequest","putGroup","postGroup","User","getOrganizationUser","OrganizationUserUpdateRequest","putOrganizationUser","OrganizationUserInviteRequest","emails","postOrganizationUserInvite","dontAskAgain","getOrganizationUserGroups","userGroups","ug","OrganizationUserUpdateGroupsRequest","groupIds","putOrganizationUserGroups","postOrganizationApiKey","apiKey","clientId","scope","postOrganizationRotateApiKey","onChanged","ChangePlanComponent","onDownloaded","installationId","getOrganizationLicense","DownloadLicenseComponent","seatAdjustment","SeatRequest","postOrganizationSeat","AdjustSeatsComponent","elementRef","trueValue","falseValue","propagateChange","_","onHostChange","writeValue","setProperty","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","TrueFalseValueDirective","logoutCallback","urlsSet","isWebClient","isDesktopClient","usingBaseUrl","device","getDevice","setUrls","urls","apiBaseUrl","identityBaseUrl","eventsBaseUrl","api","qsStringify","toIdentityToken","identityClientId","credentials","getCredentials","cache","headers","Headers","isJsonResponse","IdentityTokenResponse","TwoFactorProviders2","clearTwoFactorToken","IdentityTwoFactorResponse","ErrorResponse","doRefreshToken","BillingResponse","SubscriptionResponse","PreloginResponse","getAccountRevisionDate","postPasswordHint","postRegister","PaymentResponse","getFolder","FolderResponse","postFolder","putFolder","deleteFolder","getCipher","CipherResponse","getCiphersOrganization","ListResponse","postCipher","postCipherCreate","putCipher","deleteManyCiphers","putMoveCiphers","putShareCipher","putShareCiphers","putCipherCollections","path","postImportCiphers","postImportOrganizationCiphers","postCipherAttachment","postCipherAttachmentAdmin","postShareCipherAttachment","CollectionGroupDetailsResponse","CollectionResponse","dr","deleteCollectionUser","GroupDetailsResponse","GroupResponse","deleteGroupUser","OrganizationUserDetailsResponse","OrganizationUserUserDetailsResponse","getSync","SyncResponse","postImportDirectory","DomainsResponse","TwoFactorProviderResponse","TwoFactorAuthenticatorResponse","TwoFactorEmailResponse","TwoFactorDuoResponse","TwoFactorYubiKeyResponse","TwoFactorU2fResponse","ChallengeResponse","TwoFactorRecoverResponse","postTwoFactorEmail","OrganizationResponse","OrganizationSubscriptionResponse","ApiKeyResponse","getEvents","addEventParameters","EventResponse","postEventsCollect","getActiveBearerToken","authHeader","UserKeyResponse","getHibpBreach","BreachAccountResponse","getToken","tokenNeedsRefresh","nativeFetch","hasResponse","requestInit","handleError","tokenError","getRefreshToken","decodedToken","decodeToken","grant_type","client_id","refresh_token","typeHeader","AttachmentResponse","h","PasswordHistoryResponse","CollectionDetailsResponse","GlobalDomainResponse","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","seats","maxCollections","useDirectory","storageName","BillingSubscriptionResponse","BillingSubscriptionUpcomingInvoiceResponse","trialEndDate","periodStartDate","periodEndDate","cancelledDate","BillingSubscriptionItemResponse","quantity","makeAndGetAppId","getAnonymousAppId","existingId","guid","AppIdService","hashStart","hashEnding","leakedHashes","v","throttle","Keys","DomainMatchBlacklist","Set","_decryptedCipherCache","indexCiphers","clearCache","decryptedCipherCache","existingCipher","hasFields","existingHiddenFields","Hidden","ef","matchedField","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachmentsModel","encAttachments","fieldsModel","encFields","encryptField","encField","fieldModel","Boolean","phModels","encPhs","encryptPasswordHistory","encPh","phModel","getAll","decCiphers","getLocaleSortingFunction","getAllDecryptedForGrouping","groupingId","getAllDecryptedForUrl","includeOtherTypes","eqDomainsPromise","getEquivalentDomains","eqDomains","matches","eqDomain","matchingDomains","defaultMatch","Domain","domainUrlHost","Host","urlHost","Exact","StartsWith","Never","getLastUsedForUrl","sortCiphersByLastUsed","updateLastUsedDate","ciphersLocalData","cached","saveNeverDomain","saveWithServer","upsert","shareWithServer","attachmentPromises","shareAttachmentWithServer","encCipher","CipherShareRequest","encCiphers","CipherBulkShareRequest","unencryptedFile","admin","readAsArrayBuffer","saveAttachmentRawWithServer","cData","filename","encFileName","dataEncKey","encryptToBytes","encData","blob","Blob","filepath","contentType","getSingleMessage","saveCollectionsWithServer","ids","CipherBulkMoveRequest","CipherBulkDeleteRequest","deleteAttachment","deleteAttachmentWithServer","aLastUsed","bLastUsed","bothNotNull","sortCiphersByLastUsedThenName","aName","bName","attachmentView","attachmentResponse","arrayBuffer","buf","decryptFromBytes","decBuf","theObj","modelProp","sequentialize","propertyKey","descriptor","originalMethod","caches","getCache","argsCacheKey","args","onFinally","decryptedCollectionCache","decCollections","nodes","collectionCopy","ServiceUtils","nestedTraverse","getNested","getTreeNodeObject","nodeTree","partIndex","delimiter","partName","node","TreeNode","children","newPartName","attachToWindow","attachToGlobal","ContainerService","secureStorageService","keyHash","setOrgKeys","orgKeys","getKeyHash","getEncKey","encKeyCipher","decEncKey","stretchKey","getPublicKey","rsaExtractPublicKey","keyFingerprint","hkdfExpand","userFingerprint","hashPhrase","getOrgKeys","encOrgKeys","rsaDecrypt","clearKey","legacyEtmKey","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","clearOrgKeys","clearPinProtectedKey","toggleKey","option","salt","pbkdf2","makeKeyFromPin","pin","protectedKeyCs","makePinKey","pinKey","decKey","randomBytes","rsaGenerateKeyPair","publicB64","privateEnc","getKeyForEncryption","theKey","buildEncKey","plainValue","plainBuf","aesEncrypt","encObj","encValue","macLen","encBytes","cipherString","aesDecryptToBytes","decipher","aesDecryptToUtf8","encBuf","ctBytes","ivBytes","macBytes","randomNumber","min","rval","range","bitsNeeded","ceil","log2","bytesNeeded","mask","pow","byteArray","EncryptedObject","macData","hmac","keyForEnc","resolveLegacyKey","fastParams","aesDecryptFastParameters","hmacFast","computedMac","compareFast","aesDecryptFast","aesDecrypt","Rsa2048_OaepSha256_HmacSha256_B64","Rsa2048_OaepSha1_HmacSha256_B64","alg","prk","info","hashLen","okm","previousT","minimumEntropy","entropyPerWord","EEFLongWordList","numWords","hashArr","entropyAvailable","phrase","hashNumber","bigInt","fromArray","remainder","divide","encKeyEnc","getWebVaultUrl","webVaultUrl","setUrlsFromStorage","urlsObj","icons","notifications","webVault","envUrls","EnvironmentUrls","apiUrl","identityUrl","notificationsUrl","eventsUrl","formatUrl","decryptedFolderCache","Folder","decFolders","noneFolder","folderCopy","FolderData","cId","updates","systemLanguage","localesDirectory","getLocalesJson","defaultMessages","localeMessages","translationLocale","Intl","Collator","numeric","sensitivity","loadMessages","translate","messagesObj","formattedLocale","locales","placeholders","placeProp","replaceToken","replaceContent","lockedCallback","checkOnInterval","checkLock","isLocked","isViewOpen","lockTimeout","lastActive","lockOptionSeconds","allowSoftLock","isPinLockSet","DefaultOptions","ambiguous","minNumber","uppercase","minUppercase","lowercase","minLowercase","special","minSpecial","wordSeparator","capitalize","includeNumber","assign","generatePassphrase","minLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","optionsCache","saveOptions","getHistory","encrypted","decryptHistory","addHistory","currentHistory","matchesPrevious","unshift","GeneratedPasswordHistory","pop","encryptHistory","newHistory","userInputs","globalUserInputs","finalUserInputs","zxcvbn","item","decrypted","array","settingsCache","getSettingsKey","setEquivalentDomains","setSettingsKey","getSettings","settings","syncInProgress","getLastSync","lastSync","toJSON","forceSync","syncStarted","needsSyncing","syncCompleted","needsSyncResult","needsSync","syncProfile","syncFolders","syncCollections","syncCiphers","syncSettings","syncUpsertFolder","notification","isEdit","localFolder","remoteFolder","syncDeleteFolder","syncUpsertCipher","shouldUpdate","localCipher","checkCollections","remoteCipher","syncDeleteCipher","getSecurityStamp","stamp","setSecurityStamp","OrganizationData","replaceOrganizations","setToken","setRefreshToken","decoded","getTokenExpirationDate","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","valueOf","minutes","email_verified","getIssuer","iss","B32Chars","SteamChars","period","digits","keyB32","isOtpAuth","isSteamAuth","digitParams","periodParam","algParam","timeHex","leftPad","decToHex","timeBytes","keyBytes","b32ToBytes","sign","offset","otp","fullCode","trunc","isAutoCopyEnabled","b32ToHex","cleanedInput","bits","hex","byteIndex","chunk","signature","clearOrganizations","usersGetPremium","Organization","build","CipherWithIds","CollectionWithId","FolderWithId","NotificationType","canActivate","routerState","AuthGuardService","isOwner","OrganizationGuardService","allowedTypes","OrganizationTypeGuardService","UnauthGuardService","enableProdMode","platformBrowser","preserveWhitespaces","registerLocaleData","AppModule","subscribers","messageCallback","rememberEmail","showPassword","twoFactorRoute","onSuccessfulLoginTwoFactorNavigate","disableFavicon","onSuccessfulLogin","togglePassword","choose","recover","backdrop","className","addEventListener","u2fReady","initU2f","twoFactorEmail","loginRoute","customWebVaultUrl","cleanupU2f","providerData","Challenge","challenges","Challenges","keyHandle","DuoWebSDK","iframe","sig_request","Signature","submit_callback","sig","stop","doToast","cleanup","getDeviceString","identifier","pushToken","deviceIdentifier","deviceName","twoFactorRemember","errorCallback","infoCallback","parseFunction","parseMessage","connectorLink","base64Encode","sendMessage","contentWindow","postMessage","removeEventListener","validMessage","origin","confirmMasterPassword","hint","useLowerKdf","isEdge","isIE","RegisterRequest","orgInvite","confirmField","PasswordHintRequest","pinLock","webVaultHostname","invalidPinAttempts","pinSet","vaultUrl","failed","decPin","setKeyAndContinue","storedKeyHash","doContinue","showFolders","showCollections","showFavorites","onAllClicked","onFavoritesClicked","onCipherTypeClicked","onFolderClicked","onAddFolder","onEditFolder","onCollectionClicked","setLoaded","collapsedGroupings","nestedFolders","clearSelections","selectFavorites","selectType","selectFolder","selectCollection","idPrefix","onError","appFallbackSrc","FallbackSrcDirective","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","pagedCiphers","didScroll","searchTimeout","pagedCiphersCount","refreshing","loadMore","pagedLength","pagedSize","searchCiphers","rightClickCipher","addCipherOptions","isSearching","isSearchable","isPaging","searching","onCancelled","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","showCardCode","fieldType","addFieldType","ownershipOptions","typeOptions","cardBrandOptions","cardExpMonthOptions","identityTitleOptions","addFieldTypeOptions","uriMatchOptions","myEmail","addEditCipherInfo","organizationChanged","previousCipherId","addUri","removeUri","addField","removeField","trackByFunction","editCollections","toggleCardCode","toggleFieldValue","showValue","toggleUriOptions","loginUriMatchChanged","drop","moveItemInArray","previousIndex","currentIndex","checkPassword","checkPasswordPromise","deletePromises","reuploadPromises","hasUpdatedKey","download","downloading","canAccessAttachments","foundAttachment","a2","selectedCollectionIds","cipherView","onSaved","downloadFile","getExport","prefix","csv","showSelect","onSelected","avoidAmbiguous","sliderChanged","sliderInput","normalizeOptions","regenerate","copyOptions","toggleOptions","language","BroadcasterMessagingService","WebPlatformUtilsService","HtmlStorageService","MemoryStorageService","WebCryptoFunctionService","eventLoggingService","Analytics","htmlEl","documentElement","theme","ServicesModule","subscriber","arg","localStorageKeys","localStorageStartsWithKeys","isLocalStorage","localStorage","getItem","sessionStorage","setItem","removeItem","swKey","BillingSourceResponse","BillingTransactionResponse","BillingInvoiceResponse","cardBrand","needsVerification","pdfUrl","paid","createdDate","refunded","partiallyRefunded","refundedAmount","details","addedDate","breachDate","dataClasses","isActive","isVerified","logoPath","modifiedDate","pwnCount","identityResponse","errorModel","responseErrorModel","messages","lastSep","lastIndexOf","access_token","expiresIn","expires_in","tokenType","token_type","OrganizationUserResponse","userProfile","selfHost","KeyResponse","throttleKey","allThrottles","getThrottles","throttles","argsThrottleKey","queue","exec","Owner","Manager","Admin","filePath","store","browserCache","chrome","isFirefox","isChrome","isOpera","isVivaldi","isSafari","isMacAppStore","analyticsId","rel","click","blobData","blobOptions","fileNameLower","doDownload","endsWith","msSaveOrOpenBlob","msSaveBlob","createObjectURL","position","confirmText","cancelText","buttons","contentDiv","contains","titleDiv","createTextNode","textDiv","button","clipboardData","setData","queryCommandSupported","textarea","copyEl","execCommand","readFromClipboard","GaObj","AnalyticsIds","gaFilter","dependencyResolver","gaTrackingId","defaultDisabled","deps","appVersion","GoogleAnalyticsObject","param1","param2","ga","disabled","gaAnonAppId","gaTrackPageView","hitType","page","gaTrackEvent","XMLHttpRequest","eventCategory","eventAction","eventLabel","eventValue","cleanPagePath","pagePath","paramIndex","pathParts","newPathParts","eventType","uploadImmediately","orgIds","eventCollection","EventData","EventRequest","buildCommonCipher","unparse","collectionPromises","decCol","cipherPromises","decCipher","extension","padNumber","getSeconds","padCharacter","numString","login_uri","login_username","login_password","login_totp","template","toView","getImportOptions","importResult","halfway","last","badData","postImport","getImporterInstance","BitwardenCsvImporter","BitwardenJsonImporter","LastPassCsvImporter","KeePassXCsvImporter","AviraCsvImporter","BlurCsvImporter","SafeInCloudXmlImporter","PadlockCsvImporter","KeePass2XmlImporter","ChromeCsvImporter","FirefoxCsvImporter","UpmCsvImporter","SaferPassCsvImporter","MeldiumCsvImporter","OnePassword1PifImporter","OnePasswordWinCsvImporter","KeeperCsvImporter","PasswordDragonXmlImporter","EnpassCsvImporter","EnpassJsonImporter","PasswordSafeXmlImporter","DashlaneJsonImporter","MSecureCsvImporter","StickyPasswordXmlImporter","TrueKeyCsvImporter","ClipperzHtmlImporter","RoboFormCsvImporter","AscendoCsvImporter","PasswordBossJsonImporter","ZohoVaultCsvImporter","SplashIdCsvImporter","PassKeepCsvImporter","GnomeJsonImporter","PasswordAgentCsvImporter","PasspackCsvImporter","PassmanJsonImporter","AvastCsvImporter","FSecureFskImporter","KasperskyTxtImporter","RememBearCsvImporter","PasswordWalletTxtImporter","MykiCsvImporter","SecureSafeCsvImporter","LogMeOnceCsvImporter","ImportCiphersRequest","KvpRequest","ImportOrganizationCiphersRequest","fieldLower","web","website","secondary_username","col","addCollection","collectionIndex","delimPosition","groupingsMap","errorMessage","entry","currentVersion","actionType","labelLower","HandledResults","ADDRESS","processAddress","AUTHENTIFIANT","processAuth","BANKSTATEMENT","processNote","IDCARD","PAYMENTMEANS_CREDITCARD","processCard","IDENTITY","processIdentity","credential","secondaryLogin","note","fullName","nameParts","pseudo","addressName","addressFull","zipcode","cardNumber","owner","nameProperty","firstRow","containsField","fieldValue","fieldName","fieldNameLower","template_type","processLogin","creditNumber","creditCvv","creditExpiry","keyRing","display_name","secret","attributes","attr","username_value","notesData","applicationsData","websitesData","workingData","parseDataCategory","applications","websites","nameKey","itemComment","itemCommentKey","colonIndex","rootGroup","traverse","isRootNode","groupPrefixName","groupName","nameEl","cipherIndex","entryString","valueEl","keyEl","Title","Group","Notes","Username","buildBaseCipher","extra","parseSecureNote","parseCard","parseIdentity","ccnum","cardCipher","profilename","firstname","lastname","fav","ccname","cccsc","ccexp","ccexpParts","middlename","zip","extraParts","processedNote","typeParts","mappedData","parseSecureNoteMapping","processingNotes","extraPart","DisplayName","UserName","Url","nickname","additionalInfo","twoFactAuthToken","cardName","exp_month","exp_year","cvv","firstAddressLine","secondAddressLine","zipCode","line","processStandardItem","processWinOpVaultItem","overview","URLs","notesPlain","parseFields","sections","section","parsePasswordHistory","openContents","faveIndex","typeName","secureContents","maxSize","time","designationKey","valueKey","fieldDesignation","street","IgnoredProperties","altUsername","View","tags","tag","getValue","custom_fields","customField","field_type","tagsJson","Tags","tagJson","__parsed_extra","fieldsJson","extraFields","fieldJson","newVersion","altFormat","login_url","identifiers","valObj","expDate","records","record","categoryText","accountName","tagName","passwordSafe","notesDelimiter","getAttribute","entries","groupText","trash","cardholder","verification","expiryMonth","expMonthNumber","expiryYear","expYearNumber","Note","Name","Pwd","Rf_fields","foldersMap","labelEl","cardEl","labelIdEl","labelId","fieldEl","notesEl","Comment","parseFieldsToNotes","startIndex","loginNodes","loginNode","accountId","usernameText","passwordText","titleText","linkText","notesText","accountLogin","account","parentElement","buildGroupText","PropertiesToIgnore","memo","kind","expiryDate","document_content","ChamberName","Favorite","parseData","SecretData","CustomData","connected","inactive","reconnectTimer","signalrConnection","off","signalR","HubConnectionBuilder","withUrl","accessTokenFactory","withHubProtocol","signalRMsgPack","MessagePackHubProtocol","processNotification","NotificationResponse","onclose","reconnect","isAuthedAndUnlocked","sync","contextId","payloadUserId","UserId","myUserId","SyncCipherCreate","SyncCipherUpdate","SyncCipherDelete","SyncLoginDelete","SyncFolderCreate","SyncFolderUpdate","SyncFolderDelete","SyncVault","SyncCiphers","SyncSettings","SyncOrgKeys","LogOut","SyncCipherNotification","SyncFolderNotification","UserNotification","indexing","onlySearchName","builder","lunr","Builder","boost","extractor","uriExtractor","fieldExtractor","attachmentExtractor","timeEnd","getIndexForSearch","ciphersMap","searchResults","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","joined","protocolIndex","queryIndex","crypto","subtle","ua","isOldSafari","algorithm","iterations","forgeLen","passwordBytes","toByteString","saltBytes","derivedKeyBytes","forge","wcLen","passwordBuf","toBuf","saltBuf","pbkdf2Params","toWebCryptoAlgorithm","importKey","impKey","deriveBits","md","md5","sha1","valueBytes","update","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","getBytes","rand","Uint32Array","util","createBuffer","putInt32","DecryptParameters","meta","encKeyByteString","macKeyByteString","decode64","parameters","dataBuffer","createDecipher","finish","rsaParams","impPrivateKey","exportKey","jwkPrivateKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","getRandomValues","encodeUtf8","AppRoutingModule"],"mappings":"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","file":"app/main.553962d815b08b8f918b.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([716,2]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export abstract class I18nService {\n    locale: string;\n    supportedTranslationLocales: string[];\n    translationLocale: string;\n    collator: Intl.Collator;\n    localeNames: Map<string, string>;\n    t: (id: string, p1?: string, p2?: string, p3?: string) => string;\n    translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","import { EnvironmentUrls } from '../models/domain/environmentUrls';\n\nimport { BitPayInvoiceRequest } from '../models/request/bitPayInvoiceRequest';\nimport { CipherBulkDeleteRequest } from '../models/request/cipherBulkDeleteRequest';\nimport { CipherBulkMoveRequest } from '../models/request/cipherBulkMoveRequest';\nimport { CipherBulkShareRequest } from '../models/request/cipherBulkShareRequest';\nimport { CipherCollectionsRequest } from '../models/request/cipherCollectionsRequest';\nimport { CipherCreateRequest } from '../models/request/cipherCreateRequest';\nimport { CipherRequest } from '../models/request/cipherRequest';\nimport { CipherShareRequest } from '../models/request/cipherShareRequest';\nimport { CollectionRequest } from '../models/request/collectionRequest';\nimport { DeleteRecoverRequest } from '../models/request/deleteRecoverRequest';\nimport { EmailRequest } from '../models/request/emailRequest';\nimport { EmailTokenRequest } from '../models/request/emailTokenRequest';\nimport { EventRequest } from '../models/request/eventRequest';\nimport { FolderRequest } from '../models/request/folderRequest';\nimport { GroupRequest } from '../models/request/groupRequest';\nimport { ImportCiphersRequest } from '../models/request/importCiphersRequest';\nimport { ImportDirectoryRequest } from '../models/request/importDirectoryRequest';\nimport { ImportOrganizationCiphersRequest } from '../models/request/importOrganizationCiphersRequest';\nimport { KdfRequest } from '../models/request/kdfRequest';\nimport { KeysRequest } from '../models/request/keysRequest';\nimport { OrganizationCreateRequest } from '../models/request/organizationCreateRequest';\nimport { OrganizationUpdateRequest } from '../models/request/organizationUpdateRequest';\nimport { OrganizationUpgradeRequest } from '../models/request/organizationUpgradeRequest';\nimport { OrganizationUserAcceptRequest } from '../models/request/organizationUserAcceptRequest';\nimport { OrganizationUserConfirmRequest } from '../models/request/organizationUserConfirmRequest';\nimport { OrganizationUserInviteRequest } from '../models/request/organizationUserInviteRequest';\nimport { OrganizationUserUpdateGroupsRequest } from '../models/request/organizationUserUpdateGroupsRequest';\nimport { OrganizationUserUpdateRequest } from '../models/request/organizationUserUpdateRequest';\nimport { PasswordHintRequest } from '../models/request/passwordHintRequest';\nimport { PasswordRequest } from '../models/request/passwordRequest';\nimport { PasswordVerificationRequest } from '../models/request/passwordVerificationRequest';\nimport { PaymentRequest } from '../models/request/paymentRequest';\nimport { PreloginRequest } from '../models/request/preloginRequest';\nimport { RegisterRequest } from '../models/request/registerRequest';\nimport { SeatRequest } from '../models/request/seatRequest';\nimport { SelectionReadOnlyRequest } from '../models/request/selectionReadOnlyRequest';\nimport { StorageRequest } from '../models/request/storageRequest';\nimport { TokenRequest } from '../models/request/tokenRequest';\nimport { TwoFactorEmailRequest } from '../models/request/twoFactorEmailRequest';\nimport { TwoFactorProviderRequest } from '../models/request/twoFactorProviderRequest';\nimport { TwoFactorRecoveryRequest } from '../models/request/twoFactorRecoveryRequest';\nimport { UpdateDomainsRequest } from '../models/request/updateDomainsRequest';\nimport { UpdateKeyRequest } from '../models/request/updateKeyRequest';\nimport { UpdateProfileRequest } from '../models/request/updateProfileRequest';\nimport { UpdateTwoFactorAuthenticatorRequest } from '../models/request/updateTwoFactorAuthenticatorRequest';\nimport { UpdateTwoFactorDuoRequest } from '../models/request/updateTwoFactorDuoRequest';\nimport { UpdateTwoFactorEmailRequest } from '../models/request/updateTwoFactorEmailRequest';\nimport { UpdateTwoFactorU2fDeleteRequest } from '../models/request/updateTwoFactorU2fDeleteRequest';\nimport { UpdateTwoFactorU2fRequest } from '../models/request/updateTwoFactorU2fRequest';\nimport { UpdateTwoFactorYubioOtpRequest } from '../models/request/updateTwoFactorYubioOtpRequest';\nimport { VerifyBankRequest } from '../models/request/verifyBankRequest';\nimport { VerifyDeleteRecoverRequest } from '../models/request/verifyDeleteRecoverRequest';\nimport { VerifyEmailRequest } from '../models/request/verifyEmailRequest';\n\nimport { ApiKeyResponse } from '../models/response/apiKeyResponse';\nimport { BillingResponse } from '../models/response/billingResponse';\nimport { BreachAccountResponse } from '../models/response/breachAccountResponse';\nimport { CipherResponse } from '../models/response/cipherResponse';\nimport {\n    CollectionGroupDetailsResponse,\n    CollectionResponse,\n} from '../models/response/collectionResponse';\nimport { DomainsResponse } from '../models/response/domainsResponse';\nimport { EventResponse } from '../models/response/eventResponse';\nimport { FolderResponse } from '../models/response/folderResponse';\nimport {\n    GroupDetailsResponse,\n    GroupResponse,\n} from '../models/response/groupResponse';\nimport { IdentityTokenResponse } from '../models/response/identityTokenResponse';\nimport { IdentityTwoFactorResponse } from '../models/response/identityTwoFactorResponse';\nimport { ListResponse } from '../models/response/listResponse';\nimport { OrganizationResponse } from '../models/response/organizationResponse';\nimport { OrganizationSubscriptionResponse } from '../models/response/organizationSubscriptionResponse';\nimport {\n    OrganizationUserDetailsResponse,\n    OrganizationUserUserDetailsResponse,\n} from '../models/response/organizationUserResponse';\nimport { PaymentResponse } from '../models/response/paymentResponse';\nimport { PreloginResponse } from '../models/response/preloginResponse';\nimport { ProfileResponse } from '../models/response/profileResponse';\nimport { SelectionReadOnlyResponse } from '../models/response/selectionReadOnlyResponse';\nimport { SubscriptionResponse } from '../models/response/subscriptionResponse';\nimport { SyncResponse } from '../models/response/syncResponse';\nimport { TwoFactorAuthenticatorResponse } from '../models/response/twoFactorAuthenticatorResponse';\nimport { TwoFactorDuoResponse } from '../models/response/twoFactorDuoResponse';\nimport { TwoFactorEmailResponse } from '../models/response/twoFactorEmailResponse';\nimport { TwoFactorProviderResponse } from '../models/response/twoFactorProviderResponse';\nimport { TwoFactorRecoverResponse } from '../models/response/twoFactorRescoverResponse';\nimport {\n    ChallengeResponse,\n    TwoFactorU2fResponse,\n} from '../models/response/twoFactorU2fResponse';\nimport { TwoFactorYubiKeyResponse } from '../models/response/twoFactorYubiKeyResponse';\nimport { UserKeyResponse } from '../models/response/userKeyResponse';\n\nexport abstract class ApiService {\n    urlsSet: boolean;\n    apiBaseUrl: string;\n    identityBaseUrl: string;\n    eventsBaseUrl: string;\n\n    setUrls: (urls: EnvironmentUrls) => void;\n    postIdentityToken: (request: TokenRequest) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse>;\n    refreshIdentityToken: () => Promise<any>;\n\n    getProfile: () => Promise<ProfileResponse>;\n    getUserBilling: () => Promise<BillingResponse>;\n    getUserSubscription: () => Promise<SubscriptionResponse>;\n    putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n    postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\n    postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n    postEmail: (request: EmailRequest) => Promise<any>;\n    postPassword: (request: PasswordRequest) => Promise<any>;\n    postSecurityStamp: (request: PasswordVerificationRequest) => Promise<any>;\n    deleteAccount: (request: PasswordVerificationRequest) => Promise<any>;\n    getAccountRevisionDate: () => Promise<number>;\n    postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n    postRegister: (request: RegisterRequest) => Promise<any>;\n    postPremium: (data: FormData) => Promise<PaymentResponse>;\n    postReinstatePremium: () => Promise<any>;\n    postCancelPremium: () => Promise<any>;\n    postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\n    postAccountPayment: (request: PaymentRequest) => Promise<any>;\n    postAccountLicense: (data: FormData) => Promise<any>;\n    postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n    postAccountKeys: (request: KeysRequest) => Promise<any>;\n    postAccountVerifyEmail: () => Promise<any>;\n    postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n    postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n    postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n    postAccountKdf: (request: KdfRequest) => Promise<any>;\n\n    getFolder: (id: string) => Promise<FolderResponse>;\n    postFolder: (request: FolderRequest) => Promise<FolderResponse>;\n    putFolder: (id: string, request: FolderRequest) => Promise<FolderResponse>;\n    deleteFolder: (id: string) => Promise<any>;\n\n    getCipher: (id: string) => Promise<CipherResponse>;\n    getCipherAdmin: (id: string) => Promise<CipherResponse>;\n    getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n    postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n    postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\n    postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\n    putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n    putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n    deleteCipher: (id: string) => Promise<any>;\n    deleteCipherAdmin: (id: string) => Promise<any>;\n    deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n    putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n    putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\n    putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n    putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n    putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n    postPurgeCiphers: (request: PasswordVerificationRequest, organizationId?: string) => Promise<any>;\n    postImportCiphers: (request: ImportCiphersRequest) => Promise<any>;\n    postImportOrganizationCiphers: (organizationId: string, request: ImportOrganizationCiphersRequest) => Promise<any>;\n\n    postCipherAttachment: (id: string, data: FormData) => Promise<CipherResponse>;\n    postCipherAttachmentAdmin: (id: string, data: FormData) => Promise<CipherResponse>;\n    deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n    deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n    postShareCipherAttachment: (id: string, attachmentId: string, data: FormData,\n        organizationId: string) => Promise<any>;\n\n    getCollectionDetails: (organizationId: string, id: string) => Promise<CollectionGroupDetailsResponse>;\n    getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\n    getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n    getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\n    postCollection: (organizationId: string, request: CollectionRequest) => Promise<CollectionResponse>;\n    putCollectionUsers: (organizationId: string, id: string, request: SelectionReadOnlyRequest[]) => Promise<any>;\n    putCollection: (organizationId: string, id: string, request: CollectionRequest) => Promise<CollectionResponse>;\n    deleteCollection: (organizationId: string, id: string) => Promise<any>;\n    deleteCollectionUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n    getGroupDetails: (organizationId: string, id: string) => Promise<GroupDetailsResponse>;\n    getGroups: (organizationId: string) => Promise<ListResponse<GroupResponse>>;\n    getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\n    postGroup: (organizationId: string, request: GroupRequest) => Promise<GroupResponse>;\n    putGroup: (organizationId: string, id: string, request: GroupRequest) => Promise<GroupResponse>;\n    putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\n    deleteGroup: (organizationId: string, id: string) => Promise<any>;\n    deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n    getOrganizationUser: (organizationId: string, id: string) => Promise<OrganizationUserDetailsResponse>;\n    getOrganizationUserGroups: (organizationId: string, id: string) => Promise<string[]>;\n    getOrganizationUsers: (organizationId: string) => Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n    postOrganizationUserInvite: (organizationId: string, request: OrganizationUserInviteRequest) => Promise<any>;\n    postOrganizationUserReinvite: (organizationId: string, id: string) => Promise<any>;\n    postOrganizationUserAccept: (organizationId: string, id: string,\n        request: OrganizationUserAcceptRequest) => Promise<any>;\n    postOrganizationUserConfirm: (organizationId: string, id: string,\n        request: OrganizationUserConfirmRequest) => Promise<any>;\n    putOrganizationUser: (organizationId: string, id: string, request: OrganizationUserUpdateRequest) => Promise<any>;\n    putOrganizationUserGroups: (organizationId: string, id: string,\n        request: OrganizationUserUpdateGroupsRequest) => Promise<any>;\n    deleteOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n\n    getSync: () => Promise<SyncResponse>;\n    postImportDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<any>;\n\n    getSettingsDomains: () => Promise<DomainsResponse>;\n    putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n    getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n    getTwoFactorOrganizationProviders: (organizationId: string) => Promise<ListResponse<TwoFactorProviderResponse>>;\n    getTwoFactorAuthenticator: (request: PasswordVerificationRequest) => Promise<TwoFactorAuthenticatorResponse>;\n    getTwoFactorEmail: (request: PasswordVerificationRequest) => Promise<TwoFactorEmailResponse>;\n    getTwoFactorDuo: (request: PasswordVerificationRequest) => Promise<TwoFactorDuoResponse>;\n    getTwoFactorOrganizationDuo: (organizationId: string,\n        request: PasswordVerificationRequest) => Promise<TwoFactorDuoResponse>;\n    getTwoFactorYubiKey: (request: PasswordVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n    getTwoFactorU2f: (request: PasswordVerificationRequest) => Promise<TwoFactorU2fResponse>;\n    getTwoFactorU2fChallenge: (request: PasswordVerificationRequest) => Promise<ChallengeResponse>;\n    getTwoFactorRecover: (request: PasswordVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n    putTwoFactorAuthenticator: (\n        request: UpdateTwoFactorAuthenticatorRequest) => Promise<TwoFactorAuthenticatorResponse>;\n    putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n    putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n    putTwoFactorOrganizationDuo: (organizationId: string,\n        request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n    putTwoFactorYubiKey: (request: UpdateTwoFactorYubioOtpRequest) => Promise<TwoFactorYubiKeyResponse>;\n    putTwoFactorU2f: (request: UpdateTwoFactorU2fRequest) => Promise<TwoFactorU2fResponse>;\n    deleteTwoFactorU2f: (request: UpdateTwoFactorU2fDeleteRequest) => Promise<TwoFactorU2fResponse>;\n    putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n    putTwoFactorOrganizationDisable: (organizationId: string,\n        request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n    postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n    postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n    postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n\n    getOrganization: (id: string) => Promise<OrganizationResponse>;\n    getOrganizationBilling: (id: string) => Promise<BillingResponse>;\n    getOrganizationSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\n    getOrganizationLicense: (id: string, installationId: string) => Promise<any>;\n    postOrganization: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n    putOrganization: (id: string, request: OrganizationUpdateRequest) => Promise<OrganizationResponse>;\n    postLeaveOrganization: (id: string) => Promise<any>;\n    postOrganizationLicense: (data: FormData) => Promise<OrganizationResponse>;\n    postOrganizationLicenseUpdate: (id: string, data: FormData) => Promise<any>;\n    postOrganizationApiKey: (id: string, request: PasswordVerificationRequest) => Promise<ApiKeyResponse>;\n    postOrganizationRotateApiKey: (id: string, request: PasswordVerificationRequest) => Promise<ApiKeyResponse>;\n    postOrganizationUpgrade: (id: string, request: OrganizationUpgradeRequest) => Promise<PaymentResponse>;\n    postOrganizationSeat: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\n    postOrganizationStorage: (id: string, request: StorageRequest) => Promise<any>;\n    postOrganizationPayment: (id: string, request: PaymentRequest) => Promise<any>;\n    postOrganizationVerifyBank: (id: string, request: VerifyBankRequest) => Promise<any>;\n    postOrganizationCancel: (id: string) => Promise<any>;\n    postOrganizationReinstate: (id: string) => Promise<any>;\n    deleteOrganization: (id: string, request: PasswordVerificationRequest) => Promise<any>;\n\n    getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n    getEventsCipher: (id: string, start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n    getEventsOrganization: (id: string, start: string, end: string,\n        token: string) => Promise<ListResponse<EventResponse>>;\n    getEventsOrganizationUser: (organizationId: string, id: string,\n        start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n    postEventsCollect: (request: EventRequest[]) => Promise<any>;\n\n    getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n    getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\n\n    postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\n    postSetupPayment: () => Promise<string>;\n\n    getActiveBearerToken: () => Promise<string>;\n    fetch: (request: Request) => Promise<Response>;\n    nativeFetch: (request: Request) => Promise<Response>;\n}\n","import { DeviceType } from '../enums/deviceType';\n\nexport abstract class PlatformUtilsService {\n    identityClientId: string;\n    getDevice: () => DeviceType;\n    getDeviceString: () => string;\n    isFirefox: () => boolean;\n    isChrome: () => boolean;\n    isEdge: () => boolean;\n    isOpera: () => boolean;\n    isVivaldi: () => boolean;\n    isSafari: () => boolean;\n    isIE: () => boolean;\n    isMacAppStore: () => boolean;\n    analyticsId: () => string;\n    isViewOpen: () => Promise<boolean>;\n    lockTimeout: () => number;\n    launchUri: (uri: string, options?: any) => void;\n    saveFile: (win: Window, blobData: any, blobOptions: any, fileName: string) => void;\n    getApplicationVersion: () => string;\n    supportsU2f: (win: Window) => boolean;\n    supportsDuo: () => boolean;\n    showToast: (type: 'error' | 'success' | 'warning' | 'info', title: string, text: string | string[],\n        options?: any) => void;\n    showDialog: (text: string, title?: string, confirmText?: string, cancelText?: string,\n        type?: string) => Promise<boolean>;\n    eventTrack: (action: string, label?: string, options?: any) => void;\n    isDev: () => boolean;\n    isSelfHost: () => boolean;\n    copyToClipboard: (text: string, options?: any) => void;\n    readFromClipboard: (options?: any) => Promise<string>;\n}\n","import {\n    Pipe,\n    PipeTransform,\n} from '@angular/core';\n\nimport { I18nService } from '../../abstractions/i18n.service';\n\n@Pipe({\n    name: 'i18n',\n})\nexport class I18nPipe implements PipeTransform {\n    constructor(private i18nService: I18nService) { }\n\n    transform(id: string, p1?: string, p2?: string, p3?: string): string {\n        return this.i18nService.t(id, p1, p2, p3);\n    }\n}\n","import { OrganizationData } from '../models/data/organizationData';\nimport { Organization } from '../models/domain/organization';\n\nimport { KdfType } from '../enums/kdfType';\n\nexport abstract class UserService {\n    setInformation: (userId: string, email: string, kdf: KdfType, kdfIterations: number) => Promise<any>;\n    setSecurityStamp: (stamp: string) => Promise<any>;\n    getUserId: () => Promise<string>;\n    getEmail: () => Promise<string>;\n    getSecurityStamp: () => Promise<string>;\n    getKdf: () => Promise<KdfType>;\n    getKdfIterations: () => Promise<number>;\n    clear: () => Promise<any>;\n    isAuthenticated: () => Promise<boolean>;\n    canAccessPremium: () => Promise<boolean>;\n    getOrganization: (id: string) => Promise<Organization>;\n    getAllOrganizations: () => Promise<Organization[]>;\n    replaceOrganizations: (organizations: { [id: string]: OrganizationData; }) => Promise<any>;\n    clearOrganizations: (userId: string) => Promise<any>;\n}\n","import { Injectable } from '@angular/core';\n\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\n\nimport { ErrorResponse } from '../../models/response/errorResponse';\n\n@Injectable()\nexport class ValidationService {\n    constructor(private i18nService: I18nService, private platformUtilsService: PlatformUtilsService) { }\n\n    showError(data: any): string[] {\n        const defaultErrorMessage = this.i18nService.t('unexpectedError');\n        let errors: string[] = [];\n\n        if (data != null && typeof data === 'string') {\n            errors.push(data);\n        } else if (data == null || typeof data !== 'object') {\n            errors.push(defaultErrorMessage);\n        } else if (data.validationErrors != null) {\n            errors = errors.concat((data as ErrorResponse).getAllMessages());\n        } else {\n            errors.push(data.message ? data.message : defaultErrorMessage);\n        }\n\n        if (errors.length === 1) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), errors[0]);\n        } else if (errors.length > 1) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), errors, {\n                timeout: 5000 * errors.length,\n            });\n        }\n\n        return errors;\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    Input,\n    OnChanges,\n} from '@angular/core';\n\nimport { ValidationService } from '../services/validation.service';\n\n@Directive({\n    selector: '[appApiAction]',\n})\nexport class ApiActionDirective implements OnChanges {\n    @Input() appApiAction: Promise<any>;\n\n    constructor(private el: ElementRef, private validationService: ValidationService) { }\n\n    ngOnChanges(changes: any) {\n        if (this.appApiAction == null || this.appApiAction.then == null) {\n            return;\n        }\n\n        this.el.nativeElement.loading = true;\n\n        this.appApiAction.then((response: any) => {\n            this.el.nativeElement.loading = false;\n        }, (e: any) => {\n            this.el.nativeElement.loading = false;\n            this.validationService.showError(e);\n        });\n    }\n}\n","export abstract class MessagingService {\n    send: (subscriber: string, arg?: any) => void;\n}\n","import { CipherString } from '../models/domain/cipherString';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { ProfileOrganizationResponse } from '../models/response/profileOrganizationResponse';\n\nimport { KdfType } from '../enums/kdfType';\n\nexport abstract class CryptoService {\n    setKey: (key: SymmetricCryptoKey) => Promise<any>;\n    setKeyHash: (keyHash: string) => Promise<{}>;\n    setEncKey: (encKey: string) => Promise<{}>;\n    setEncPrivateKey: (encPrivateKey: string) => Promise<{}>;\n    setOrgKeys: (orgs: ProfileOrganizationResponse[]) => Promise<{}>;\n    getKey: () => Promise<SymmetricCryptoKey>;\n    getKeyHash: () => Promise<string>;\n    getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n    getPublicKey: () => Promise<ArrayBuffer>;\n    getPrivateKey: () => Promise<ArrayBuffer>;\n    getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\n    getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n    getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n    hasKey: () => Promise<boolean>;\n    hasEncKey: () => Promise<boolean>;\n    clearKey: () => Promise<any>;\n    clearKeyHash: () => Promise<any>;\n    clearEncKey: (memoryOnly?: boolean) => Promise<any>;\n    clearKeyPair: (memoryOnly?: boolean) => Promise<any>;\n    clearOrgKeys: (memoryOnly?: boolean) => Promise<any>;\n    clearPinProtectedKey: () => Promise<any>;\n    clearKeys: () => Promise<any>;\n    toggleKey: () => Promise<any>;\n    makeKey: (password: string, salt: string, kdf: KdfType, kdfIterations: number) => Promise<SymmetricCryptoKey>;\n    makeKeyFromPin: (pin: string, salt: string, kdf: KdfType, kdfIterations: number,\n        protectedKeyCs?: CipherString) => Promise<SymmetricCryptoKey>;\n    makeShareKey: () => Promise<[CipherString, SymmetricCryptoKey]>;\n    makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, CipherString]>;\n    makePinKey: (pin: string, salt: string, kdf: KdfType, kdfIterations: number) => Promise<SymmetricCryptoKey>;\n    hashPassword: (password: string, key: SymmetricCryptoKey) => Promise<string>;\n    makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, CipherString]>;\n    remakeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, CipherString]>;\n    encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<CipherString>;\n    encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n    rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<CipherString>;\n    decryptToBytes: (cipherString: CipherString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n    decryptToUtf8: (cipherString: CipherString, key?: SymmetricCryptoKey) => Promise<string>;\n    decryptFromBytes: (encBuf: ArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n    randomNumber: (min: number, max: number) => Promise<number>;\n}\n","import { CipherType } from '../enums/cipherType';\n\nimport { CipherData } from '../models/data/cipherData';\n\nimport { Cipher } from '../models/domain/cipher';\nimport { Field } from '../models/domain/field';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { AttachmentView } from '../models/view/attachmentView';\nimport { CipherView } from '../models/view/cipherView';\nimport { FieldView } from '../models/view/fieldView';\n\nexport abstract class CipherService {\n    decryptedCipherCache: CipherView[];\n\n    clearCache: () => void;\n    encrypt: (model: CipherView, key?: SymmetricCryptoKey, originalCipher?: Cipher) => Promise<Cipher>;\n    encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n    encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n    get: (id: string) => Promise<Cipher>;\n    getAll: () => Promise<Cipher[]>;\n    getAllDecrypted: () => Promise<CipherView[]>;\n    getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n    getAllDecryptedForUrl: (url: string, includeOtherTypes?: CipherType[]) => Promise<CipherView[]>;\n    getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\n    getLastUsedForUrl: (url: string) => Promise<CipherView>;\n    updateLastUsedDate: (id: string) => Promise<void>;\n    saveNeverDomain: (domain: string) => Promise<void>;\n    saveWithServer: (cipher: Cipher) => Promise<any>;\n    shareWithServer: (cipher: CipherView, organizationId: string, collectionIds: string[]) => Promise<any>;\n    shareManyWithServer: (ciphers: CipherView[], organizationId: string, collectionIds: string[]) => Promise<any>;\n    saveAttachmentWithServer: (cipher: Cipher, unencryptedFile: any, admin?: boolean) => Promise<Cipher>;\n    saveAttachmentRawWithServer: (cipher: Cipher, filename: string, data: ArrayBuffer,\n        admin?: boolean) => Promise<Cipher>;\n    saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n    upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n    replace: (ciphers: { [id: string]: CipherData; }) => Promise<any>;\n    clear: (userId: string) => Promise<any>;\n    moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n    delete: (id: string | string[]) => Promise<any>;\n    deleteWithServer: (id: string) => Promise<any>;\n    deleteManyWithServer: (ids: string[]) => Promise<any>;\n    deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n    deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n    sortCiphersByLastUsed: (a: any, b: any) => number;\n    sortCiphersByLastUsedThenName: (a: any, b: any) => number;\n    getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n}\n","import * as papa from 'papaparse';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherView } from '../models/view/cipherView';\nimport { CollectionView } from '../models/view/collectionView';\nimport { LoginUriView } from '../models/view/loginUriView';\n\nimport { Utils } from '../misc/utils';\n\nimport { FieldView } from '../models/view/fieldView';\nimport { FolderView } from '../models/view/folderView';\nimport { LoginView } from '../models/view/loginView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nexport abstract class BaseImporter {\n    organization = false;\n\n    protected newLineRegex = /(?:\\r\\n|\\r|\\n)/;\n\n    protected passwordFieldNames = [\n        'password', 'pass word', 'passphrase', 'pass phrase',\n        'pass', 'code', 'code word', 'codeword',\n        'secret', 'secret word', 'personpwd',\n        'key', 'keyword', 'key word', 'keyphrase', 'key phrase',\n        'form_pw', 'wppassword', 'pin', 'pwd', 'pw', 'pword', 'passwd',\n        'p', 'serial', 'serial#', 'license key', 'reg #',\n\n        // Non-English names\n        'passwort',\n    ];\n\n    protected usernameFieldNames = [\n        'user', 'name', 'user name', 'username', 'login name',\n        'email', 'e-mail', 'id', 'userid', 'user id',\n        'login', 'form_loginname', 'wpname', 'mail',\n        'loginid', 'login id', 'log', 'personlogin',\n        'first name', 'last name', 'card#', 'account #',\n        'member', 'member #',\n\n        // Non-English names\n        'nom', 'benutzername',\n    ];\n\n    protected notesFieldNames = [\n        'note', 'notes', 'comment', 'comments', 'memo',\n        'description', 'free form', 'freeform',\n        'free text', 'freetext', 'free',\n\n        // Non-English names\n        'kommentar',\n    ];\n\n    protected uriFieldNames: string[] = [\n        'url', 'hyper link', 'hyperlink', 'link',\n        'host', 'hostname', 'host name', 'server', 'address',\n        'hyper ref', 'href', 'web', 'website', 'web site', 'site',\n        'web-site', 'uri',\n\n        // Non-English names\n        'ort', 'adresse',\n    ];\n\n    protected parseXml(data: string): Document {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(data, 'application/xml');\n        return doc != null && doc.querySelector('parsererror') == null ? doc : null;\n    }\n\n    protected parseCsv(data: string, header: boolean): any[] {\n        data = this.splitNewLine(data).join('\\n').trim();\n        const result = papa.parse(data, {\n            header: header,\n            encoding: 'UTF-8',\n            skipEmptyLines: false,\n        });\n        if (result.errors != null && result.errors.length > 0) {\n            result.errors.forEach((e) => {\n                if (e.row != null) {\n                    // tslint:disable-next-line\n                    console.warn('Error parsing row ' + e.row + ': ' + e.message);\n                }\n            });\n        }\n        return result.data && result.data.length > 0 ? result.data : null;\n    }\n\n    protected parseSingleRowCsv(rowData: string) {\n        if (this.isNullOrWhitespace(rowData)) {\n            return null;\n        }\n        const parsedRow = this.parseCsv(rowData, false);\n        if (parsedRow != null && parsedRow.length > 0 && parsedRow[0].length > 0) {\n            return parsedRow[0];\n        }\n        return null;\n    }\n\n    protected makeUriArray(uri: string | string[]): LoginUriView[] {\n        if (uri == null) {\n            return null;\n        }\n\n        if (typeof uri === 'string') {\n            const loginUri = new LoginUriView();\n            loginUri.uri = this.fixUri(uri);\n            if (this.isNullOrWhitespace(loginUri.uri)) {\n                return null;\n            }\n            loginUri.match = null;\n            return [loginUri];\n        }\n\n        if (uri.length > 0) {\n            const returnArr: LoginUriView[] = [];\n            uri.forEach((u) => {\n                const loginUri = new LoginUriView();\n                loginUri.uri = this.fixUri(u);\n                if (this.isNullOrWhitespace(loginUri.uri)) {\n                    return;\n                }\n                loginUri.match = null;\n                returnArr.push(loginUri);\n            });\n            return returnArr.length === 0 ? null : returnArr;\n        }\n\n        return null;\n    }\n\n    protected fixUri(uri: string) {\n        if (uri == null) {\n            return null;\n        }\n        uri = uri.trim();\n        if (uri.indexOf('://') === -1 && uri.indexOf('.') >= 0) {\n            uri = 'http://' + uri;\n        }\n        if (uri.length > 1000) {\n            return uri.substring(0, 1000);\n        }\n        return uri;\n    }\n\n    protected nameFromUrl(url: string) {\n        const hostname = Utils.getHostname(url);\n        if (this.isNullOrWhitespace(hostname)) {\n            return null;\n        }\n        return hostname.startsWith('www.') ? hostname.replace('www.', '') : hostname;\n    }\n\n    protected isNullOrWhitespace(str: string): boolean {\n        return Utils.isNullOrWhitespace(str);\n    }\n\n    protected getValueOrDefault(str: string, defaultValue: string = null): string {\n        if (this.isNullOrWhitespace(str)) {\n            return defaultValue;\n        }\n        return str;\n    }\n\n    protected splitNewLine(str: string): string[] {\n        return str.split(this.newLineRegex);\n    }\n\n    // ref https://stackoverflow.com/a/5911300\n    protected getCardBrand(cardNum: string) {\n        if (this.isNullOrWhitespace(cardNum)) {\n            return null;\n        }\n\n        // Visa\n        let re = new RegExp('^4');\n        if (cardNum.match(re) != null) {\n            return 'Visa';\n        }\n\n        // Mastercard\n        // Updated for Mastercard 2017 BINs expansion\n        if (/^(5[1-5][0-9]{14}|2(22[1-9][0-9]{12}|2[3-9][0-9]{13}|[3-6][0-9]{14}|7[0-1][0-9]{13}|720[0-9]{12}))$/\n            .test(cardNum)) {\n            return 'Mastercard';\n        }\n\n        // AMEX\n        re = new RegExp('^3[47]');\n        if (cardNum.match(re) != null) {\n            return 'Amex';\n        }\n\n        // Discover\n        re = new RegExp('^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)');\n        if (cardNum.match(re) != null) {\n            return 'Discover';\n        }\n\n        // Diners\n        re = new RegExp('^36');\n        if (cardNum.match(re) != null) {\n            return 'Diners Club';\n        }\n\n        // Diners - Carte Blanche\n        re = new RegExp('^30[0-5]');\n        if (cardNum.match(re) != null) {\n            return 'Diners Club';\n        }\n\n        // JCB\n        re = new RegExp('^35(2[89]|[3-8][0-9])');\n        if (cardNum.match(re) != null) {\n            return 'JCB';\n        }\n\n        // Visa Electron\n        re = new RegExp('^(4026|417500|4508|4844|491(3|7))');\n        if (cardNum.match(re) != null) {\n            return 'Visa';\n        }\n\n        return null;\n    }\n\n    protected setCardExpiration(cipher: CipherView, expiration: string): boolean {\n        if (!this.isNullOrWhitespace(expiration)) {\n            const parts = expiration.split('/');\n            if (parts.length === 2) {\n                let month: string = null;\n                let year: string = null;\n                if (parts[0].length === 1 || parts[0].length === 2) {\n                    month = parts[0];\n                    if (month.length === 2 && month[0] === '0') {\n                        month = month.substr(1, 1);\n                    }\n                }\n                if (parts[1].length === 2 || parts[1].length === 4) {\n                    year = month.length === 2 ? '20' + parts[1] : parts[1];\n                }\n                if (month != null && year != null) {\n                    cipher.card.expMonth = month;\n                    cipher.card.expYear = year;\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    protected moveFoldersToCollections(result: ImportResult) {\n        result.folderRelationships.forEach((r) => result.collectionRelationships.push(r));\n        result.collections = result.folders.map((f) => {\n            const collection = new CollectionView();\n            collection.name = f.name;\n            return collection;\n        });\n        result.folderRelationships = [];\n        result.folders = [];\n    }\n\n    protected querySelectorDirectChild(parentEl: Element, query: string) {\n        const els = this.querySelectorAllDirectChild(parentEl, query);\n        return els.length === 0 ? null : els[0];\n    }\n\n    protected querySelectorAllDirectChild(parentEl: Element, query: string) {\n        return Array.from(parentEl.querySelectorAll(query)).filter((el) => el.parentNode === parentEl);\n    }\n\n    protected initLoginCipher() {\n        const cipher = new CipherView();\n        cipher.favorite = false;\n        cipher.notes = '';\n        cipher.fields = [];\n        cipher.login = new LoginView();\n        cipher.type = CipherType.Login;\n        return cipher;\n    }\n\n    protected cleanupCipher(cipher: CipherView) {\n        if (cipher == null) {\n            return;\n        }\n        if (cipher.type !== CipherType.Login) {\n            cipher.login = null;\n        }\n        if (this.isNullOrWhitespace(cipher.name)) {\n            cipher.name = '--';\n        }\n        if (this.isNullOrWhitespace(cipher.notes)) {\n            cipher.notes = null;\n        } else {\n            cipher.notes = cipher.notes.trim();\n        }\n        if (cipher.fields != null && cipher.fields.length === 0) {\n            cipher.fields = null;\n        }\n    }\n\n    protected processKvp(cipher: CipherView, key: string, value: string, type: FieldType = FieldType.Text) {\n        if (this.isNullOrWhitespace(value)) {\n            return;\n        }\n        if (this.isNullOrWhitespace(key)) {\n            key = '';\n        }\n        if (value.length > 200 || value.trim().search(this.newLineRegex) > -1) {\n            if (cipher.notes == null) {\n                cipher.notes = '';\n            }\n            cipher.notes += (key + ': ' + this.splitNewLine(value).join('\\n') + '\\n');\n        } else {\n            if (cipher.fields == null) {\n                cipher.fields = [];\n            }\n            const field = new FieldView();\n            field.type = type;\n            field.name = key;\n            field.value = value;\n            cipher.fields.push(field);\n        }\n    }\n\n    protected processFolder(result: ImportResult, folderName: string) {\n        let folderIndex = result.folders.length;\n        const hasFolder = !this.isNullOrWhitespace(folderName);\n        let addFolder = hasFolder;\n\n        if (hasFolder) {\n            for (let i = 0; i < result.folders.length; i++) {\n                if (result.folders[i].name === folderName) {\n                    addFolder = false;\n                    folderIndex = i;\n                    break;\n                }\n            }\n        }\n\n        if (addFolder) {\n            const f = new FolderView();\n            f.name = folderName;\n            result.folders.push(f);\n        }\n        if (hasFolder) {\n            result.folderRelationships.push([result.ciphers.length, folderIndex]);\n        }\n    }\n\n    protected convertToNoteIfNeeded(cipher: CipherView) {\n        if (cipher.type === CipherType.Login && this.isNullOrWhitespace(cipher.login.username) &&\n            this.isNullOrWhitespace(cipher.login.password) &&\n            (cipher.login.uris == null || cipher.login.uris.length === 0)) {\n            cipher.type = CipherType.SecureNote;\n            cipher.secureNote = new SecureNoteView();\n            cipher.secureNote.type = SecureNoteType.Generic;\n        }\n    }\n}\n","import { CipherView } from '../view/cipherView';\nimport { CollectionView } from '../view/collectionView';\nimport { FolderView } from '../view/folderView';\n\nexport class ImportResult {\n    success = false;\n    errorMessage: string;\n    ciphers: CipherView[] = [];\n    folders: FolderView[] = [];\n    folderRelationships: Array<[number, number]> = [];\n    collections: CollectionView[] = [];\n    collectionRelationships: Array<[number, number]> = [];\n}\n","export abstract class StateService {\n    get: <T>(key: string) => Promise<T>;\n    save: (key: string, obj: any) => Promise<any>;\n    remove: (key: string) => Promise<any>;\n    purge: () => Promise<any>;\n}\n","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\n@Component({\n    selector: 'app-callout',\n    templateUrl: 'callout.component.html',\n})\nexport class CalloutComponent implements OnInit {\n    @Input() type = 'info';\n    @Input() icon: string;\n    @Input() title: string;\n\n    calloutStyle: string;\n\n    constructor(private i18nService: I18nService) { }\n\n    ngOnInit() {\n        this.calloutStyle = this.type;\n\n        if (this.type === 'warning' || this.type === 'danger') {\n            if (this.type === 'danger') {\n                this.calloutStyle = 'danger';\n            }\n            if (this.title === undefined) {\n                this.title = this.i18nService.t('warning');\n            }\n            if (this.icon === undefined) {\n                this.icon = 'fa-warning';\n            }\n        } else if (this.type === 'error') {\n            this.calloutStyle = 'danger';\n            if (this.title === undefined) {\n                this.title = this.i18nService.t('error');\n            }\n            if (this.icon === undefined) {\n                this.icon = 'fa-bolt';\n            }\n        } else if (this.type === 'tip') {\n            this.calloutStyle = 'success';\n            if (this.title === undefined) {\n                this.title = this.i18nService.t('tip');\n            }\n            if (this.icon === undefined) {\n                this.icon = 'fa-lightbulb-o';\n            }\n        }\n    }\n}\n","<div class=\"callout callout-{{calloutStyle}}\" role=\"alert\">\n    <h3 class=\"callout-heading\" *ngIf=\"title\">\n        <i class=\"fa {{icon}}\" *ngIf=\"icon\"></i>\n        {{title}}\n    </h3>\n    <ng-content></ng-content>\n</div>\n","export abstract class BaseResponse {\n    protected response: any;\n\n    constructor(response: any) {\n        this.response = response;\n    }\n\n    protected getResponseProperty(propertyName: string, response: any = null, exactName = false): any {\n        if (propertyName == null || propertyName === '') {\n            throw new Error('propertyName must not be null/empty.');\n        }\n        if (response == null && this.response != null) {\n            response = this.response;\n        }\n        if (response == null) {\n            return null;\n        }\n        if (!exactName && response[propertyName] === undefined) {\n            let otherCasePropertyName: string = null;\n            if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n                otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n            } else {\n                otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n            }\n            if (propertyName.length > 1) {\n                otherCasePropertyName += propertyName.slice(1);\n            }\n\n            propertyName = otherCasePropertyName;\n            if (response[propertyName] === undefined) {\n                propertyName = propertyName.toLowerCase();\n            }\n            if (response[propertyName] === undefined) {\n                propertyName = propertyName.toUpperCase();\n            }\n        }\n        return response[propertyName];\n    }\n}\n","import * as tldjs from 'tldjs';\n\nimport { I18nService } from '../abstractions/i18n.service';\n\n// tslint:disable-next-line\nconst nodeURL = typeof window === 'undefined' ? require('url') : null;\n\nexport class Utils {\n    static inited = false;\n    static isNativeScript = false;\n    static isNode = false;\n    static isBrowser = true;\n    static isMobileBrowser = false;\n    static isAppleMobileBrowser = false;\n    static global: any = null;\n    static tldEndingRegex = /.*\\.(com|net|org|edu|uk|gov|ca|de|jp|fr|au|ru|ch|io|es|us|co|xyz|info|ly|mil)$/;\n\n    static init() {\n        if (Utils.inited) {\n            return;\n        }\n\n        Utils.inited = true;\n        Utils.isNode = typeof process !== 'undefined' && (process as any).release != null &&\n            (process as any).release.name === 'node';\n        Utils.isBrowser = typeof window !== 'undefined';\n        Utils.isNativeScript = !Utils.isNode && !Utils.isBrowser;\n        Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n        Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n        Utils.global = Utils.isNativeScript ? global : (Utils.isNode && !Utils.isBrowser ? global : window);\n    }\n\n    static fromB64ToArray(str: string): Uint8Array {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return new Uint8Array(Buffer.from(str, 'base64'));\n        } else {\n            const binaryString = window.atob(str);\n            const bytes = new Uint8Array(binaryString.length);\n            for (let i = 0; i < binaryString.length; i++) {\n                bytes[i] = binaryString.charCodeAt(i);\n            }\n            return bytes;\n        }\n    }\n\n    static fromHexToArray(str: string): Uint8Array {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return new Uint8Array(Buffer.from(str, 'hex'));\n        } else {\n            const bytes = new Uint8Array(str.length / 2);\n            for (let i = 0; i < str.length; i += 2) {\n                bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n            }\n            return bytes;\n        }\n    }\n\n    static fromUtf8ToArray(str: string): Uint8Array {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return new Uint8Array(Buffer.from(str, 'utf8'));\n        } else {\n            const strUtf8 = unescape(encodeURIComponent(str));\n            const arr = new Uint8Array(strUtf8.length);\n            for (let i = 0; i < strUtf8.length; i++) {\n                arr[i] = strUtf8.charCodeAt(i);\n            }\n            return arr;\n        }\n    }\n\n    static fromByteStringToArray(str: string): Uint8Array {\n        const arr = new Uint8Array(str.length);\n        for (let i = 0; i < str.length; i++) {\n            arr[i] = str.charCodeAt(i);\n        }\n        return arr;\n    }\n\n    static fromBufferToB64(buffer: ArrayBuffer): string {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return Buffer.from(buffer).toString('base64');\n        } else {\n            let binary = '';\n            const bytes = new Uint8Array(buffer);\n            for (let i = 0; i < bytes.byteLength; i++) {\n                binary += String.fromCharCode(bytes[i]);\n            }\n            return window.btoa(binary);\n        }\n    }\n\n    static fromBufferToUtf8(buffer: ArrayBuffer): string {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return Buffer.from(buffer).toString('utf8');\n        } else {\n            const bytes = new Uint8Array(buffer);\n            const encodedString = String.fromCharCode.apply(null, bytes);\n            return decodeURIComponent(escape(encodedString));\n        }\n    }\n\n    static fromBufferToByteString(buffer: ArrayBuffer): string {\n        return String.fromCharCode.apply(null, new Uint8Array(buffer));\n    }\n\n    // ref: https://stackoverflow.com/a/40031979/1090359\n    static fromBufferToHex(buffer: ArrayBuffer): string {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return Buffer.from(buffer).toString('hex');\n        } else {\n            const bytes = new Uint8Array(buffer);\n            return Array.prototype.map.call(bytes, (x: number) => ('00' + x.toString(16)).slice(-2)).join('');\n        }\n    }\n\n    static fromUrlB64ToUtf8(b64Str: string): string {\n        let output = b64Str.replace(/-/g, '+').replace(/_/g, '/');\n        switch (output.length % 4) {\n            case 0:\n                break;\n            case 2:\n                output += '==';\n                break;\n            case 3:\n                output += '=';\n                break;\n            default:\n                throw new Error('Illegal base64url string!');\n        }\n\n        return Utils.fromB64ToUtf8(output);\n    }\n\n    static fromB64ToUtf8(b64Str: string): string {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return Buffer.from(b64Str, 'base64').toString('utf8');\n        } else {\n            return decodeURIComponent(escape(window.atob(b64Str)));\n        }\n    }\n\n    // ref: http://stackoverflow.com/a/2117523/1090359\n    static newGuid(): string {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n            // tslint:disable-next-line\n            const r = Math.random() * 16 | 0;\n            // tslint:disable-next-line\n            const v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n\n    static getHostname(uriString: string): string {\n        const url = Utils.getUrl(uriString);\n        try {\n            return url != null ? url.hostname : null;\n        } catch {\n            return null;\n        }\n    }\n\n    static getHost(uriString: string): string {\n        const url = Utils.getUrl(uriString);\n        try {\n            return url != null ? url.host : null;\n        } catch {\n            return null;\n        }\n    }\n\n    static getDomain(uriString: string): string {\n        if (uriString == null) {\n            return null;\n        }\n\n        uriString = uriString.trim();\n        if (uriString === '') {\n            return null;\n        }\n\n        let httpUrl = uriString.startsWith('http://') || uriString.startsWith('https://');\n        if (!httpUrl && uriString.indexOf('://') < 0 && Utils.tldEndingRegex.test(uriString)) {\n            uriString = 'http://' + uriString;\n            httpUrl = true;\n        }\n\n        if (httpUrl) {\n            try {\n                const url = Utils.getUrlObject(uriString);\n                if (url.hostname === 'localhost' || Utils.validIpAddress(url.hostname)) {\n                    return url.hostname;\n                }\n\n                const urlDomain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(url.hostname) : null;\n                return urlDomain != null ? urlDomain : url.hostname;\n            } catch (e) { }\n        }\n\n        const domain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(uriString) : null;\n        if (domain != null) {\n            return domain;\n        }\n\n        return null;\n    }\n\n    static getQueryParams(uriString: string): Map<string, string> {\n        const url = Utils.getUrl(uriString);\n        if (url == null || url.search == null || url.search === '') {\n            return null;\n        }\n        const map = new Map<string, string>();\n        const pairs = (url.search[0] === '?' ? url.search.substr(1) : url.search).split('&');\n        pairs.forEach((pair) => {\n            const parts = pair.split('=');\n            if (parts.length < 1) {\n                return;\n            }\n            map.set(decodeURIComponent(parts[0]).toLowerCase(), parts[1] == null ? '' : decodeURIComponent(parts[1]));\n        });\n        return map;\n    }\n\n    static getSortFunction(i18nService: I18nService, prop: string) {\n        return (a: any, b: any) => {\n            if (a[prop] == null && b[prop] != null) {\n                return -1;\n            }\n            if (a[prop] != null && b[prop] == null) {\n                return 1;\n            }\n            if (a[prop] == null && b[prop] == null) {\n                return 0;\n            }\n\n            return i18nService.collator ? i18nService.collator.compare(a[prop], b[prop]) :\n                a[prop].localeCompare(b[prop]);\n        };\n    }\n\n    static isNullOrWhitespace(str: string): boolean {\n        return str == null || typeof str !== 'string' || str.trim() === '';\n    }\n\n    private static validIpAddress(ipString: string): boolean {\n        // tslint:disable-next-line\n        const ipRegex = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n        return ipRegex.test(ipString);\n    }\n\n    private static isMobile(win: Window) {\n        let mobile = false;\n        ((a) => {\n            // tslint:disable-next-line\n            if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) {\n                mobile = true;\n            }\n        })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n        return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n    }\n\n    private static isAppleMobile(win: Window) {\n        return win.navigator.userAgent.match(/iPhone/i) != null || win.navigator.userAgent.match(/iPad/i) != null;\n    }\n\n    private static getUrl(uriString: string): URL {\n        if (uriString == null) {\n            return null;\n        }\n\n        uriString = uriString.trim();\n        if (uriString === '') {\n            return null;\n        }\n\n        const hasProtocol = uriString.indexOf('://') > -1;\n        if (!hasProtocol && uriString.indexOf('.') > -1) {\n            uriString = 'http://' + uriString;\n        } else if (!hasProtocol) {\n            return null;\n        }\n\n        return Utils.getUrlObject(uriString);\n    }\n\n    private static getUrlObject(uriString: string): URL {\n        try {\n            if (nodeURL != null) {\n                return nodeURL.URL ? new nodeURL.URL(uriString) : nodeURL.parse(uriString);\n            } else if (typeof URL === 'function') {\n                return new URL(uriString);\n            } else if (window != null) {\n                const anchor = window.document.createElement('a');\n                anchor.href = uriString;\n                return anchor as any;\n            }\n        } catch (e) { }\n\n        return null;\n    }\n}\n\nUtils.init();\n","export enum CipherType {\n    Login = 1,\n    SecureNote = 2,\n    Card = 3,\n    Identity = 4,\n}\n","import {\n    Directive,\n    HostListener,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appStopClick]',\n})\nexport class StopClickDirective {\n    @HostListener('click', ['$event']) onClick($event: MouseEvent) {\n        $event.preventDefault();\n    }\n}\n","import { CollectionData } from '../models/data/collectionData';\n\nimport { Collection } from '../models/domain/collection';\nimport { TreeNode } from '../models/domain/treeNode';\n\nimport { CollectionView } from '../models/view/collectionView';\n\nexport abstract class CollectionService {\n    decryptedCollectionCache: CollectionView[];\n\n    clearCache: () => void;\n    encrypt: (model: CollectionView) => Promise<Collection>;\n    decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n    get: (id: string) => Promise<Collection>;\n    getAll: () => Promise<Collection[]>;\n    getAllDecrypted: () => Promise<CollectionView[]>;\n    getAllNested: (collections?: CollectionView[]) => Promise<Array<TreeNode<CollectionView>>>;\n    getNested: (id: string) => Promise<TreeNode<CollectionView>>;\n    upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n    replace: (collections: { [id: string]: CollectionData; }) => Promise<any>;\n    clear: (userId: string) => Promise<any>;\n    delete: (id: string | string[]) => Promise<any>;\n}\n","import {\n    Directive,\n    ElementRef,\n    Input,\n    Renderer2,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appInputVerbatim]',\n})\nexport class InputVerbatimDirective {\n    @Input() set appInputVerbatim(condition: boolean | string) {\n        this.disableComplete = condition === '' || condition === true;\n    }\n\n    private disableComplete: boolean;\n\n    constructor(private el: ElementRef, private renderer: Renderer2) { }\n\n    ngOnInit() {\n        if (this.disableComplete && !this.el.nativeElement.hasAttribute('autocomplete')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'autocomplete', 'off');\n        }\n        if (!this.el.nativeElement.hasAttribute('autocapitalize')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'autocapitalize', 'none');\n        }\n        if (!this.el.nativeElement.hasAttribute('autocorrect')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'autocorrect', 'none');\n        }\n        if (!this.el.nativeElement.hasAttribute('spellcheck')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'spellcheck', 'false');\n        }\n        if (!this.el.nativeElement.hasAttribute('inputmode')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'inputmode', 'verbatim');\n        }\n    }\n}\n","export abstract class StorageService {\n    get: <T>(key: string) => Promise<T>;\n    save: (key: string, obj: any) => Promise<any>;\n    remove: (key: string) => Promise<any>;\n}\n","import { FolderData } from '../models/data/folderData';\n\nimport { Folder } from '../models/domain/folder';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\nimport { TreeNode } from '../models/domain/treeNode';\n\nimport { FolderView } from '../models/view/folderView';\n\nexport abstract class FolderService {\n    decryptedFolderCache: FolderView[];\n\n    clearCache: () => void;\n    encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n    get: (id: string) => Promise<Folder>;\n    getAll: () => Promise<Folder[]>;\n    getAllDecrypted: () => Promise<FolderView[]>;\n    getAllNested: () => Promise<Array<TreeNode<FolderView>>>;\n    getNested: (id: string) => Promise<TreeNode<FolderView>>;\n    saveWithServer: (folder: Folder) => Promise<any>;\n    upsert: (folder: FolderData | FolderData[]) => Promise<any>;\n    replace: (folders: { [id: string]: FolderData; }) => Promise<any>;\n    clear: (userId: string) => Promise<any>;\n    delete: (id: string | string[]) => Promise<any>;\n    deleteWithServer: (id: string) => Promise<any>;\n}\n","import {\n    SyncCipherNotification,\n    SyncFolderNotification,\n} from '../models/response/notificationResponse';\n\nexport abstract class SyncService {\n    syncInProgress: boolean;\n\n    getLastSync: () => Promise<Date>;\n    setLastSync: (date: Date) => Promise<any>;\n    fullSync: (forceSync: boolean) => Promise<boolean>;\n    syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\n    syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\n    syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\n    syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\n}\n","import { GeneratedPasswordHistory } from '../models/domain/generatedPasswordHistory';\n\nexport abstract class PasswordGenerationService {\n    generatePassword: (options: any) => Promise<string>;\n    generatePassphrase: (options: any) => Promise<string>;\n    getOptions: () => any;\n    saveOptions: (options: any) => Promise<any>;\n    getHistory: () => Promise<GeneratedPasswordHistory[]>;\n    addHistory: (password: string) => Promise<any>;\n    clear: () => Promise<any>;\n    passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\n}\n","export abstract class EnvironmentService {\n    baseUrl: string;\n    webVaultUrl: string;\n    apiUrl: string;\n    identityUrl: string;\n    iconsUrl: string;\n    notificationsUrl: string;\n    eventsUrl: string;\n\n    getWebVaultUrl: () => string;\n    setUrlsFromStorage: () => Promise<void>;\n    setUrls: (urls: any) => Promise<any>;\n}\n","export class PasswordVerificationRequest {\n    masterPasswordHash: string;\n}\n","export class ConstantsService {\n    static readonly environmentUrlsKey: string = 'environmentUrls';\n    static readonly disableGaKey: string = 'disableGa';\n    static readonly disableAddLoginNotificationKey: string = 'disableAddLoginNotification';\n    static readonly disableChangedPasswordNotificationKey: string = 'disableChangedPasswordNotification';\n    static readonly disableContextMenuItemKey: string = 'disableContextMenuItem';\n    static readonly disableFaviconKey: string = 'disableFavicon';\n    static readonly disableAutoTotpCopyKey: string = 'disableAutoTotpCopy';\n    static readonly enableAutoFillOnPageLoadKey: string = 'enableAutoFillOnPageLoad';\n    static readonly lockOptionKey: string = 'lockOption';\n    static readonly lastActiveKey: string = 'lastActive';\n    static readonly neverDomainsKey: string = 'neverDomains';\n    static readonly installedVersionKey: string = 'installedVersion';\n    static readonly localeKey: string = 'locale';\n    static readonly themeKey: string = 'theme';\n    static readonly collapsedGroupingsKey: string = 'collapsedGroupings';\n    static readonly autoConfirmFingerprints: string = 'autoConfirmFingerprints';\n    static readonly dontShowCardsCurrentTab: string = 'dontShowCardsCurrentTab';\n    static readonly dontShowIdentitiesCurrentTab: string = 'dontShowIdentitiesCurrentTab';\n    static readonly defaultUriMatch: string = 'defaultUriMatch';\n    static readonly pinProtectedKey: string = 'pinProtectedKey';\n    static readonly protectedPin: string = 'protectedPin';\n    static readonly clearClipboardKey: string = 'clearClipboardKey';\n    static readonly eventCollectionKey: string = 'eventCollection';\n\n    readonly environmentUrlsKey: string = ConstantsService.environmentUrlsKey;\n    readonly disableGaKey: string = ConstantsService.disableGaKey;\n    readonly disableAddLoginNotificationKey: string = ConstantsService.disableAddLoginNotificationKey;\n    readonly disableContextMenuItemKey: string = ConstantsService.disableContextMenuItemKey;\n    readonly disableFaviconKey: string = ConstantsService.disableFaviconKey;\n    readonly disableAutoTotpCopyKey: string = ConstantsService.disableAutoTotpCopyKey;\n    readonly enableAutoFillOnPageLoadKey: string = ConstantsService.enableAutoFillOnPageLoadKey;\n    readonly lockOptionKey: string = ConstantsService.lockOptionKey;\n    readonly lastActiveKey: string = ConstantsService.lastActiveKey;\n    readonly neverDomainsKey: string = ConstantsService.neverDomainsKey;\n    readonly installedVersionKey: string = ConstantsService.installedVersionKey;\n    readonly localeKey: string = ConstantsService.localeKey;\n    readonly themeKey: string = ConstantsService.themeKey;\n    readonly collapsedGroupingsKey: string = ConstantsService.collapsedGroupingsKey;\n    readonly autoConfirmFingerprints: string = ConstantsService.autoConfirmFingerprints;\n    readonly dontShowCardsCurrentTab: string = ConstantsService.dontShowCardsCurrentTab;\n    readonly dontShowIdentitiesCurrentTab: string = ConstantsService.dontShowIdentitiesCurrentTab;\n    readonly defaultUriMatch: string = ConstantsService.defaultUriMatch;\n    readonly pinProtectedKey: string = ConstantsService.pinProtectedKey;\n    readonly protectedPin: string = ConstantsService.protectedPin;\n    readonly clearClipboardKey: string = ConstantsService.clearClipboardKey;\n    readonly eventCollectionKey: string = ConstantsService.eventCollectionKey;\n}\n","import { EventType } from '../enums/eventType';\n\nexport abstract class EventService {\n    collect: (eventType: EventType, cipherId?: string, uploadImmediately?: boolean) => Promise<any>;\n    uploadEvents: () => Promise<any>;\n    clearEvents: () => Promise<any>;\n}\n","export abstract class TokenService {\n    token: string;\n    decodedToken: any;\n    refreshToken: string;\n    setTokens: (accessToken: string, refreshToken: string) => Promise<any>;\n    setToken: (token: string) => Promise<any>;\n    getToken: () => Promise<string>;\n    setRefreshToken: (refreshToken: string) => Promise<any>;\n    getRefreshToken: () => Promise<string>;\n    setTwoFactorToken: (token: string, email: string) => Promise<any>;\n    getTwoFactorToken: (email: string) => Promise<string>;\n    clearTwoFactorToken: (email: string) => Promise<any>;\n    clearToken: () => Promise<any>;\n    decodeToken: () => any;\n    getTokenExpirationDate: () => Date;\n    tokenSecondsRemaining: (offsetSeconds?: number) => number;\n    tokenNeedsRefresh: (minutes?: number) => boolean;\n    getUserId: () => string;\n    getEmail: () => string;\n    getEmailVerified: () => boolean;\n    getName: () => string;\n    getPremium: () => boolean;\n    getIssuer: () => string;\n}\n","import { View } from './view';\n\nimport { Card } from '../domain/card';\n\nexport class CardView implements View {\n    cardholderName: string = null;\n    expMonth: string = null;\n    expYear: string = null;\n    code: string = null;\n\n    // tslint:disable\n    private _brand: string = null;\n    private _number: string = null;\n    private _subTitle: string = null;\n    // tslint:enable\n\n    constructor(c?: Card) {\n        // ctor\n    }\n\n    get maskedCode(): string {\n        return this.code != null ? '•'.repeat(this.code.length) : null;\n    }\n\n    get brand(): string {\n        return this._brand;\n    }\n    set brand(value: string) {\n        this._brand = value;\n        this._subTitle = null;\n    }\n\n    get number(): string {\n        return this._number;\n    }\n    set number(value: string) {\n        this._number = value;\n        this._subTitle = null;\n    }\n\n    get subTitle(): string {\n        if (this._subTitle == null) {\n            this._subTitle = this.brand;\n            if (this.number != null && this.number.length >= 4) {\n                if (this._subTitle != null && this._subTitle !== '') {\n                    this._subTitle += ', ';\n                } else {\n                    this._subTitle = '';\n                }\n\n                // Show last 5 on amex, last 4 for all others\n                const count = this.number.length >= 5 && this.number.match(new RegExp('^3[47]')) != null ? 5 : 4;\n                this._subTitle += ('*' + this.number.substr(this.number.length - count));\n            }\n        }\n        return this._subTitle;\n    }\n\n    get expiration(): string {\n        if (!this.expMonth && !this.expYear) {\n            return null;\n        }\n\n        let exp = this.expMonth != null ? ('0' + this.expMonth).slice(-2) : '__';\n        exp += (' / ' + (this.expYear != null ? this.formatYear(this.expYear) : '____'));\n        return exp;\n    }\n\n    private formatYear(year: string): string {\n        return year.length === 2 ? '20' + year : year;\n    }\n}\n","import { SecureNoteType } from '../../enums/secureNoteType';\n\nimport { View } from './view';\n\nimport { SecureNote } from '../domain/secureNote';\n\nexport class SecureNoteView implements View {\n    type: SecureNoteType = null;\n\n    constructor(n?: SecureNote) {\n        if (!n) {\n            return;\n        }\n\n        this.type = n.type;\n    }\n\n    get subTitle(): string {\n        return null;\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    Input,\n} from '@angular/core';\n\nimport { Utils } from '../../misc/utils';\n\n@Directive({\n    selector: '[appAutofocus]',\n})\nexport class AutofocusDirective {\n    @Input() set appAutofocus(condition: boolean | string) {\n        this.autofocus = condition === '' || condition === true;\n    }\n\n    private autofocus: boolean;\n\n    constructor(private el: ElementRef) { }\n\n    ngOnInit() {\n        if (!Utils.isMobileBrowser && this.autofocus) {\n            this.el.nativeElement.focus();\n        }\n    }\n}\n","import { TwoFactorProviderType } from '../enums/twoFactorProviderType';\n\nimport { AuthResult } from '../models/domain/authResult';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nexport abstract class AuthService {\n    email: string;\n    masterPasswordHash: string;\n    twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string; }>;\n    selectedTwoFactorProviderType: TwoFactorProviderType;\n\n    logIn: (email: string, masterPassword: string) => Promise<AuthResult>;\n    logInTwoFactor: (twoFactorProvider: TwoFactorProviderType, twoFactorToken: string,\n        remember?: boolean) => Promise<AuthResult>;\n    logInComplete: (email: string, masterPassword: string, twoFactorProvider: TwoFactorProviderType,\n        twoFactorToken: string, remember?: boolean) => Promise<AuthResult>;\n    logOut: (callback: Function) => void;\n    getSupportedTwoFactorProviders: (win: Window) => any[];\n    getDefaultTwoFactorProvider: (u2fSupported: boolean) => TwoFactorProviderType;\n    makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\n}\n","import {\n    Component,\n    Input,\n    OnChanges,\n} from '@angular/core';\n\nimport { CipherType } from '../../enums/cipherType';\n\nimport { CipherView } from '../../models/view/cipherView';\n\nimport { EnvironmentService } from '../../abstractions/environment.service';\nimport { StateService } from '../../abstractions/state.service';\n\nimport { ConstantsService } from '../../services/constants.service';\n\nimport { Utils } from '../../misc/utils';\n\nconst IconMap: any = {\n    'fa-globe': String.fromCharCode(0xf0ac),\n    'fa-sticky-note-o': String.fromCharCode(0xf24a),\n    'fa-id-card-o': String.fromCharCode(0xf2c3),\n    'fa-credit-card': String.fromCharCode(0xf09d),\n    'fa-android': String.fromCharCode(0xf17b),\n    'fa-apple': String.fromCharCode(0xf179),\n};\n\n@Component({\n    selector: 'app-vault-icon',\n    templateUrl: 'icon.component.html',\n})\nexport class IconComponent implements OnChanges {\n    @Input() cipher: CipherView;\n    icon: string;\n    image: string;\n    fallbackImage: string;\n    imageEnabled: boolean;\n\n    private iconsUrl: string;\n\n    constructor(environmentService: EnvironmentService, protected stateService: StateService) {\n        this.iconsUrl = environmentService.iconsUrl;\n        if (!this.iconsUrl) {\n            if (environmentService.baseUrl) {\n                this.iconsUrl = environmentService.baseUrl + '/icons';\n            } else {\n                this.iconsUrl = 'https://icons.bitwarden.net';\n            }\n        }\n    }\n\n    async ngOnChanges() {\n        this.imageEnabled = !(await this.stateService.get<boolean>(ConstantsService.disableFaviconKey));\n        this.load();\n    }\n\n    get iconCode(): string {\n        return IconMap[this.icon];\n    }\n\n    protected load() {\n        switch (this.cipher.type) {\n            case CipherType.Login:\n                this.icon = 'fa-globe';\n                this.setLoginIcon();\n                break;\n            case CipherType.SecureNote:\n                this.icon = 'fa-sticky-note-o';\n                break;\n            case CipherType.Card:\n                this.icon = 'fa-credit-card';\n                break;\n            case CipherType.Identity:\n                this.icon = 'fa-id-card-o';\n                break;\n            default:\n                break;\n        }\n    }\n\n    private setLoginIcon() {\n        if (this.cipher.login.uri) {\n            let hostnameUri = this.cipher.login.uri;\n            let isWebsite = false;\n\n            if (hostnameUri.indexOf('androidapp://') === 0) {\n                this.icon = 'fa-android';\n                this.image = null;\n            } else if (hostnameUri.indexOf('iosapp://') === 0) {\n                this.icon = 'fa-apple';\n                this.image = null;\n            } else if (this.imageEnabled && hostnameUri.indexOf('://') === -1 && hostnameUri.indexOf('.') > -1) {\n                hostnameUri = 'http://' + hostnameUri;\n                isWebsite = true;\n            } else if (this.imageEnabled) {\n                isWebsite = hostnameUri.indexOf('http') === 0 && hostnameUri.indexOf('.') > -1;\n            }\n\n            if (this.imageEnabled && isWebsite) {\n                try {\n                    this.image = this.iconsUrl + '/' + Utils.getHostname(hostnameUri) + '/icon.png';\n                    this.fallbackImage = 'images/fa-globe.png';\n                } catch (e) { }\n            }\n        } else {\n            this.image = null;\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { BroadcasterService as BaseBroadcasterService } from '../../services/broadcaster.service';\n\n@Injectable()\nexport class BroadcasterService extends BaseBroadcasterService {\n}\n","import * as jq from 'jquery';\n\nimport {\n    Component,\n    ComponentFactoryResolver,\n    Type,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ModalComponent as BaseModalComponent } from 'jslib/angular/components/modal.component';\nimport { Utils } from 'jslib/misc/utils';\n\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\n\n@Component({\n    selector: 'app-modal',\n    template: `<ng-template #container></ng-template>`,\n})\nexport class ModalComponent extends BaseModalComponent {\n    el: any = null;\n\n    constructor(componentFactoryResolver: ComponentFactoryResolver, messagingService: MessagingService) {\n        super(componentFactoryResolver, messagingService);\n    }\n\n    ngOnDestroy() { /* Nothing */ }\n\n    show<T>(type: Type<T>, parentContainer: ViewContainerRef, fade: boolean = true,\n        setComponentParameters: (component: T) => void = null): T {\n        this.parentContainer = parentContainer;\n        this.fade = fade;\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory<T>(type);\n        const componentRef = this.container.createComponent<T>(factory);\n        if (setComponentParameters != null) {\n            setComponentParameters(componentRef.instance);\n        }\n\n        const modals = Array.from(document.querySelectorAll('.modal'));\n        if (modals.length > 0) {\n            this.el = jq(modals[0]);\n            this.el.modal('show');\n\n            this.el.on('show.bs.modal', () => {\n                this.onShow.emit();\n                this.messagingService.send('modalShow');\n            });\n            this.el.on('shown.bs.modal', () => {\n                this.onShown.emit();\n                this.messagingService.send('modalShown');\n                if (!Utils.isMobileBrowser) {\n                    this.el.find('*[appAutoFocus]').focus();\n                }\n            });\n            this.el.on('hide.bs.modal', () => {\n                this.onClose.emit();\n                this.messagingService.send('modalClose');\n            });\n            this.el.on('hidden.bs.modal', () => {\n                this.onClosed.emit();\n                this.messagingService.send('modalClosed');\n                if (this.parentContainer != null) {\n                    this.parentContainer.clear();\n                }\n            });\n        }\n\n        return componentRef.instance;\n    }\n\n    close() {\n        if (this.el != null) {\n            this.el.modal('hide');\n        }\n    }\n}\n","export enum TwoFactorProviderType {\n    Authenticator = 0,\n    Email = 1,\n    Duo = 2,\n    Yubikey = 3,\n    U2f = 4,\n    Remember = 5,\n    OrganizationDuo = 6,\n}\n","import {\n    Directive,\n    HostListener,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appStopProp]',\n})\nexport class StopPropDirective {\n    @HostListener('click', ['$event']) onClick($event: MouseEvent) {\n        $event.stopPropagation();\n    }\n}\n","<div class=\"icon\" aria-hidden=\"true\">\n    <img [src]=\"image\" appFallbackSrc=\"{{fallbackImage}}\" *ngIf=\"imageEnabled && image\" alt=\"\" />\n    <i class=\"fa fa-fw fa-lg {{icon}}\" *ngIf=\"!imageEnabled || !image\"></i>\n</div>\n","export enum SecureNoteType {\n    Generic = 0,\n}\n","import { DecryptParameters } from '../models/domain/decryptParameters';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nexport abstract class CryptoFunctionService {\n    pbkdf2: (password: string | ArrayBuffer, salt: string | ArrayBuffer, algorithm: 'sha256' | 'sha512',\n        iterations: number) => Promise<ArrayBuffer>;\n    hash: (value: string | ArrayBuffer, algorithm: 'sha1' | 'sha256' | 'sha512' | 'md5') => Promise<ArrayBuffer>;\n    hmac: (value: ArrayBuffer, key: ArrayBuffer, algorithm: 'sha1' | 'sha256' | 'sha512') => Promise<ArrayBuffer>;\n    compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\n    hmacFast: (value: ArrayBuffer | string, key: ArrayBuffer | string, algorithm: 'sha1' | 'sha256' | 'sha512') =>\n        Promise<ArrayBuffer | string>;\n    compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\n    aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n    aesDecryptFastParameters: (data: string, iv: string, mac: string, key: SymmetricCryptoKey) =>\n        DecryptParameters<ArrayBuffer | string>;\n    aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\n    aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n    rsaEncrypt: (data: ArrayBuffer, publicKey: ArrayBuffer, algorithm: 'sha1' | 'sha256') => Promise<ArrayBuffer>;\n    rsaDecrypt: (data: ArrayBuffer, privateKey: ArrayBuffer, algorithm: 'sha1' | 'sha256') => Promise<ArrayBuffer>;\n    rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\n    rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\n    randomBytes: (length: number) => Promise<ArrayBuffer>;\n}\n","import { BreachAccountResponse } from '../models/response/breachAccountResponse';\n\nexport abstract class AuditService {\n    passwordLeaked: (password: string) => Promise<number>;\n    breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { PaymentMethodType } from 'jslib/enums/paymentMethodType';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { WebConstants } from '../../services/webConstants';\n\nconst StripeElementStyle = {\n    base: {\n        color: '#333333',\n        fontFamily: '\"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif, ' +\n            '\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n        fontSize: '14px',\n        fontSmoothing: 'antialiased',\n    },\n    invalid: {\n        color: '#333333',\n    },\n};\n\nconst StripeElementClasses = {\n    focus: 'is-focused',\n    empty: 'is-empty',\n    invalid: 'is-invalid',\n};\n\n@Component({\n    selector: 'app-payment',\n    templateUrl: 'payment.component.html',\n})\nexport class PaymentComponent implements OnInit {\n    @Input() showMethods = true;\n    @Input() showOptions = true;\n    @Input() method = PaymentMethodType.Card;\n    @Input() hideBank = false;\n    @Input() hidePaypal = false;\n    @Input() hideCredit = false;\n\n    bank: any = {\n        routing_number: null,\n        account_number: null,\n        account_holder_name: null,\n        account_holder_type: '',\n        currency: 'USD',\n        country: 'US',\n    };\n\n    paymentMethodType = PaymentMethodType;\n\n    private btScript: HTMLScriptElement;\n    private btInstance: any = null;\n    private stripeScript: HTMLScriptElement;\n    private stripe: any = null;\n    private stripeElements: any = null;\n    private stripeCardNumberElement: any = null;\n    private stripeCardExpiryElement: any = null;\n    private stripeCardCvcElement: any = null;\n\n    constructor(private platformUtilsService: PlatformUtilsService, private apiService: ApiService) {\n        this.stripeScript = window.document.createElement('script');\n        this.stripeScript.src = 'https://js.stripe.com/v3/';\n        this.stripeScript.async = true;\n        this.stripeScript.onload = () => {\n            this.stripe = (window as any).Stripe(this.platformUtilsService.isDev() ?\n                WebConstants.stripeTestKey : WebConstants.stripeLiveKey);\n            this.stripeElements = this.stripe.elements();\n            this.setStripeElement();\n        };\n        this.btScript = window.document.createElement('script');\n        this.btScript.src = 'scripts/dropin.js';\n        this.btScript.async = true;\n    }\n\n    ngOnInit() {\n        if (!this.showOptions) {\n            this.hidePaypal = this.method !== PaymentMethodType.PayPal;\n            this.hideBank = this.method !== PaymentMethodType.BankAccount;\n            this.hideCredit = this.method !== PaymentMethodType.Credit;\n        }\n        window.document.head.appendChild(this.stripeScript);\n        if (!this.hidePaypal) {\n            window.document.head.appendChild(this.btScript);\n        }\n    }\n\n    ngOnDestroy() {\n        window.document.head.removeChild(this.stripeScript);\n        window.setTimeout(() => {\n            Array.from(window.document.querySelectorAll('iframe')).forEach((el) => {\n                if (el.src != null && el.src.indexOf('stripe') > -1) {\n                    try {\n                        window.document.body.removeChild(el);\n                    } catch { }\n                }\n            });\n        }, 500);\n        if (!this.hidePaypal) {\n            window.document.head.removeChild(this.btScript);\n            window.setTimeout(() => {\n                Array.from(window.document.head.querySelectorAll('script')).forEach((el) => {\n                    if (el.src != null && el.src.indexOf('paypal') > -1) {\n                        try {\n                            window.document.head.removeChild(el);\n                        } catch { }\n                    }\n                });\n                const btStylesheet = window.document.head.querySelector('#braintree-dropin-stylesheet');\n                if (btStylesheet != null) {\n                    try {\n                        window.document.head.removeChild(btStylesheet);\n                    } catch { }\n                }\n            }, 500);\n        }\n    }\n\n    changeMethod() {\n        this.btInstance = null;\n\n        if (this.method === PaymentMethodType.PayPal) {\n            window.setTimeout(() => {\n                (window as any).braintree.dropin.create({\n                    authorization: this.platformUtilsService.isDev() ?\n                        WebConstants.btSandboxKey : WebConstants.btProductionKey,\n                    container: '#bt-dropin-container',\n                    paymentOptionPriority: ['paypal'],\n                    paypal: {\n                        flow: 'vault',\n                        buttonStyle: {\n                            label: 'pay',\n                            size: 'medium',\n                            shape: 'pill',\n                            color: 'blue',\n                        },\n                    },\n                }, (createErr: any, instance: any) => {\n                    if (createErr != null) {\n                        // tslint:disable-next-line\n                        console.error(createErr);\n                        return;\n                    }\n                    this.btInstance = instance;\n                });\n            }, 250);\n        } else {\n            this.setStripeElement();\n        }\n    }\n\n    createPaymentToken(): Promise<[string, PaymentMethodType]> {\n        return new Promise((resolve, reject) => {\n            if (this.method === PaymentMethodType.Credit) {\n                resolve([null, this.method]);\n            } else if (this.method === PaymentMethodType.PayPal) {\n                this.btInstance.requestPaymentMethod().then((payload: any) => {\n                    resolve([payload.nonce, this.method]);\n                }).catch((err: any) => {\n                    reject(err.message);\n                });\n            } else if (this.method === PaymentMethodType.Card || this.method === PaymentMethodType.BankAccount) {\n                if (this.method === PaymentMethodType.Card) {\n                    this.apiService.postSetupPayment().then((clientSecret) =>\n                        this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement))\n                        .then((result: any) => {\n                            if (result.error) {\n                                reject(result.error.message);\n                            } else if (result.setupIntent && result.setupIntent.status === 'succeeded') {\n                                resolve([result.setupIntent.payment_method, this.method]);\n                            } else {\n                                reject();\n                            }\n                        });\n                } else {\n                    this.stripe.createToken('bank_account', this.bank).then((result: any) => {\n                        if (result.error) {\n                            reject(result.error.message);\n                        } else if (result.token && result.token.id != null) {\n                            resolve([result.token.id, this.method]);\n                        } else {\n                            reject();\n                        }\n                    });\n                }\n            }\n        });\n    }\n\n    handleStripeCardPayment(clientSecret: string, successCallback: () => Promise<any>): Promise<any> {\n        return new Promise((resolve, reject) => {\n            if (this.showMethods && this.stripeCardNumberElement == null) {\n                reject();\n                return;\n            }\n            const handleCardPayment = () => this.showMethods ?\n                this.stripe.handleCardPayment(clientSecret, this.stripeCardNumberElement) :\n                this.stripe.handleCardPayment(clientSecret);\n            return handleCardPayment().then(async (result: any) => {\n                if (result.error) {\n                    reject(result.error.message);\n                } else if (result.paymentIntent && result.paymentIntent.status === 'succeeded') {\n                    if (successCallback != null) {\n                        await successCallback();\n                    }\n                    resolve();\n                } else {\n                    reject();\n                }\n            });\n        });\n    }\n\n    private setStripeElement() {\n        window.setTimeout(() => {\n            if (this.showMethods && this.method === PaymentMethodType.Card) {\n                if (this.stripeCardNumberElement == null) {\n                    this.stripeCardNumberElement = this.stripeElements.create('cardNumber', {\n                        style: StripeElementStyle,\n                        classes: StripeElementClasses,\n                        placeholder: '',\n                    });\n                }\n                if (this.stripeCardExpiryElement == null) {\n                    this.stripeCardExpiryElement = this.stripeElements.create('cardExpiry', {\n                        style: StripeElementStyle,\n                        classes: StripeElementClasses,\n                    });\n                }\n                if (this.stripeCardCvcElement == null) {\n                    this.stripeCardCvcElement = this.stripeElements.create('cardCvc', {\n                        style: StripeElementStyle,\n                        classes: StripeElementClasses,\n                        placeholder: '',\n                    });\n                }\n                this.stripeCardNumberElement.mount('#stripe-card-number-element');\n                this.stripeCardExpiryElement.mount('#stripe-card-expiry-element');\n                this.stripeCardCvcElement.mount('#stripe-card-cvc-element');\n            }\n        }, 50);\n    }\n}\n","import { CipherString } from './cipherString';\n\nimport { View } from '../view/view';\n\nexport default class Domain {\n    protected buildDomainModel<D extends Domain>(domain: D, dataObj: any, map: any,\n        alreadyEncrypted: boolean, notEncList: any[] = []) {\n        for (const prop in map) {\n            if (!map.hasOwnProperty(prop)) {\n                continue;\n            }\n\n            const objProp = dataObj[(map[prop] || prop)];\n            if (alreadyEncrypted === true || notEncList.indexOf(prop) > -1) {\n                (domain as any)[prop] = objProp ? objProp : null;\n            } else {\n                (domain as any)[prop] = objProp ? new CipherString(objProp) : null;\n            }\n        }\n    }\n    protected buildDataModel<D extends Domain>(domain: D, dataObj: any, map: any, notCipherStringList: any[] = []) {\n        for (const prop in map) {\n            if (!map.hasOwnProperty(prop)) {\n                continue;\n            }\n\n            const objProp = (domain as any)[(map[prop] || prop)];\n            if (notCipherStringList.indexOf(prop) > -1) {\n                (dataObj as any)[prop] = objProp != null ? objProp : null;\n            } else {\n                (dataObj as any)[prop] = objProp != null ? (objProp as CipherString).encryptedString : null;\n            }\n        }\n    }\n\n    protected async decryptObj<T extends View>(viewModel: T, map: any, orgId: string): Promise<T> {\n        const promises = [];\n        const self: any = this;\n\n        for (const prop in map) {\n            if (!map.hasOwnProperty(prop)) {\n                continue;\n            }\n\n            // tslint:disable-next-line\n            (function (theProp) {\n                const p = Promise.resolve().then(() => {\n                    const mapProp = map[theProp] || theProp;\n                    if (self[mapProp]) {\n                        return self[mapProp].decrypt(orgId);\n                    }\n                    return null;\n                }).then((val: any) => {\n                    (viewModel as any)[theProp] = val;\n                });\n                promises.push(p);\n            })(prop);\n        }\n\n        await Promise.all(promises);\n        return viewModel;\n    }\n}\n","import { CipherString } from '../models/domain/cipherString';\n\nexport abstract class LockService {\n    pinProtectedKey: CipherString;\n    isLocked: () => Promise<boolean>;\n    checkLock: () => Promise<void>;\n    lock: (allowSoftLock?: boolean) => Promise<void>;\n    setLockOption: (lockOption: number) => Promise<void>;\n    isPinLockSet: () => Promise<[boolean, boolean]>;\n    clear: () => Promise<any>;\n}\n","import { CipherView } from '../models/view/cipherView';\n\nexport abstract class SearchService {\n    clearIndex: () => void;\n    isSearchable: (query: string) => boolean;\n    indexCiphers: () => Promise<void>;\n    searchCiphers: (query: string, filter?: (cipher: CipherView) => boolean,\n        ciphers?: CipherView[]) => Promise<CipherView[]>;\n    searchCiphersBasic: (ciphers: CipherView[], query: string) => CipherView[];\n}\n","import { CipherType } from '../../enums/cipherType';\n\nimport { Cipher } from '../domain/cipher';\n\nimport { AttachmentView } from './attachmentView';\nimport { CardView } from './cardView';\nimport { FieldView } from './fieldView';\nimport { IdentityView } from './identityView';\nimport { LoginView } from './loginView';\nimport { PasswordHistoryView } from './passwordHistoryView';\nimport { SecureNoteView } from './secureNoteView';\nimport { View } from './view';\n\nexport class CipherView implements View {\n    id: string = null;\n    organizationId: string = null;\n    folderId: string = null;\n    name: string = null;\n    notes: string = null;\n    type: CipherType = null;\n    favorite = false;\n    organizationUseTotp = false;\n    edit = false;\n    localData: any;\n    login = new LoginView();\n    identity = new IdentityView();\n    card = new CardView();\n    secureNote = new SecureNoteView();\n    attachments: AttachmentView[] = null;\n    fields: FieldView[] = null;\n    passwordHistory: PasswordHistoryView[] = null;\n    collectionIds: string[] = null;\n    revisionDate: Date = null;\n\n    constructor(c?: Cipher) {\n        if (!c) {\n            return;\n        }\n\n        this.id = c.id;\n        this.organizationId = c.organizationId;\n        this.folderId = c.folderId;\n        this.favorite = c.favorite;\n        this.organizationUseTotp = c.organizationUseTotp;\n        this.edit = c.edit;\n        this.type = c.type;\n        this.localData = c.localData;\n        this.collectionIds = c.collectionIds;\n        this.revisionDate = c.revisionDate;\n    }\n\n    get subTitle(): string {\n        switch (this.type) {\n            case CipherType.Login:\n                return this.login.subTitle;\n            case CipherType.SecureNote:\n                return this.secureNote.subTitle;\n            case CipherType.Card:\n                return this.card.subTitle;\n            case CipherType.Identity:\n                return this.identity.subTitle;\n            default:\n                break;\n        }\n\n        return null;\n    }\n\n    get hasPasswordHistory(): boolean {\n        return this.passwordHistory && this.passwordHistory.length > 0;\n    }\n\n    get hasAttachments(): boolean {\n        return this.attachments && this.attachments.length > 0;\n    }\n\n    get hasOldAttachments(): boolean {\n        if (this.hasAttachments) {\n            for (let i = 0; i < this.attachments.length; i++) {\n                if (this.attachments[i].key == null) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    get hasFields(): boolean {\n        return this.fields && this.fields.length > 0;\n    }\n\n    get passwordRevisionDisplayDate(): Date {\n        if (this.type !== CipherType.Login || this.login == null) {\n            return null;\n        } else if (this.login.password == null || this.login.password === '') {\n            return null;\n        }\n        return this.login.passwordRevisionDate;\n    }\n}\n","import { View } from './view';\n\nimport { Identity } from '../domain/identity';\n\nimport { Utils } from '../../misc/utils';\n\nexport class IdentityView implements View {\n    title: string = null;\n    middleName: string = null;\n    address1: string = null;\n    address2: string = null;\n    address3: string = null;\n    city: string = null;\n    state: string = null;\n    postalCode: string = null;\n    country: string = null;\n    company: string = null;\n    email: string = null;\n    phone: string = null;\n    ssn: string = null;\n    username: string = null;\n    passportNumber: string = null;\n    licenseNumber: string = null;\n\n    // tslint:disable\n    private _firstName: string = null;\n    private _lastName: string = null;\n    private _subTitle: string = null;\n    // tslint:enable\n\n    constructor(i?: Identity) {\n        // ctor\n    }\n\n    get firstName(): string {\n        return this._firstName;\n    }\n    set firstName(value: string) {\n        this._firstName = value;\n        this._subTitle = null;\n    }\n\n    get lastName(): string {\n        return this._lastName;\n    }\n    set lastName(value: string) {\n        this._lastName = value;\n        this._subTitle = null;\n    }\n\n    get subTitle(): string {\n        if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n            this._subTitle = '';\n            if (this.firstName != null) {\n                this._subTitle = this.firstName;\n            }\n            if (this.lastName != null) {\n                if (this._subTitle !== '') {\n                    this._subTitle += ' ';\n                }\n                this._subTitle += this.lastName;\n            }\n        }\n\n        return this._subTitle;\n    }\n\n    get fullName(): string {\n        if (this.title != null || this.firstName != null || this.middleName != null || this.lastName != null) {\n            let name = '';\n            if (this.title != null) {\n                name += (this.title + ' ');\n            }\n            if (this.firstName != null) {\n                name += (this.firstName + ' ');\n            }\n            if (this.middleName != null) {\n                name += (this.middleName + ' ');\n            }\n            if (this.lastName != null) {\n                name += this.lastName;\n            }\n            return name.trim();\n        }\n\n        return null;\n    }\n\n    get fullAddress(): string {\n        let address = this.address1;\n        if (!Utils.isNullOrWhitespace(this.address2)) {\n            if (!Utils.isNullOrWhitespace(address)) {\n                address += ', ';\n            }\n            address += this.address2;\n        }\n        if (!Utils.isNullOrWhitespace(this.address3)) {\n            if (!Utils.isNullOrWhitespace(address)) {\n                address += ', ';\n            }\n            address += this.address3;\n        }\n        return address;\n    }\n\n    get fullAddressPart2(): string {\n        if (this.city == null && this.state == null && this.postalCode == null) {\n            return null;\n        }\n        const city = this.city || '-';\n        const state = this.state || '-';\n        const postalCode = this.postalCode || '-';\n        return city + ', ' + state + ', ' + postalCode;\n    }\n}\n","import {\n    Component,\n    Input,\n    OnChanges,\n    OnInit,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { CryptoFunctionService } from 'jslib/abstractions/cryptoFunction.service';\nimport { StateService } from 'jslib/abstractions/state.service';\n\nimport { Utils } from 'jslib/misc/utils';\n\n@Component({\n    selector: 'app-avatar',\n    template: '<img [src]=\"sanitizer.bypassSecurityTrustResourceUrl(src)\" title=\"{{data}}\" ' +\n        '[ngClass]=\"{\\'rounded-circle\\': circle}\">',\n})\nexport class AvatarComponent implements OnChanges, OnInit {\n    @Input() data: string;\n    @Input() email: string;\n    @Input() size = 45;\n    @Input() charCount = 2;\n    @Input() textColor = '#ffffff';\n    @Input() fontSize = 20;\n    @Input() fontWeight = 300;\n    @Input() dynamic = false;\n    @Input() circle = false;\n\n    src: string;\n\n    constructor(public sanitizer: DomSanitizer, private cryptoFunctionService: CryptoFunctionService,\n        private stateService: StateService) { }\n\n    ngOnInit() {\n        if (!this.dynamic) {\n            this.generate();\n        }\n    }\n\n    ngOnChanges() {\n        if (this.dynamic) {\n            this.generate();\n        }\n    }\n\n    private async generate() {\n        const enableGravatars = await this.stateService.get<boolean>('enableGravatars');\n        if (enableGravatars && this.email != null) {\n            const hashBytes = await this.cryptoFunctionService.hash(this.email.toLowerCase().trim(), 'md5');\n            const hash = Utils.fromBufferToHex(hashBytes).toLowerCase();\n            this.src = 'https://www.gravatar.com/avatar/' + hash + '?s=' + this.size + '&r=pg&d=retro';\n        } else {\n            let chars: string = null;\n            const upperData = this.data.toUpperCase();\n\n            if (this.charCount > 1) {\n                chars = this.getFirstLetters(upperData, this.charCount);\n            }\n            if (chars == null) {\n                chars = upperData.substr(0, this.charCount);\n            }\n\n            const charObj = this.getCharText(chars);\n            const color = this.stringToColor(upperData);\n            const svg = this.getSvg(this.size, color);\n            svg.appendChild(charObj);\n            const html = window.document.createElement('div').appendChild(svg).outerHTML;\n            const svgHtml = window.btoa(unescape(encodeURIComponent(html)));\n            this.src = 'data:image/svg+xml;base64,' + svgHtml;\n        }\n    }\n\n    private stringToColor(str: string): string {\n        let hash = 0;\n        for (let i = 0; i < str.length; i++) {\n            // tslint:disable-next-line\n            hash = str.charCodeAt(i) + ((hash << 5) - hash);\n        }\n        let color = '#';\n        for (let i = 0; i < 3; i++) {\n            // tslint:disable-next-line\n            const value = (hash >> (i * 8)) & 0xFF;\n            color += ('00' + value.toString(16)).substr(-2);\n        }\n        return color;\n    }\n\n    private getFirstLetters(data: string, count: number): string {\n        const parts = data.split(' ');\n        if (parts.length > 1) {\n            let text = '';\n            for (let i = 0; i < count; i++) {\n                text += parts[i].substr(0, 1);\n            }\n            return text;\n        }\n        return null;\n    }\n\n    private getSvg(size: number, color: string): HTMLElement {\n        const svgTag = window.document.createElement('svg');\n        svgTag.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n        svgTag.setAttribute('pointer-events', 'none');\n        svgTag.setAttribute('width', size.toString());\n        svgTag.setAttribute('height', size.toString());\n        svgTag.style.backgroundColor = color;\n        svgTag.style.width = size + 'px';\n        svgTag.style.height = size + 'px';\n        return svgTag;\n    }\n\n    private getCharText(character: string): HTMLElement {\n        const textTag = window.document.createElement('text');\n        textTag.setAttribute('text-anchor', 'middle');\n        textTag.setAttribute('y', '50%');\n        textTag.setAttribute('x', '50%');\n        textTag.setAttribute('dy', '0.35em');\n        textTag.setAttribute('pointer-events', 'auto');\n        textTag.setAttribute('fill', this.textColor);\n        textTag.setAttribute('font-family', '\"Open Sans\",\"Helvetica Neue\",Helvetica,Arial,' +\n            'sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\"');\n        textTag.textContent = character;\n        textTag.style.fontWeight = this.fontWeight.toString();\n        textTag.style.fontSize = this.fontSize + 'px';\n        return textTag;\n    }\n}\n","import { LoginUriView } from './loginUriView';\nimport { View } from './view';\n\nimport { Login } from '../domain/login';\n\nexport class LoginView implements View {\n    username: string = null;\n    password: string = null;\n    passwordRevisionDate?: Date = null;\n    totp: string = null;\n    uris: LoginUriView[] = null;\n\n    constructor(l?: Login) {\n        if (!l) {\n            return;\n        }\n\n        this.passwordRevisionDate = l.passwordRevisionDate;\n    }\n\n    get uri(): string {\n        return this.hasUris ? this.uris[0].uri : null;\n    }\n\n    get maskedPassword(): string {\n        return this.password != null ? '••••••••' : null;\n    }\n\n    get subTitle(): string {\n        return this.username;\n    }\n\n    get canLaunch(): boolean {\n        return this.hasUris && this.uris.some((u) => u.canLaunch);\n    }\n\n    get launchUri(): string {\n        if (this.hasUris) {\n            const uri = this.uris.find((u) => u.canLaunch);\n            if (uri != null) {\n                return uri.launchUri;\n            }\n        }\n        return null;\n    }\n\n    get hasUris(): boolean {\n        return this.uris != null && this.uris.length > 0;\n    }\n}\n","import { View } from './view';\n\nimport { Folder } from '../domain/folder';\nimport { ITreeNodeObject } from '../domain/treeNode';\n\nexport class FolderView implements View, ITreeNodeObject {\n    id: string = null;\n    name: string = null;\n    revisionDate: Date = null;\n\n    constructor(f?: Folder) {\n        if (!f) {\n            return;\n        }\n\n        this.id = f.id;\n        this.revisionDate = f.revisionDate;\n    }\n}\n","import { View } from './view';\n\nimport { Collection } from '../domain/collection';\nimport { ITreeNodeObject } from '../domain/treeNode';\n\nexport class CollectionView implements View, ITreeNodeObject {\n    id: string = null;\n    organizationId: string = null;\n    name: string = null;\n    externalId: string = null;\n    readOnly: boolean = null;\n\n    constructor(c?: Collection) {\n        if (!c) {\n            return;\n        }\n\n        this.id = c.id;\n        this.organizationId = c.organizationId;\n        this.readOnly = c.readOnly;\n        this.externalId = c.externalId;\n    }\n}\n","<img [src]=\"sanitizer.bypassSecurityTrustResourceUrl(src)\" title=\"{{data}}\" [ngClass]=\"{'rounded-circle': circle}\">","export enum FieldType {\n    Text = 0,\n    Hidden = 1,\n    Boolean = 2,\n}\n","import { CipherType } from '../../enums/cipherType';\n\nimport { AttachmentData } from './attachmentData';\nimport { CardData } from './cardData';\nimport { FieldData } from './fieldData';\nimport { IdentityData } from './identityData';\nimport { LoginData } from './loginData';\nimport { PasswordHistoryData } from './passwordHistoryData';\nimport { SecureNoteData } from './secureNoteData';\n\nimport { CipherResponse } from '../response/cipherResponse';\n\nexport class CipherData {\n    id: string;\n    organizationId: string;\n    folderId: string;\n    userId: string;\n    edit: boolean;\n    organizationUseTotp: boolean;\n    favorite: boolean;\n    revisionDate: string;\n    type: CipherType;\n    sizeName: string;\n    name: string;\n    notes: string;\n    login?: LoginData;\n    secureNote?: SecureNoteData;\n    card?: CardData;\n    identity?: IdentityData;\n    fields?: FieldData[];\n    attachments?: AttachmentData[];\n    passwordHistory?: PasswordHistoryData[];\n    collectionIds?: string[];\n\n    constructor(response?: CipherResponse, userId?: string, collectionIds?: string[]) {\n        if (response == null) {\n            return;\n        }\n\n        this.id = response.id;\n        this.organizationId = response.organizationId;\n        this.folderId = response.folderId;\n        this.userId = userId;\n        this.edit = response.edit;\n        this.organizationUseTotp = response.organizationUseTotp;\n        this.favorite = response.favorite;\n        this.revisionDate = response.revisionDate;\n        this.type = response.type;\n        this.name = response.name;\n        this.notes = response.notes;\n        this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n\n        switch (this.type) {\n            case CipherType.Login:\n                this.login = new LoginData(response.login);\n                break;\n            case CipherType.SecureNote:\n                this.secureNote = new SecureNoteData(response.secureNote);\n                break;\n            case CipherType.Card:\n                this.card = new CardData(response.card);\n                break;\n            case CipherType.Identity:\n                this.identity = new IdentityData(response.identity);\n                break;\n            default:\n                break;\n        }\n\n        if (response.fields != null) {\n            this.fields = response.fields.map((f) => new FieldData(f));\n        }\n        if (response.attachments != null) {\n            this.attachments = response.attachments.map((a) => new AttachmentData(a));\n        }\n        if (response.passwordHistory != null) {\n            this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n        }\n    }\n}\n","import { CollectionDetailsResponse } from '../response/collectionResponse';\n\nexport class CollectionData {\n    id: string;\n    organizationId: string;\n    name: string;\n    externalId: string;\n    readOnly: boolean;\n\n    constructor(response: CollectionDetailsResponse) {\n        this.id = response.id;\n        this.organizationId = response.organizationId;\n        this.name = response.name;\n        this.externalId = response.externalId;\n        this.readOnly = response.readOnly;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { PasswordVerificationRequest } from 'jslib/models/request/passwordVerificationRequest';\n\n@Component({\n    selector: 'app-two-factor-verify',\n    templateUrl: 'two-factor-verify.component.html',\n})\nexport class TwoFactorVerifyComponent {\n    @Input() type: TwoFactorProviderType;\n    @Input() organizationId: string;\n    @Output() onAuthed = new EventEmitter<any>();\n\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    private masterPasswordHash: string;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private cryptoService: CryptoService) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = this.masterPasswordHash =\n            await this.cryptoService.hashPassword(this.masterPassword, null);\n\n        try {\n            switch (this.type) {\n                case -1:\n                    this.formPromise = this.apiService.getTwoFactorRecover(request);\n                    break;\n                case TwoFactorProviderType.Duo:\n                case TwoFactorProviderType.OrganizationDuo:\n                    if (this.organizationId != null) {\n                        this.formPromise = this.apiService.getTwoFactorOrganizationDuo(this.organizationId, request);\n                    } else {\n                        this.formPromise = this.apiService.getTwoFactorDuo(request);\n                    }\n                    break;\n                case TwoFactorProviderType.Email:\n                    this.formPromise = this.apiService.getTwoFactorEmail(request);\n                    break;\n                case TwoFactorProviderType.U2f:\n                    this.formPromise = this.apiService.getTwoFactorU2f(request);\n                    break;\n                case TwoFactorProviderType.Authenticator:\n                    this.formPromise = this.apiService.getTwoFactorAuthenticator(request);\n                    break;\n                case TwoFactorProviderType.Yubikey:\n                    this.formPromise = this.apiService.getTwoFactorYubiKey(request);\n                    break;\n            }\n\n            const response = await this.formPromise;\n            this.onAuthed.emit({\n                response: response,\n                masterPasswordHash: this.masterPasswordHash,\n            });\n        } catch { }\n    }\n}\n","import { CipherType } from '../../enums/cipherType';\n\nimport { Cipher } from '../domain/cipher';\n\nimport { CardApi } from '../api/cardApi';\nimport { FieldApi } from '../api/fieldApi';\nimport { IdentityApi } from '../api/identityApi';\nimport { LoginApi } from '../api/loginApi';\nimport { LoginUriApi } from '../api/loginUriApi';\nimport { SecureNoteApi } from '../api/secureNoteApi';\n\nimport { AttachmentRequest } from './attachmentRequest';\nimport { PasswordHistoryRequest } from './passwordHistoryRequest';\n\nexport class CipherRequest {\n    type: CipherType;\n    folderId: string;\n    organizationId: string;\n    name: string;\n    notes: string;\n    favorite: boolean;\n    login: LoginApi;\n    secureNote: SecureNoteApi;\n    card: CardApi;\n    identity: IdentityApi;\n    fields: FieldApi[];\n    passwordHistory: PasswordHistoryRequest[];\n    // Deprecated, remove at some point and rename attachments2 to attachments\n    attachments: { [id: string]: string; };\n    attachments2: { [id: string]: AttachmentRequest; };\n\n    constructor(cipher: Cipher) {\n        this.type = cipher.type;\n        this.folderId = cipher.folderId;\n        this.organizationId = cipher.organizationId;\n        this.name = cipher.name ? cipher.name.encryptedString : null;\n        this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n        this.favorite = cipher.favorite;\n\n        switch (this.type) {\n            case CipherType.Login:\n                this.login = new LoginApi();\n                this.login.uris = null;\n                this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n                this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n                this.login.passwordRevisionDate = cipher.login.passwordRevisionDate != null ?\n                    cipher.login.passwordRevisionDate.toISOString() : null;\n                this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n\n                if (cipher.login.uris != null) {\n                    this.login.uris = cipher.login.uris.map((u) => {\n                        const uri = new LoginUriApi();\n                        uri.uri = u.uri != null ? u.uri.encryptedString : null;\n                        uri.match = u.match != null ? u.match : null;\n                        return uri;\n                    });\n                }\n                break;\n            case CipherType.SecureNote:\n                this.secureNote = new SecureNoteApi();\n                this.secureNote.type = cipher.secureNote.type;\n                break;\n            case CipherType.Card:\n                this.card = new CardApi();\n                this.card.cardholderName = cipher.card.cardholderName != null ?\n                    cipher.card.cardholderName.encryptedString : null;\n                this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n                this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n                this.card.expMonth = cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n                this.card.expYear = cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n                this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n                break;\n            case CipherType.Identity:\n                this.identity = new IdentityApi();\n                this.identity.title = cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n                this.identity.firstName = cipher.identity.firstName != null ?\n                    cipher.identity.firstName.encryptedString : null;\n                this.identity.middleName = cipher.identity.middleName != null ?\n                    cipher.identity.middleName.encryptedString : null;\n                this.identity.lastName = cipher.identity.lastName != null ?\n                    cipher.identity.lastName.encryptedString : null;\n                this.identity.address1 = cipher.identity.address1 != null ?\n                    cipher.identity.address1.encryptedString : null;\n                this.identity.address2 = cipher.identity.address2 != null ?\n                    cipher.identity.address2.encryptedString : null;\n                this.identity.address3 = cipher.identity.address3 != null ?\n                    cipher.identity.address3.encryptedString : null;\n                this.identity.city = cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n                this.identity.state = cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n                this.identity.postalCode = cipher.identity.postalCode != null ?\n                    cipher.identity.postalCode.encryptedString : null;\n                this.identity.country = cipher.identity.country != null ?\n                    cipher.identity.country.encryptedString : null;\n                this.identity.company = cipher.identity.company != null ?\n                    cipher.identity.company.encryptedString : null;\n                this.identity.email = cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n                this.identity.phone = cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n                this.identity.ssn = cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n                this.identity.username = cipher.identity.username != null ?\n                    cipher.identity.username.encryptedString : null;\n                this.identity.passportNumber = cipher.identity.passportNumber != null ?\n                    cipher.identity.passportNumber.encryptedString : null;\n                this.identity.licenseNumber = cipher.identity.licenseNumber != null ?\n                    cipher.identity.licenseNumber.encryptedString : null;\n                break;\n            default:\n                break;\n        }\n\n        if (cipher.fields != null) {\n            this.fields = cipher.fields.map((f) => {\n                const field = new FieldApi();\n                field.type = f.type;\n                field.name = f.name ? f.name.encryptedString : null;\n                field.value = f.value ? f.value.encryptedString : null;\n                return field;\n            });\n        }\n\n        if (cipher.passwordHistory != null) {\n            this.passwordHistory = [];\n            cipher.passwordHistory.forEach((ph) => {\n                this.passwordHistory.push({\n                    lastUsedDate: ph.lastUsedDate,\n                    password: ph.password ? ph.password.encryptedString : null,\n                });\n            });\n        }\n\n        if (cipher.attachments != null) {\n            this.attachments = {};\n            this.attachments2 = {};\n            cipher.attachments.forEach((attachment) => {\n                const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n                this.attachments[attachment.id] = fileName;\n                const attachmentRequest = new AttachmentRequest();\n                attachmentRequest.fileName = fileName;\n                if (attachment.key != null) {\n                    attachmentRequest.key = attachment.key.encryptedString;\n                }\n                this.attachments2[attachment.id] = attachmentRequest;\n            });\n        }\n    }\n}\n","import { FieldType } from '../../enums/fieldType';\n\nimport { View } from './view';\n\nimport { Field } from '../domain/field';\n\nexport class FieldView implements View {\n    name: string = null;\n    value: string = null;\n    type: FieldType = null;\n\n    constructor(f?: Field) {\n        if (!f) {\n            return;\n        }\n\n        this.type = f.type;\n    }\n\n    get maskedValue(): string {\n        return this.value != null ? '••••••••' : null;\n    }\n}\n","import { CollectionData } from '../data/collectionData';\n\nimport { CollectionView } from '../view/collectionView';\n\nimport { CipherString } from './cipherString';\nimport Domain from './domainBase';\n\nexport class Collection extends Domain {\n    id: string;\n    organizationId: string;\n    name: CipherString;\n    externalId: string;\n    readOnly: boolean;\n\n    constructor(obj?: CollectionData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            id: null,\n            organizationId: null,\n            name: null,\n            externalId: null,\n            readOnly: null,\n        }, alreadyEncrypted, ['id', 'organizationId', 'externalId', 'readOnly']);\n    }\n\n    decrypt(): Promise<CollectionView> {\n        return this.decryptObj(new CollectionView(this), {\n            name: null,\n        }, this.organizationId);\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"modal-body\">\n        <p>{{'twoStepLoginAuthDesc' | i18n}}</p>\n        <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\n        <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\n            [(ngModel)]=\"masterPassword\" required appAutoFocus appInputVerbatim>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n            <span>{{'continue' | i18n}}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\n    </div>\n</form>\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport {\n    ActivatedRoute,\n    NavigationEnd,\n    Router,\n} from '@angular/router';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\n@Injectable()\nexport class RouterService {\n    private previousUrl: string = undefined;\n    private currentUrl: string = undefined;\n\n    constructor(private router: Router, private activatedRoute: ActivatedRoute,\n        private titleService: Title, i18nService: I18nService) {\n        this.currentUrl = this.router.url;\n        router.events.subscribe((event) => {\n            if (event instanceof NavigationEnd) {\n                this.previousUrl = this.currentUrl;\n                this.currentUrl = event.url;\n\n                let title = i18nService.t('pageTitle', 'Bitwarden');\n                let titleId: string = null;\n                let rawTitle: string = null;\n                let child = this.activatedRoute.firstChild;\n                while (child != null) {\n                    if (child.firstChild != null) {\n                        child = child.firstChild;\n                    } else if (child.snapshot.data != null && child.snapshot.data.title != null) {\n                        rawTitle = child.snapshot.data.title;\n                        break;\n                    } else if (child.snapshot.data != null && child.snapshot.data.titleId != null) {\n                        titleId = child.snapshot.data.titleId;\n                        break;\n                    } else {\n                        titleId = null;\n                        rawTitle = null;\n                        break;\n                    }\n                }\n\n                if (titleId != null || rawTitle != null) {\n                    const newTitle = rawTitle != null ? rawTitle : i18nService.t(titleId);\n                    if (newTitle != null && newTitle !== '') {\n                        title = (newTitle + ' | ' + title);\n                    }\n                }\n                this.titleService.setTitle(title);\n            }\n        });\n    }\n\n    getPreviousUrl() {\n        return this.previousUrl;\n    }\n\n    setPreviousUrl(url: string) {\n        this.previousUrl = url;\n    }\n}\n","import { EncryptionType } from '../../enums/encryptionType';\n\nimport { CryptoService } from '../../abstractions/crypto.service';\n\nimport { Utils } from '../../misc/utils';\n\nexport class CipherString {\n    encryptedString?: string;\n    encryptionType?: EncryptionType;\n    decryptedValue?: string;\n    data?: string;\n    iv?: string;\n    mac?: string;\n\n    constructor(encryptedStringOrType: string | EncryptionType, data?: string, iv?: string, mac?: string) {\n        if (data != null) {\n            // data and header\n            const encType = encryptedStringOrType as EncryptionType;\n\n            if (iv != null) {\n                this.encryptedString = encType + '.' + iv + '|' + data;\n            } else {\n                this.encryptedString = encType + '.' + data;\n            }\n\n            // mac\n            if (mac != null) {\n                this.encryptedString += ('|' + mac);\n            }\n\n            this.encryptionType = encType;\n            this.data = data;\n            this.iv = iv;\n            this.mac = mac;\n\n            return;\n        }\n\n        this.encryptedString = encryptedStringOrType as string;\n        if (!this.encryptedString) {\n            return;\n        }\n\n        const headerPieces = this.encryptedString.split('.');\n        let encPieces: string[] = null;\n\n        if (headerPieces.length === 2) {\n            try {\n                this.encryptionType = parseInt(headerPieces[0], null);\n                encPieces = headerPieces[1].split('|');\n            } catch (e) {\n                return;\n            }\n        } else {\n            encPieces = this.encryptedString.split('|');\n            this.encryptionType = encPieces.length === 3 ? EncryptionType.AesCbc128_HmacSha256_B64 :\n                EncryptionType.AesCbc256_B64;\n        }\n\n        switch (this.encryptionType) {\n            case EncryptionType.AesCbc128_HmacSha256_B64:\n            case EncryptionType.AesCbc256_HmacSha256_B64:\n                if (encPieces.length !== 3) {\n                    return;\n                }\n\n                this.iv = encPieces[0];\n                this.data = encPieces[1];\n                this.mac = encPieces[2];\n                break;\n            case EncryptionType.AesCbc256_B64:\n                if (encPieces.length !== 2) {\n                    return;\n                }\n\n                this.iv = encPieces[0];\n                this.data = encPieces[1];\n                break;\n            case EncryptionType.Rsa2048_OaepSha256_B64:\n            case EncryptionType.Rsa2048_OaepSha1_B64:\n                if (encPieces.length !== 1) {\n                    return;\n                }\n\n                this.data = encPieces[0];\n                break;\n            default:\n                return;\n        }\n    }\n\n    async decrypt(orgId: string): Promise<string> {\n        if (this.decryptedValue != null) {\n            return this.decryptedValue;\n        }\n\n        let cryptoService: CryptoService;\n        const containerService = (Utils.global as any).bitwardenContainerService;\n        if (containerService) {\n            cryptoService = containerService.getCryptoService();\n        } else {\n            throw new Error('global bitwardenContainerService not initialized.');\n        }\n\n        try {\n            const orgKey = await cryptoService.getOrgKey(orgId);\n            this.decryptedValue = await cryptoService.decryptToUtf8(this, orgKey);\n        } catch (e) {\n            this.decryptedValue = '[error: cannot decrypt]';\n        }\n        return this.decryptedValue;\n    }\n}\n","export enum EventType {\n    User_LoggedIn = 1000,\n    User_ChangedPassword = 1001,\n    User_Updated2fa = 1002,\n    User_Disabled2fa = 1003,\n    User_Recovered2fa = 1004,\n    User_FailedLogIn = 1005,\n    User_FailedLogIn2fa = 1006,\n    User_ClientExportedVault = 1007,\n\n    Cipher_Created = 1100,\n    Cipher_Updated = 1101,\n    Cipher_Deleted = 1102,\n    Cipher_AttachmentCreated = 1103,\n    Cipher_AttachmentDeleted = 1104,\n    Cipher_Shared = 1105,\n    Cipher_UpdatedCollections = 1106,\n    Cipher_ClientViewed = 1107,\n    Cipher_ClientToggledPasswordVisible = 1108,\n    Cipher_ClientToggledHiddenFieldVisible = 1109,\n    Cipher_ClientToggledCardCodeVisible = 1110,\n    Cipher_ClientCopiedPassword = 1111,\n    Cipher_ClientCopiedHiddenField = 1112,\n    Cipher_ClientCopiedCardCode = 1113,\n    Cipher_ClientAutofilled = 1114,\n\n    Collection_Created = 1300,\n    Collection_Updated = 1301,\n    Collection_Deleted = 1302,\n\n    Group_Created = 1400,\n    Group_Updated = 1401,\n    Group_Deleted = 1402,\n\n    OrganizationUser_Invited = 1500,\n    OrganizationUser_Confirmed = 1501,\n    OrganizationUser_Updated = 1502,\n    OrganizationUser_Removed = 1503,\n    OrganizationUser_UpdatedGroups = 1504,\n\n    Organization_Updated = 1600,\n    Organization_PurgedVault = 1601,\n    // Organization_ClientExportedVault = 1602,\n}\n","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib/abstractions/sync.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { Organization } from 'jslib/models/domain/organization';\n\nimport { Utils } from 'jslib/misc/utils';\n\n@Component({\n    selector: 'app-organizations',\n    templateUrl: 'organizations.component.html',\n})\nexport class OrganizationsComponent implements OnInit {\n    @Input() vault = false;\n\n    organizations: Organization[];\n    loaded: boolean = false;\n    actionPromise: Promise<any>;\n\n    constructor(private userService: UserService, private platformUtilsService: PlatformUtilsService,\n        private i18nService: I18nService, private apiService: ApiService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private syncService: SyncService) { }\n\n    async ngOnInit() {\n        if (!this.vault) {\n            await this.load();\n        }\n    }\n\n    async load() {\n        const orgs = await this.userService.getAllOrganizations();\n        orgs.sort(Utils.getSortFunction(this.i18nService, 'name'));\n        this.organizations = orgs;\n        this.loaded = true;\n    }\n\n    async leave(org: Organization) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('leaveOrganizationConfirmation'), org.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.apiService.postLeaveOrganization(org.id).then(() => {\n                return this.syncService.fullSync(true);\n            });\n            await this.actionPromise;\n            this.analytics.eventTrack.next({ action: 'Left Organization' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('leftOrganization'));\n            await this.load();\n        } catch { }\n    }\n}\n","export abstract class TotpService {\n    getCode: (key: string) => Promise<string>;\n    getTimeInterval: (key: string) => number;\n    isAutoCopyEnabled: () => Promise<boolean>;\n}\n","export enum OrganizationUserStatusType {\n    Invited = 0,\n    Accepted = 1,\n    Confirmed = 2,\n}\n","import { UriMatchType } from '../../enums/uriMatchType';\n\nimport { View } from './view';\n\nimport { LoginUri } from '../domain/loginUri';\n\nimport { Utils } from '../../misc/utils';\n\nconst CanLaunchWhitelist = [\n    'https://',\n    'http://',\n    'ssh://',\n    'ftp://',\n    'sftp://',\n    'irc://',\n    'vnc://',\n    'chrome://',\n    'iosapp://',\n    'androidapp://',\n];\n\nexport class LoginUriView implements View {\n    match: UriMatchType = null;\n\n    // tslint:disable\n    private _uri: string = null;\n    private _domain: string = null;\n    private _hostname: string = null;\n    private _canLaunch: boolean = null;\n    // tslint:enable\n\n    constructor(u?: LoginUri) {\n        if (!u) {\n            return;\n        }\n\n        this.match = u.match;\n    }\n\n    get uri(): string {\n        return this._uri;\n    }\n    set uri(value: string) {\n        this._uri = value;\n        this._domain = null;\n        this._canLaunch = null;\n    }\n\n    get domain(): string {\n        if (this._domain == null && this.uri != null) {\n            this._domain = Utils.getDomain(this.uri);\n            if (this._domain === '') {\n                this._domain = null;\n            }\n        }\n\n        return this._domain;\n    }\n\n    get hostname(): string {\n        if (this._hostname == null && this.uri != null) {\n            this._hostname = Utils.getHostname(this.uri);\n            if (this._hostname === '') {\n                this._hostname = null;\n            }\n        }\n\n        return this._hostname;\n    }\n\n    get hostnameOrUri(): string {\n        return this.hostname != null ? this.hostname : this.uri;\n    }\n\n    get isWebsite(): boolean {\n        return this.uri != null && (this.uri.indexOf('http://') === 0 || this.uri.indexOf('https://') === 0 ||\n            (this.uri.indexOf('://') < 0 && Utils.tldEndingRegex.test(this.uri)));\n    }\n\n    get canLaunch(): boolean {\n        if (this._canLaunch != null) {\n            return this._canLaunch;\n        }\n        if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n            const uri = this.launchUri;\n            for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n                if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n                    this._canLaunch = true;\n                    return this._canLaunch;\n                }\n            }\n        }\n        this._canLaunch = false;\n        return this._canLaunch;\n    }\n\n    get launchUri(): string {\n        return this.uri.indexOf('://') < 0 && Utils.tldEndingRegex.test(this.uri) ? ('http://' + this.uri) : this.uri;\n    }\n}\n","import {\n    EventEmitter,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\nimport { TwoFactorProviderRequest } from 'jslib/models/request/twoFactorProviderRequest';\n\nexport abstract class TwoFactorBaseComponent {\n    @Output() onUpdated = new EventEmitter<boolean>();\n\n    type: TwoFactorProviderType;\n    organizationId: string;\n    twoFactorProviderType = TwoFactorProviderType;\n    enabled = false;\n    authed = false;\n\n    protected masterPasswordHash: string;\n\n    constructor(protected apiService: ApiService, protected i18nService: I18nService,\n        protected analytics: Angulartics2, protected toasterService: ToasterService,\n        protected platformUtilsService: PlatformUtilsService) { }\n\n    protected auth(authResponse: any) {\n        this.masterPasswordHash = authResponse.masterPasswordHash;\n        this.authed = true;\n    }\n\n    protected async enable(enableFunction: () => Promise<void>) {\n        try {\n            await enableFunction();\n            this.analytics.eventTrack.next({\n                action: 'Enabled Two-step ' + TwoFactorProviderType[this.type].toString(),\n            });\n            this.onUpdated.emit(true);\n        } catch { }\n    }\n\n    protected async disable(promise: Promise<any>) {\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('twoStepDisableDesc'),\n            this.i18nService.t('disable'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            const request = new TwoFactorProviderRequest();\n            request.masterPasswordHash = this.masterPasswordHash;\n            request.type = this.type;\n            if (this.organizationId != null) {\n                promise = this.apiService.putTwoFactorOrganizationDisable(this.organizationId, request);\n            } else {\n                promise = this.apiService.putTwoFactorDisable(request);\n            }\n            await promise;\n            this.enabled = false;\n            this.analytics.eventTrack.next({\n                action: 'Disabled Two-step ' + TwoFactorProviderType[this.type].toString(),\n            });\n            this.toasterService.popAsync('success', null, this.i18nService.t('twoStepDisabled'));\n            this.onUpdated.emit(false);\n        } catch { }\n    }\n}\n","<div class=\"mb-4 text-lg\" *ngIf=\"showOptions && showMethods\">\n    <div class=\"form-check form-check-inline mr-4\">\n        <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"method-card\" [value]=\"paymentMethodType.Card\"\n            [(ngModel)]=\"method\" (change)=\"changeMethod()\">\n        <label class=\"form-check-label\" for=\"method-card\">\n            <i class=\"fa fa-fw fa-credit-card\"></i> {{'creditCard' | i18n}}</label>\n    </div>\n    <div class=\"form-check form-check-inline mr-4\" *ngIf=\"!hideBank\">\n        <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"method-bank\"\n            [value]=\"paymentMethodType.BankAccount\" [(ngModel)]=\"method\" (change)=\"changeMethod()\">\n        <label class=\"form-check-label\" for=\"method-bank\">\n            <i class=\"fa fa-fw fa-university\"></i> {{'bankAccount' | i18n}}</label>\n    </div>\n    <div class=\"form-check form-check-inline\" *ngIf=\"!hidePaypal\">\n        <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"method-paypal\" [value]=\"paymentMethodType.PayPal\"\n            [(ngModel)]=\"method\" (change)=\"changeMethod()\">\n        <label class=\"form-check-label\" for=\"method-paypal\">\n            <i class=\"fa fa-fw fa-paypal\"></i> PayPal</label>\n    </div>\n    <div class=\"form-check form-check-inline\" *ngIf=\"!hideCredit\">\n        <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"method-credit\" [value]=\"paymentMethodType.Credit\"\n            [(ngModel)]=\"method\" (change)=\"changeMethod()\">\n        <label class=\"form-check-label\" for=\"method-credit\">\n            <i class=\"fa fa-fw fa-dollar\"></i> {{'accountCredit' | i18n}}</label>\n    </div>\n</div>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Card\">\n    <div class=\"row\">\n        <div class=\"form-group col-4\">\n            <label for=\"stripe-card-number-element\">{{'number' | i18n}}</label>\n            <div id=\"stripe-card-number-element\" class=\"form-control stripe-form-control\"></div>\n        </div>\n        <div class=\"form-group col-8 d-flex align-items-end\">\n            <img src=\"images/cards.png\" alt=\"Visa, MasterCard, Discover, AmEx, JCB, Diners Club, UnionPay\"\n                width=\"323\" height=\"32\">\n        </div>\n        <div class=\"form-group col-4\">\n            <label for=\"stripe-card-expiry-element\">{{'expiration' | i18n}}</label>\n            <div id=\"stripe-card-expiry-element\" class=\"form-control stripe-form-control\"></div>\n        </div>\n        <div class=\"form-group col-4\">\n            <label for=\"stripe-card-cvc-element\" class=\"d-flex\">\n                {{'securityCode' | i18n}}\n                <a href=\"https://www.cvvnumber.com/cvv.html\" tabindex=\"-1\" target=\"_blank\" rel=\"noopener noreferrer\"\n                    class=\"ml-auto\" title=\"{{'learnMore' | i18n}}\">\n                    <i class=\"fa fa-question-circle-o\"></i>\n                </a>\n            </label>\n            <div id=\"stripe-card-cvc-element\" class=\"form-control stripe-form-control\"></div>\n        </div>\n    </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.BankAccount\">\n    <app-callout type=\"warning\" title=\"{{'verifyBankAccount' | i18n}}\">\n        {{'verifyBankAccountInitialDesc' | i18n}} {{'verifyBankAccountFailureWarning' | i18n}}\n    </app-callout>\n    <div class=\"row\">\n        <div class=\"form-group col-6\">\n            <label for=\"routing_number\">{{'routingNumber' | i18n}}</label>\n            <input id=\"routing_number\" class=\"form-control\" type=\"text\" name=\"routing_number\"\n                [(ngModel)]=\"bank.routing_number\" required appInputVerbatim>\n        </div>\n        <div class=\"form-group col-6\">\n            <label for=\"account_number\">{{'accountNumber' | i18n}}</label>\n            <input id=\"account_number\" class=\"form-control\" type=\"text\" name=\"account_number\"\n                [(ngModel)]=\"bank.account_number\" required appInputVerbatim>\n        </div>\n        <div class=\"form-group col-6\">\n            <label for=\"account_holder_name\">{{'accountHolderName' | i18n}}</label>\n            <input id=\"account_holder_name\" class=\"form-control\" type=\"text\" name=\"account_holder_name\"\n                [(ngModel)]=\"bank.account_holder_name\" required>\n        </div>\n        <div class=\"form-group col-6\">\n            <label for=\"account_holder_type\">{{'bankAccountType' | i18n}}</label>\n            <select id=\"account_holder_type\" class=\"form-control\" name=\"account_holder_type\"\n                [(ngModel)]=\"bank.account_holder_type\" required>\n                <option value=\"\">-- {{'select' | i18n}} --</option>\n                <option value=\"company\">{{'bankAccountTypeCompany' | i18n}}</option>\n                <option value=\"individual\">{{'bankAccountTypeIndividual' | i18n}}</option>\n            </select>\n        </div>\n    </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.PayPal\">\n    <div class=\"mb-3\">\n        <div id=\"bt-dropin-container\" class=\"mb-1\"></div>\n        <small class=\"text-muted\">{{'paypalClickSubmit' | i18n}}</small>\n    </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Credit\">\n    <app-callout type=\"note\">\n        {{'makeSureEnoughCredit' | i18n}}\n    </app-callout>\n</ng-container>\n","import { Importer } from '../importers/importer';\n\nexport interface ImportOption {\n    id: string;\n    name: string;\n}\nexport abstract class ImportService {\n    featuredImportOptions: ImportOption[];\n    regularImportOptions: ImportOption[];\n    getImportOptions: () => ImportOption[];\n    import: (importer: Importer, fileContents: string, organizationId?: string) => Promise<Error>;\n    getImporter: (format: string, organization?: boolean) => Importer;\n}\n","export abstract class ExportService {\n    getExport: (format?: 'csv' | 'json') => Promise<string>;\n    getOrganizationExport: (organizationId: string, format?: 'csv' | 'json') => Promise<string>;\n    getFileName: (prefix?: string, extension?: string) => string;\n}\n","import {\n    ComponentFactoryResolver,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { CipherView } from 'jslib/models/view/cipherView';\n\nimport { Organization } from 'jslib/models/domain/organization';\n\nimport { ModalComponent } from '../modal.component';\nimport { AddEditComponent as OrgAddEditComponent } from '../organizations/vault/add-edit.component';\nimport { AddEditComponent } from '../vault/add-edit.component';\n\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nexport class CipherReportComponent {\n    @ViewChild('cipherAddEdit', { read: ViewContainerRef }) cipherAddEditModalRef: ViewContainerRef;\n\n    loading = false;\n    hasLoaded = false;\n    ciphers: CipherView[] = [];\n    organization: Organization;\n\n    private modal: ModalComponent = null;\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver, protected userService: UserService,\n        protected messagingService: MessagingService, public requiresPaid: boolean) { }\n\n    async load() {\n        this.loading = true;\n        await this.setCiphers();\n        this.loading = false;\n        this.hasLoaded = true;\n    }\n\n    selectCipher(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.cipherAddEditModalRef.createComponent(factory).instance;\n        let childComponent: OrgAddEditComponent | AddEditComponent;\n        if (this.organization != null) {\n            childComponent = this.modal.show<OrgAddEditComponent>(OrgAddEditComponent, this.cipherAddEditModalRef);\n            (childComponent as OrgAddEditComponent).organization = this.organization;\n        } else {\n            childComponent = this.modal.show<AddEditComponent>(AddEditComponent, this.cipherAddEditModalRef);\n        }\n\n        childComponent.cipherId = cipher == null ? null : cipher.id;\n        if (this.organization != null) {\n            childComponent.organizationId = this.organization.id;\n        }\n        childComponent.onSavedCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.load();\n        });\n        childComponent.onDeletedCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.load();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n\n        return childComponent;\n    }\n\n    protected async checkAccess(): Promise<boolean> {\n        if (this.organization != null) {\n            // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n            // since all paid plans include useTotp\n            if (this.requiresPaid && !this.organization.useTotp) {\n                this.messagingService.send('upgradeOrganization', { organizationId: this.organization.id });\n                return false;\n            }\n        } else {\n            const accessPremium = await this.userService.canAccessPremium();\n            if (this.requiresPaid && !accessPremium) {\n                this.messagingService.send('premiumRequired');\n                this.loading = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    protected async setCiphers() {\n        this.ciphers = [];\n    }\n}\n","import { CipherType } from '../../enums/cipherType';\n\nimport { CipherData } from '../data/cipherData';\n\nimport { CipherView } from '../view/cipherView';\n\nimport { Attachment } from './attachment';\nimport { Card } from './card';\nimport { CipherString } from './cipherString';\nimport Domain from './domainBase';\nimport { Field } from './field';\nimport { Identity } from './identity';\nimport { Login } from './login';\nimport { Password } from './password';\nimport { SecureNote } from './secureNote';\n\nexport class Cipher extends Domain {\n    id: string;\n    organizationId: string;\n    folderId: string;\n    name: CipherString;\n    notes: CipherString;\n    type: CipherType;\n    favorite: boolean;\n    organizationUseTotp: boolean;\n    edit: boolean;\n    revisionDate: Date;\n    localData: any;\n    login: Login;\n    identity: Identity;\n    card: Card;\n    secureNote: SecureNote;\n    attachments: Attachment[];\n    fields: Field[];\n    passwordHistory: Password[];\n    collectionIds: string[];\n\n    constructor(obj?: CipherData, alreadyEncrypted: boolean = false, localData: any = null) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            id: null,\n            userId: null,\n            organizationId: null,\n            folderId: null,\n            name: null,\n            notes: null,\n        }, alreadyEncrypted, ['id', 'userId', 'organizationId', 'folderId']);\n\n        this.type = obj.type;\n        this.favorite = obj.favorite;\n        this.organizationUseTotp = obj.organizationUseTotp;\n        this.edit = obj.edit;\n        this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n        this.collectionIds = obj.collectionIds;\n        this.localData = localData;\n\n        switch (this.type) {\n            case CipherType.Login:\n                this.login = new Login(obj.login, alreadyEncrypted);\n                break;\n            case CipherType.SecureNote:\n                this.secureNote = new SecureNote(obj.secureNote, alreadyEncrypted);\n                break;\n            case CipherType.Card:\n                this.card = new Card(obj.card, alreadyEncrypted);\n                break;\n            case CipherType.Identity:\n                this.identity = new Identity(obj.identity, alreadyEncrypted);\n                break;\n            default:\n                break;\n        }\n\n        if (obj.attachments != null) {\n            this.attachments = obj.attachments.map((a) => new Attachment(a, alreadyEncrypted));\n        } else {\n            this.attachments = null;\n        }\n\n        if (obj.fields != null) {\n            this.fields = obj.fields.map((f) => new Field(f, alreadyEncrypted));\n        } else {\n            this.fields = null;\n        }\n\n        if (obj.passwordHistory != null) {\n            this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph, alreadyEncrypted));\n        } else {\n            this.passwordHistory = null;\n        }\n    }\n\n    async decrypt(): Promise<CipherView> {\n        const model = new CipherView(this);\n\n        await this.decryptObj(model, {\n            name: null,\n            notes: null,\n        }, this.organizationId);\n\n        switch (this.type) {\n            case CipherType.Login:\n                model.login = await this.login.decrypt(this.organizationId);\n                break;\n            case CipherType.SecureNote:\n                model.secureNote = await this.secureNote.decrypt(this.organizationId);\n                break;\n            case CipherType.Card:\n                model.card = await this.card.decrypt(this.organizationId);\n                break;\n            case CipherType.Identity:\n                model.identity = await this.identity.decrypt(this.organizationId);\n                break;\n            default:\n                break;\n        }\n\n        const orgId = this.organizationId;\n\n        if (this.attachments != null && this.attachments.length > 0) {\n            const attachments: any[] = [];\n            await this.attachments.reduce((promise, attachment) => {\n                return promise.then(() => {\n                    return attachment.decrypt(orgId);\n                }).then((decAttachment) => {\n                    attachments.push(decAttachment);\n                });\n            }, Promise.resolve());\n            model.attachments = attachments;\n        }\n\n        if (this.fields != null && this.fields.length > 0) {\n            const fields: any[] = [];\n            await this.fields.reduce((promise, field) => {\n                return promise.then(() => {\n                    return field.decrypt(orgId);\n                }).then((decField) => {\n                    fields.push(decField);\n                });\n            }, Promise.resolve());\n            model.fields = fields;\n        }\n\n        if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n            const passwordHistory: any[] = [];\n            await this.passwordHistory.reduce((promise, ph) => {\n                return promise.then(() => {\n                    return ph.decrypt(orgId);\n                }).then((decPh) => {\n                    passwordHistory.push(decPh);\n                });\n            }, Promise.resolve());\n            model.passwordHistory = passwordHistory;\n        }\n\n        return model;\n    }\n\n    toCipherData(userId: string): CipherData {\n        const c = new CipherData();\n        c.id = this.id;\n        c.organizationId = this.organizationId;\n        c.folderId = this.folderId;\n        c.userId = this.organizationId != null ? userId : null;\n        c.edit = this.edit;\n        c.organizationUseTotp = this.organizationUseTotp;\n        c.favorite = this.favorite;\n        c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n        c.type = this.type;\n        c.collectionIds = this.collectionIds;\n\n        this.buildDataModel(this, c, {\n            name: null,\n            notes: null,\n        });\n\n        switch (c.type) {\n            case CipherType.Login:\n                c.login = this.login.toLoginData();\n                break;\n            case CipherType.SecureNote:\n                c.secureNote = this.secureNote.toSecureNoteData();\n                break;\n            case CipherType.Card:\n                c.card = this.card.toCardData();\n                break;\n            case CipherType.Identity:\n                c.identity = this.identity.toIdentityData();\n                break;\n            default:\n                break;\n        }\n\n        if (this.fields != null) {\n            c.fields = this.fields.map((f) => f.toFieldData());\n        }\n        if (this.attachments != null) {\n            c.attachments = this.attachments.map((a) => a.toAttachmentData());\n        }\n        if (this.passwordHistory != null) {\n            c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n        }\n        return c;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { DeviceType } from 'jslib/enums/deviceType';\nimport { EventType } from 'jslib/enums/eventType';\n\nimport { EventResponse } from 'jslib/models/response/eventResponse';\n\n@Injectable()\nexport class EventService {\n    constructor(private i18nService: I18nService) { }\n\n    getDefaultDateFilters() {\n        const d = new Date();\n        const end = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 23, 59);\n        d.setDate(d.getDate() - 30);\n        const start = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0);\n        return [this.toDateTimeLocalString(start), this.toDateTimeLocalString(end)];\n    }\n\n    formatDateFilters(filterStart: string, filterEnd: string) {\n        const start: Date = new Date(filterStart);\n        const end: Date = new Date(filterEnd + ':59.999');\n        if (isNaN(start.getTime()) || isNaN(end.getTime()) || end < start) {\n            throw new Error('Invalid date range.');\n        }\n        return [start.toISOString(), end.toISOString()];\n    }\n\n    getEventInfo(ev: EventResponse, options = new EventOptions()): EventInfo {\n        const appInfo = this.getAppInfo(ev.deviceType);\n        return {\n            message: this.getEventMessage(ev, options),\n            appIcon: appInfo[0],\n            appName: appInfo[1],\n        };\n    }\n\n    private getEventMessage(ev: EventResponse, options: EventOptions) {\n        let msg = '';\n        switch (ev.type) {\n            // User\n            case EventType.User_LoggedIn:\n                msg = this.i18nService.t('loggedIn');\n                break;\n            case EventType.User_ChangedPassword:\n                msg = this.i18nService.t('changedPassword');\n                break;\n            case EventType.User_Updated2fa:\n                msg = this.i18nService.t('enabledUpdated2fa');\n                break;\n            case EventType.User_Disabled2fa:\n                msg = this.i18nService.t('disabled2fa');\n                break;\n            case EventType.User_Recovered2fa:\n                msg = this.i18nService.t('recovered2fa');\n                break;\n            case EventType.User_FailedLogIn:\n                msg = this.i18nService.t('failedLogin');\n                break;\n            case EventType.User_FailedLogIn2fa:\n                msg = this.i18nService.t('failedLogin2fa');\n                break;\n            case EventType.User_ClientExportedVault:\n                msg = this.i18nService.t('exportedVault');\n                break;\n            // Cipher\n            case EventType.Cipher_Created:\n                msg = this.i18nService.t('createdItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_Updated:\n                msg = this.i18nService.t('editedItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_Deleted:\n                msg = this.i18nService.t('deletedItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_AttachmentCreated:\n                msg = this.i18nService.t('createdAttachmentForItem', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_AttachmentDeleted:\n                msg = this.i18nService.t('deletedAttachmentForItem', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_Shared:\n                msg = this.i18nService.t('sharedItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_ClientViewed:\n                msg = this.i18nService.t('viewedItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_ClientToggledPasswordVisible:\n                msg = this.i18nService.t('viewedPasswordItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_ClientToggledHiddenFieldVisible:\n                msg = this.i18nService.t('viewedHiddenFieldItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_ClientToggledCardCodeVisible:\n                msg = this.i18nService.t('viewedSecurityCodeItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_ClientCopiedHiddenField:\n                msg = this.i18nService.t('copiedHiddenFieldItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_ClientCopiedPassword:\n                msg = this.i18nService.t('copiedPasswordItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_ClientCopiedCardCode:\n                msg = this.i18nService.t('copiedSecurityCodeItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_ClientAutofilled:\n                msg = this.i18nService.t('autofilledItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_UpdatedCollections:\n                msg = this.i18nService.t('editedCollectionsForItem', this.formatCipherId(ev, options));\n                break;\n            // Collection\n            case EventType.Collection_Created:\n                msg = this.i18nService.t('createdCollectionId', this.formatCollectionId(ev));\n                break;\n            case EventType.Collection_Updated:\n                msg = this.i18nService.t('editedCollectionId', this.formatCollectionId(ev));\n                break;\n            case EventType.Collection_Deleted:\n                msg = this.i18nService.t('deletedCollectionId', this.formatCollectionId(ev));\n                break;\n            // Group\n            case EventType.Group_Created:\n                msg = this.i18nService.t('createdGroupId', this.formatGroupId(ev));\n                break;\n            case EventType.Group_Updated:\n                msg = this.i18nService.t('editedGroupId', this.formatGroupId(ev));\n                break;\n            case EventType.Group_Deleted:\n                msg = this.i18nService.t('deletedGroupId', this.formatGroupId(ev));\n                break;\n            // Org user\n            case EventType.OrganizationUser_Invited:\n                msg = this.i18nService.t('invitedUserId', this.formatOrgUserId(ev));\n                break;\n            case EventType.OrganizationUser_Confirmed:\n                msg = this.i18nService.t('confirmedUserId', this.formatOrgUserId(ev));\n                break;\n            case EventType.OrganizationUser_Updated:\n                msg = this.i18nService.t('editedUserId', this.formatOrgUserId(ev));\n                break;\n            case EventType.OrganizationUser_Removed:\n                msg = this.i18nService.t('removedUserId', this.formatOrgUserId(ev));\n                break;\n            case EventType.OrganizationUser_UpdatedGroups:\n                msg = this.i18nService.t('editedGroupsForUser', this.formatOrgUserId(ev));\n                break;\n            // Org\n            case EventType.Organization_Updated:\n                msg = this.i18nService.t('editedOrgSettings');\n                break;\n            case EventType.Organization_PurgedVault:\n                msg = this.i18nService.t('purgedOrganizationVault');\n                break;\n            /*\n            case EventType.Organization_ClientExportedVault:\n                msg = this.i18nService.t('exportedOrganizationVault');\n                break;\n            */\n            default:\n                break;\n        }\n        return msg === '' ? null : msg;\n    }\n\n    private getAppInfo(deviceType: DeviceType): [string, string] {\n        switch (deviceType) {\n            case DeviceType.Android:\n                return ['fa-android', this.i18nService.t('mobile') + ' - Android'];\n            case DeviceType.iOS:\n                return ['fa-apple', this.i18nService.t('mobile') + ' - iOS'];\n            case DeviceType.UWP:\n                return ['fa-windows', this.i18nService.t('mobile') + ' - Windows'];\n            case DeviceType.ChromeExtension:\n                return ['fa-chrome', this.i18nService.t('extension') + ' - Chrome'];\n            case DeviceType.FirefoxExtension:\n                return ['fa-firefox', this.i18nService.t('extension') + ' - Firefox'];\n            case DeviceType.OperaExtension:\n                return ['fa-opera', this.i18nService.t('extension') + ' - Opera'];\n            case DeviceType.EdgeExtension:\n                return ['fa-edge', this.i18nService.t('extension') + ' - Edge'];\n            case DeviceType.VivaldiExtension:\n                return ['fa-puzzle-piece', this.i18nService.t('extension') + ' - Vivaldi'];\n            case DeviceType.SafariExtension:\n                return ['fa-safari', this.i18nService.t('extension') + ' - Safari'];\n            case DeviceType.WindowsDesktop:\n                return ['fa-windows', this.i18nService.t('desktop') + ' - Windows'];\n            case DeviceType.MacOsDesktop:\n                return ['fa-apple', this.i18nService.t('desktop') + ' - macOS'];\n            case DeviceType.LinuxDesktop:\n                return ['fa-linux', this.i18nService.t('desktop') + ' - Linux'];\n            case DeviceType.ChromeBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Chrome'];\n            case DeviceType.FirefoxBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Firefox'];\n            case DeviceType.OperaBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Opera'];\n            case DeviceType.SafariBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Safari'];\n            case DeviceType.VivaldiBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Vivaldi'];\n            case DeviceType.EdgeBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Edge'];\n            case DeviceType.IEBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - IE'];\n            case DeviceType.UnknownBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - ' + this.i18nService.t('unknown')];\n            default:\n                return ['fa-globe', this.i18nService.t('unknown')];\n        }\n    }\n\n    private formatCipherId(ev: EventResponse, options: EventOptions) {\n        const shortId = this.getShortId(ev.cipherId);\n        if (ev.organizationId == null || !options.cipherInfo) {\n            return '<code>' + shortId + '</code>';\n        }\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/vault?search=' + shortId +\n            '&viewEvents=' + ev.cipherId);\n        return a.outerHTML;\n    }\n\n    private formatGroupId(ev: EventResponse) {\n        const shortId = this.getShortId(ev.groupId);\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/manage/groups?search=' + shortId);\n        return a.outerHTML;\n    }\n\n    private formatCollectionId(ev: EventResponse) {\n        const shortId = this.getShortId(ev.collectionId);\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/manage/collections?search=' + shortId);\n        return a.outerHTML;\n    }\n\n    private formatOrgUserId(ev: EventResponse) {\n        const shortId = this.getShortId(ev.organizationUserId);\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/manage/people?search=' + shortId +\n            '&viewEvents=' + ev.organizationUserId);\n        return a.outerHTML;\n    }\n\n    private makeAnchor(shortId: string) {\n        const a = document.createElement('a');\n        a.title = this.i18nService.t('view');\n        a.innerHTML = '<code>' + shortId + '</code>';\n        return a;\n    }\n\n    private getShortId(id: string) {\n        return id.substring(0, 8);\n    }\n\n    private toDateTimeLocalString(date: Date) {\n        return date.getFullYear() +\n            '-' + this.pad(date.getMonth() + 1) +\n            '-' + this.pad(date.getDate()) +\n            'T' + this.pad(date.getHours()) +\n            ':' + this.pad(date.getMinutes());\n    }\n\n    private pad(num: number) {\n        const norm = Math.floor(Math.abs(num));\n        return (norm < 10 ? '0' : '') + norm;\n    }\n}\n\nexport class EventInfo {\n    message: string;\n    appIcon: string;\n    appName: string;\n}\n\nexport class EventOptions {\n    cipherInfo = true;\n}\n","export enum DeviceType {\n    Android = 0,\n    iOS = 1,\n    ChromeExtension = 2,\n    FirefoxExtension = 3,\n    OperaExtension = 4,\n    EdgeExtension = 5,\n    WindowsDesktop = 6,\n    MacOsDesktop = 7,\n    LinuxDesktop = 8,\n    ChromeBrowser = 9,\n    FirefoxBrowser = 10,\n    OperaBrowser = 11,\n    EdgeBrowser = 12,\n    IEBrowser = 13,\n    UnknownBrowser = 14,\n    AndroidAmazon = 15,\n    UWP = 16,\n    SafariBrowser = 17,\n    VivaldiBrowser = 18,\n    VivaldiExtension = 19,\n    SafariExtension = 20,\n}\n","export enum OrganizationUserType {\n    Owner = 0,\n    Admin = 1,\n    User = 2,\n    Manager = 3,\n}\n","import { KdfType } from '../enums/kdfType';\nimport { TwoFactorProviderType } from '../enums/twoFactorProviderType';\n\nimport { AuthResult } from '../models/domain/authResult';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { DeviceRequest } from '../models/request/deviceRequest';\nimport { KeysRequest } from '../models/request/keysRequest';\nimport { PreloginRequest } from '../models/request/preloginRequest';\nimport { TokenRequest } from '../models/request/tokenRequest';\n\nimport { ErrorResponse } from '../models/response/errorResponse';\nimport { IdentityTokenResponse } from '../models/response/identityTokenResponse';\nimport { IdentityTwoFactorResponse } from '../models/response/identityTwoFactorResponse';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { AppIdService } from '../abstractions/appId.service';\nimport { AuthService as AuthServiceAbstraction } from '../abstractions/auth.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { MessagingService } from '../abstractions/messaging.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\nimport { TokenService } from '../abstractions/token.service';\nimport { UserService } from '../abstractions/user.service';\n\nexport const TwoFactorProviders = {\n    [TwoFactorProviderType.Authenticator]: {\n        type: TwoFactorProviderType.Authenticator,\n        name: null as string,\n        description: null as string,\n        priority: 1,\n        sort: 1,\n        premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n        type: TwoFactorProviderType.Yubikey,\n        name: null as string,\n        description: null as string,\n        priority: 3,\n        sort: 2,\n        premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n        type: TwoFactorProviderType.Duo,\n        name: 'Duo',\n        description: null as string,\n        priority: 2,\n        sort: 3,\n        premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n        type: TwoFactorProviderType.OrganizationDuo,\n        name: 'Duo (Organization)',\n        description: null as string,\n        priority: 10,\n        sort: 4,\n        premium: false,\n    },\n    [TwoFactorProviderType.U2f]: {\n        type: TwoFactorProviderType.U2f,\n        name: null as string,\n        description: null as string,\n        priority: 4,\n        sort: 5,\n        premium: true,\n    },\n    [TwoFactorProviderType.Email]: {\n        type: TwoFactorProviderType.Email,\n        name: null as string,\n        description: null as string,\n        priority: 0,\n        sort: 6,\n        premium: false,\n    },\n};\n\nexport class AuthService implements AuthServiceAbstraction {\n    email: string;\n    masterPasswordHash: string;\n    twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string; }>;\n    selectedTwoFactorProviderType: TwoFactorProviderType = null;\n\n    private key: SymmetricCryptoKey;\n    private kdf: KdfType;\n    private kdfIterations: number;\n\n    constructor(private cryptoService: CryptoService, private apiService: ApiService,\n        private userService: UserService, private tokenService: TokenService,\n        private appIdService: AppIdService, private i18nService: I18nService,\n        private platformUtilsService: PlatformUtilsService, private messagingService: MessagingService,\n        private setCryptoKeys = true) { }\n\n    init() {\n        TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t('emailTitle');\n        TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t('emailDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.Authenticator].name = this.i18nService.t('authenticatorAppTitle');\n        TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n            this.i18nService.t('authenticatorAppDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t('duoDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n            'Duo (' + this.i18nService.t('organization') + ')';\n        TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n            this.i18nService.t('duoOrganizationDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.U2f].name = this.i18nService.t('u2fTitle');\n        TwoFactorProviders[TwoFactorProviderType.U2f].description = this.i18nService.t('u2fDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t('yubiKeyTitle');\n        TwoFactorProviders[TwoFactorProviderType.Yubikey].description = this.i18nService.t('yubiKeyDesc');\n    }\n\n    async logIn(email: string, masterPassword: string): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        const key = await this.makePreloginKey(masterPassword, email);\n        const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n        return await this.logInHelper(email, hashedPassword, key);\n    }\n\n    async logInTwoFactor(twoFactorProvider: TwoFactorProviderType, twoFactorToken: string,\n        remember?: boolean): Promise<AuthResult> {\n        return await this.logInHelper(this.email, this.masterPasswordHash, this.key, twoFactorProvider,\n            twoFactorToken, remember);\n    }\n\n    async logInComplete(email: string, masterPassword: string, twoFactorProvider: TwoFactorProviderType,\n        twoFactorToken: string, remember?: boolean): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        const key = await this.makePreloginKey(masterPassword, email);\n        const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n        return await this.logInHelper(email, hashedPassword, key, twoFactorProvider, twoFactorToken, remember);\n    }\n\n    logOut(callback: Function) {\n        callback();\n        this.messagingService.send('loggedOut');\n    }\n\n    getSupportedTwoFactorProviders(win: Window): any[] {\n        const providers: any[] = [];\n        if (this.twoFactorProvidersData == null) {\n            return providers;\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n            this.platformUtilsService.supportsDuo()) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) && this.platformUtilsService.supportsDuo()) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.U2f) && this.platformUtilsService.supportsU2f(win)) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.U2f]);\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n        }\n\n        return providers;\n    }\n\n    getDefaultTwoFactorProvider(u2fSupported: boolean): TwoFactorProviderType {\n        if (this.twoFactorProvidersData == null) {\n            return null;\n        }\n\n        if (this.selectedTwoFactorProviderType != null &&\n            this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)) {\n            return this.selectedTwoFactorProviderType;\n        }\n\n        let providerType: TwoFactorProviderType = null;\n        let providerPriority = -1;\n        this.twoFactorProvidersData.forEach((value, type) => {\n            const provider = (TwoFactorProviders as any)[type];\n            if (provider != null && provider.priority > providerPriority) {\n                if (type === TwoFactorProviderType.U2f && !u2fSupported) {\n                    return;\n                }\n\n                providerType = type;\n                providerPriority = provider.priority;\n            }\n        });\n\n        return providerType;\n    }\n\n    async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n        email = email.trim().toLowerCase();\n        this.kdf = null;\n        this.kdfIterations = null;\n        try {\n            const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n            if (preloginResponse != null) {\n                this.kdf = preloginResponse.kdf;\n                this.kdfIterations = preloginResponse.kdfIterations;\n            }\n        } catch (e) {\n            if (e == null || e.statusCode !== 404) {\n                throw e;\n            }\n        }\n        return this.cryptoService.makeKey(masterPassword, email, this.kdf, this.kdfIterations);\n    }\n\n    private async logInHelper(email: string, hashedPassword: string, key: SymmetricCryptoKey,\n        twoFactorProvider?: TwoFactorProviderType, twoFactorToken?: string, remember?: boolean): Promise<AuthResult> {\n        const storedTwoFactorToken = await this.tokenService.getTwoFactorToken(email);\n        const appId = await this.appIdService.getAppId();\n        const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\n\n        let request: TokenRequest;\n        if (twoFactorToken != null && twoFactorProvider != null) {\n            request = new TokenRequest(email, hashedPassword, twoFactorProvider, twoFactorToken, remember,\n                deviceRequest);\n        } else if (storedTwoFactorToken != null) {\n            request = new TokenRequest(email, hashedPassword, TwoFactorProviderType.Remember,\n                storedTwoFactorToken, false, deviceRequest);\n        } else {\n            request = new TokenRequest(email, hashedPassword, null, null, false, deviceRequest);\n        }\n\n        const response = await this.apiService.postIdentityToken(request);\n\n        this.clearState();\n        const result = new AuthResult();\n        result.twoFactor = !(response as any).accessToken;\n\n        if (result.twoFactor) {\n            // two factor required\n            const twoFactorResponse = response as IdentityTwoFactorResponse;\n            this.email = email;\n            this.masterPasswordHash = hashedPassword;\n            this.key = this.setCryptoKeys ? key : null;\n            this.twoFactorProvidersData = twoFactorResponse.twoFactorProviders2;\n            result.twoFactorProviders = twoFactorResponse.twoFactorProviders2;\n            return result;\n        }\n\n        const tokenResponse = response as IdentityTokenResponse;\n        if (tokenResponse.twoFactorToken != null) {\n            await this.tokenService.setTwoFactorToken(tokenResponse.twoFactorToken, email);\n        }\n\n        await this.tokenService.setTokens(tokenResponse.accessToken, tokenResponse.refreshToken);\n        await this.userService.setInformation(this.tokenService.getUserId(), this.tokenService.getEmail(),\n            this.kdf, this.kdfIterations);\n        if (this.setCryptoKeys) {\n            await this.cryptoService.setKey(key);\n            await this.cryptoService.setKeyHash(hashedPassword);\n            await this.cryptoService.setEncKey(tokenResponse.key);\n\n            // User doesn't have a key pair yet (old account), let's generate one for them\n            if (tokenResponse.privateKey == null) {\n                try {\n                    const keyPair = await this.cryptoService.makeKeyPair();\n                    await this.apiService.postAccountKeys(new KeysRequest(keyPair[0], keyPair[1].encryptedString));\n                    tokenResponse.privateKey = keyPair[1].encryptedString;\n                } catch (e) {\n                    // tslint:disable-next-line\n                    console.error(e);\n                }\n            }\n\n            await this.cryptoService.setEncPrivateKey(tokenResponse.privateKey);\n        }\n\n        this.messagingService.send('loggedIn');\n        return result;\n    }\n\n    private clearState(): void {\n        this.email = null;\n        this.masterPasswordHash = null;\n        this.twoFactorProvidersData = null;\n        this.selectedTwoFactorProviderType = null;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Output,\n} from '@angular/core';\n\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { FolderService } from 'jslib/abstractions/folder.service';\nimport { StorageService } from 'jslib/abstractions/storage.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { GroupingsComponent as BaseGroupingsComponent } from 'jslib/angular/components/groupings.component';\n\n@Component({\n    selector: 'app-vault-groupings',\n    templateUrl: 'groupings.component.html',\n})\nexport class GroupingsComponent extends BaseGroupingsComponent {\n    @Output() onSearchTextChanged = new EventEmitter<string>();\n\n    searchText: string = '';\n    searchPlaceholder: string = null;\n\n    constructor(collectionService: CollectionService, folderService: FolderService,\n        storageService: StorageService, userService: UserService) {\n        super(collectionService, folderService, storageService, userService);\n    }\n\n    searchTextChanged() {\n        this.onSearchTextChanged.emit(this.searchText);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { EventService } from 'jslib/abstractions/event.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib/abstractions/search.service';\n\nimport { CiphersComponent as BaseCiphersComponent } from 'jslib/angular/components/ciphers.component';\n\nimport { CipherType } from 'jslib/enums/cipherType';\nimport { EventType } from 'jslib/enums/eventType';\n\nimport { CipherView } from 'jslib/models/view/cipherView';\n\nconst MaxCheckedCount = 500;\n\n@Component({\n    selector: 'app-vault-ciphers',\n    templateUrl: 'ciphers.component.html',\n})\nexport class CiphersComponent extends BaseCiphersComponent implements OnDestroy {\n    @Input() showAddNew = true;\n    @Output() onAttachmentsClicked = new EventEmitter<CipherView>();\n    @Output() onShareClicked = new EventEmitter<CipherView>();\n    @Output() onCollectionsClicked = new EventEmitter<CipherView>();\n\n    cipherType = CipherType;\n    actionPromise: Promise<any>;\n\n    constructor(searchService: SearchService, protected analytics: Angulartics2,\n        protected toasterService: ToasterService, protected i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService, protected cipherService: CipherService,\n        protected eventService: EventService) {\n        super(searchService);\n        this.pageSize = 200;\n    }\n\n    ngOnDestroy() {\n        this.selectAll(false);\n    }\n\n    checkCipher(c: CipherView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n    }\n\n    launch(uri: string) {\n        this.platformUtilsService.eventTrack('Launched Login URI');\n        this.platformUtilsService.launchUri(uri);\n    }\n\n    selectAll(select: boolean) {\n        if (select) {\n            this.selectAll(false);\n        }\n        const selectCount = select && this.ciphers.length > MaxCheckedCount ? MaxCheckedCount : this.ciphers.length;\n        for (let i = 0; i < selectCount; i++) {\n            this.checkCipher(this.ciphers[i], select);\n        }\n    }\n\n    getSelected(): CipherView[] {\n        if (this.ciphers == null) {\n            return [];\n        }\n        return this.ciphers.filter((c) => !!(c as any).checked);\n    }\n\n    getSelectedIds(): string[] {\n        return this.getSelected().map((c) => c.id);\n    }\n\n    attachments(c: CipherView) {\n        this.onAttachmentsClicked.emit(c);\n    }\n\n    share(c: CipherView) {\n        this.onShareClicked.emit(c);\n    }\n\n    collections(c: CipherView) {\n        this.onCollectionsClicked.emit(c);\n    }\n\n    async delete(c: CipherView): Promise<boolean> {\n        if (this.actionPromise != null) {\n            return;\n        }\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteItemConfirmation'), this.i18nService.t('deleteItem'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.deleteCipher(c.id);\n            await this.actionPromise;\n            this.analytics.eventTrack.next({ action: 'Deleted Cipher' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedItem'));\n            this.refresh();\n        } catch { }\n        this.actionPromise = null;\n    }\n\n    copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\n        if (value == null) {\n            return;\n        }\n\n        this.analytics.eventTrack.next({ action: 'Copied ' + aType.toLowerCase() + ' from listing.' });\n        this.platformUtilsService.copyToClipboard(value, { window: window });\n        this.toasterService.popAsync('info', null,\n            this.i18nService.t('valueCopied', this.i18nService.t(typeI18nKey)));\n\n        if (typeI18nKey === 'password') {\n            this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, cipher.id);\n        } else if (typeI18nKey === 'securityCode') {\n            this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\n        }\n    }\n\n    protected deleteCipher(id: string) {\n        return this.cipherService.deleteWithServer(id);\n    }\n\n    protected showFixOldAttachments(c: CipherView) {\n        return c.hasOldAttachments && c.organizationId == null;\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { CipherType } from 'jslib/enums/cipherType';\nimport { EventType } from 'jslib/enums/eventType';\n\nimport { AuditService } from 'jslib/abstractions/audit.service';\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { EventService } from 'jslib/abstractions/event.service';\nimport { FolderService } from 'jslib/abstractions/folder.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { StateService } from 'jslib/abstractions/state.service';\nimport { TotpService } from 'jslib/abstractions/totp.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { AddEditComponent as BaseAddEditComponent } from 'jslib/angular/components/add-edit.component';\nimport { LoginUriView } from 'jslib/models/view/loginUriView';\n\n@Component({\n    selector: 'app-vault-add-edit',\n    templateUrl: 'add-edit.component.html',\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n    canAccessPremium: boolean;\n    totpCode: string;\n    totpCodeFormatted: string;\n    totpDash: number;\n    totpSec: number;\n    totpLow: boolean;\n    showRevisionDate = false;\n    hasPasswordHistory = false;\n    viewingPasswordHistory = false;\n\n    protected totpInterval: number;\n\n    constructor(cipherService: CipherService, folderService: FolderService,\n        i18nService: I18nService, platformUtilsService: PlatformUtilsService,\n        auditService: AuditService, stateService: StateService,\n        userService: UserService, collectionService: CollectionService,\n        protected totpService: TotpService, protected passwordGenerationService: PasswordGenerationService,\n        protected messagingService: MessagingService, eventService: EventService) {\n        super(cipherService, folderService, i18nService, platformUtilsService, auditService, stateService,\n            userService, collectionService, messagingService, eventService);\n    }\n\n    async ngOnInit() {\n        await super.ngOnInit();\n        await this.load();\n        this.showRevisionDate = this.cipher.passwordRevisionDisplayDate != null;\n        this.hasPasswordHistory = this.cipher.hasPasswordHistory;\n        this.cleanUp();\n\n        this.canAccessPremium = await this.userService.canAccessPremium();\n        if (this.cipher.type === CipherType.Login && this.cipher.login.totp &&\n            (this.cipher.organizationUseTotp || this.canAccessPremium)) {\n            await this.totpUpdateCode();\n            const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\n            await this.totpTick(interval);\n\n            this.totpInterval = window.setInterval(async () => {\n                await this.totpTick(interval);\n            }, 1000);\n        }\n    }\n\n    toggleFavorite() {\n        this.cipher.favorite = !this.cipher.favorite;\n    }\n\n    launch(uri: LoginUriView) {\n        if (!uri.canLaunch) {\n            return;\n        }\n\n        this.platformUtilsService.eventTrack('Launched Login URI');\n        this.platformUtilsService.launchUri(uri.launchUri);\n    }\n\n    copy(value: string, typeI18nKey: string, aType: string) {\n        if (value == null) {\n            return;\n        }\n\n        this.platformUtilsService.eventTrack('Copied ' + aType);\n        this.platformUtilsService.copyToClipboard(value, { window: window });\n        this.platformUtilsService.showToast('info', null,\n            this.i18nService.t('valueCopied', this.i18nService.t(typeI18nKey)));\n\n        if (this.editMode) {\n            if (typeI18nKey === 'password') {\n                this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipherId);\n            } else if (typeI18nKey === 'securityCode') {\n                this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\n            } else if (aType === 'H_Field') {\n                this.eventService.collect(EventType.Cipher_ClientCopiedHiddenField, this.cipherId);\n            }\n        }\n    }\n\n    async generatePassword(): Promise<boolean> {\n        const confirmed = await super.generatePassword();\n        if (confirmed) {\n            const options = await this.passwordGenerationService.getOptions();\n            this.cipher.login.password = await this.passwordGenerationService.generatePassword(options);\n        }\n        return confirmed;\n    }\n\n    premiumRequired() {\n        if (!this.canAccessPremium) {\n            this.messagingService.send('premiumRequired');\n            return;\n        }\n    }\n\n    upgradeOrganization() {\n        this.messagingService.send('upgradeOrganization', { organizationId: this.cipher.organizationId });\n    }\n\n    viewHistory() {\n        this.viewingPasswordHistory = !this.viewingPasswordHistory;\n    }\n\n    protected cleanUp() {\n        if (this.totpInterval) {\n            window.clearInterval(this.totpInterval);\n        }\n    }\n\n    protected async totpUpdateCode() {\n        if (this.cipher == null || this.cipher.type !== CipherType.Login || this.cipher.login.totp == null) {\n            if (this.totpInterval) {\n                window.clearInterval(this.totpInterval);\n            }\n            return;\n        }\n\n        this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n        if (this.totpCode != null) {\n            if (this.totpCode.length > 4) {\n                const half = Math.floor(this.totpCode.length / 2);\n                this.totpCodeFormatted = this.totpCode.substring(0, half) + ' ' + this.totpCode.substring(half);\n            } else {\n                this.totpCodeFormatted = this.totpCode;\n            }\n        } else {\n            this.totpCodeFormatted = null;\n            if (this.totpInterval) {\n                window.clearInterval(this.totpInterval);\n            }\n        }\n    }\n\n    private async totpTick(intervalSeconds: number) {\n        const epoch = Math.round(new Date().getTime() / 1000.0);\n        const mod = epoch % intervalSeconds;\n\n        this.totpSec = intervalSeconds - mod;\n        this.totpDash = +(Math.round((((78.6 / intervalSeconds) * mod) + 'e+2') as any) + 'e-2');\n        this.totpLow = this.totpSec <= 7;\n        if (mod === 0) {\n            await this.totpUpdateCode();\n        }\n    }\n}\n","export enum UriMatchType {\n    Domain = 0,\n    Host = 1,\n    StartsWith = 2,\n    Exact = 3,\n    RegularExpression = 4,\n    Never = 5,\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n    Type,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { TwoFactorProviders } from 'jslib/services/auth.service';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\n\nimport { ModalComponent } from '../modal.component';\n\nimport { TwoFactorAuthenticatorComponent } from './two-factor-authenticator.component';\nimport { TwoFactorDuoComponent } from './two-factor-duo.component';\nimport { TwoFactorEmailComponent } from './two-factor-email.component';\nimport { TwoFactorRecoveryComponent } from './two-factor-recovery.component';\nimport { TwoFactorU2fComponent } from './two-factor-u2f.component';\nimport { TwoFactorYubiKeyComponent } from './two-factor-yubikey.component';\n\n@Component({\n    selector: 'app-two-factor-setup',\n    templateUrl: 'two-factor-setup.component.html',\n})\nexport class TwoFactorSetupComponent implements OnInit {\n    @ViewChild('recoveryTemplate', { read: ViewContainerRef }) recoveryModalRef: ViewContainerRef;\n    @ViewChild('authenticatorTemplate', { read: ViewContainerRef }) authenticatorModalRef: ViewContainerRef;\n    @ViewChild('yubikeyTemplate', { read: ViewContainerRef }) yubikeyModalRef: ViewContainerRef;\n    @ViewChild('u2fTemplate', { read: ViewContainerRef }) u2fModalRef: ViewContainerRef;\n    @ViewChild('duoTemplate', { read: ViewContainerRef }) duoModalRef: ViewContainerRef;\n    @ViewChild('emailTemplate', { read: ViewContainerRef }) emailModalRef: ViewContainerRef;\n\n    organizationId: string;\n    providers: any[] = [];\n    canAccessPremium: boolean;\n    loading = true;\n\n    private modal: ModalComponent = null;\n\n    constructor(protected apiService: ApiService, protected userService: UserService,\n        protected componentFactoryResolver: ComponentFactoryResolver, protected messagingService: MessagingService) { }\n\n    async ngOnInit() {\n        this.canAccessPremium = await this.userService.canAccessPremium();\n\n        for (const key in TwoFactorProviders) {\n            if (!TwoFactorProviders.hasOwnProperty(key)) {\n                continue;\n            }\n\n            const p = (TwoFactorProviders as any)[key];\n            if (this.filterProvider(p.type)) {\n                continue;\n            }\n\n            this.providers.push({\n                type: p.type,\n                name: p.name,\n                description: p.description,\n                enabled: false,\n                premium: p.premium,\n                sort: p.sort,\n            });\n        }\n\n        this.providers.sort((a: any, b: any) => a.sort - b.sort);\n        await this.load();\n    }\n\n    async load() {\n        this.loading = true;\n        const providerList = await this.getTwoFactorProviders();\n        providerList.data.forEach((p) => {\n            this.providers.forEach((p2) => {\n                if (p.type === p2.type) {\n                    p2.enabled = p.enabled;\n                }\n            });\n        });\n        this.loading = false;\n    }\n\n    manage(type: TwoFactorProviderType) {\n        switch (type) {\n            case TwoFactorProviderType.Authenticator:\n                const authComp = this.openModal(this.authenticatorModalRef, TwoFactorAuthenticatorComponent);\n                authComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.Authenticator);\n                });\n                break;\n            case TwoFactorProviderType.Yubikey:\n                const yubiComp = this.openModal(this.yubikeyModalRef, TwoFactorYubiKeyComponent);\n                yubiComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.Yubikey);\n                });\n                break;\n            case TwoFactorProviderType.Duo:\n                const duoComp = this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n                duoComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.Duo);\n                });\n                break;\n            case TwoFactorProviderType.Email:\n                const emailComp = this.openModal(this.emailModalRef, TwoFactorEmailComponent);\n                emailComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.Email);\n                });\n                break;\n            case TwoFactorProviderType.U2f:\n                const u2fComp = this.openModal(this.u2fModalRef, TwoFactorU2fComponent);\n                u2fComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.U2f);\n                });\n                break;\n            default:\n                break;\n        }\n    }\n\n    recoveryCode() {\n        this.openModal(this.recoveryModalRef, TwoFactorRecoveryComponent);\n    }\n\n    async premiumRequired() {\n        if (!this.canAccessPremium) {\n            this.messagingService.send('premiumRequired');\n            return;\n        }\n    }\n\n    protected getTwoFactorProviders() {\n        return this.apiService.getTwoFactorProviders();\n    }\n\n    protected filterProvider(type: TwoFactorProviderType) {\n        return type === TwoFactorProviderType.OrganizationDuo;\n    }\n\n    protected openModal<T>(ref: ViewContainerRef, type: Type<T>): T {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = ref.createComponent(factory).instance;\n        const childComponent = this.modal.show<T>(type, ref);\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n        return childComponent;\n    }\n\n    protected updateStatus(enabled: boolean, type: TwoFactorProviderType) {\n        if (!enabled && this.modal != null) {\n            this.modal.close();\n        }\n        this.providers.forEach((p) => {\n            if (p.type === type) {\n                p.enabled = enabled;\n            }\n        });\n    }\n}\n","export enum PaymentMethodType {\n    Card = 0,\n    BankAccount = 1,\n    PayPal = 2,\n    BitPay = 3,\n    Credit = 4,\n    WireTransfer = 5,\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { BillingResponse } from 'jslib/models/response/billingResponse';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { PaymentMethodType } from 'jslib/enums/paymentMethodType';\nimport { TransactionType } from 'jslib/enums/transactionType';\nimport { VerifyBankRequest } from 'jslib/models/request/verifyBankRequest';\n\n@Component({\n    selector: 'app-user-billing',\n    templateUrl: 'user-billing.component.html',\n})\nexport class UserBillingComponent implements OnInit {\n    loading = false;\n    firstLoaded = false;\n    showAdjustPayment = false;\n    showAddCredit = false;\n    billing: BillingResponse;\n    paymentMethodType = PaymentMethodType;\n    transactionType = TransactionType;\n    organizationId: string;\n    verifyAmount1: number;\n    verifyAmount2: number;\n\n    verifyBankPromise: Promise<any>;\n\n    constructor(protected apiService: ApiService, protected i18nService: I18nService,\n        protected analytics: Angulartics2, protected toasterService: ToasterService) { }\n\n    async ngOnInit() {\n        await this.load();\n        this.firstLoaded = true;\n    }\n\n    async load() {\n        if (this.loading) {\n            return;\n        }\n        this.loading = true;\n        if (this.organizationId != null) {\n            this.billing = await this.apiService.getOrganizationBilling(this.organizationId);\n        } else {\n            this.billing = await this.apiService.getUserBilling();\n        }\n        this.loading = false;\n    }\n\n    async verifyBank() {\n        if (this.loading) {\n            return;\n        }\n\n        try {\n            const request = new VerifyBankRequest();\n            request.amount1 = this.verifyAmount1;\n            request.amount2 = this.verifyAmount2;\n            this.verifyBankPromise = this.apiService.postOrganizationVerifyBank(this.organizationId, request);\n            await this.verifyBankPromise;\n            this.analytics.eventTrack.next({ action: 'Verified Bank Account' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('verifiedBankAccount'));\n            this.load();\n        } catch { }\n    }\n\n    addCredit() {\n        this.showAddCredit = true;\n    }\n\n    closeAddCredit(load: boolean) {\n        this.showAddCredit = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    changePayment() {\n        this.showAdjustPayment = true;\n    }\n\n    closePayment(load: boolean) {\n        this.showAdjustPayment = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    get isCreditBalance() {\n        return this.billing == null || this.billing.balance <= 0;\n    }\n\n    get creditOrBalance() {\n        return Math.abs(this.billing != null ? this.billing.balance : 0);\n    }\n\n    get paymentSource() {\n        return this.billing != null ? this.billing.paymentSource : null;\n    }\n\n    get invoices() {\n        return this.billing != null ? this.billing.invoices : null;\n    }\n\n    get transactions() {\n        return this.billing != null ? this.billing.transactions : null;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ViewChild,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { PaymentMethodType } from 'jslib/enums/paymentMethodType';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib/abstractions/sync.service';\n\nimport { PaymentComponent } from './payment.component';\n\nimport { PlanType } from 'jslib/enums/planType';\nimport { OrganizationCreateRequest } from 'jslib/models/request/organizationCreateRequest';\nimport { OrganizationUpgradeRequest } from 'jslib/models/request/organizationUpgradeRequest';\n\n@Component({\n    selector: 'app-organization-plans',\n    templateUrl: 'organization-plans.component.html',\n})\nexport class OrganizationPlansComponent {\n    @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n\n    @Input() organizationId: string;\n    @Input() showFree = true;\n    @Input() showCancel = false;\n    @Input() plan = 'free';\n    @Output() onSuccess = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    selfHosted = false;\n    ownedBusiness = false;\n    premiumAccessAddon = false;\n    storageGbPriceMonthly = 0.33;\n    additionalStorage = 0;\n    additionalSeats = 0;\n    interval = 'year';\n    name: string;\n    billingEmail: string;\n    businessName: string;\n\n    storageGb: any = {\n        price: 0.33,\n        monthlyPrice: 0.50,\n        yearlyPrice: 4,\n    };\n\n    plans: any = {\n        free: {\n            basePrice: 0,\n            noAdditionalSeats: true,\n            noPayment: true,\n        },\n        families: {\n            basePrice: 1,\n            annualBasePrice: 12,\n            baseSeats: 5,\n            noAdditionalSeats: true,\n            annualPlanType: PlanType.FamiliesAnnually,\n            canBuyPremiumAccessAddon: true,\n        },\n        teams: {\n            basePrice: 5,\n            annualBasePrice: 60,\n            monthlyBasePrice: 8,\n            baseSeats: 5,\n            seatPrice: 2,\n            annualSeatPrice: 24,\n            monthlySeatPrice: 2.5,\n            monthPlanType: PlanType.TeamsMonthly,\n            annualPlanType: PlanType.TeamsAnnually,\n        },\n        enterprise: {\n            seatPrice: 3,\n            annualSeatPrice: 36,\n            monthlySeatPrice: 4,\n            monthPlanType: PlanType.EnterpriseMonthly,\n            annualPlanType: PlanType.EnterpriseAnnually,\n        },\n    };\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        platformUtilsService: PlatformUtilsService, private cryptoService: CryptoService,\n        private router: Router, private syncService: SyncService) {\n        this.selfHosted = platformUtilsService.isSelfHost();\n    }\n\n    async submit() {\n        let files: FileList = null;\n        if (this.createOrganization && this.selfHosted) {\n            const fileEl = document.getElementById('file') as HTMLInputElement;\n            files = fileEl.files;\n            if (files == null || files.length === 0) {\n                this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('selectFile'));\n                return;\n            }\n        }\n\n        try {\n            const doSubmit = async () => {\n                let orgId: string = null;\n                if (this.createOrganization) {\n                    let tokenResult: [string, PaymentMethodType] = null;\n                    if (!this.selfHosted && this.plan !== 'free') {\n                        tokenResult = await this.paymentComponent.createPaymentToken();\n                    }\n                    const shareKey = await this.cryptoService.makeShareKey();\n                    const key = shareKey[0].encryptedString;\n                    const collection = await this.cryptoService.encrypt(\n                        this.i18nService.t('defaultCollection'), shareKey[1]);\n                    const collectionCt = collection.encryptedString;\n\n                    if (this.selfHosted) {\n                        const fd = new FormData();\n                        fd.append('license', files[0]);\n                        fd.append('key', key);\n                        fd.append('collectionName', collectionCt);\n                        const response = await this.apiService.postOrganizationLicense(fd);\n                        orgId = response.id;\n                    } else {\n                        const request = new OrganizationCreateRequest();\n                        request.key = key;\n                        request.collectionName = collectionCt;\n                        request.name = this.name;\n                        request.billingEmail = this.billingEmail;\n\n                        if (this.plan === 'free') {\n                            request.planType = PlanType.Free;\n                        } else {\n                            request.paymentToken = tokenResult[0];\n                            request.paymentMethodType = tokenResult[1];\n                            request.businessName = this.ownedBusiness ? this.businessName : null;\n                            request.additionalSeats = this.additionalSeats;\n                            request.additionalStorageGb = this.additionalStorage;\n                            request.premiumAccessAddon = this.plans[this.plan].canBuyPremiumAccessAddon &&\n                                this.premiumAccessAddon;\n                            if (this.interval === 'month') {\n                                request.planType = this.plans[this.plan].monthPlanType;\n                            } else {\n                                request.planType = this.plans[this.plan].annualPlanType;\n                            }\n                        }\n                        const response = await this.apiService.postOrganization(request);\n                        orgId = response.id;\n                    }\n                } else {\n                    const request = new OrganizationUpgradeRequest();\n                    request.businessName = this.ownedBusiness ? this.businessName : null;\n                    request.additionalSeats = this.additionalSeats;\n                    request.additionalStorageGb = this.additionalStorage;\n                    request.premiumAccessAddon = this.plans[this.plan].canBuyPremiumAccessAddon &&\n                        this.premiumAccessAddon;\n                    if (this.interval === 'month') {\n                        request.planType = this.plans[this.plan].monthPlanType;\n                    } else {\n                        request.planType = this.plans[this.plan].annualPlanType;\n                    }\n                    const result = await this.apiService.postOrganizationUpgrade(this.organizationId, request);\n                    if (!result.success && result.paymentIntentClientSecret != null) {\n                        await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\n                    }\n                    orgId = this.organizationId;\n                }\n\n                if (orgId != null) {\n                    await this.apiService.refreshIdentityToken();\n                    await this.syncService.fullSync(true);\n                    if (this.createOrganization) {\n                        this.analytics.eventTrack.next({ action: 'Created Organization' });\n                        this.toasterService.popAsync('success',\n                            this.i18nService.t('organizationCreated'), this.i18nService.t('organizationReadyToGo'));\n                    } else {\n                        this.analytics.eventTrack.next({ action: 'Upgraded Organization' });\n                        this.toasterService.popAsync('success', null, this.i18nService.t('organizationUpgraded'));\n                    }\n                    this.router.navigate(['/organizations/' + orgId]);\n                }\n            };\n\n            this.formPromise = doSubmit();\n            await this.formPromise;\n            this.onSuccess.emit();\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n\n    changedPlan() {\n        if (!this.plans[this.plan].canBuyPremiumAccessAddon) {\n            this.premiumAccessAddon = false;\n        }\n\n        if (this.plans[this.plan].monthPlanType == null) {\n            this.interval = 'year';\n        }\n\n        if (this.plans[this.plan].noAdditionalSeats) {\n            this.additionalSeats = 0;\n        } else if (!this.additionalSeats && !this.plans[this.plan].baseSeats &&\n            !this.plans[this.plan].noAdditionalSeats) {\n            this.additionalSeats = 1;\n        }\n    }\n\n    changedOwnedBusiness() {\n        if (!this.ownedBusiness || this.plan === 'teams' || this.plan === 'enterprise') {\n            return;\n        }\n        this.plan = 'teams';\n    }\n\n    additionalStorageTotal(annual: boolean): number {\n        if (annual) {\n            return Math.abs(this.additionalStorage || 0) * this.storageGb.yearlyPrice;\n        } else {\n            return Math.abs(this.additionalStorage || 0) * this.storageGb.monthlyPrice;\n        }\n    }\n\n    seatTotal(annual: boolean): number {\n        if (this.plans[this.plan].noAdditionalSeats) {\n            return 0;\n        }\n\n        if (annual) {\n            return this.plans[this.plan].annualSeatPrice * Math.abs(this.additionalSeats || 0);\n        } else {\n            return this.plans[this.plan].monthlySeatPrice * Math.abs(this.additionalSeats || 0);\n        }\n    }\n\n    baseTotal(annual: boolean): number {\n        if (annual) {\n            return Math.abs(this.plans[this.plan].annualBasePrice || 0);\n        } else {\n            return Math.abs(this.plans[this.plan].monthlyBasePrice || 0);\n        }\n    }\n\n    premiumAccessTotal(annual: boolean): number {\n        if (this.plans[this.plan].canBuyPremiumAccessAddon && this.premiumAccessAddon) {\n            if (annual) {\n                return 40;\n            }\n        }\n        return 0;\n    }\n\n    get total(): number {\n        const annual = this.interval === 'year';\n        return this.baseTotal(annual) + this.seatTotal(annual) + this.additionalStorageTotal(annual) +\n            this.premiumAccessTotal(annual);\n    }\n\n    get createOrganization() {\n        return this.organizationId == null;\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { ImportOption, ImportService } from 'jslib/abstractions/import.service';\n\n@Component({\n    selector: 'app-import',\n    templateUrl: 'import.component.html',\n})\nexport class ImportComponent implements OnInit {\n    featuredImportOptions: ImportOption[];\n    importOptions: ImportOption[];\n    format: string = null;\n    fileContents: string;\n    formPromise: Promise<Error>;\n\n    protected organizationId: string = null;\n    protected successNavigate: any[] = ['vault'];\n\n    constructor(protected i18nService: I18nService, protected analytics: Angulartics2,\n        protected toasterService: ToasterService, protected importService: ImportService,\n        protected router: Router) { }\n\n    ngOnInit() {\n        this.setImportOptions();\n        this.importOptions.sort((a, b) => {\n            if (a.name == null && b.name != null) {\n                return -1;\n            }\n            if (a.name != null && b.name == null) {\n                return 1;\n            }\n            if (a.name == null && b.name == null) {\n                return 0;\n            }\n\n            return this.i18nService.collator ? this.i18nService.collator.compare(a.name, b.name) :\n                a.name.localeCompare(b.name);\n        });\n    }\n\n    async submit() {\n        const importer = this.importService.getImporter(this.format, this.organizationId != null);\n        if (importer === null) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFormat'));\n            return;\n        }\n\n        const fileEl = document.getElementById('file') as HTMLInputElement;\n        const files = fileEl.files;\n        if ((files == null || files.length === 0) && (this.fileContents == null || this.fileContents === '')) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFile'));\n            return;\n        }\n\n        let fileContents = this.fileContents;\n        if (files != null && files.length > 0) {\n            try {\n                const content = await this.getFileContents(files[0]);\n                if (content != null) {\n                    fileContents = content;\n                }\n            } catch { }\n        }\n\n        if (fileContents == null || fileContents === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFile'));\n            return;\n        }\n\n        try {\n            this.formPromise = this.importService.import(importer, fileContents, this.organizationId);\n            const error = await this.formPromise;\n            if (error != null) {\n                this.error(error);\n                return;\n            }\n            this.analytics.eventTrack.next({\n                action: 'Imported Data',\n                properties: { label: this.format },\n            });\n            this.toasterService.popAsync('success', null, this.i18nService.t('importSuccess'));\n            this.router.navigate(this.successNavigate);\n        } catch { }\n    }\n\n    getFormatInstructionTitle() {\n        if (this.format == null) {\n            return null;\n        }\n\n        const results = this.featuredImportOptions.concat(this.importOptions).filter((o) => o.id === this.format);\n        if (results.length > 0) {\n            return this.i18nService.t('instructionsFor', results[0].name);\n        }\n        return null;\n    }\n\n    protected setImportOptions() {\n        this.featuredImportOptions = [{\n            id: null,\n            name: '-- ' + this.i18nService.t('select') + ' --',\n        }, ...this.importService.featuredImportOptions];\n        this.importOptions = this.importService.regularImportOptions;\n    }\n\n    private error(error: Error) {\n        this.analytics.eventTrack.next({\n            action: 'Import Data Failed',\n            properties: { label: this.format },\n        });\n        this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'), error.message);\n    }\n\n    private getFileContents(file: File): Promise<string> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsText(file, 'utf-8');\n            reader.onload = (evt) => {\n                if (this.format === 'lastpasscsv' && file.type === 'text/html') {\n                    const parser = new DOMParser();\n                    const doc = parser.parseFromString((evt.target as any).result, 'text/html');\n                    const pre = doc.querySelector('pre');\n                    if (pre != null) {\n                        resolve(pre.textContent);\n                        return;\n                    }\n                    reject();\n                    return;\n                }\n\n                resolve((evt.target as any).result);\n            };\n            reader.onerror = () => {\n                reject();\n            };\n        });\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { EventService } from 'jslib/abstractions/event.service';\nimport { ExportService } from 'jslib/abstractions/export.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { ExportComponent as BaseExportComponent } from 'jslib/angular/components/export.component';\n\n@Component({\n    selector: 'app-export',\n    templateUrl: 'export.component.html',\n})\nexport class ExportComponent extends BaseExportComponent {\n    constructor(cryptoService: CryptoService, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService, exportService: ExportService,\n        eventService: EventService) {\n        super(cryptoService, i18nService, platformUtilsService, exportService, eventService, window);\n    }\n\n    protected saved() {\n        super.saved();\n        this.masterPassword = null;\n        this.platformUtilsService.showToast('success', null, this.i18nService.t('exportSuccess'));\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { CipherView } from 'jslib/models/view/cipherView';\n\nimport { CipherType } from 'jslib/enums/cipherType';\n\nimport { CipherReportComponent } from './cipher-report.component';\n\n@Component({\n    selector: 'app-reused-passwords-report',\n    templateUrl: 'reused-passwords-report.component.html',\n})\nexport class ReusedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n    passwordUseMap: Map<string, number>;\n\n    constructor(protected cipherService: CipherService, componentFactoryResolver: ComponentFactoryResolver,\n        messagingService: MessagingService, userService: UserService) {\n        super(componentFactoryResolver, userService, messagingService, true);\n    }\n\n    async ngOnInit() {\n        if (await this.checkAccess()) {\n            await super.load();\n        }\n    }\n\n    async setCiphers() {\n        const allCiphers = await this.getAllCiphers();\n        const ciphersWithPasswords: CipherView[] = [];\n        this.passwordUseMap = new Map<string, number>();\n        allCiphers.forEach((c) => {\n            if (c.type !== CipherType.Login || c.login.password == null || c.login.password === '') {\n                return;\n            }\n            ciphersWithPasswords.push(c);\n            if (this.passwordUseMap.has(c.login.password)) {\n                this.passwordUseMap.set(c.login.password, this.passwordUseMap.get(c.login.password) + 1);\n            } else {\n                this.passwordUseMap.set(c.login.password, 1);\n            }\n        });\n        const reusedPasswordCiphers = ciphersWithPasswords.filter((c) =>\n            this.passwordUseMap.has(c.login.password) && this.passwordUseMap.get(c.login.password) > 1);\n        this.ciphers = reusedPasswordCiphers;\n    }\n\n    protected getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllDecrypted();\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { CipherType } from 'jslib/enums/cipherType';\n\nimport { CipherView } from 'jslib/models/view/cipherView';\n\nimport { CipherReportComponent } from './cipher-report.component';\n\n@Component({\n    selector: 'app-unsecured-websites-report',\n    templateUrl: 'unsecured-websites-report.component.html',\n})\nexport class UnsecuredWebsitesReportComponent extends CipherReportComponent implements OnInit {\n    constructor(protected cipherService: CipherService, componentFactoryResolver: ComponentFactoryResolver,\n        messagingService: MessagingService, userService: UserService) {\n        super(componentFactoryResolver, userService, messagingService, true);\n    }\n\n    async ngOnInit() {\n        if (await this.checkAccess()) {\n            await super.load();\n        }\n    }\n\n    async setCiphers() {\n        const allCiphers = await this.getAllCiphers();\n        const unsecuredCiphers = allCiphers.filter((c) => {\n            if (c.type !== CipherType.Login || !c.login.hasUris) {\n                return false;\n            }\n            return c.login.uris.some((u) => u.uri != null && u.uri.indexOf('http://') === 0);\n        });\n        this.ciphers = unsecuredCiphers;\n    }\n\n    protected getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllDecrypted();\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { CipherView } from 'jslib/models/view/cipherView';\n\nimport { CipherType } from 'jslib/enums/cipherType';\n\nimport { CipherReportComponent } from './cipher-report.component';\n\n@Component({\n    selector: 'app-weak-passwords-report',\n    templateUrl: 'weak-passwords-report.component.html',\n})\nexport class WeakPasswordsReportComponent extends CipherReportComponent implements OnInit {\n    passwordStrengthMap = new Map<string, [string, string]>();\n\n    private passwordStrengthCache = new Map<string, number>();\n\n    constructor(protected cipherService: CipherService, protected passwordGenerationService: PasswordGenerationService,\n        componentFactoryResolver: ComponentFactoryResolver, messagingService: MessagingService,\n        userService: UserService) {\n        super(componentFactoryResolver, userService, messagingService, true);\n    }\n\n    async ngOnInit() {\n        if (await this.checkAccess()) {\n            await super.load();\n        }\n    }\n\n    async setCiphers() {\n        const allCiphers = await this.getAllCiphers();\n        const weakPasswordCiphers: CipherView[] = [];\n        allCiphers.forEach((c) => {\n            if (c.type !== CipherType.Login || c.login.password == null || c.login.password === '') {\n                return;\n            }\n            const hasUsername = c.login.username != null && c.login.username.trim() !== '';\n            const cacheKey = c.login.password + '_____' + (hasUsername ? c.login.username : '');\n            if (!this.passwordStrengthCache.has(cacheKey)) {\n                let userInput: string[] = [];\n                if (hasUsername) {\n                    const atPosition = c.login.username.indexOf('@');\n                    if (atPosition > -1) {\n                        userInput = userInput.concat(\n                            c.login.username.substr(0, atPosition).trim().toLowerCase().split(/[^A-Za-z0-9]/))\n                            .filter((i) => i.length >= 3);\n                    } else {\n                        userInput = c.login.username.trim().toLowerCase().split(/[^A-Za-z0-9]/)\n                            .filter((i) => i.length >= 3);\n                    }\n                }\n                const result = this.passwordGenerationService.passwordStrength(c.login.password,\n                    userInput.length > 0 ? userInput : null);\n                this.passwordStrengthCache.set(cacheKey, result.score);\n            }\n            const score = this.passwordStrengthCache.get(cacheKey);\n            if (score != null && score <= 3) {\n                this.passwordStrengthMap.set(c.id, this.scoreKey(score));\n                weakPasswordCiphers.push(c);\n            }\n        });\n        this.ciphers = weakPasswordCiphers;\n    }\n\n    protected getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllDecrypted();\n    }\n\n    private scoreKey(score: number): [string, string] {\n        switch (score) {\n            case 4:\n                return ['strong', 'success'];\n            case 3:\n                return ['good', 'primary'];\n            case 2:\n                return ['weak', 'warning'];\n            default:\n                return ['veryWeak', 'danger'];\n        }\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n} from '@angular/core';\n\nimport { AuditService } from 'jslib/abstractions/audit.service';\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { CipherView } from 'jslib/models/view/cipherView';\n\nimport { CipherType } from 'jslib/enums/cipherType';\n\nimport { CipherReportComponent } from './cipher-report.component';\n\n@Component({\n    selector: 'app-exposed-passwords-report',\n    templateUrl: 'exposed-passwords-report.component.html',\n})\nexport class ExposedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n    exposedPasswordMap = new Map<string, number>();\n\n    constructor(protected cipherService: CipherService, protected auditService: AuditService,\n        componentFactoryResolver: ComponentFactoryResolver, messagingService: MessagingService,\n        userService: UserService) {\n        super(componentFactoryResolver, userService, messagingService, true);\n    }\n\n    ngOnInit() {\n        this.checkAccess();\n    }\n\n    async load() {\n        if (await this.checkAccess()) {\n            super.load();\n        }\n    }\n\n    async setCiphers() {\n        const allCiphers = await this.getAllCiphers();\n        const exposedPasswordCiphers: CipherView[] = [];\n        const promises: Array<Promise<void>> = [];\n        allCiphers.forEach((c) => {\n            if (c.type !== CipherType.Login || c.login.password == null || c.login.password === '') {\n                return;\n            }\n            const promise = this.auditService.passwordLeaked(c.login.password).then((exposedCount) => {\n                if (exposedCount > 0) {\n                    exposedPasswordCiphers.push(c);\n                    this.exposedPasswordMap.set(c.id, exposedCount);\n                }\n            });\n            promises.push(promise);\n        });\n        await Promise.all(promises);\n        this.ciphers = exposedPasswordCiphers;\n    }\n\n    protected getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllDecrypted();\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { CipherView } from 'jslib/models/view/cipherView';\n\nimport { CipherType } from 'jslib/enums/cipherType';\n\nimport { Utils } from 'jslib/misc/utils';\n\nimport { CipherReportComponent } from './cipher-report.component';\n\n@Component({\n    selector: 'app-inactive-two-factor-report',\n    templateUrl: 'inactive-two-factor-report.component.html',\n})\nexport class InactiveTwoFactorReportComponent extends CipherReportComponent implements OnInit {\n    services = new Map<string, string>();\n    cipherDocs = new Map<string, string>();\n\n    constructor(protected cipherService: CipherService, componentFactoryResolver: ComponentFactoryResolver,\n        messagingService: MessagingService, userService: UserService) {\n        super(componentFactoryResolver, userService, messagingService, true);\n    }\n\n    async ngOnInit() {\n        if (await this.checkAccess()) {\n            await super.load();\n        }\n    }\n\n    async setCiphers() {\n        try {\n            await this.load2fa();\n        } catch { }\n        if (this.services.size > 0) {\n            const allCiphers = await this.getAllCiphers();\n            const inactive2faCiphers: CipherView[] = [];\n            const promises: Array<Promise<void>> = [];\n            const docs = new Map<string, string>();\n            allCiphers.forEach((c) => {\n                if (c.type !== CipherType.Login || (c.login.totp != null && c.login.totp !== '') || !c.login.hasUris) {\n                    return;\n                }\n                for (let i = 0; i < c.login.uris.length; i++) {\n                    const u = c.login.uris[i];\n                    if (u.uri != null && u.uri !== '') {\n                        const hostname = Utils.getHostname(u.uri);\n                        if (hostname != null && this.services.has(hostname)) {\n                            if (this.services.get(hostname) != null) {\n                                docs.set(c.id, this.services.get(hostname));\n                            }\n                            inactive2faCiphers.push(c);\n                            break;\n                        }\n                    }\n                }\n            });\n            await Promise.all(promises);\n            this.ciphers = inactive2faCiphers;\n            this.cipherDocs = docs;\n        }\n    }\n\n    protected getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllDecrypted();\n    }\n\n    private async load2fa() {\n        if (this.services.size > 0) {\n            return;\n        }\n        const response = await fetch(new Request('https://twofactorauth.org/data.json'));\n        if (response.status !== 200) {\n            throw new Error();\n        }\n        const responseJson = await response.json();\n        for (const categoryName in responseJson) {\n            if (responseJson.hasOwnProperty(categoryName)) {\n                const category = responseJson[categoryName];\n                for (const serviceName in category) {\n                    if (category.hasOwnProperty(serviceName)) {\n                        const service = category[serviceName];\n                        if (service.tfa && service.software && service.url != null) {\n                            const hostname = Utils.getHostname(service.url);\n                            if (hostname != null) {\n                                this.services.set(hostname, service.doc);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n","import {\n    Pipe,\n    PipeTransform,\n} from '@angular/core';\n\n@Pipe({\n    name: 'search',\n})\nexport class SearchPipe implements PipeTransform {\n    transform(items: any[], searchText: string, prop1?: string, prop2?: string, prop3?: string): any[] {\n        if (items == null || items.length === 0) {\n            return [];\n        }\n\n        if (searchText == null || searchText.length < 2) {\n            return items;\n        }\n\n        searchText = searchText.trim().toLowerCase();\n        return items.filter((i) => {\n            if (prop1 != null && i[prop1] != null && i[prop1].toString().toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            if (prop2 != null && i[prop2] != null && i[prop2].toString().toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            if (prop3 != null && i[prop3] != null && i[prop3].toString().toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            return false;\n        });\n    }\n}\n","export class SelectionReadOnlyRequest {\n    id: string;\n    readOnly: boolean;\n\n    constructor(id: string, readOnly: boolean) {\n        this.id = id;\n        this.readOnly = readOnly;\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n    id: string;\n    readOnly: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.readOnly = this.getResponseProperty('ReadOnly');\n    }\n}\n","import { EnvironmentService } from './environment.service';\n\nexport abstract class NotificationsService {\n    init: (environmentService: EnvironmentService) => Promise<void>;\n    updateConnection: (sync?: boolean) => Promise<void>;\n    reconnectFromActivity: () => Promise<void>;\n    disconnectFromInactivity: () => Promise<void>;\n}\n","export abstract class SettingsService {\n    clearCache: () => void;\n    getEquivalentDomains: () => Promise<any>;\n    setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n    clear: (userId: string) => Promise<void>;\n}\n","import {\n    Component,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\n\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\n@Component({\n    selector: 'app-frontend-layout',\n    templateUrl: 'frontend-layout.component.html',\n})\nexport class FrontendLayoutComponent implements OnInit, OnDestroy {\n    version: string;\n    year: string = '2015';\n\n    constructor(private platformUtilsService: PlatformUtilsService) { }\n\n    ngOnInit() {\n        this.year = new Date().getFullYear().toString();\n        this.version = this.platformUtilsService.getApplicationVersion();\n        document.body.classList.add('layout_frontend');\n    }\n\n    ngOnDestroy() {\n        document.body.classList.remove('layout_frontend');\n    }\n}\n","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { AuthService } from 'jslib/abstractions/auth.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { StateService } from 'jslib/abstractions/state.service';\nimport { StorageService } from 'jslib/abstractions/storage.service';\n\nimport { LoginComponent as BaseLoginComponent } from 'jslib/angular/components/login.component';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: 'login.component.html',\n})\nexport class LoginComponent extends BaseLoginComponent {\n    constructor(authService: AuthService, router: Router,\n        i18nService: I18nService, private route: ActivatedRoute,\n        storageService: StorageService, stateService: StateService,\n        platformUtilsService: PlatformUtilsService) {\n        super(authService, router, platformUtilsService, i18nService, storageService, stateService);\n        this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n    }\n\n    async ngOnInit() {\n        const queryParamsSub = this.route.queryParams.subscribe(async (qParams) => {\n            if (qParams.email != null && qParams.email.indexOf('@') > -1) {\n                this.email = qParams.email;\n            }\n            if (qParams.premium != null) {\n                this.stateService.save('loginRedirect', { route: '/settings/premium' });\n            } else if (qParams.org != null) {\n                this.stateService.save('loginRedirect',\n                    { route: '/settings/create-organization', qParams: { plan: qParams.org } });\n            }\n            await super.ngOnInit();\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n    }\n\n    async goAfterLogIn() {\n        const invite = await this.stateService.get<any>('orgInvitation');\n        if (invite != null) {\n            this.router.navigate(['accept-organization'], { queryParams: invite });\n        } else {\n            const loginRedirect = await this.stateService.get<any>('loginRedirect');\n            if (loginRedirect != null) {\n                this.router.navigate([loginRedirect.route], { queryParams: loginRedirect.qParams });\n                await this.stateService.remove('loginRedirect');\n            } else {\n                this.router.navigate([this.successRoute]);\n            }\n        }\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { Router } from '@angular/router';\n\nimport { TwoFactorOptionsComponent } from './two-factor-options.component';\n\nimport { ModalComponent } from '../modal.component';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { AuthService } from 'jslib/abstractions/auth.service';\nimport { EnvironmentService } from 'jslib/abstractions/environment.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { StateService } from 'jslib/abstractions/state.service';\nimport { StorageService } from 'jslib/abstractions/storage.service';\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from 'jslib/angular/components/two-factor.component';\n\n@Component({\n    selector: 'app-two-factor',\n    templateUrl: 'two-factor.component.html',\n})\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n    @ViewChild('twoFactorOptions', { read: ViewContainerRef }) twoFactorOptionsModal: ViewContainerRef;\n\n    constructor(authService: AuthService, router: Router,\n        i18nService: I18nService, apiService: ApiService,\n        platformUtilsService: PlatformUtilsService, stateService: StateService,\n        environmentService: EnvironmentService, private componentFactoryResolver: ComponentFactoryResolver,\n        storageService: StorageService) {\n        super(authService, router, i18nService, apiService, platformUtilsService, window, environmentService,\n            stateService, storageService);\n        this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n    }\n\n    anotherMethod() {\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        const modal = this.twoFactorOptionsModal.createComponent(factory).instance;\n        const childComponent = modal.show<TwoFactorOptionsComponent>(TwoFactorOptionsComponent,\n            this.twoFactorOptionsModal);\n\n        childComponent.onProviderSelected.subscribe(async (provider: TwoFactorProviderType) => {\n            modal.close();\n            this.selectedProviderType = provider;\n            await this.init();\n        });\n        childComponent.onRecoverSelected.subscribe(() => {\n            modal.close();\n        });\n    }\n\n    async goAfterLogIn() {\n        const invite = await this.stateService.get<any>('orgInvitation');\n        if (invite != null) {\n            this.router.navigate(['accept-organization'], { queryParams: invite });\n        } else {\n            const loginRedirect = await this.stateService.get<any>('loginRedirect');\n            if (loginRedirect != null) {\n                this.router.navigate([loginRedirect.route], { queryParams: loginRedirect.qParams });\n                await this.stateService.remove('loginRedirect');\n            } else {\n                this.router.navigate([this.successRoute]);\n            }\n        }\n    }\n}\n","import {\n    Component,\n    Input,\n    OnChanges,\n} from '@angular/core';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\n@Component({\n    selector: 'app-password-strength',\n    templateUrl: 'password-strength.component.html',\n})\nexport class PasswordStrengthComponent implements OnChanges {\n    @Input() score?: number;\n    @Input() showText = false;\n\n    scoreWidth = 0;\n    color = 'bg-danger';\n    text: string;\n\n    constructor(private i18nService: I18nService) { }\n\n    ngOnChanges(): void {\n        this.scoreWidth = this.score == null ? 0 : (this.score + 1) * 20;\n        switch (this.score) {\n            case 4:\n                this.color = 'bg-success';\n                this.text = this.i18nService.t('strong');\n                break;\n            case 3:\n                this.color = 'bg-primary';\n                this.text = this.i18nService.t('good');\n                break;\n            case 2:\n                this.color = 'bg-warning';\n                this.text = this.i18nService.t('weak');\n                break;\n            default:\n                this.color = 'bg-danger';\n                this.text = this.score != null ? this.i18nService.t('weak') : null;\n                break;\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { AuthService } from 'jslib/abstractions/auth.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { StateService } from 'jslib/abstractions/state.service';\n\nimport { RegisterComponent as BaseRegisterComponent } from 'jslib/angular/components/register.component';\n\n@Component({\n    selector: 'app-register',\n    templateUrl: 'register.component.html',\n})\nexport class RegisterComponent extends BaseRegisterComponent {\n    showCreateOrgMessage = false;\n    showTerms = true;\n\n    constructor(authService: AuthService, router: Router,\n        i18nService: I18nService, cryptoService: CryptoService,\n        apiService: ApiService, private route: ActivatedRoute,\n        stateService: StateService, platformUtilsService: PlatformUtilsService,\n        passwordGenerationService: PasswordGenerationService) {\n        super(authService, router, i18nService, cryptoService, apiService, stateService, platformUtilsService,\n            passwordGenerationService);\n        this.showTerms = !platformUtilsService.isSelfHost();\n    }\n\n    ngOnInit() {\n        const queryParamsSub = this.route.queryParams.subscribe((qParams) => {\n            if (qParams.email != null && qParams.email.indexOf('@') > -1) {\n                this.email = qParams.email;\n            }\n            if (qParams.premium != null) {\n                this.stateService.save('loginRedirect', { route: '/settings/premium' });\n            } else if (qParams.org != null) {\n                this.showCreateOrgMessage = true;\n                this.stateService.save('loginRedirect',\n                    { route: '/settings/create-organization', qParams: { plan: qParams.org } });\n            }\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n    }\n}\n","export enum KdfType {\n    PBKDF2_SHA256 = 0,\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { HintComponent as BaseHintComponent } from 'jslib/angular/components/hint.component';\n\n@Component({\n    selector: 'app-hint',\n    templateUrl: 'hint.component.html',\n})\nexport class HintComponent extends BaseHintComponent {\n    constructor(router: Router, i18nService: I18nService,\n        apiService: ApiService, platformUtilsService: PlatformUtilsService) {\n        super(router, i18nService, apiService, platformUtilsService);\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { EnvironmentService } from 'jslib/abstractions/environment.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { LockService } from 'jslib/abstractions/lock.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { StateService } from 'jslib/abstractions/state.service';\nimport { StorageService } from 'jslib/abstractions/storage.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { RouterService } from '../services/router.service';\n\nimport { LockComponent as BaseLockComponent } from 'jslib/angular/components/lock.component';\n\n@Component({\n    selector: 'app-lock',\n    templateUrl: 'lock.component.html',\n})\nexport class LockComponent extends BaseLockComponent {\n    constructor(router: Router, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService, messagingService: MessagingService,\n        userService: UserService, cryptoService: CryptoService,\n        storageService: StorageService, lockService: LockService,\n        environmentService: EnvironmentService, private routerService: RouterService,\n        stateService: StateService) {\n        super(router, i18nService, platformUtilsService, messagingService, userService, cryptoService,\n            storageService, lockService, environmentService, stateService);\n    }\n\n    async ngOnInit() {\n        await super.ngOnInit();\n        const authed = await this.userService.isAuthenticated();\n        if (!authed) {\n            this.router.navigate(['/']);\n        } else if (await this.cryptoService.hasKey()) {\n            this.router.navigate(['vault']);\n        }\n\n        this.onSuccessfulSubmit = () => {\n            const previousUrl = this.routerService.getPreviousUrl();\n            if (previousUrl !== '/' && previousUrl.indexOf('lock') === -1) {\n                this.successRoute = previousUrl;\n            }\n            this.router.navigate([this.successRoute]);\n        };\n    }\n}\n","export enum EncryptionType {\n    AesCbc256_B64 = 0,\n    AesCbc128_HmacSha256_B64 = 1,\n    AesCbc256_HmacSha256_B64 = 2,\n    Rsa2048_OaepSha256_B64 = 3,\n    Rsa2048_OaepSha1_B64 = 4,\n    Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n    Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { VerifyEmailRequest } from 'jslib/models/request/verifyEmailRequest';\n\n@Component({\n    selector: 'app-verify-email-token',\n    templateUrl: 'verify-email-token.component.html',\n})\nexport class VerifyEmailTokenComponent implements OnInit {\n    constructor(private router: Router, private toasterService: ToasterService,\n        private i18nService: I18nService, private route: ActivatedRoute,\n        private apiService: ApiService, private userService: UserService) { }\n\n    ngOnInit() {\n        let fired = false;\n        this.route.queryParams.subscribe(async (qParams) => {\n            if (fired) {\n                return;\n            }\n            fired = true;\n            if (qParams.userId != null && qParams.token != null) {\n                try {\n                    await this.apiService.postAccountVerifyEmailToken(\n                        new VerifyEmailRequest(qParams.userId, qParams.token));\n                    const authed = await this.userService.isAuthenticated();\n                    if (authed) {\n                        await this.apiService.refreshIdentityToken();\n                    }\n                    this.toasterService.popAsync('success', null, this.i18nService.t('emailVerified'));\n                    this.router.navigate(['/']);\n                    return;\n                } catch { }\n            }\n            this.toasterService.popAsync('error', null, this.i18nService.t('emailVerifiedFailed'));\n            this.router.navigate(['/']);\n        });\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport {\n    Toast,\n    ToasterService,\n} from 'angular2-toaster';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { StateService } from 'jslib/abstractions/state.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { OrganizationUserAcceptRequest } from 'jslib/models/request/organizationUserAcceptRequest';\n\n@Component({\n    selector: 'app-accept-organization',\n    templateUrl: 'accept-organization.component.html',\n})\nexport class AcceptOrganizationComponent implements OnInit {\n    loading = true;\n    authed = false;\n    orgName: string;\n    email: string;\n    actionPromise: Promise<any>;\n\n    constructor(private router: Router, private toasterService: ToasterService,\n        private i18nService: I18nService, private route: ActivatedRoute,\n        private apiService: ApiService, private userService: UserService,\n        private stateService: StateService) { }\n\n    ngOnInit() {\n        let fired = false;\n        this.route.queryParams.subscribe(async (qParams) => {\n            if (fired) {\n                return;\n            }\n            fired = true;\n            await this.stateService.remove('orgInvitation');\n            let error = qParams.organizationId == null || qParams.organizationUserId == null || qParams.token == null;\n            if (!error) {\n                this.authed = await this.userService.isAuthenticated();\n                if (this.authed) {\n                    const request = new OrganizationUserAcceptRequest();\n                    request.token = qParams.token;\n                    try {\n                        this.actionPromise = this.apiService.postOrganizationUserAccept(qParams.organizationId,\n                            qParams.organizationUserId, request);\n                        await this.actionPromise;\n                        const toast: Toast = {\n                            type: 'success',\n                            title: this.i18nService.t('inviteAccepted'),\n                            body: this.i18nService.t('inviteAcceptedDesc'),\n                            timeout: 10000,\n                        };\n                        this.toasterService.popAsync(toast);\n                        this.router.navigate(['/vault']);\n                    } catch {\n                        error = true;\n                    }\n                } else {\n                    await this.stateService.save('orgInvitation', qParams);\n                    this.email = qParams.email;\n                    this.orgName = qParams.organizationName;\n                    if (this.orgName != null) {\n                        // Fix URL encoding of space issue with Angular\n                        this.orgName = this.orgName.replace(/\\+/g, ' ');\n                    }\n                }\n            }\n\n            if (error) {\n                this.toasterService.popAsync('error', null, this.i18nService.t('inviteAcceptFailed'));\n                this.router.navigate(['/']);\n            }\n\n            this.loading = false;\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { AuthService } from 'jslib/abstractions/auth.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { TwoFactorRecoveryRequest } from 'jslib/models/request/twoFactorRecoveryRequest';\n\n@Component({\n    selector: 'app-recover-two-factor',\n    templateUrl: 'recover-two-factor.component.html',\n})\nexport class RecoverTwoFactorComponent {\n    email: string;\n    masterPassword: string;\n    recoveryCode: string;\n    formPromise: Promise<any>;\n\n    constructor(private router: Router, private apiService: ApiService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private i18nService: I18nService, private cryptoService: CryptoService,\n        private authService: AuthService) { }\n\n    async submit() {\n        try {\n            const request = new TwoFactorRecoveryRequest();\n            request.recoveryCode = this.recoveryCode.replace(/\\s/g, '').toLowerCase();\n            request.email = this.email.trim().toLowerCase();\n            const key = await this.authService.makePreloginKey(this.masterPassword, request.email);\n            request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n            this.formPromise = this.apiService.postTwoFactorRecover(request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Recovered 2FA' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('twoStepRecoverDisabled'));\n            this.router.navigate(['/']);\n        } catch { }\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { DeleteRecoverRequest } from 'jslib/models/request/deleteRecoverRequest';\n\n@Component({\n    selector: 'app-recover-delete',\n    templateUrl: 'recover-delete.component.html',\n})\nexport class RecoverDeleteComponent {\n    email: string;\n    formPromise: Promise<any>;\n\n    constructor(private router: Router, private apiService: ApiService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private i18nService: I18nService) {\n    }\n\n    async submit() {\n        try {\n            const request = new DeleteRecoverRequest();\n            request.email = this.email.trim().toLowerCase();\n            this.formPromise = this.apiService.postAccountRecoverDelete(request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Started Delete Recovery' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('deleteRecoverEmailSent'));\n            this.router.navigate(['/']);\n        } catch { }\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { VerifyDeleteRecoverRequest } from 'jslib/models/request/verifyDeleteRecoverRequest';\n\n@Component({\n    selector: 'app-verify-recover-delete',\n    templateUrl: 'verify-recover-delete.component.html',\n})\nexport class VerifyRecoverDeleteComponent implements OnInit {\n    email: string;\n    formPromise: Promise<any>;\n\n    private userId: string;\n    private token: string;\n\n    constructor(private router: Router, private apiService: ApiService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private i18nService: I18nService, private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        let fired = false;\n        this.route.queryParams.subscribe(async (qParams) => {\n            if (fired) {\n                return;\n            }\n            fired = true;\n            if (qParams.userId != null && qParams.token != null && qParams.email != null) {\n                this.userId = qParams.userId;\n                this.token = qParams.token;\n                this.email = qParams.email;\n            } else {\n                this.router.navigate(['/']);\n            }\n        });\n    }\n\n    async submit() {\n        try {\n            const request = new VerifyDeleteRecoverRequest(this.userId, this.token);\n            this.formPromise = this.apiService.postAccountRecoverDeleteToken(request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Recovered Delete' });\n            this.toasterService.popAsync('success', this.i18nService.t('accountDeleted'),\n                this.i18nService.t('accountDeletedDesc'));\n            this.router.navigate(['/']);\n        } catch { }\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { TokenService } from 'jslib/abstractions/token.service';\n\n@Component({\n    selector: 'app-navbar',\n    templateUrl: 'navbar.component.html',\n})\nexport class NavbarComponent implements OnInit {\n    selfHosted = false;\n    name: string;\n    email: string;\n\n    constructor(private messagingService: MessagingService, private platformUtilsService: PlatformUtilsService,\n        private tokenService: TokenService) {\n        this.selfHosted = this.platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        this.name = await this.tokenService.getName();\n        this.email = await this.tokenService.getEmail();\n        if (this.name == null || this.name.trim() === '') {\n            this.name = this.email;\n        }\n    }\n\n    lock() {\n        this.messagingService.send('lockVault');\n    }\n\n    logOut() {\n        this.messagingService.send('logout');\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: 'footer.component.html',\n})\nexport class FooterComponent implements OnInit {\n    version: string;\n    year: string = '2015';\n\n    constructor(private platformUtilsService: PlatformUtilsService) { }\n\n    ngOnInit() {\n        this.year = new Date().getFullYear().toString();\n        this.version = this.platformUtilsService.getApplicationVersion();\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\n@Component({\n    selector: 'app-user-layout',\n    templateUrl: 'user-layout.component.html',\n})\nexport class UserLayoutComponent implements OnInit {\n    ngOnInit() {\n        document.body.classList.remove('layout_frontend');\n    }\n}\n","import {\n    ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { CipherType } from 'jslib/enums/cipherType';\n\nimport { CipherView } from 'jslib/models/view/cipherView';\n\nimport { ModalComponent } from '../modal.component';\n\nimport { OrganizationsComponent } from '../settings/organizations.component';\nimport { UpdateKeyComponent } from '../settings/update-key.component';\nimport { AddEditComponent } from './add-edit.component';\nimport { AttachmentsComponent } from './attachments.component';\nimport { BulkDeleteComponent } from './bulk-delete.component';\nimport { BulkMoveComponent } from './bulk-move.component';\nimport { BulkShareComponent } from './bulk-share.component';\nimport { CiphersComponent } from './ciphers.component';\nimport { CollectionsComponent } from './collections.component';\nimport { FolderAddEditComponent } from './folder-add-edit.component';\nimport { GroupingsComponent } from './groupings.component';\nimport { ShareComponent } from './share.component';\n\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib/abstractions/sync.service';\nimport { TokenService } from 'jslib/abstractions/token.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { BroadcasterService } from 'jslib/angular/services/broadcaster.service';\n\nconst BroadcasterSubscriptionId = 'VaultComponent';\n\n@Component({\n    selector: 'app-vault',\n    templateUrl: 'vault.component.html',\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n    @ViewChild(GroupingsComponent) groupingsComponent: GroupingsComponent;\n    @ViewChild(CiphersComponent) ciphersComponent: CiphersComponent;\n    @ViewChild(OrganizationsComponent) organizationsComponent: OrganizationsComponent;\n    @ViewChild('attachments', { read: ViewContainerRef }) attachmentsModalRef: ViewContainerRef;\n    @ViewChild('folderAddEdit', { read: ViewContainerRef }) folderAddEditModalRef: ViewContainerRef;\n    @ViewChild('cipherAddEdit', { read: ViewContainerRef }) cipherAddEditModalRef: ViewContainerRef;\n    @ViewChild('share', { read: ViewContainerRef }) shareModalRef: ViewContainerRef;\n    @ViewChild('collections', { read: ViewContainerRef }) collectionsModalRef: ViewContainerRef;\n    @ViewChild('bulkDeleteTemplate', { read: ViewContainerRef }) bulkDeleteModalRef: ViewContainerRef;\n    @ViewChild('bulkMoveTemplate', { read: ViewContainerRef }) bulkMoveModalRef: ViewContainerRef;\n    @ViewChild('bulkShareTemplate', { read: ViewContainerRef }) bulkShareModalRef: ViewContainerRef;\n    @ViewChild('updateKeyTemplate', { read: ViewContainerRef }) updateKeyModalRef: ViewContainerRef;\n\n    favorites: boolean = false;\n    type: CipherType = null;\n    folderId: string = null;\n    collectionId: string = null;\n    showVerifyEmail = false;\n    showBrowserOutdated = false;\n    showUpdateKey = false;\n    showPremiumCallout = false;\n\n    private modal: ModalComponent = null;\n\n    constructor(private syncService: SyncService, private route: ActivatedRoute,\n        private router: Router, private changeDetectorRef: ChangeDetectorRef,\n        private i18nService: I18nService, private componentFactoryResolver: ComponentFactoryResolver,\n        private tokenService: TokenService, private cryptoService: CryptoService,\n        private messagingService: MessagingService, private userService: UserService,\n        private platformUtilsService: PlatformUtilsService, private toasterService: ToasterService,\n        private broadcasterService: BroadcasterService, private ngZone: NgZone) { }\n\n    async ngOnInit() {\n        this.showVerifyEmail = !(await this.tokenService.getEmailVerified());\n        this.showBrowserOutdated = window.navigator.userAgent.indexOf('MSIE') !== -1;\n\n        const queryParamsSub = this.route.queryParams.subscribe(async (params) => {\n            await this.syncService.fullSync(false);\n\n            this.showUpdateKey = !(await this.cryptoService.hasEncKey());\n            const canAccessPremium = await this.userService.canAccessPremium();\n            this.showPremiumCallout = !this.showVerifyEmail && !canAccessPremium &&\n                !this.platformUtilsService.isSelfHost();\n\n            await Promise.all([\n                this.groupingsComponent.load(),\n                this.organizationsComponent.load(),\n            ]);\n\n            if (params == null) {\n                this.groupingsComponent.selectedAll = true;\n                await this.ciphersComponent.reload();\n            } else {\n                if (params.favorites) {\n                    this.groupingsComponent.selectedFavorites = true;\n                    await this.filterFavorites();\n                } else if (params.type) {\n                    const t = parseInt(params.type, null);\n                    this.groupingsComponent.selectedType = t;\n                    await this.filterCipherType(t);\n                } else if (params.folderId) {\n                    this.groupingsComponent.selectedFolder = true;\n                    this.groupingsComponent.selectedFolderId = params.folderId;\n                    await this.filterFolder(params.folderId);\n                } else if (params.collectionId) {\n                    this.groupingsComponent.selectedCollectionId = params.collectionId;\n                    await this.filterCollection(params.collectionId);\n                } else {\n                    this.groupingsComponent.selectedAll = true;\n                    await this.ciphersComponent.reload();\n                }\n            }\n\n            this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n                this.ngZone.run(async () => {\n                    switch (message.command) {\n                        case 'syncCompleted':\n                            if (message.successfully) {\n                                await Promise.all([\n                                    this.groupingsComponent.load(),\n                                    this.organizationsComponent.load(),\n                                    this.ciphersComponent.load(this.ciphersComponent.filter),\n                                ]);\n                                this.changeDetectorRef.detectChanges();\n                            }\n                            break;\n                    }\n                });\n            });\n\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    async clearGroupingFilters() {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchVault');\n        await this.ciphersComponent.reload();\n        this.clearFilters();\n        this.go();\n    }\n\n    async filterFavorites() {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchFavorites');\n        await this.ciphersComponent.reload((c) => c.favorite);\n        this.clearFilters();\n        this.favorites = true;\n        this.go();\n    }\n\n    async filterCipherType(type: CipherType) {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchType');\n        await this.ciphersComponent.reload((c) => c.type === type);\n        this.clearFilters();\n        this.type = type;\n        this.go();\n    }\n\n    async filterFolder(folderId: string) {\n        this.ciphersComponent.showAddNew = true;\n        folderId = folderId === 'none' ? null : folderId;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchFolder');\n        await this.ciphersComponent.reload((c) => c.folderId === folderId);\n        this.clearFilters();\n        this.folderId = folderId == null ? 'none' : folderId;\n        this.go();\n    }\n\n    async filterCollection(collectionId: string) {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchCollection');\n        await this.ciphersComponent.reload((c) => c.collectionIds != null &&\n            c.collectionIds.indexOf(collectionId) > -1);\n        this.clearFilters();\n        this.collectionId = collectionId;\n        this.go();\n    }\n\n    filterSearchText(searchText: string) {\n        this.ciphersComponent.searchText = searchText;\n        this.ciphersComponent.search(200);\n    }\n\n    async editCipherAttachments(cipher: CipherView) {\n        const canAccessPremium = await this.userService.canAccessPremium();\n        if (cipher.organizationId == null && !canAccessPremium) {\n            this.messagingService.send('premiumRequired');\n            return;\n        } else if (cipher.organizationId != null) {\n            const org = await this.userService.getOrganization(cipher.organizationId);\n            if (org != null && (org.maxStorageGb == null || org.maxStorageGb === 0)) {\n                this.messagingService.send('upgradeOrganization', { organizationId: cipher.organizationId });\n                return;\n            }\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.attachmentsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<AttachmentsComponent>(AttachmentsComponent, this.attachmentsModalRef);\n\n        childComponent.cipherId = cipher.id;\n        let madeAttachmentChanges = false;\n        childComponent.onUploadedAttachment.subscribe(() => madeAttachmentChanges = true);\n        childComponent.onDeletedAttachment.subscribe(() => madeAttachmentChanges = true);\n        childComponent.onReuploadedAttachment.subscribe(() => madeAttachmentChanges = true);\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n            if (madeAttachmentChanges) {\n                await this.ciphersComponent.refresh();\n            }\n            madeAttachmentChanges = false;\n        });\n    }\n\n    shareCipher(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.shareModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<ShareComponent>(ShareComponent, this.shareModalRef);\n\n        childComponent.cipherId = cipher.id;\n        childComponent.onSharedCipher.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    editCipherCollections(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.collectionsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<CollectionsComponent>(CollectionsComponent, this.collectionsModalRef);\n\n        childComponent.cipherId = cipher.id;\n        childComponent.onSavedCollections.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    async addFolder() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.folderAddEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<FolderAddEditComponent>(\n            FolderAddEditComponent, this.folderAddEditModalRef);\n\n        childComponent.folderId = null;\n        childComponent.onSavedFolder.subscribe(async () => {\n            this.modal.close();\n            await this.groupingsComponent.loadFolders();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    async editFolder(folderId: string) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.folderAddEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<FolderAddEditComponent>(\n            FolderAddEditComponent, this.folderAddEditModalRef);\n\n        childComponent.folderId = folderId;\n        childComponent.onSavedFolder.subscribe(async () => {\n            this.modal.close();\n            await this.groupingsComponent.loadFolders();\n        });\n        childComponent.onDeletedFolder.subscribe(async () => {\n            this.modal.close();\n            await this.groupingsComponent.loadFolders();\n            await this.filterFolder('none');\n            this.groupingsComponent.selectedFolderId = null;\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    addCipher() {\n        const component = this.editCipher(null);\n        component.type = this.type;\n        component.folderId = this.folderId === 'none' ? null : this.folderId;\n        if (this.collectionId != null) {\n            const collection = this.groupingsComponent.collections.filter((c) => c.id === this.collectionId);\n            if (collection.length > 0) {\n                component.organizationId = collection[0].organizationId;\n                component.collectionIds = [this.collectionId];\n            }\n        }\n    }\n\n    editCipher(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.cipherAddEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<AddEditComponent>(\n            AddEditComponent, this.cipherAddEditModalRef);\n\n        childComponent.cipherId = cipher == null ? null : cipher.id;\n        childComponent.onSavedCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n        childComponent.onDeletedCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n\n        return childComponent;\n    }\n\n    bulkDelete() {\n        const selectedIds = this.ciphersComponent.getSelectedIds();\n        if (selectedIds.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nothingSelected'));\n            return;\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.bulkDeleteModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<BulkDeleteComponent>(BulkDeleteComponent, this.bulkDeleteModalRef);\n\n        childComponent.cipherIds = selectedIds;\n        childComponent.onDeleted.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    bulkShare() {\n        const selectedCiphers = this.ciphersComponent.getSelected();\n        if (selectedCiphers.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nothingSelected'));\n            return;\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.bulkShareModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<BulkShareComponent>(BulkShareComponent, this.bulkShareModalRef);\n\n        childComponent.ciphers = selectedCiphers;\n        childComponent.onShared.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    bulkMove() {\n        const selectedIds = this.ciphersComponent.getSelectedIds();\n        if (selectedIds.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nothingSelected'));\n            return;\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.bulkMoveModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<BulkMoveComponent>(BulkMoveComponent, this.bulkMoveModalRef);\n\n        childComponent.cipherIds = selectedIds;\n        childComponent.onMoved.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    selectAll(select: boolean) {\n        this.ciphersComponent.selectAll(select);\n    }\n\n    updateKey() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.updateKeyModalRef.createComponent(factory).instance;\n        this.modal.show<UpdateKeyComponent>(UpdateKeyComponent, this.updateKeyModalRef);\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    private clearFilters() {\n        this.folderId = null;\n        this.collectionId = null;\n        this.favorites = false;\n        this.type = null;\n    }\n\n    private go(queryParams: any = null) {\n        if (queryParams == null) {\n            queryParams = {\n                favorites: this.favorites ? true : null,\n                type: this.type,\n                folderId: this.folderId,\n                collectionId: this.collectionId,\n            };\n        }\n\n        this.router.navigate([], {\n            relativeTo: this.route,\n            queryParams: queryParams,\n            replaceUrl: true,\n        });\n    }\n}\n","import { CipherRequest } from './cipherRequest';\n\nimport { Cipher } from '../domain/cipher';\n\nexport class CipherWithIdRequest extends CipherRequest {\n    id: string;\n\n    constructor(cipher: Cipher) {\n        super(cipher);\n        this.id = cipher.id;\n    }\n}\n","import { Folder } from '../domain/folder';\n\nexport class FolderRequest {\n    name: string;\n\n    constructor(folder: Folder) {\n        this.name = folder.name ? folder.name.encryptedString : null;\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { AttachmentView } from 'jslib/models/view/attachmentView';\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from 'jslib/angular/components/attachments.component';\n\n@Component({\n    selector: 'app-vault-attachments',\n    templateUrl: 'attachments.component.html',\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n    constructor(cipherService: CipherService, i18nService: I18nService,\n        cryptoService: CryptoService, userService: UserService,\n        platformUtilsService: PlatformUtilsService) {\n        super(cipherService, i18nService, cryptoService, userService, platformUtilsService, window);\n    }\n\n    protected async reupload(attachment: AttachmentView) {\n        if (this.showFixOldAttachments(attachment)) {\n            await this.reuploadCipherAttachment(attachment, false);\n        }\n    }\n\n    protected showFixOldAttachments(attachment: AttachmentView) {\n        return attachment.key == null && this.cipher.organizationId == null;\n    }\n}\n","import {\n    Component,\n    OnDestroy,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { CollectionView } from 'jslib/models/view/collectionView';\n\nimport { CollectionsComponent as BaseCollectionsComponent } from 'jslib/angular/components/collections.component';\n\n@Component({\n    selector: 'app-vault-collections',\n    templateUrl: 'collections.component.html',\n})\nexport class CollectionsComponent extends BaseCollectionsComponent implements OnDestroy {\n    constructor(collectionService: CollectionService, platformUtilsService: PlatformUtilsService,\n        i18nService: I18nService, cipherService: CipherService) {\n        super(collectionService, platformUtilsService, i18nService, cipherService);\n    }\n\n    ngOnDestroy() {\n        this.selectAll(false);\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n    }\n\n    selectAll(select: boolean) {\n        this.collections.forEach((c) => this.check(c, select));\n    }\n}\n","import {\n    Component,\n    NgZone,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\n\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { TokenService } from 'jslib/abstractions/token.service';\n\nimport { BroadcasterService } from 'jslib/angular/services/broadcaster.service';\n\nconst BroadcasterSubscriptionId = 'SettingsComponent';\n\n@Component({\n    selector: 'app-settings',\n    templateUrl: 'settings.component.html',\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n    premium: boolean;\n    selfHosted: boolean;\n\n    constructor(private tokenService: TokenService, private broadcasterService: BroadcasterService,\n        private ngZone: NgZone, private platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n            this.ngZone.run(async () => {\n                switch (message.command) {\n                    case 'purchasedPremium':\n                        await this.load();\n                        break;\n                    default:\n                }\n            });\n        });\n\n        this.selfHosted = await this.platformUtilsService.isSelfHost();\n        await this.load();\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    async load() {\n        this.premium = await this.tokenService.getPremium();\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ModalComponent } from '../modal.component';\nimport { DeauthorizeSessionsComponent } from './deauthorize-sessions.component';\nimport { DeleteAccountComponent } from './delete-account.component';\nimport { PurgeVaultComponent } from './purge-vault.component';\n\n@Component({\n    selector: 'app-account',\n    templateUrl: 'account.component.html',\n})\nexport class AccountComponent {\n    @ViewChild('deauthorizeSessionsTemplate', { read: ViewContainerRef }) deauthModalRef: ViewContainerRef;\n    @ViewChild('purgeVaultTemplate', { read: ViewContainerRef }) purgeModalRef: ViewContainerRef;\n    @ViewChild('deleteAccountTemplate', { read: ViewContainerRef }) deleteModalRef: ViewContainerRef;\n\n    private modal: ModalComponent = null;\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver) { }\n\n    deauthorizeSessions() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.deauthModalRef.createComponent(factory).instance;\n        this.modal.show<DeauthorizeSessionsComponent>(DeauthorizeSessionsComponent, this.deauthModalRef);\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    purgeVault() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.purgeModalRef.createComponent(factory).instance;\n        this.modal.show<PurgeVaultComponent>(PurgeVaultComponent, this.purgeModalRef);\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    deleteAccount() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.deleteModalRef.createComponent(factory).instance;\n        this.modal.show<DeleteAccountComponent>(DeleteAccountComponent, this.deleteModalRef);\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n}\n","import {\n    Component,\n    Input,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { PasswordVerificationRequest } from 'jslib/models/request/passwordVerificationRequest';\n\n@Component({\n    selector: 'app-purge-vault',\n    templateUrl: 'purge-vault.component.html',\n})\nexport class PurgeVaultComponent {\n    @Input() organizationId?: string = null;\n\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private cryptoService: CryptoService, private router: Router) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        try {\n            this.formPromise = this.apiService.postPurgeCiphers(request, this.organizationId);\n            await this.formPromise;\n            this.analytics.eventTrack.next({\n                action: this.organizationId != null ? 'Purged Organization Vault' : 'Purged Vault',\n            });\n            this.toasterService.popAsync('success', null, this.i18nService.t('vaultPurged'));\n            if (this.organizationId != null) {\n                this.router.navigate(['organizations', this.organizationId, 'vault']);\n            } else {\n                this.router.navigate(['vault']);\n            }\n        } catch { }\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { LockService } from 'jslib/abstractions/lock.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { StateService } from 'jslib/abstractions/state.service';\nimport { StorageService } from 'jslib/abstractions/storage.service';\n\nimport { ConstantsService } from 'jslib/services/constants.service';\n\nimport { Utils } from 'jslib/misc/utils';\n\n@Component({\n    selector: 'app-options',\n    templateUrl: 'options.component.html',\n})\nexport class OptionsComponent implements OnInit {\n    lockOption: number = null;\n    disableIcons: boolean;\n    enableGravatars: boolean;\n    locale: string;\n    lockOptions: any[];\n    localeOptions: any[];\n\n    private startingLocale: string;\n\n    constructor(private storageService: StorageService, private stateService: StateService,\n        private analytics: Angulartics2, private i18nService: I18nService,\n        private toasterService: ToasterService, private lockService: LockService,\n        private platformUtilsService: PlatformUtilsService) {\n        this.lockOptions = [\n            { name: i18nService.t('oneMinute'), value: 1 },\n            { name: i18nService.t('fiveMinutes'), value: 5 },\n            { name: i18nService.t('fifteenMinutes'), value: 15 },\n            { name: i18nService.t('thirtyMinutes'), value: 30 },\n            { name: i18nService.t('oneHour'), value: 60 },\n            { name: i18nService.t('fourHours'), value: 240 },\n            { name: i18nService.t('onRefresh'), value: -1 },\n        ];\n        if (this.platformUtilsService.isDev()) {\n            this.lockOptions.push({ name: i18nService.t('never'), value: null });\n        }\n\n        const localeOptions: any[] = [];\n        i18nService.supportedTranslationLocales.forEach((locale) => {\n            let name = locale;\n            if (i18nService.localeNames.has(locale)) {\n                name += (' - ' + i18nService.localeNames.get(locale));\n            }\n            localeOptions.push({ name: name, value: locale });\n        });\n        localeOptions.sort(Utils.getSortFunction(i18nService, 'name'));\n        localeOptions.splice(0, 0, { name: i18nService.t('default'), value: null });\n        this.localeOptions = localeOptions;\n    }\n\n    async ngOnInit() {\n        this.lockOption = await this.storageService.get<number>(ConstantsService.lockOptionKey);\n        this.disableIcons = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\n        this.enableGravatars = await this.storageService.get<boolean>('enableGravatars');\n        this.locale = this.startingLocale = await this.storageService.get<string>(ConstantsService.localeKey);\n    }\n\n    async submit() {\n        await this.lockService.setLockOption(this.lockOption != null ? this.lockOption : null);\n        await this.storageService.save(ConstantsService.disableFaviconKey, this.disableIcons);\n        await this.stateService.save(ConstantsService.disableFaviconKey, this.disableIcons);\n        await this.storageService.save('enableGravatars', this.enableGravatars);\n        await this.stateService.save('enableGravatars', this.enableGravatars);\n        await this.storageService.save(ConstantsService.localeKey, this.locale);\n        this.analytics.eventTrack.next({ action: 'Saved Options' });\n        if (this.locale !== this.startingLocale) {\n            window.location.reload();\n        } else {\n            this.toasterService.popAsync('success', null, this.i18nService.t('optionsUpdated'));\n        }\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { UpdateDomainsRequest } from 'jslib/models/request/updateDomainsRequest';\n\n@Component({\n    selector: 'app-domain-rules',\n    templateUrl: 'domain-rules.component.html',\n})\nexport class DomainRulesComponent implements OnInit {\n    loading = true;\n    custom: string[] = [];\n    global: any[] = [];\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService) { }\n\n    async ngOnInit() {\n        const response = await this.apiService.getSettingsDomains();\n        this.loading = false;\n        if (response.equivalentDomains != null) {\n            this.custom = response.equivalentDomains.map((d) => d.join(', '));\n        }\n        if (response.globalEquivalentDomains != null) {\n            this.global = response.globalEquivalentDomains.map((d) => {\n                return {\n                    domains: d.domains.join(', '),\n                    excluded: d.excluded,\n                    key: d.type,\n                };\n            });\n        }\n    }\n\n    toggleExcluded(globalDomain: any) {\n        globalDomain.excluded = !globalDomain.excluded;\n    }\n\n    customize(globalDomain: any) {\n        globalDomain.excluded = true;\n        this.custom.push(globalDomain.domains);\n    }\n\n    remove(index: number) {\n        this.custom.splice(index, 1);\n    }\n\n    add() {\n        this.custom.push('');\n    }\n\n    async submit() {\n        const request = new UpdateDomainsRequest();\n        request.excludedGlobalEquivalentDomains = this.global.filter((d) => d.excluded)\n            .map((d) => d.key);\n        if (request.excludedGlobalEquivalentDomains.length === 0) {\n            request.excludedGlobalEquivalentDomains = null;\n        }\n        request.equivalentDomains = this.custom.filter((d) => d != null && d.trim() !== '')\n            .map((d) => d.split(',').map((d2) => d2.trim()));\n        if (request.equivalentDomains.length === 0) {\n            request.equivalentDomains = null;\n        }\n\n        try {\n            this.formPromise = this.apiService.putSettingsDomains(request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Saved Equivalent Domains' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('domainsUpdated'));\n        } catch { }\n    }\n\n    indexTrackBy(index: number, obj: any): any {\n        return index;\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\nimport { UpdateTwoFactorDuoRequest } from 'jslib/models/request/updateTwoFactorDuoRequest';\nimport { TwoFactorDuoResponse } from 'jslib/models/response/twoFactorDuoResponse';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-duo',\n    templateUrl: 'two-factor-duo.component.html',\n})\nexport class TwoFactorDuoComponent extends TwoFactorBaseComponent {\n    type = TwoFactorProviderType.Duo;\n    ikey: string;\n    skey: string;\n    host: string;\n    formPromise: Promise<any>;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        analytics: Angulartics2, toasterService: ToasterService,\n        platformUtilsService: PlatformUtilsService) {\n        super(apiService, i18nService, analytics, toasterService, platformUtilsService);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        if (this.enabled) {\n            return super.disable(this.formPromise);\n        } else {\n            return this.enable();\n        }\n    }\n\n    protected enable() {\n        const request = new UpdateTwoFactorDuoRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        request.integrationKey = this.ikey;\n        request.secretKey = this.skey;\n        request.host = this.host;\n\n        return super.enable(async () => {\n            if (this.organizationId != null) {\n                this.formPromise = this.apiService.putTwoFactorOrganizationDuo(this.organizationId, request);\n            } else {\n                this.formPromise = this.apiService.putTwoFactorDuo(request);\n            }\n            const response = await this.formPromise;\n            await this.processResponse(response);\n        });\n    }\n\n    private processResponse(response: TwoFactorDuoResponse) {\n        this.ikey = response.integrationKey;\n        this.skey = response.secretKey;\n        this.host = response.host;\n        this.enabled = response.enabled;\n    }\n}\n","import {\n    Component,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib/abstractions/sync.service';\nimport { TokenService } from 'jslib/abstractions/token.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { PaymentComponent } from './payment.component';\n\n@Component({\n    selector: 'app-premium',\n    templateUrl: 'premium.component.html',\n})\nexport class PremiumComponent implements OnInit {\n    @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n\n    canAccessPremium = false;\n    selfHosted = false;\n    premiumPrice = 10;\n    storageGbPrice = 4;\n    additionalStorage = 0;\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        platformUtilsService: PlatformUtilsService, private tokenService: TokenService,\n        private router: Router, private messagingService: MessagingService,\n        private syncService: SyncService, private userService: UserService) {\n        this.selfHosted = platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        this.canAccessPremium = await this.userService.canAccessPremium();\n        const premium = await this.tokenService.getPremium();\n        if (premium) {\n            this.router.navigate(['/settings/subscription']);\n            return;\n        }\n    }\n\n    async submit() {\n        let files: FileList = null;\n        if (this.selfHosted) {\n            const fileEl = document.getElementById('file') as HTMLInputElement;\n            files = fileEl.files;\n            if (files == null || files.length === 0) {\n                this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('selectFile'));\n                return;\n            }\n        }\n\n        try {\n            if (this.selfHosted) {\n                if (!this.tokenService.getEmailVerified()) {\n                    this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                        this.i18nService.t('verifyEmailFirst'));\n                    return;\n                }\n\n                const fd = new FormData();\n                fd.append('license', files[0]);\n                this.formPromise = this.apiService.postAccountLicense(fd).then(() => {\n                    return this.finalizePremium();\n                });\n            } else {\n                this.formPromise = this.paymentComponent.createPaymentToken().then((result) => {\n                    const fd = new FormData();\n                    fd.append('paymentMethodType', result[1].toString());\n                    if (result[0] != null) {\n                        fd.append('paymentToken', result[0]);\n                    }\n                    fd.append('additionalStorageGb', (this.additionalStorage || 0).toString());\n                    return this.apiService.postPremium(fd);\n                }).then((paymentResponse) => {\n                    if (!paymentResponse.success && paymentResponse.paymentIntentClientSecret != null) {\n                        return this.paymentComponent.handleStripeCardPayment(paymentResponse.paymentIntentClientSecret,\n                            () => this.finalizePremium());\n                    } else {\n                        return this.finalizePremium();\n                    }\n                });\n            }\n            await this.formPromise;\n        } catch { }\n    }\n\n    async finalizePremium() {\n        await this.apiService.refreshIdentityToken();\n        await this.syncService.fullSync(true);\n        this.analytics.eventTrack.next({ action: 'Signed Up Premium' });\n        this.toasterService.popAsync('success', null, this.i18nService.t('premiumUpdated'));\n        this.messagingService.send('purchasedPremium');\n        this.router.navigate(['/settings/subscription']);\n    }\n\n    get additionalStorageTotal(): number {\n        return this.storageGbPrice * Math.abs(this.additionalStorage || 0);\n    }\n\n    get total(): number {\n        return this.additionalStorageTotal + this.premiumPrice;\n    }\n}\n","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    ViewChild,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { PaymentMethodType } from 'jslib/enums/paymentMethodType';\n\nimport { BitPayInvoiceRequest } from 'jslib/models/request/bitPayInvoiceRequest';\n\nimport { WebConstants } from '../../services/webConstants';\n\n@Component({\n    selector: 'app-add-credit',\n    templateUrl: 'add-credit.component.html',\n})\nexport class AddCreditComponent implements OnInit {\n    @Input() creditAmount: string;\n    @Input() showOptions = true;\n    @Input() method = PaymentMethodType.PayPal;\n    @Input() organizationId: string;\n    @Output() onAdded = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    @ViewChild('ppButtonForm', { read: ElementRef }) ppButtonFormRef: ElementRef;\n\n    paymentMethodType = PaymentMethodType;\n    ppButtonFormAction = WebConstants.paypal.buttonActionProduction;\n    ppButtonBusinessId = WebConstants.paypal.businessIdProduction;\n    ppButtonCustomField: string;\n    ppLoading = false;\n    subject: string;\n    returnUrl: string;\n    formPromise: Promise<any>;\n\n    private userId: string;\n    private name: string;\n    private email: string;\n\n    constructor(private userService: UserService, private apiService: ApiService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private platformUtilsService: PlatformUtilsService) {\n        if (platformUtilsService.isDev()) {\n            this.ppButtonFormAction = WebConstants.paypal.buttonActionSandbox;\n            this.ppButtonBusinessId = WebConstants.paypal.businessIdSandbox;\n        }\n    }\n\n    async ngOnInit() {\n        if (this.organizationId != null) {\n            if (this.creditAmount == null) {\n                this.creditAmount = '20.00';\n            }\n            this.ppButtonCustomField = 'organization_id:' + this.organizationId;\n            const org = await this.userService.getOrganization(this.organizationId);\n            if (org != null) {\n                this.subject = org.name;\n                this.name = org.name;\n            }\n        } else {\n            if (this.creditAmount == null) {\n                this.creditAmount = '10.00';\n            }\n            this.userId = await this.userService.getUserId();\n            this.subject = await this.userService.getEmail();\n            this.email = this.subject;\n            this.ppButtonCustomField = 'user_id:' + this.userId;\n        }\n        this.ppButtonCustomField += ',account_credit:1';\n        this.returnUrl = window.location.href;\n    }\n\n    async submit() {\n        if (this.creditAmount == null || this.creditAmount === '') {\n            return;\n        }\n\n        if (this.method === PaymentMethodType.PayPal) {\n            this.ppButtonFormRef.nativeElement.submit();\n            this.ppLoading = true;\n            return;\n        }\n        if (this.method === PaymentMethodType.BitPay) {\n            try {\n                const req = new BitPayInvoiceRequest();\n                req.email = this.email;\n                req.name = this.name;\n                req.credit = true;\n                req.amount = this.creditAmountNumber;\n                req.organizationId = this.organizationId;\n                req.userId = this.userId;\n                req.returnUrl = this.returnUrl;\n                this.formPromise = this.apiService.postBitPayInvoice(req);\n                const bitPayUrl: string = await this.formPromise;\n                this.platformUtilsService.launchUri(bitPayUrl);\n            } catch { }\n            return;\n        }\n        try {\n            this.analytics.eventTrack.next({\n                action: 'Added Credit',\n            });\n            this.onAdded.emit();\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n\n    formatAmount() {\n        try {\n            if (this.creditAmount != null && this.creditAmount !== '') {\n                const floatAmount = Math.abs(parseFloat(this.creditAmount));\n                if (floatAmount > 0) {\n                    this.creditAmount = parseFloat((Math.round(floatAmount * 100) / 100).toString())\n                        .toFixed(2).toString();\n                    return;\n                }\n            }\n        } catch { }\n        this.creditAmount = '';\n    }\n\n    get creditAmountNumber(): number {\n        if (this.creditAmount != null && this.creditAmount !== '') {\n            try {\n                return parseFloat(this.creditAmount);\n            } catch { }\n        }\n        return null;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ViewChild,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { PaymentRequest } from 'jslib/models/request/paymentRequest';\n\nimport { PaymentMethodType } from 'jslib/enums/paymentMethodType';\n\nimport { PaymentComponent } from './payment.component';\n\n@Component({\n    selector: 'app-adjust-payment',\n    templateUrl: 'adjust-payment.component.html',\n})\nexport class AdjustPaymentComponent {\n    @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n\n    @Input() currentType?: PaymentMethodType;\n    @Input() organizationId: string;\n    @Output() onAdjusted = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    paymentMethodType = PaymentMethodType;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService) { }\n\n    async submit() {\n        try {\n            const request = new PaymentRequest();\n            this.formPromise = this.paymentComponent.createPaymentToken().then((result) => {\n                request.paymentToken = result[0];\n                request.paymentMethodType = result[1];\n                if (this.organizationId == null) {\n                    return this.apiService.postAccountPayment(request);\n                } else {\n                    return this.apiService.postOrganizationPayment(this.organizationId, request);\n                }\n            });\n            await this.formPromise;\n            this.analytics.eventTrack.next({\n                action: this.currentType == null ? 'Added Payment Method' : 'Changed Payment Method',\n            });\n            this.toasterService.popAsync('success', null, this.i18nService.t('updatedPaymentMethod'));\n            this.onAdjusted.emit();\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\n@Component({\n    selector: 'app-update-license',\n    templateUrl: 'update-license.component.html',\n})\nexport class UpdateLicenseComponent {\n    @Input() organizationId: string;\n    @Output() onUpdated = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService) { }\n\n    async submit() {\n        const fileEl = document.getElementById('file') as HTMLInputElement;\n        const files = fileEl.files;\n        if (files == null || files.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFile'));\n            return;\n        }\n\n        try {\n            const fd = new FormData();\n            fd.append('license', files[0]);\n\n            let updatePromise: Promise<any> = null;\n            if (this.organizationId == null) {\n                updatePromise = this.apiService.postAccountLicense(fd);\n            } else {\n                updatePromise = this.apiService.postOrganizationLicenseUpdate(this.organizationId, fd);\n            }\n\n            this.formPromise = updatePromise.then(() => {\n                return this.apiService.refreshIdentityToken();\n            });\n\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Updated License' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('updatedLicense'));\n            this.onUpdated.emit();\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ViewChild,\n} from '@angular/core';\n\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { StorageRequest } from 'jslib/models/request/storageRequest';\n\nimport { PaymentResponse } from 'jslib/models/response/paymentResponse';\n\nimport { PaymentComponent } from './payment.component';\n\n@Component({\n    selector: 'app-adjust-storage',\n    templateUrl: 'adjust-storage.component.html',\n})\nexport class AdjustStorageComponent {\n    @Input() storageGbPrice = 0;\n    @Input() add = true;\n    @Input() organizationId: string;\n    @Input() interval = 'year';\n    @Output() onAdjusted = new EventEmitter<number>();\n    @Output() onCanceled = new EventEmitter();\n\n    @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n\n    storageAdjustment = 0;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private router: Router, private activatedRoute: ActivatedRoute) { }\n\n    async submit() {\n        try {\n            const request = new StorageRequest();\n            request.storageGbAdjustment = this.storageAdjustment;\n            if (!this.add) {\n                request.storageGbAdjustment *= -1;\n            }\n\n            let paymentFailed = false;\n            const action = async () => {\n                let response: Promise<PaymentResponse>;\n                if (this.organizationId == null) {\n                    response = this.formPromise = this.apiService.postAccountStorage(request);\n                } else {\n                    response = this.formPromise = this.apiService.postOrganizationStorage(this.organizationId, request);\n                }\n                const result = await response;\n                if (result != null && result.paymentIntentClientSecret != null) {\n                    try {\n                        await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\n                    } catch {\n                        paymentFailed = true;\n                    }\n                }\n            };\n            this.formPromise = action();\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: this.add ? 'Added Storage' : 'Removed Storage' });\n            this.onAdjusted.emit(this.storageAdjustment);\n            if (paymentFailed) {\n                this.toasterService.popAsync({\n                    body: this.i18nService.t('couldNotChargeCardPayInvoice'),\n                    type: 'warning',\n                    timeout: 10000,\n                });\n                this.router.navigate(['../billing'], { relativeTo: this.activatedRoute });\n            } else {\n                this.toasterService.popAsync('success', null,\n                    this.i18nService.t('adjustedStorage', request.storageGbAdjustment.toString()));\n            }\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n\n    get adjustedStorageTotal(): number {\n        return this.storageGbPrice * this.storageAdjustment;\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { SubscriptionResponse } from 'jslib/models/response/subscriptionResponse';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { TokenService } from 'jslib/abstractions/token.service';\n\n@Component({\n    selector: 'app-user-subscription',\n    templateUrl: 'user-subscription.component.html',\n})\nexport class UserSubscriptionComponent implements OnInit {\n    loading = false;\n    firstLoaded = false;\n    adjustStorageAdd = true;\n    showAdjustStorage = false;\n    showUpdateLicense = false;\n    sub: SubscriptionResponse;\n    selfHosted = false;\n\n    cancelPromise: Promise<any>;\n    reinstatePromise: Promise<any>;\n\n    constructor(private tokenService: TokenService, private apiService: ApiService,\n        private platformUtilsService: PlatformUtilsService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private router: Router) {\n        this.selfHosted = platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        await this.load();\n        this.firstLoaded = true;\n    }\n\n    async load() {\n        if (this.loading) {\n            return;\n        }\n\n        if (this.tokenService.getPremium()) {\n            this.loading = true;\n            this.sub = await this.apiService.getUserSubscription();\n        } else {\n            this.router.navigate(['/settings/premium']);\n            return;\n        }\n\n        this.loading = false;\n    }\n\n    async reinstate() {\n        if (this.loading) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('reinstateConfirmation'),\n            this.i18nService.t('reinstateSubscription'), this.i18nService.t('yes'), this.i18nService.t('cancel'));\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.reinstatePromise = this.apiService.postReinstatePremium();\n            await this.reinstatePromise;\n            this.analytics.eventTrack.next({ action: 'Reinstated Premium' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('reinstated'));\n            this.load();\n        } catch { }\n    }\n\n    async cancel() {\n        if (this.loading) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('cancelConfirmation'),\n            this.i18nService.t('cancelSubscription'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.cancelPromise = this.apiService.postCancelPremium();\n            await this.cancelPromise;\n            this.analytics.eventTrack.next({ action: 'Canceled Premium' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('canceledSubscription'));\n            this.load();\n        } catch { }\n    }\n\n    downloadLicense() {\n        if (this.loading) {\n            return;\n        }\n\n        const licenseString = JSON.stringify(this.sub.license, null, 2);\n        this.platformUtilsService.saveFile(window, licenseString, null, 'bitwarden_premium_license.json');\n    }\n\n    updateLicense() {\n        if (this.loading) {\n            return;\n        }\n        this.showUpdateLicense = true;\n    }\n\n    closeUpdateLicense(load: boolean) {\n        this.showUpdateLicense = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    adjustStorage(add: boolean) {\n        this.adjustStorageAdd = add;\n        this.showAdjustStorage = true;\n    }\n\n    closeStorage(load: boolean) {\n        this.showAdjustStorage = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    get subscriptionMarkedForCancel() {\n        return this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate;\n    }\n\n    get subscription() {\n        return this.sub != null ? this.sub.subscription : null;\n    }\n\n    get nextInvoice() {\n        return this.sub != null ? this.sub.upcomingInvoice : null;\n    }\n\n    get storagePercentage() {\n        return this.sub != null && this.sub.maxStorageGb ?\n            +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2) : 0;\n    }\n\n    get storageProgressWidth() {\n        return this.storagePercentage < 5 ? 5 : 0;\n    }\n}\n","import {\n    Component,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { OrganizationPlansComponent } from './organization-plans.component';\n\n@Component({\n    selector: 'app-create-organization',\n    templateUrl: 'create-organization.component.html',\n})\nexport class CreateOrganizationComponent implements OnInit {\n    @ViewChild(OrganizationPlansComponent) orgPlansComponent: OrganizationPlansComponent;\n\n    constructor(private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        const queryParamsSub = this.route.queryParams.subscribe(async (qParams) => {\n            if (qParams.plan === 'families' || qParams.plan === 'teams' || qParams.plan === 'enterprise') {\n                this.orgPlansComponent.plan = qParams.plan;\n            }\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\n@Component({\n    selector: 'app-tools',\n    templateUrl: 'tools.component.html',\n})\nexport class ToolsComponent implements OnInit {\n    canAccessPremium = false;\n\n    constructor(private userService: UserService, private messagingService: MessagingService) { }\n\n    async ngOnInit() {\n        this.canAccessPremium = await this.userService.canAccessPremium();\n    }\n\n    premiumRequired() {\n        if (!this.canAccessPremium) {\n            this.messagingService.send('premiumRequired');\n            return;\n        }\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport {\n    PasswordGeneratorComponent as BasePasswordGeneratorComponent,\n} from 'jslib/angular/components/password-generator.component';\n\nimport { ModalComponent } from '../modal.component';\nimport { PasswordGeneratorHistoryComponent } from './password-generator-history.component';\n\n@Component({\n    selector: 'app-password-generator',\n    templateUrl: 'password-generator.component.html',\n})\nexport class PasswordGeneratorComponent extends BasePasswordGeneratorComponent {\n    @ViewChild('historyTemplate', { read: ViewContainerRef }) historyModalRef: ViewContainerRef;\n\n    private modal: ModalComponent = null;\n\n    constructor(passwordGenerationService: PasswordGenerationService, platformUtilsService: PlatformUtilsService,\n        i18nService: I18nService, private componentFactoryResolver: ComponentFactoryResolver) {\n        super(passwordGenerationService, platformUtilsService, i18nService, window);\n    }\n\n    history() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.historyModalRef.createComponent(factory).instance;\n        this.modal.show<PasswordGeneratorHistoryComponent>(PasswordGeneratorHistoryComponent, this.historyModalRef);\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    lengthChanged() {\n        document.getElementById('length').focus();\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { AuditService } from 'jslib/abstractions/audit.service';\nimport { UserService } from 'jslib/abstractions/user.service';\nimport { BreachAccountResponse } from 'jslib/models/response/breachAccountResponse';\n\n@Component({\n    selector: 'app-breach-report',\n    templateUrl: 'breach-report.component.html',\n})\nexport class BreachReportComponent implements OnInit {\n    error = false;\n    username: string;\n    checkedUsername: string;\n    breachedAccounts: BreachAccountResponse[] = [];\n    formPromise: Promise<BreachAccountResponse[]>;\n\n    constructor(private auditService: AuditService, private userService: UserService) { }\n\n    async ngOnInit() {\n        this.username = await this.userService.getEmail();\n    }\n\n    async submit() {\n        this.error = false;\n        this.username = this.username.toLowerCase();\n        try {\n            this.formPromise = this.auditService.breachedAccounts(this.username);\n            this.breachedAccounts = await this.formPromise;\n        } catch {\n            this.error = true;\n        }\n        this.checkedUsername = this.username;\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { AuditService } from 'jslib/abstractions/audit.service';\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { EventService } from 'jslib/abstractions/event.service';\nimport { FolderService } from 'jslib/abstractions/folder.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { StateService } from 'jslib/abstractions/state.service';\nimport { TotpService } from 'jslib/abstractions/totp.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { CipherData } from 'jslib/models/data/cipherData';\nimport { Cipher } from 'jslib/models/domain/cipher';\nimport { Organization } from 'jslib/models/domain/organization';\nimport { CipherCreateRequest } from 'jslib/models/request/cipherCreateRequest';\nimport { CipherRequest } from 'jslib/models/request/cipherRequest';\n\nimport { AddEditComponent as BaseAddEditComponent } from '../../vault/add-edit.component';\n\n@Component({\n    selector: 'app-org-vault-add-edit',\n    templateUrl: '../../vault/add-edit.component.html',\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n    organization: Organization;\n    originalCipher: Cipher = null;\n\n    constructor(cipherService: CipherService, folderService: FolderService,\n        i18nService: I18nService, platformUtilsService: PlatformUtilsService,\n        auditService: AuditService, stateService: StateService,\n        userService: UserService, collectionService: CollectionService,\n        totpService: TotpService, passwordGenerationService: PasswordGenerationService,\n        private apiService: ApiService, messagingService: MessagingService,\n        eventService: EventService) {\n        super(cipherService, folderService, i18nService, platformUtilsService, auditService, stateService,\n            userService, collectionService, totpService, passwordGenerationService, messagingService,\n            eventService);\n    }\n\n    protected loadCollections() {\n        if (!this.organization.isAdmin) {\n            return super.loadCollections();\n        }\n        return Promise.resolve(this.collections);\n    }\n\n    protected async loadCipher() {\n        if (!this.organization.isAdmin) {\n            return await super.loadCipher();\n        }\n        const response = await this.apiService.getCipherAdmin(this.cipherId);\n        const data = new CipherData(response);\n        this.originalCipher = new Cipher(data);\n        return new Cipher(data);\n    }\n\n    protected encryptCipher() {\n        if (!this.organization.isAdmin) {\n            return super.encryptCipher();\n        }\n        return this.cipherService.encrypt(this.cipher, null, this.originalCipher);\n    }\n\n    protected async saveCipher(cipher: Cipher) {\n        if (!this.organization.isAdmin) {\n            return super.saveCipher(cipher);\n        }\n        if (this.editMode) {\n            const request = new CipherRequest(cipher);\n            return this.apiService.putCipherAdmin(this.cipherId, request);\n        } else {\n            const request = new CipherCreateRequest(cipher);\n            return this.apiService.postCipherAdmin(request);\n        }\n    }\n\n    protected async deleteCipher() {\n        if (!this.organization.isAdmin) {\n            return super.deleteCipher();\n        }\n        return this.apiService.deleteCipherAdmin(this.cipherId);\n    }\n}\n","import { View } from './view';\n\nimport { Password } from '../domain/password';\n\nexport class PasswordHistoryView implements View {\n    password: string = null;\n    lastUsedDate: Date = null;\n\n    constructor(ph?: Password) {\n        if (!ph) {\n            return;\n        }\n\n        this.lastUsedDate = ph.lastUsedDate;\n    }\n}\n","import {\n    Component,\n    NgZone,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { BroadcasterService } from 'jslib/angular/services/broadcaster.service';\n\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { Organization } from 'jslib/models/domain/organization';\n\nconst BroadcasterSubscriptionId = 'OrganizationLayoutComponent';\n\n@Component({\n    selector: 'app-organization-layout',\n    templateUrl: 'organization-layout.component.html',\n})\nexport class OrganizationLayoutComponent implements OnInit, OnDestroy {\n    organization: Organization;\n\n    private organizationId: string;\n\n    constructor(private route: ActivatedRoute, private userService: UserService,\n        private broadcasterService: BroadcasterService, private ngZone: NgZone) { }\n\n    ngOnInit() {\n        document.body.classList.remove('layout_frontend');\n        this.route.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n            await this.load();\n        });\n\n        this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n            this.ngZone.run(async () => {\n                switch (message.command) {\n                    case 'updatedOrgLicense':\n                        await this.load();\n                        break;\n                }\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    async load() {\n        this.organization = await this.userService.getOrganization(this.organizationId);\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { FolderService } from 'jslib/abstractions/folder.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { StorageService } from 'jslib/abstractions/storage.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { CollectionData } from 'jslib/models/data/collectionData';\nimport { Collection } from 'jslib/models/domain/collection';\nimport { Organization } from 'jslib/models/domain/organization';\nimport { CollectionDetailsResponse } from 'jslib/models/response/collectionResponse';\nimport { CollectionView } from 'jslib/models/view/collectionView';\n\nimport { GroupingsComponent as BaseGroupingsComponent } from '../../vault/groupings.component';\n\n@Component({\n    selector: 'app-org-vault-groupings',\n    templateUrl: '../../vault/groupings.component.html',\n})\nexport class GroupingsComponent extends BaseGroupingsComponent {\n    organization: Organization;\n\n    constructor(collectionService: CollectionService, folderService: FolderService,\n        storageService: StorageService, userService: UserService,\n        private apiService: ApiService, private i18nService: I18nService) {\n        super(collectionService, folderService, storageService, userService);\n    }\n\n    async loadCollections() {\n        if (!this.organization.isAdmin) {\n            await super.loadCollections(this.organization.id);\n            return;\n        }\n\n        const collections = await this.apiService.getCollections(this.organization.id);\n        if (collections != null && collections.data != null && collections.data.length) {\n            const collectionDomains = collections.data.map((r) =>\n                new Collection(new CollectionData(r as CollectionDetailsResponse)));\n            this.collections = await this.collectionService.decryptMany(collectionDomains);\n        } else {\n            this.collections = [];\n        }\n\n        const unassignedCollection = new CollectionView();\n        unassignedCollection.name = this.i18nService.t('unassigned');\n        unassignedCollection.id = 'unassigned';\n        unassignedCollection.organizationId = this.organization.id;\n        unassignedCollection.readOnly = true;\n        this.collections.push(unassignedCollection);\n        this.nestedCollections = await this.collectionService.getAllNested(this.collections);\n    }\n\n    collapse(grouping: CollectionView) {\n        super.collapse(grouping, 'org_');\n    }\n\n    isCollapsed(grouping: CollectionView) {\n        return super.isCollapsed(grouping, 'org_');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { EventService } from 'jslib/abstractions/event.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib/abstractions/search.service';\n\nimport { Organization } from 'jslib/models/domain/organization';\nimport { CipherView } from 'jslib/models/view/cipherView';\n\nimport { CiphersComponent as BaseCiphersComponent } from '../../vault/ciphers.component';\n\n@Component({\n    selector: 'app-org-vault-ciphers',\n    templateUrl: '../../vault/ciphers.component.html',\n})\nexport class CiphersComponent extends BaseCiphersComponent {\n    @Output() onEventsClicked = new EventEmitter<CipherView>();\n\n    organization: Organization;\n    accessEvents = false;\n\n    protected allCiphers: CipherView[] = [];\n\n    constructor(searchService: SearchService, analytics: Angulartics2,\n        toasterService: ToasterService, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService, cipherService: CipherService,\n        private apiService: ApiService, eventService: EventService) {\n        super(searchService, analytics, toasterService, i18nService, platformUtilsService,\n            cipherService, eventService);\n    }\n\n    async load(filter: (cipher: CipherView) => boolean = null) {\n        if (!this.organization.isAdmin) {\n            await super.load(filter);\n            return;\n        }\n        this.accessEvents = this.organization.useEvents;\n        this.allCiphers = await this.cipherService.getAllFromApiForOrganization(this.organization.id);\n        this.applyFilter(filter);\n        this.loaded = true;\n    }\n\n    async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n        if (this.organization.isAdmin) {\n            await super.applyFilter(filter);\n        } else {\n            const f = (c: CipherView) => c.organizationId === this.organization.id && (filter == null || filter(c));\n            await super.applyFilter(f);\n        }\n    }\n\n    async search(timeout: number = null) {\n        if (!this.organization.isAdmin) {\n            return super.search(timeout);\n        }\n        this.searchPending = false;\n        let filteredCiphers = this.allCiphers;\n        if (this.filter != null) {\n            filteredCiphers = filteredCiphers.filter(this.filter);\n        }\n        if (this.searchText == null || this.searchText.trim().length < 2) {\n            this.ciphers = filteredCiphers;\n        } else {\n            this.ciphers = this.searchService.searchCiphersBasic(filteredCiphers, this.searchText);\n        }\n        await this.resetPaging();\n    }\n\n    checkCipher(c: CipherView) {\n        // do nothing\n    }\n\n    events(c: CipherView) {\n        this.onEventsClicked.emit(c);\n    }\n\n    protected deleteCipher(id: string) {\n        if (!this.organization.isAdmin) {\n            return super.deleteCipher(id);\n        }\n        return this.apiService.deleteCipherAdmin(id);\n    }\n\n    protected showFixOldAttachments(c: CipherView) {\n        return this.organization.isAdmin && c.hasOldAttachments;\n    }\n}\n","import {\n    ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { SyncService } from 'jslib/abstractions/sync.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { BroadcasterService } from 'jslib/angular/services/broadcaster.service';\n\nimport { Organization } from 'jslib/models/domain/organization';\nimport { CipherView } from 'jslib/models/view/cipherView';\n\nimport { CipherType } from 'jslib/enums/cipherType';\n\nimport { ModalComponent } from '../../modal.component';\n\nimport { EntityEventsComponent } from '../manage/entity-events.component';\nimport { AddEditComponent } from './add-edit.component';\nimport { AttachmentsComponent } from './attachments.component';\nimport { CiphersComponent } from './ciphers.component';\nimport { CollectionsComponent } from './collections.component';\nimport { GroupingsComponent } from './groupings.component';\n\nconst BroadcasterSubscriptionId = 'OrgVaultComponent';\n\n@Component({\n    selector: 'app-org-vault',\n    templateUrl: 'vault.component.html',\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n    @ViewChild(GroupingsComponent) groupingsComponent: GroupingsComponent;\n    @ViewChild(CiphersComponent) ciphersComponent: CiphersComponent;\n    @ViewChild('attachments', { read: ViewContainerRef }) attachmentsModalRef: ViewContainerRef;\n    @ViewChild('cipherAddEdit', { read: ViewContainerRef }) cipherAddEditModalRef: ViewContainerRef;\n    @ViewChild('collections', { read: ViewContainerRef }) collectionsModalRef: ViewContainerRef;\n    @ViewChild('eventsTemplate', { read: ViewContainerRef }) eventsModalRef: ViewContainerRef;\n\n    organization: Organization;\n    collectionId: string;\n    type: CipherType;\n\n    private modal: ModalComponent = null;\n\n    constructor(private route: ActivatedRoute, private userService: UserService,\n        private router: Router, private changeDetectorRef: ChangeDetectorRef,\n        private syncService: SyncService, private i18nService: I18nService,\n        private componentFactoryResolver: ComponentFactoryResolver, private messagingService: MessagingService,\n        private broadcasterService: BroadcasterService, private ngZone: NgZone) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async (params) => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            this.groupingsComponent.organization = this.organization;\n            this.ciphersComponent.organization = this.organization;\n\n            const queryParamsSub = this.route.queryParams.subscribe(async (qParams) => {\n                this.ciphersComponent.searchText = this.groupingsComponent.searchText = qParams.search;\n                if (!this.organization.isAdmin) {\n                    await this.syncService.fullSync(false);\n                    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n                        this.ngZone.run(async () => {\n                            switch (message.command) {\n                                case 'syncCompleted':\n                                    if (message.successfully) {\n                                        await Promise.all([\n                                            this.groupingsComponent.load(),\n                                            this.ciphersComponent.refresh(),\n                                        ]);\n                                        this.changeDetectorRef.detectChanges();\n                                    }\n                                    break;\n                            }\n                        });\n                    });\n                }\n                await this.groupingsComponent.load();\n\n                if (qParams == null) {\n                    this.groupingsComponent.selectedAll = true;\n                    await this.ciphersComponent.reload();\n                } else {\n                    if (qParams.type) {\n                        const t = parseInt(qParams.type, null);\n                        this.groupingsComponent.selectedType = t;\n                        await this.filterCipherType(t, true);\n                    } else if (qParams.collectionId) {\n                        this.groupingsComponent.selectedCollectionId = qParams.collectionId;\n                        await this.filterCollection(qParams.collectionId, true);\n                    } else {\n                        this.groupingsComponent.selectedAll = true;\n                        await this.ciphersComponent.reload();\n                    }\n                }\n\n                if (qParams.viewEvents != null) {\n                    const cipher = this.ciphersComponent.ciphers.filter((c) => c.id === qParams.viewEvents);\n                    if (cipher.length > 0) {\n                        this.viewEvents(cipher[0]);\n                    }\n                }\n\n                if (queryParamsSub != null) {\n                    queryParamsSub.unsubscribe();\n                }\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    async clearGroupingFilters() {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchVault');\n        await this.ciphersComponent.applyFilter();\n        this.clearFilters();\n        this.go();\n    }\n\n    async filterCipherType(type: CipherType, load = false) {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchType');\n        const filter = (c: CipherView) => c.type === type;\n        if (load) {\n            await this.ciphersComponent.reload(filter);\n        } else {\n            await this.ciphersComponent.applyFilter(filter);\n        }\n        this.clearFilters();\n        this.type = type;\n        this.go();\n    }\n\n    async filterCollection(collectionId: string, load = false) {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchCollection');\n        const filter = (c: CipherView) => {\n            if (collectionId === 'unassigned') {\n                return c.collectionIds == null || c.collectionIds.length === 0;\n            } else {\n                return c.collectionIds != null && c.collectionIds.indexOf(collectionId) > -1;\n            }\n        };\n        if (load) {\n            await this.ciphersComponent.reload(filter);\n        } else {\n            await this.ciphersComponent.applyFilter(filter);\n        }\n        this.clearFilters();\n        this.collectionId = collectionId;\n        this.go();\n    }\n\n    filterSearchText(searchText: string) {\n        this.ciphersComponent.searchText = searchText;\n        this.ciphersComponent.search(200);\n    }\n\n    editCipherAttachments(cipher: CipherView) {\n        if (this.organization.maxStorageGb == null || this.organization.maxStorageGb === 0) {\n            this.messagingService.send('upgradeOrganization', { organizationId: cipher.organizationId });\n            return;\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.attachmentsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<AttachmentsComponent>(AttachmentsComponent, this.attachmentsModalRef);\n\n        childComponent.organization = this.organization;\n        childComponent.cipherId = cipher.id;\n        let madeAttachmentChanges = false;\n        childComponent.onUploadedAttachment.subscribe(() => madeAttachmentChanges = true);\n        childComponent.onDeletedAttachment.subscribe(() => madeAttachmentChanges = true);\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n            if (madeAttachmentChanges) {\n                await this.ciphersComponent.refresh();\n            }\n            madeAttachmentChanges = false;\n        });\n    }\n\n    editCipherCollections(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.collectionsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<CollectionsComponent>(CollectionsComponent, this.collectionsModalRef);\n\n        if (this.organization.isAdmin) {\n            childComponent.collectionIds = cipher.collectionIds;\n            childComponent.collections = this.groupingsComponent.collections.filter((c) => !c.readOnly);\n        }\n        childComponent.organization = this.organization;\n        childComponent.cipherId = cipher.id;\n        childComponent.onSavedCollections.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    addCipher() {\n        const component = this.editCipher(null);\n        component.organizationId = this.organization.id;\n        component.type = this.type;\n        if (this.organization.isAdmin) {\n            component.collections = this.groupingsComponent.collections.filter((c) => !c.readOnly);\n        }\n        if (this.collectionId != null) {\n            component.collectionIds = [this.collectionId];\n        }\n    }\n\n    editCipher(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.cipherAddEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<AddEditComponent>(AddEditComponent, this.cipherAddEditModalRef);\n\n        childComponent.organization = this.organization;\n        childComponent.cipherId = cipher == null ? null : cipher.id;\n        childComponent.onSavedCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n        childComponent.onDeletedCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n\n        return childComponent;\n    }\n\n    async viewEvents(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.eventsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<EntityEventsComponent>(\n            EntityEventsComponent, this.eventsModalRef);\n\n        childComponent.name = cipher.name;\n        childComponent.organizationId = this.organization.id;\n        childComponent.entityId = cipher.id;\n        childComponent.showUser = true;\n        childComponent.entity = 'cipher';\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    private clearFilters() {\n        this.collectionId = null;\n        this.type = null;\n    }\n\n    private go(queryParams: any = null) {\n        if (queryParams == null) {\n            queryParams = {\n                type: this.type,\n                collectionId: this.collectionId,\n            };\n        }\n\n        this.router.navigate([], {\n            relativeTo: this.route,\n            queryParams: queryParams,\n            replaceUrl: true,\n        });\n    }\n}\n","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { EventService } from '../../services/event.service';\n\nimport { EventResponse } from 'jslib/models/response/eventResponse';\nimport { ListResponse } from 'jslib/models/response/listResponse';\n\n@Component({\n    selector: 'app-entity-events',\n    templateUrl: 'entity-events.component.html',\n})\nexport class EntityEventsComponent implements OnInit {\n    @Input() name: string;\n    @Input() entity: 'user' | 'cipher';\n    @Input() entityId: string;\n    @Input() organizationId: string;\n    @Input() showUser = false;\n\n    loading = true;\n    loaded = false;\n    events: any[];\n    start: string;\n    end: string;\n    continuationToken: string;\n    refreshPromise: Promise<any>;\n    morePromise: Promise<any>;\n\n    private orgUsersUserIdMap = new Map<string, any>();\n    private orgUsersIdMap = new Map<string, any>();\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private eventService: EventService, private toasterService: ToasterService) { }\n\n    async ngOnInit() {\n        const defaultDates = this.eventService.getDefaultDateFilters();\n        this.start = defaultDates[0];\n        this.end = defaultDates[1];\n        await this.load();\n    }\n\n    async load() {\n        if (this.showUser) {\n            const response = await this.apiService.getOrganizationUsers(this.organizationId);\n            response.data.forEach((u) => {\n                const name = u.name == null || u.name.trim() === '' ? u.email : u.name;\n                this.orgUsersIdMap.set(u.id, { name: name, email: u.email });\n                this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n            });\n        }\n        await this.loadEvents(true);\n        this.loaded = true;\n    }\n\n    async loadEvents(clearExisting: boolean) {\n        if (this.refreshPromise != null || this.morePromise != null) {\n            return;\n        }\n\n        let dates: string[] = null;\n        try {\n            dates = this.eventService.formatDateFilters(this.start, this.end);\n        } catch (e) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidDateRange'));\n            return;\n        }\n\n        this.loading = true;\n        let response: ListResponse<EventResponse>;\n        try {\n            let promise: Promise<any>;\n            if (this.entity === 'user') {\n                promise = this.apiService.getEventsOrganizationUser(this.organizationId, this.entityId,\n                    dates[0], dates[1], clearExisting ? null : this.continuationToken);\n            } else {\n                promise = this.apiService.getEventsCipher(this.entityId,\n                    dates[0], dates[1], clearExisting ? null : this.continuationToken);\n            }\n            if (clearExisting) {\n                this.refreshPromise = promise;\n            } else {\n                this.morePromise = promise;\n            }\n            response = await promise;\n        } catch { }\n\n        this.continuationToken = response.continuationToken;\n        const events = response.data.map((r) => {\n            const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n            const eventInfo = this.eventService.getEventInfo(r);\n            const user = this.showUser && userId != null && this.orgUsersUserIdMap.has(userId) ?\n                this.orgUsersUserIdMap.get(userId) : null;\n            return {\n                message: eventInfo.message,\n                appIcon: eventInfo.appIcon,\n                appName: eventInfo.appName,\n                userId: userId,\n                userName: user != null ? user.name : this.showUser ? this.i18nService.t('unknown') : null,\n                userEmail: user != null ? user.email : this.showUser ? '' : null,\n                date: r.date,\n                ip: r.ipAddress,\n                type: r.type,\n            };\n        });\n\n        if (!clearExisting && this.events != null && this.events.length > 0) {\n            this.events = this.events.concat(events);\n        } else {\n            this.events = events;\n        }\n\n        this.loading = false;\n        this.morePromise = null;\n        this.refreshPromise = null;\n    }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Organization } from 'jslib/models/domain/organization';\n\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\n@Component({\n    selector: 'app-org-tools',\n    templateUrl: 'tools.component.html',\n})\nexport class ToolsComponent {\n    organization: Organization;\n    accessReports = false;\n\n    constructor(private route: ActivatedRoute, private userService: UserService,\n        private messagingService: MessagingService) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async (params) => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n            // since all paid plans include useTotp\n            this.accessReports = this.organization.useTotp;\n        });\n    }\n\n    upgradeOrganization() {\n        this.messagingService.send('upgradeOrganization', { organizationId: this.organization.id });\n    }\n}\n","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { ImportService } from 'jslib/abstractions/import.service';\n\nimport { ImportComponent as BaseImportComponent } from '../../tools/import.component';\n\n@Component({\n    selector: 'app-org-import',\n    templateUrl: '../../tools/import.component.html',\n})\nexport class ImportComponent extends BaseImportComponent {\n    constructor(i18nService: I18nService, analytics: Angulartics2,\n        toasterService: ToasterService, importService: ImportService,\n        router: Router, private route: ActivatedRoute) {\n        super(i18nService, analytics, toasterService, importService, router);\n    }\n\n    ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n            this.successNavigate = ['organizations', this.organizationId, 'vault'];\n            super.ngOnInit();\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { EventService } from 'jslib/abstractions/event.service';\nimport { ExportService } from 'jslib/abstractions/export.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { ExportComponent as BaseExportComponent } from '../../tools/export.component';\n\nimport { EventType } from 'jslib/enums/eventType';\n\n@Component({\n    selector: 'app-org-export',\n    templateUrl: '../../tools/export.component.html',\n})\nexport class ExportComponent extends BaseExportComponent {\n    organizationId: string;\n\n    constructor(cryptoService: CryptoService, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService, exportService: ExportService,\n        eventService: EventService, private route: ActivatedRoute) {\n        super(cryptoService, i18nService, platformUtilsService, exportService, eventService);\n    }\n\n    ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n        });\n    }\n\n    getExportData() {\n        return this.exportService.getOrganizationExport(this.organizationId, this.format);\n    }\n\n    getFileName() {\n        return super.getFileName('org');\n    }\n\n    async collectEvent(): Promise<any> {\n        // TODO\n        // await this.eventService.collect(EventType.Organization_ClientExportedVault);\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { AuditService } from 'jslib/abstractions/audit.service';\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport {\n    ExposedPasswordsReportComponent as BaseExposedPasswordsReportComponent,\n} from '../../tools/exposed-passwords-report.component';\n\nimport { CipherView } from 'jslib/models/view/cipherView';\n\n@Component({\n    selector: 'app-exposed-passwords-report',\n    templateUrl: '../../tools/exposed-passwords-report.component.html',\n})\nexport class ExposedPasswordsReportComponent extends BaseExposedPasswordsReportComponent {\n    constructor(cipherService: CipherService, auditService: AuditService,\n        componentFactoryResolver: ComponentFactoryResolver, messagingService: MessagingService,\n        userService: UserService, private route: ActivatedRoute) {\n        super(cipherService, auditService, componentFactoryResolver, messagingService, userService);\n    }\n\n    ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            super.ngOnInit();\n        });\n    }\n\n    getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport {\n    InactiveTwoFactorReportComponent as BaseInactiveTwoFactorReportComponent,\n} from '../../tools/inactive-two-factor-report.component';\n\nimport { CipherView } from 'jslib/models/view/cipherView';\n\n@Component({\n    selector: 'app-inactive-two-factor-report',\n    templateUrl: '../../tools/inactive-two-factor-report.component.html',\n})\nexport class InactiveTwoFactorReportComponent extends BaseInactiveTwoFactorReportComponent {\n    constructor(cipherService: CipherService, componentFactoryResolver: ComponentFactoryResolver,\n        messagingService: MessagingService, userService: UserService,\n        private route: ActivatedRoute) {\n        super(cipherService, componentFactoryResolver, messagingService, userService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            await super.ngOnInit();\n        });\n    }\n\n    getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { CipherView } from 'jslib/models/view/cipherView';\n\nimport {\n    ReusedPasswordsReportComponent as BaseReusedPasswordsReportComponent,\n} from '../../tools/reused-passwords-report.component';\n\n@Component({\n    selector: 'app-reused-passwords-report',\n    templateUrl: '../../tools/reused-passwords-report.component.html',\n})\nexport class ReusedPasswordsReportComponent extends BaseReusedPasswordsReportComponent {\n    constructor(cipherService: CipherService, componentFactoryResolver: ComponentFactoryResolver,\n        messagingService: MessagingService, userService: UserService,\n        private route: ActivatedRoute) {\n        super(cipherService, componentFactoryResolver, messagingService, userService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            await super.ngOnInit();\n        });\n    }\n\n    getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport {\n    UnsecuredWebsitesReportComponent as BaseUnsecuredWebsitesReportComponent,\n} from '../../tools/unsecured-websites-report.component';\n\nimport { CipherView } from 'jslib/models/view/cipherView';\n\n@Component({\n    selector: 'app-unsecured-websites-report',\n    templateUrl: '../../tools/unsecured-websites-report.component.html',\n})\nexport class UnsecuredWebsitesReportComponent extends BaseUnsecuredWebsitesReportComponent {\n    constructor(cipherService: CipherService, componentFactoryResolver: ComponentFactoryResolver,\n        messagingService: MessagingService, userService: UserService,\n        private route: ActivatedRoute) {\n        super(cipherService, componentFactoryResolver, messagingService, userService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            await super.ngOnInit();\n        });\n    }\n\n    getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { CipherView } from 'jslib/models/view/cipherView';\n\nimport {\n    WeakPasswordsReportComponent as BaseWeakPasswordsReportComponent,\n} from '../../tools/weak-passwords-report.component';\n\n@Component({\n    selector: 'app-weak-passwords-report',\n    templateUrl: '../../tools/weak-passwords-report.component.html',\n})\nexport class WeakPasswordsReportComponent extends BaseWeakPasswordsReportComponent {\n    constructor(cipherService: CipherService, passwordGenerationService: PasswordGenerationService,\n        componentFactoryResolver: ComponentFactoryResolver, messagingService: MessagingService,\n        userService: UserService, private route: ActivatedRoute) {\n        super(cipherService, passwordGenerationService, componentFactoryResolver, messagingService, userService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            await super.ngOnInit();\n        });\n    }\n\n    getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { Organization } from 'jslib/models/domain/organization';\n\n@Component({\n    selector: 'app-org-manage',\n    templateUrl: 'manage.component.html',\n})\nexport class ManageComponent implements OnInit {\n    organization: Organization;\n    accessGroups = false;\n    accessEvents = false;\n\n    constructor(private route: ActivatedRoute, private userService: UserService) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async (params) => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            this.accessEvents = this.organization.useEvents;\n            this.accessGroups = this.organization.useGroups;\n        });\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { CollectionData } from 'jslib/models/data/collectionData';\nimport { Collection } from 'jslib/models/domain/collection';\nimport {\n    CollectionDetailsResponse,\n    CollectionResponse,\n} from 'jslib/models/response/collectionResponse';\nimport { ListResponse } from 'jslib/models/response/listResponse';\nimport { CollectionView } from 'jslib/models/view/collectionView';\n\nimport { ModalComponent } from '../../modal.component';\nimport { CollectionAddEditComponent } from './collection-add-edit.component';\nimport { EntityUsersComponent } from './entity-users.component';\n\n@Component({\n    selector: 'app-org-manage-collections',\n    templateUrl: 'collections.component.html',\n})\nexport class CollectionsComponent implements OnInit {\n    @ViewChild('addEdit', { read: ViewContainerRef }) addEditModalRef: ViewContainerRef;\n    @ViewChild('usersTemplate', { read: ViewContainerRef }) usersModalRef: ViewContainerRef;\n\n    loading = true;\n    organizationId: string;\n    collections: CollectionView[];\n    searchText: string;\n\n    private modal: ModalComponent = null;\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute,\n        private collectionService: CollectionService, private componentFactoryResolver: ComponentFactoryResolver,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private i18nService: I18nService, private platformUtilsService: PlatformUtilsService,\n        private userService: UserService) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n            await this.load();\n            const queryParamsSub = this.route.queryParams.subscribe(async (qParams) => {\n                this.searchText = qParams.search;\n                if (queryParamsSub != null) {\n                    queryParamsSub.unsubscribe();\n                }\n            });\n        });\n    }\n\n    async load() {\n        const organization = await this.userService.getOrganization(this.organizationId);\n        let response: ListResponse<CollectionResponse>;\n        if (organization.isAdmin) {\n            response = await this.apiService.getCollections(this.organizationId);\n        } else {\n            response = await this.apiService.getUserCollections();\n        }\n        const collections = response.data.filter((c) => c.organizationId === this.organizationId).map((r) =>\n            new Collection(new CollectionData(r as CollectionDetailsResponse)));\n        this.collections = await this.collectionService.decryptMany(collections);\n        this.loading = false;\n    }\n\n    edit(collection: CollectionView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.addEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<CollectionAddEditComponent>(\n            CollectionAddEditComponent, this.addEditModalRef);\n\n        childComponent.organizationId = this.organizationId;\n        childComponent.collectionId = collection != null ? collection.id : null;\n        childComponent.onSavedCollection.subscribe(() => {\n            this.modal.close();\n            this.load();\n        });\n        childComponent.onDeletedCollection.subscribe(() => {\n            this.modal.close();\n            this.removeCollection(collection);\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    add() {\n        this.edit(null);\n    }\n\n    async delete(collection: CollectionView) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteCollectionConfirmation'), collection.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            await this.apiService.deleteCollection(this.organizationId, collection.id);\n            this.analytics.eventTrack.next({ action: 'Deleted Collection' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedCollectionId', collection.name));\n            this.removeCollection(collection);\n        } catch { }\n    }\n\n    users(collection: CollectionView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.usersModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<EntityUsersComponent>(\n            EntityUsersComponent, this.usersModalRef);\n\n        childComponent.organizationId = this.organizationId;\n        childComponent.entity = 'collection';\n        childComponent.entityId = collection.id;\n        childComponent.entityName = collection.name;\n\n        childComponent.onEditedUsers.subscribe(() => {\n            this.load();\n            this.modal.close();\n        });\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    private removeCollection(collection: CollectionView) {\n        const index = this.collections.indexOf(collection);\n        if (index > -1) {\n            this.collections.splice(index, 1);\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { OrganizationUserStatusType } from 'jslib/enums/organizationUserStatusType';\nimport { OrganizationUserType } from 'jslib/enums/organizationUserType';\nimport { SelectionReadOnlyRequest } from 'jslib/models/request/selectionReadOnlyRequest';\nimport { OrganizationUserUserDetailsResponse } from 'jslib/models/response/organizationUserResponse';\n\nimport { Utils } from 'jslib/misc/utils';\n\n@Component({\n    selector: 'app-entity-users',\n    templateUrl: 'entity-users.component.html',\n})\nexport class EntityUsersComponent implements OnInit {\n    @Input() entity: 'group' | 'collection';\n    @Input() entityId: string;\n    @Input() entityName: string;\n    @Input() organizationId: string;\n    @Output() onEditedUsers = new EventEmitter();\n\n    organizationUserType = OrganizationUserType;\n    organizationUserStatusType = OrganizationUserStatusType;\n\n    showSelected = false;\n    loading = true;\n    formPromise: Promise<any>;\n    selectedCount = 0;\n    searchText: string;\n\n    private allUsers: OrganizationUserUserDetailsResponse[] = [];\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService) { }\n\n    async ngOnInit() {\n        await this.loadUsers();\n        this.loading = false;\n    }\n\n    get users() {\n        if (this.showSelected) {\n            return this.allUsers.filter((u) => (u as any).checked);\n        } else {\n            return this.allUsers;\n        }\n    }\n\n    async loadUsers() {\n        const users = await this.apiService.getOrganizationUsers(this.organizationId);\n        this.allUsers = users.data.map((r) => r).sort(Utils.getSortFunction(this.i18nService, 'email'));\n        if (this.entity === 'group') {\n            const response = await this.apiService.getGroupUsers(this.organizationId, this.entityId);\n            if (response != null && users.data.length > 0) {\n                response.forEach((s) => {\n                    const user = users.data.filter((u) => u.id === s);\n                    if (user != null && user.length > 0) {\n                        (user[0] as any).checked = true;\n                    }\n                });\n            }\n        } else if (this.entity === 'collection') {\n            const response = await this.apiService.getCollectionUsers(this.organizationId, this.entityId);\n            if (response != null && users.data.length > 0) {\n                response.forEach((s) => {\n                    const user = users.data.filter((u) => !u.accessAll && u.id === s.id);\n                    if (user != null && user.length > 0) {\n                        (user[0] as any).checked = true;\n                        (user[0] as any).readOnly = s.readOnly;\n                    }\n                });\n            }\n        }\n\n        this.allUsers.forEach((u) => {\n            if (this.entity === 'collection' && u.accessAll) {\n                (u as any).checked = true;\n            }\n            if ((u as any).checked) {\n                this.selectedCount++;\n            }\n        });\n    }\n\n    check(u: OrganizationUserUserDetailsResponse) {\n        if (this.entity === 'collection' && u.accessAll) {\n            return;\n        }\n        (u as any).checked = !(u as any).checked;\n        this.selectedChanged(u);\n    }\n\n    selectedChanged(u: OrganizationUserUserDetailsResponse) {\n        if ((u as any).checked) {\n            this.selectedCount++;\n        } else {\n            if (this.entity === 'collection') {\n                (u as any).readOnly = false;\n            }\n            this.selectedCount--;\n        }\n    }\n\n    filterSelected(showSelected: boolean) {\n        this.showSelected = showSelected;\n    }\n\n    async submit() {\n        try {\n            if (this.entity === 'group') {\n                const selections = this.users.filter((u) => (u as any).checked).map((u) => u.id);\n                this.formPromise = this.apiService.putGroupUsers(this.organizationId, this.entityId, selections);\n            } else {\n                const selections = this.users.filter((u) => (u as any).checked && !u.accessAll)\n                    .map((u) => new SelectionReadOnlyRequest(u.id, !!(u as any).readOnly));\n                this.formPromise = this.apiService.putCollectionUsers(this.organizationId, this.entityId, selections);\n            }\n            await this.formPromise;\n            this.analytics.eventTrack.next({\n                action: this.entity === 'group' ? 'Edited Group Users' : 'Edited Collection Users',\n            });\n            this.toasterService.popAsync('success', null, this.i18nService.t('updatedUsers'));\n            this.onEditedUsers.emit();\n        } catch { }\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { EventService } from '../../services/event.service';\n\nimport { EventResponse } from 'jslib/models/response/eventResponse';\nimport { ListResponse } from 'jslib/models/response/listResponse';\n\n@Component({\n    selector: 'app-org-events',\n    templateUrl: 'events.component.html',\n})\nexport class EventsComponent implements OnInit {\n    loading = true;\n    loaded = false;\n    organizationId: string;\n    events: any[];\n    start: string;\n    end: string;\n    continuationToken: string;\n    refreshPromise: Promise<any>;\n    morePromise: Promise<any>;\n\n    private orgUsersUserIdMap = new Map<string, any>();\n    private orgUsersIdMap = new Map<string, any>();\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute,\n        private eventService: EventService, private i18nService: I18nService,\n        private toasterService: ToasterService, private userService: UserService,\n        private router: Router) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n            const organization = await this.userService.getOrganization(this.organizationId);\n            if (organization == null || !organization.useEvents) {\n                this.router.navigate(['/organizations', this.organizationId]);\n                return;\n            }\n            const defaultDates = this.eventService.getDefaultDateFilters();\n            this.start = defaultDates[0];\n            this.end = defaultDates[1];\n            await this.load();\n        });\n    }\n\n    async load() {\n        const response = await this.apiService.getOrganizationUsers(this.organizationId);\n        response.data.forEach((u) => {\n            const name = u.name == null || u.name.trim() === '' ? u.email : u.name;\n            this.orgUsersIdMap.set(u.id, { name: name, email: u.email });\n            this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n        });\n        await this.loadEvents(true);\n        this.loaded = true;\n    }\n\n    async loadEvents(clearExisting: boolean) {\n        if (this.refreshPromise != null || this.morePromise != null) {\n            return;\n        }\n\n        let dates: string[] = null;\n        try {\n            dates = this.eventService.formatDateFilters(this.start, this.end);\n        } catch (e) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidDateRange'));\n            return;\n        }\n\n        this.loading = true;\n        let response: ListResponse<EventResponse>;\n        try {\n            const promise = this.apiService.getEventsOrganization(this.organizationId, dates[0], dates[1],\n                clearExisting ? null : this.continuationToken);\n            if (clearExisting) {\n                this.refreshPromise = promise;\n            } else {\n                this.morePromise = promise;\n            }\n            response = await promise;\n        } catch { }\n\n        this.continuationToken = response.continuationToken;\n        const events = response.data.map((r) => {\n            const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n            const eventInfo = this.eventService.getEventInfo(r);\n            const user = userId != null && this.orgUsersUserIdMap.has(userId) ?\n                this.orgUsersUserIdMap.get(userId) : null;\n            return {\n                message: eventInfo.message,\n                appIcon: eventInfo.appIcon,\n                appName: eventInfo.appName,\n                userId: userId,\n                userName: user != null ? user.name : this.i18nService.t('unknown'),\n                userEmail: user != null ? user.email : '',\n                date: r.date,\n                ip: r.ipAddress,\n                type: r.type,\n            };\n        });\n\n        if (!clearExisting && this.events != null && this.events.length > 0) {\n            this.events = this.events.concat(events);\n        } else {\n            this.events = events;\n        }\n\n        this.loading = false;\n        this.morePromise = null;\n        this.refreshPromise = null;\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { GroupResponse } from 'jslib/models/response/groupResponse';\n\nimport { Utils } from 'jslib/misc/utils';\n\nimport { ModalComponent } from '../../modal.component';\nimport { EntityUsersComponent } from './entity-users.component';\nimport { GroupAddEditComponent } from './group-add-edit.component';\n\n@Component({\n    selector: 'app-org-groups',\n    templateUrl: 'groups.component.html',\n})\nexport class GroupsComponent implements OnInit {\n    @ViewChild('addEdit', { read: ViewContainerRef }) addEditModalRef: ViewContainerRef;\n    @ViewChild('usersTemplate', { read: ViewContainerRef }) usersModalRef: ViewContainerRef;\n\n    loading = true;\n    organizationId: string;\n    groups: GroupResponse[];\n    searchText: string;\n\n    private modal: ModalComponent = null;\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute,\n        private i18nService: I18nService, private componentFactoryResolver: ComponentFactoryResolver,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private platformUtilsService: PlatformUtilsService, private userService: UserService,\n        private router: Router) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n            const organization = await this.userService.getOrganization(this.organizationId);\n            if (organization == null || !organization.useGroups) {\n                this.router.navigate(['/organizations', this.organizationId]);\n                return;\n            }\n            await this.load();\n            const queryParamsSub = this.route.queryParams.subscribe(async (qParams) => {\n                this.searchText = qParams.search;\n                if (queryParamsSub != null) {\n                    queryParamsSub.unsubscribe();\n                }\n            });\n        });\n    }\n\n    async load() {\n        const response = await this.apiService.getGroups(this.organizationId);\n        const groups = response.data != null && response.data.length > 0 ? response.data : [];\n        groups.sort(Utils.getSortFunction(this.i18nService, 'name'));\n        this.groups = groups;\n        this.loading = false;\n    }\n\n    edit(group: GroupResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.addEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<GroupAddEditComponent>(\n            GroupAddEditComponent, this.addEditModalRef);\n\n        childComponent.organizationId = this.organizationId;\n        childComponent.groupId = group != null ? group.id : null;\n        childComponent.onSavedGroup.subscribe(() => {\n            this.modal.close();\n            this.load();\n        });\n        childComponent.onDeletedGroup.subscribe(() => {\n            this.modal.close();\n            this.removeGroup(group);\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    add() {\n        this.edit(null);\n    }\n\n    async delete(group: GroupResponse) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteGroupConfirmation'), group.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            await this.apiService.deleteGroup(this.organizationId, group.id);\n            this.analytics.eventTrack.next({ action: 'Deleted Group' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedGroupId', group.name));\n            this.removeGroup(group);\n        } catch { }\n    }\n\n    users(group: GroupResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.usersModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<EntityUsersComponent>(\n            EntityUsersComponent, this.usersModalRef);\n\n        childComponent.organizationId = this.organizationId;\n        childComponent.entity = 'group';\n        childComponent.entityId = group.id;\n        childComponent.entityName = group.name;\n\n        childComponent.onEditedUsers.subscribe(() => {\n            this.modal.close();\n        });\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    private removeGroup(group: GroupResponse) {\n        const index = this.groups.indexOf(group);\n        if (index > -1) {\n            this.groups.splice(index, 1);\n        }\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ConstantsService } from 'jslib/services/constants.service';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { StorageService } from 'jslib/abstractions/storage.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { OrganizationUserConfirmRequest } from 'jslib/models/request/organizationUserConfirmRequest';\n\nimport { OrganizationUserUserDetailsResponse } from 'jslib/models/response/organizationUserResponse';\n\nimport { OrganizationUserStatusType } from 'jslib/enums/organizationUserStatusType';\nimport { OrganizationUserType } from 'jslib/enums/organizationUserType';\n\nimport { Utils } from 'jslib/misc/utils';\n\nimport { ModalComponent } from '../../modal.component';\nimport { EntityEventsComponent } from './entity-events.component';\nimport { UserAddEditComponent } from './user-add-edit.component';\nimport { UserConfirmComponent } from './user-confirm.component';\nimport { UserGroupsComponent } from './user-groups.component';\n\n@Component({\n    selector: 'app-org-people',\n    templateUrl: 'people.component.html',\n})\nexport class PeopleComponent implements OnInit {\n    @ViewChild('addEdit', { read: ViewContainerRef }) addEditModalRef: ViewContainerRef;\n    @ViewChild('groupsTemplate', { read: ViewContainerRef }) groupsModalRef: ViewContainerRef;\n    @ViewChild('eventsTemplate', { read: ViewContainerRef }) eventsModalRef: ViewContainerRef;\n    @ViewChild('confirmTemplate', { read: ViewContainerRef }) confirmModalRef: ViewContainerRef;\n\n    loading = true;\n    organizationId: string;\n    users: OrganizationUserUserDetailsResponse[];\n    searchText: string;\n    status: OrganizationUserStatusType = null;\n    statusMap = new Map<OrganizationUserStatusType, OrganizationUserUserDetailsResponse[]>();\n    organizationUserType = OrganizationUserType;\n    organizationUserStatusType = OrganizationUserStatusType;\n    actionPromise: Promise<any>;\n    accessEvents = false;\n    accessGroups = false;\n\n    private modal: ModalComponent = null;\n    private allUsers: OrganizationUserUserDetailsResponse[];\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute,\n        private i18nService: I18nService, private componentFactoryResolver: ComponentFactoryResolver,\n        private platformUtilsService: PlatformUtilsService, private analytics: Angulartics2,\n        private toasterService: ToasterService, private cryptoService: CryptoService,\n        private userService: UserService, private router: Router,\n        private storageService: StorageService) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n            const organization = await this.userService.getOrganization(this.organizationId);\n            if (!organization.isAdmin) {\n                this.router.navigate(['../collections'], { relativeTo: this.route });\n                return;\n            }\n            this.accessEvents = organization.useEvents;\n            this.accessGroups = organization.useGroups;\n            await this.load();\n\n            const queryParamsSub = this.route.queryParams.subscribe(async (qParams) => {\n                this.searchText = qParams.search;\n                if (qParams.viewEvents != null) {\n                    const user = this.users.filter((u) => u.id === qParams.viewEvents);\n                    if (user.length > 0 && user[0].status === OrganizationUserStatusType.Confirmed) {\n                        this.events(user[0]);\n                    }\n                }\n                if (queryParamsSub != null) {\n                    queryParamsSub.unsubscribe();\n                }\n            });\n        });\n    }\n\n    async load() {\n        const response = await this.apiService.getOrganizationUsers(this.organizationId);\n        this.statusMap.clear();\n        this.allUsers = response.data != null && response.data.length > 0 ? response.data : [];\n        this.allUsers.sort(Utils.getSortFunction(this.i18nService, 'email'));\n        this.allUsers.forEach((u) => {\n            if (!this.statusMap.has(u.status)) {\n                this.statusMap.set(u.status, [u]);\n            } else {\n                this.statusMap.get(u.status).push(u);\n            }\n        });\n        this.filter(this.status);\n        this.loading = false;\n    }\n\n    filter(status: OrganizationUserStatusType) {\n        this.status = status;\n        if (this.status != null) {\n            this.users = this.statusMap.get(this.status);\n        } else {\n            this.users = this.allUsers;\n        }\n    }\n\n    get invitedCount() {\n        return this.statusMap.has(OrganizationUserStatusType.Invited) ?\n            this.statusMap.get(OrganizationUserStatusType.Invited).length : 0;\n    }\n\n    get acceptedCount() {\n        return this.statusMap.has(OrganizationUserStatusType.Accepted) ?\n            this.statusMap.get(OrganizationUserStatusType.Accepted).length : 0;\n    }\n\n    get confirmedCount() {\n        return this.statusMap.has(OrganizationUserStatusType.Confirmed) ?\n            this.statusMap.get(OrganizationUserStatusType.Confirmed).length : 0;\n    }\n\n    get showConfirmUsers(): boolean {\n        return this.allUsers != null && this.statusMap != null && this.allUsers.length > 1 &&\n            this.confirmedCount > 0 && this.confirmedCount < 3 && this.acceptedCount > 0;\n    }\n\n    edit(user: OrganizationUserUserDetailsResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.addEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<UserAddEditComponent>(\n            UserAddEditComponent, this.addEditModalRef);\n\n        childComponent.name = user != null ? user.name || user.email : null;\n        childComponent.organizationId = this.organizationId;\n        childComponent.organizationUserId = user != null ? user.id : null;\n        childComponent.onSavedUser.subscribe(() => {\n            this.modal.close();\n            this.load();\n        });\n        childComponent.onDeletedUser.subscribe(() => {\n            this.modal.close();\n            this.removeUser(user);\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    invite() {\n        this.edit(null);\n    }\n\n    groups(user: OrganizationUserUserDetailsResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.groupsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<UserGroupsComponent>(\n            UserGroupsComponent, this.groupsModalRef);\n\n        childComponent.name = user != null ? user.name || user.email : null;\n        childComponent.organizationId = this.organizationId;\n        childComponent.organizationUserId = user != null ? user.id : null;\n        childComponent.onSavedUser.subscribe(() => {\n            this.modal.close();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    async remove(user: OrganizationUserUserDetailsResponse) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('removeUserConfirmation'), user.name || user.email,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            await this.apiService.deleteOrganizationUser(this.organizationId, user.id);\n            this.analytics.eventTrack.next({ action: 'Deleted User' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('removedUserId', user.name || user.email));\n            this.removeUser(user);\n        } catch { }\n    }\n\n    async reinvite(user: OrganizationUserUserDetailsResponse) {\n        if (this.actionPromise != null) {\n            return;\n        }\n        this.actionPromise = this.apiService.postOrganizationUserReinvite(this.organizationId, user.id);\n        await this.actionPromise;\n        this.analytics.eventTrack.next({ action: 'Reinvited User' });\n        this.toasterService.popAsync('success', null, this.i18nService.t('hasBeenReinvited', user.name || user.email));\n        this.actionPromise = null;\n    }\n\n    async confirm(user: OrganizationUserUserDetailsResponse) {\n        function updateUser(self: PeopleComponent) {\n            user.status = OrganizationUserStatusType.Confirmed;\n            const mapIndex = self.statusMap.get(OrganizationUserStatusType.Accepted).indexOf(user);\n            if (mapIndex > -1) {\n                self.statusMap.get(OrganizationUserStatusType.Accepted).splice(mapIndex, 1);\n                self.statusMap.get(OrganizationUserStatusType.Confirmed).push(user);\n            }\n        }\n\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        const autoConfirm = await this.storageService.get<boolean>(ConstantsService.autoConfirmFingerprints);\n        if (autoConfirm == null || !autoConfirm) {\n            if (this.modal != null) {\n                this.modal.close();\n            }\n\n            const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n            this.modal = this.confirmModalRef.createComponent(factory).instance;\n            const childComponent = this.modal.show<UserConfirmComponent>(\n                UserConfirmComponent, this.confirmModalRef);\n\n            childComponent.name = user != null ? user.name || user.email : null;\n            childComponent.organizationId = this.organizationId;\n            childComponent.organizationUserId = user != null ? user.id : null;\n            childComponent.userId = user != null ? user.userId : null;\n            childComponent.onConfirmedUser.subscribe(() => {\n                this.modal.close();\n                updateUser(this);\n            });\n\n            this.modal.onClosed.subscribe(() => {\n                this.modal = null;\n            });\n            return;\n        }\n\n        this.actionPromise = this.doConfirmation(user);\n        await this.actionPromise;\n        updateUser(this);\n        this.analytics.eventTrack.next({ action: 'Confirmed User' });\n        this.toasterService.popAsync('success', null, this.i18nService.t('hasBeenConfirmed', user.name || user.email));\n        this.actionPromise = null;\n    }\n\n    async events(user: OrganizationUserUserDetailsResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.eventsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<EntityEventsComponent>(\n            EntityEventsComponent, this.eventsModalRef);\n\n        childComponent.name = user.name || user.email;\n        childComponent.organizationId = this.organizationId;\n        childComponent.entityId = user.id;\n        childComponent.showUser = false;\n        childComponent.entity = 'user';\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    private async doConfirmation(user: OrganizationUserUserDetailsResponse) {\n        const orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const publicKeyResponse = await this.apiService.getUserPublicKey(user.userId);\n        const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n        try {\n            // tslint:disable-next-line\n            console.log('User\\'s fingerprint: ' +\n                (await this.cryptoService.getFingerprint(user.userId, publicKey.buffer)).join('-'));\n        } catch { }\n        const key = await this.cryptoService.rsaEncrypt(orgKey.key, publicKey.buffer);\n        const request = new OrganizationUserConfirmRequest();\n        request.key = key.encryptedString;\n        await this.apiService.postOrganizationUserConfirm(this.organizationId, user.id, request);\n    }\n\n    private removeUser(user: OrganizationUserUserDetailsResponse) {\n        let index = this.users.indexOf(user);\n        if (index > -1) {\n            this.users.splice(index, 1);\n        }\n        if (this.statusMap.has(OrganizationUserStatusType.Accepted)) {\n            index = this.statusMap.get(OrganizationUserStatusType.Accepted).indexOf(user);\n            if (index > -1) {\n                this.statusMap.get(OrganizationUserStatusType.Accepted).splice(index, 1);\n            }\n        }\n        if (this.statusMap.has(OrganizationUserStatusType.Invited)) {\n            index = this.statusMap.get(OrganizationUserStatusType.Invited).indexOf(user);\n            if (index > -1) {\n                this.statusMap.get(OrganizationUserStatusType.Invited).splice(index, 1);\n            }\n        }\n        if (this.statusMap.has(OrganizationUserStatusType.Confirmed)) {\n            index = this.statusMap.get(OrganizationUserStatusType.Confirmed).indexOf(user);\n            if (index > -1) {\n                this.statusMap.get(OrganizationUserStatusType.Confirmed).splice(index, 1);\n            }\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\n@Component({\n    selector: 'app-org-settings',\n    templateUrl: 'settings.component.html',\n})\nexport class SettingsComponent {\n    access2fa = false;\n    selfHosted: boolean;\n\n    constructor(private route: ActivatedRoute, private userService: UserService,\n        private platformUtilsService: PlatformUtilsService) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async (params) => {\n            this.selfHosted = await this.platformUtilsService.isSelfHost();\n            const organization = await this.userService.getOrganization(params.organizationId);\n            this.access2fa = organization.use2fa;\n        });\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { SyncService } from 'jslib/abstractions/sync.service';\n\nimport { OrganizationUpdateRequest } from 'jslib/models/request/organizationUpdateRequest';\nimport { OrganizationResponse } from 'jslib/models/response/organizationResponse';\n\nimport { ModalComponent } from '../../modal.component';\nimport { PurgeVaultComponent } from '../../settings/purge-vault.component';\nimport { ApiKeyComponent } from './api-key.component';\nimport { DeleteOrganizationComponent } from './delete-organization.component';\nimport { RotateApiKeyComponent } from './rotate-api-key.component';\n\n@Component({\n    selector: 'app-org-account',\n    templateUrl: 'account.component.html',\n})\nexport class AccountComponent {\n    @ViewChild('deleteOrganizationTemplate', { read: ViewContainerRef }) deleteModalRef: ViewContainerRef;\n    @ViewChild('purgeOrganizationTemplate', { read: ViewContainerRef }) purgeModalRef: ViewContainerRef;\n    @ViewChild('apiKeyTemplate', { read: ViewContainerRef }) apiKeyModalRef: ViewContainerRef;\n    @ViewChild('rotateApiKeyTemplate', { read: ViewContainerRef }) rotateApiKeyModalRef: ViewContainerRef;\n\n    loading = true;\n    canUseApi = false;\n    org: OrganizationResponse;\n    formPromise: Promise<any>;\n\n    private organizationId: string;\n    private modal: ModalComponent = null;\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver,\n        private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private route: ActivatedRoute, private syncService: SyncService) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n            try {\n                this.org = await this.apiService.getOrganization(this.organizationId);\n                this.canUseApi = this.org.useApi;\n            } catch { }\n        });\n        this.loading = false;\n    }\n\n    async submit() {\n        try {\n            const request = new OrganizationUpdateRequest();\n            request.name = this.org.name;\n            request.businessName = this.org.businessName;\n            request.billingEmail = this.org.billingEmail;\n            this.formPromise = this.apiService.putOrganization(this.organizationId, request).then(() => {\n                return this.syncService.fullSync(true);\n            });\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Updated Organization Settings' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('organizationUpdated'));\n        } catch { }\n    }\n\n    deleteOrganization() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.deleteModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<DeleteOrganizationComponent>(\n            DeleteOrganizationComponent, this.deleteModalRef);\n        childComponent.organizationId = this.organizationId;\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    purgeVault() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.purgeModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<PurgeVaultComponent>(PurgeVaultComponent, this.purgeModalRef);\n        childComponent.organizationId = this.organizationId;\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    viewApiKey() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.apiKeyModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<ApiKeyComponent>(ApiKeyComponent, this.apiKeyModalRef);\n        childComponent.organizationId = this.organizationId;\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    rotateApiKey() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.rotateApiKeyModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<RotateApiKeyComponent>(RotateApiKeyComponent, this.rotateApiKeyModalRef);\n        childComponent.organizationId = this.organizationId;\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\n\nimport { TwoFactorDuoComponent } from '../../settings/two-factor-duo.component';\nimport { TwoFactorSetupComponent as BaseTwoFactorSetupComponent } from '../../settings/two-factor-setup.component';\n\n@Component({\n    selector: 'app-two-factor-setup',\n    templateUrl: '../../settings/two-factor-setup.component.html',\n})\nexport class TwoFactorSetupComponent extends BaseTwoFactorSetupComponent {\n    constructor(apiService: ApiService, userService: UserService,\n        componentFactoryResolver: ComponentFactoryResolver, messagingService: MessagingService,\n        private route: ActivatedRoute) {\n        super(apiService, userService, componentFactoryResolver, messagingService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n            await super.ngOnInit();\n        });\n    }\n\n    manage(type: TwoFactorProviderType) {\n        switch (type) {\n            case TwoFactorProviderType.OrganizationDuo:\n                const duoComp = this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n                duoComp.type = TwoFactorProviderType.OrganizationDuo;\n                duoComp.organizationId = this.organizationId;\n                duoComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.OrganizationDuo);\n                });\n                break;\n            default:\n                break;\n        }\n    }\n\n    protected getTwoFactorProviders() {\n        return this.apiService.getTwoFactorOrganizationProviders(this.organizationId);\n    }\n\n    protected filterProvider(type: TwoFactorProviderType) {\n        return type !== TwoFactorProviderType.OrganizationDuo;\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { UserBillingComponent } from '../../settings/user-billing.component';\n\n@Component({\n    selector: 'app-org-billing',\n    templateUrl: '../../settings/user-billing.component.html',\n})\nexport class OrganizationBillingComponent extends UserBillingComponent implements OnInit {\n    constructor(apiService: ApiService, i18nService: I18nService,\n        analytics: Angulartics2, toasterService: ToasterService,\n        private route: ActivatedRoute) {\n        super(apiService, i18nService, analytics, toasterService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n            await this.load();\n            this.firstLoaded = true;\n        });\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { OrganizationSubscriptionResponse } from 'jslib/models/response/organizationSubscriptionResponse';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { TokenService } from 'jslib/abstractions/token.service';\n\nimport { PlanType } from 'jslib/enums/planType';\n\n@Component({\n    selector: 'app-org-subscription',\n    templateUrl: 'organization-subscription.component.html',\n})\nexport class OrganizationSubscriptionComponent implements OnInit {\n    loading = false;\n    firstLoaded = false;\n    organizationId: string;\n    adjustSeatsAdd = true;\n    showAdjustSeats = false;\n    adjustStorageAdd = true;\n    showAdjustStorage = false;\n    showUpdateLicense = false;\n    showDownloadLicense = false;\n    showChangePlan = false;\n    sub: OrganizationSubscriptionResponse;\n    selfHosted = false;\n\n    cancelPromise: Promise<any>;\n    reinstatePromise: Promise<any>;\n\n    constructor(private tokenService: TokenService, private apiService: ApiService,\n        private platformUtilsService: PlatformUtilsService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private messagingService: MessagingService, private route: ActivatedRoute) {\n        this.selfHosted = platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n            await this.load();\n            this.firstLoaded = true;\n        });\n    }\n\n    async load() {\n        if (this.loading) {\n            return;\n        }\n        this.loading = true;\n        this.sub = await this.apiService.getOrganizationSubscription(this.organizationId);\n        this.loading = false;\n    }\n\n    async reinstate() {\n        if (this.loading) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('reinstateConfirmation'),\n            this.i18nService.t('reinstateSubscription'), this.i18nService.t('yes'), this.i18nService.t('cancel'));\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.reinstatePromise = this.apiService.postOrganizationReinstate(this.organizationId);\n            await this.reinstatePromise;\n            this.analytics.eventTrack.next({ action: 'Reinstated Plan' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('reinstated'));\n            this.load();\n        } catch { }\n    }\n\n    async cancel() {\n        if (this.loading) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('cancelConfirmation'),\n            this.i18nService.t('cancelSubscription'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.cancelPromise = this.apiService.postOrganizationCancel(this.organizationId);\n            await this.cancelPromise;\n            this.analytics.eventTrack.next({ action: 'Canceled Plan' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('canceledSubscription'));\n            this.load();\n        } catch { }\n    }\n\n    async changePlan() {\n        if (this.subscription == null && this.sub.planType === PlanType.Free) {\n            this.showChangePlan = !this.showChangePlan;\n            return;\n        }\n        const contactSupport = await this.platformUtilsService.showDialog(this.i18nService.t('changeBillingPlanDesc'),\n            this.i18nService.t('changeBillingPlan'), this.i18nService.t('contactSupport'), this.i18nService.t('close'));\n        if (contactSupport) {\n            this.platformUtilsService.launchUri('https://bitwarden.com/contact');\n        }\n    }\n\n    closeChangePlan(changed: boolean) {\n        this.showChangePlan = false;\n    }\n\n    downloadLicense() {\n        this.showDownloadLicense = !this.showDownloadLicense;\n    }\n\n    closeDownloadLicense() {\n        this.showDownloadLicense = false;\n    }\n\n    updateLicense() {\n        if (this.loading) {\n            return;\n        }\n        this.showUpdateLicense = true;\n    }\n\n    closeUpdateLicense(updated: boolean) {\n        this.showUpdateLicense = false;\n        if (updated) {\n            this.load();\n            this.messagingService.send('updatedOrgLicense');\n        }\n    }\n\n    adjustSeats(add: boolean) {\n        this.adjustSeatsAdd = add;\n        this.showAdjustSeats = true;\n    }\n\n    closeSeats(load: boolean) {\n        this.showAdjustSeats = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    adjustStorage(add: boolean) {\n        this.adjustStorageAdd = add;\n        this.showAdjustStorage = true;\n    }\n\n    closeStorage(load: boolean) {\n        this.showAdjustStorage = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    get isExpired() {\n        return this.sub != null && this.sub.expiration != null &&\n            new Date(this.sub.expiration) < new Date();\n    }\n\n    get subscriptionMarkedForCancel() {\n        return this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate;\n    }\n\n    get subscription() {\n        return this.sub != null ? this.sub.subscription : null;\n    }\n\n    get nextInvoice() {\n        return this.sub != null ? this.sub.upcomingInvoice : null;\n    }\n\n    get storagePercentage() {\n        return this.sub != null && this.sub.maxStorageGb ?\n            +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2) : 0;\n    }\n\n    get storageProgressWidth() {\n        return this.storagePercentage < 5 ? 5 : 0;\n    }\n\n    get billingInterval() {\n        const monthly = this.sub.planType === PlanType.EnterpriseMonthly ||\n            this.sub.planType === PlanType.TeamsMonthly;\n        return monthly ? 'month' : 'year';\n    }\n\n    get storageGbPrice() {\n        return this.billingInterval === 'month' ? 0.5 : 4;\n    }\n\n    get seatPrice() {\n        switch (this.sub.planType) {\n            case PlanType.EnterpriseMonthly:\n                return 4;\n            case PlanType.EnterpriseAnnually:\n                return 36;\n            case PlanType.TeamsMonthly:\n                return 2.5;\n            case PlanType.TeamsAnnually:\n                return 24;\n            default:\n                return 0;\n        }\n    }\n\n    get canAdjustSeats() {\n        return this.sub.planType === PlanType.EnterpriseMonthly ||\n            this.sub.planType === PlanType.EnterpriseAnnually ||\n            this.sub.planType === PlanType.TeamsMonthly || this.sub.planType === PlanType.TeamsAnnually;\n    }\n\n    get canDownloadLicense() {\n        return (this.sub.planType !== PlanType.Free && this.subscription == null) ||\n            (this.subscription != null && !this.subscription.cancelled);\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { ProfileOrganizationResponse } from './profileOrganizationResponse';\n\nexport class ProfileResponse extends BaseResponse {\n    id: string;\n    name: string;\n    email: string;\n    emailVerified: boolean;\n    masterPasswordHint: string;\n    premium: boolean;\n    culture: string;\n    twoFactorEnabled: boolean;\n    key: string;\n    privateKey: string;\n    securityStamp: string;\n    organizations: ProfileOrganizationResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.name = this.getResponseProperty('Name');\n        this.email = this.getResponseProperty('Email');\n        this.emailVerified = this.getResponseProperty('EmailVerified');\n        this.masterPasswordHint = this.getResponseProperty('MasterPasswordHint');\n        this.premium = this.getResponseProperty('Premium');\n        this.culture = this.getResponseProperty('Culture');\n        this.twoFactorEnabled = this.getResponseProperty('TwoFactorEnabled');\n        this.key = this.getResponseProperty('Key');\n        this.privateKey = this.getResponseProperty('PrivateKey');\n        this.securityStamp = this.getResponseProperty('SecurityStamp');\n\n        const organizations = this.getResponseProperty('Organizations');\n        if (organizations != null) {\n            this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n        }\n    }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 550;","import * as jq from 'jquery';\nimport * as _swal from 'sweetalert';\nimport { SweetAlert } from 'sweetalert/typings/core';\n\nimport {\n    BodyOutputType,\n    Toast,\n    ToasterConfig,\n    ToasterContainerComponent,\n    ToasterService,\n} from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\nimport { Angulartics2GoogleAnalytics } from 'angulartics2/ga';\n\nimport {\n    Component,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    SecurityContext,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {\n    NavigationEnd,\n    Router,\n} from '@angular/router';\n\nimport { BroadcasterService } from 'jslib/angular/services/broadcaster.service';\n\nimport { StorageService } from 'jslib/abstractions/storage.service';\n\nimport { AuthService } from 'jslib/abstractions/auth.service';\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { EventService } from 'jslib/abstractions/event.service';\nimport { FolderService } from 'jslib/abstractions/folder.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { LockService } from 'jslib/abstractions/lock.service';\nimport { NotificationsService } from 'jslib/abstractions/notifications.service';\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib/abstractions/search.service';\nimport { SettingsService } from 'jslib/abstractions/settings.service';\nimport { StateService } from 'jslib/abstractions/state.service';\nimport { SyncService } from 'jslib/abstractions/sync.service';\nimport { TokenService } from 'jslib/abstractions/token.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { ConstantsService } from 'jslib/services/constants.service';\n\nimport { RouterService } from './services/router.service';\n\nconst BroadcasterSubscriptionId = 'AppComponent';\n// Hack due to Angular 5.2 bug\nconst swal: SweetAlert = _swal as any;\nconst IdleTimeout = 60000 * 10; // 10 minutes\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n})\nexport class AppComponent implements OnDestroy, OnInit {\n    toasterConfig: ToasterConfig = new ToasterConfig({\n        showCloseButton: true,\n        mouseoverTimerStop: true,\n        animation: 'flyRight',\n        limit: 5,\n    });\n\n    private lastActivity: number = null;\n    private idleTimer: number = null;\n    private isIdle = false;\n\n    constructor(private angulartics2GoogleAnalytics: Angulartics2GoogleAnalytics,\n        private broadcasterService: BroadcasterService, private userService: UserService,\n        private tokenService: TokenService, private folderService: FolderService,\n        private settingsService: SettingsService, private syncService: SyncService,\n        private passwordGenerationService: PasswordGenerationService, private cipherService: CipherService,\n        private authService: AuthService, private router: Router, private analytics: Angulartics2,\n        private toasterService: ToasterService, private i18nService: I18nService,\n        private platformUtilsService: PlatformUtilsService, private ngZone: NgZone,\n        private lockService: LockService, private storageService: StorageService,\n        private cryptoService: CryptoService, private collectionService: CollectionService,\n        private sanitizer: DomSanitizer, private searchService: SearchService,\n        private notificationsService: NotificationsService, private routerService: RouterService,\n        private stateService: StateService, private eventService: EventService) { }\n\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            window.onmousemove = () => this.recordActivity();\n            window.onmousedown = () => this.recordActivity();\n            window.ontouchstart = () => this.recordActivity();\n            window.onclick = () => this.recordActivity();\n            window.onscroll = () => this.recordActivity();\n            window.onkeypress = () => this.recordActivity();\n        });\n\n        this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n            this.ngZone.run(async () => {\n                switch (message.command) {\n                    case 'loggedIn':\n                    case 'loggedOut':\n                    case 'unlocked':\n                        this.notificationsService.updateConnection(false);\n                        break;\n                    case 'authBlocked':\n                        this.router.navigate(['/']);\n                        break;\n                    case 'logout':\n                        this.logOut(!!message.expired);\n                        break;\n                    case 'lockVault':\n                        await this.lockService.lock();\n                        break;\n                    case 'locked':\n                        this.notificationsService.updateConnection(false);\n                        this.router.navigate(['lock']);\n                        break;\n                    case 'lockedUrl':\n                        window.setTimeout(() => this.routerService.setPreviousUrl(message.url), 500);\n                        break;\n                    case 'syncStarted':\n                        break;\n                    case 'syncCompleted':\n                        break;\n                    case 'upgradeOrganization':\n                        const upgradeConfirmed = await this.platformUtilsService.showDialog(\n                            this.i18nService.t('upgradeOrganizationDesc'), this.i18nService.t('upgradeOrganization'),\n                            this.i18nService.t('upgradeOrganization'), this.i18nService.t('cancel'));\n                        if (upgradeConfirmed) {\n                            this.router.navigate(['organizations', message.organizationId, 'settings', 'billing']);\n                        }\n                        break;\n                    case 'premiumRequired':\n                        const premiumConfirmed = await this.platformUtilsService.showDialog(\n                            this.i18nService.t('premiumRequiredDesc'), this.i18nService.t('premiumRequired'),\n                            this.i18nService.t('learnMore'), this.i18nService.t('cancel'));\n                        if (premiumConfirmed) {\n                            this.router.navigate(['settings/premium']);\n                        }\n                        break;\n                    case 'showToast':\n                        this.showToast(message);\n                        break;\n                    case 'analyticsEventTrack':\n                        this.analytics.eventTrack.next({\n                            action: message.action,\n                            properties: { label: message.label },\n                        });\n                        break;\n                    default:\n                        break;\n                }\n            });\n        });\n\n        this.router.events.subscribe((event) => {\n            if (event instanceof NavigationEnd) {\n                const modals = Array.from(document.querySelectorAll('.modal'));\n                for (const modal of modals) {\n                    (jq(modal) as any).modal('hide');\n                }\n\n                if (document.querySelector('.swal-modal') != null) {\n                    swal.close(undefined);\n                }\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    private async logOut(expired: boolean) {\n        await this.eventService.uploadEvents();\n        const userId = await this.userService.getUserId();\n\n        await Promise.all([\n            this.eventService.clearEvents(),\n            this.syncService.setLastSync(new Date(0)),\n            this.tokenService.clearToken(),\n            this.cryptoService.clearKeys(),\n            this.userService.clear(),\n            this.settingsService.clear(userId),\n            this.cipherService.clear(userId),\n            this.folderService.clear(userId),\n            this.collectionService.clear(userId),\n            this.passwordGenerationService.clear(),\n            this.stateService.purge(),\n        ]);\n\n        this.searchService.clearIndex();\n        this.authService.logOut(async () => {\n            this.analytics.eventTrack.next({ action: 'Logged Out' });\n            if (expired) {\n                this.toasterService.popAsync('warning', this.i18nService.t('loggedOut'),\n                    this.i18nService.t('loginExpired'));\n            }\n            this.router.navigate(['/']);\n        });\n    }\n\n    private async recordActivity() {\n        const now = (new Date()).getTime();\n        if (this.lastActivity != null && now - this.lastActivity < 250) {\n            return;\n        }\n\n        this.lastActivity = now;\n        this.storageService.save(ConstantsService.lastActiveKey, now);\n\n        // Idle states\n        if (this.isIdle) {\n            this.isIdle = false;\n            this.idleStateChanged();\n        }\n        if (this.idleTimer != null) {\n            window.clearTimeout(this.idleTimer);\n            this.idleTimer = null;\n        }\n        this.idleTimer = window.setTimeout(() => {\n            if (!this.isIdle) {\n                this.isIdle = true;\n                this.idleStateChanged();\n            }\n        }, IdleTimeout);\n    }\n\n    private showToast(msg: any) {\n        const toast: Toast = {\n            type: msg.type,\n            title: msg.title,\n        };\n        if (typeof (msg.text) === 'string') {\n            toast.body = msg.text;\n        } else if (msg.text.length === 1) {\n            toast.body = msg.text[0];\n        } else {\n            let message = '';\n            msg.text.forEach((t: string) =>\n                message += ('<p>' + this.sanitizer.sanitize(SecurityContext.HTML, t) + '</p>'));\n            toast.body = message;\n            toast.bodyOutputType = BodyOutputType.TrustedHtml;\n        }\n        if (msg.options != null) {\n            if (msg.options.trustedHtml === true) {\n                toast.bodyOutputType = BodyOutputType.TrustedHtml;\n            }\n            if (msg.options.timeout != null && msg.options.timeout > 0) {\n                toast.timeout = msg.options.timeout;\n            }\n        }\n        this.toasterService.popAsync(toast);\n    }\n\n    private idleStateChanged() {\n        if (this.isIdle) {\n            this.notificationsService.disconnectFromInactivity();\n        } else {\n            this.notificationsService.reconnectFromActivity();\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from 'jslib/abstractions/auth.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport {\n    TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent,\n} from 'jslib/angular/components/two-factor-options.component';\n\n@Component({\n    selector: 'app-two-factor-options',\n    templateUrl: 'two-factor-options.component.html',\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n    constructor(authService: AuthService, router: Router,\n        i18nService: I18nService, platformUtilsService: PlatformUtilsService) {\n        super(authService, router, i18nService, platformUtilsService, window);\n    }\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class TwoFactorEmailRequest extends PasswordVerificationRequest {\n    email: string;\n\n    constructor(email: string, masterPasswordHash: string) {\n        super();\n        this.masterPasswordHash = masterPasswordHash;\n        this.email = email;\n    }\n}\n","export class KeysRequest {\n    publicKey: string;\n    encryptedPrivateKey: string;\n\n    constructor(publicKey: string, encryptedPrivateKey: string) {\n        this.publicKey = publicKey;\n        this.encryptedPrivateKey = encryptedPrivateKey;\n    }\n}\n","<div class=\"progress\">\n    <div class=\"progress-bar {{color}}\" role=\"progressbar\" [ngStyle]=\"{width: (scoreWidth + '%')}\"\n        attr.aria-valuenow=\"{{scoreWidth}}\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n        <ng-container *ngIf=\"showText && text\">\n            {{text}}\n        </ng-container>\n    </div>\n</div>\n","<nav class=\"navbar navbar-expand navbar-dark bg-primary\" [ngClass]=\"{'bg-secondary-alt': selfHosted}\">\n    <div class=\"container\">\n        <a class=\"navbar-brand\" routerLink=\"/\" title=\"{{'pageTitle' | i18n : 'Bitwarden'}}\">\n            <i class=\"fa fa-shield\"></i>\n        </a>\n        <div class=\"collapse navbar-collapse\">\n            <ul class=\"navbar-nav\">\n                <li class=\"nav-item\" routerLinkActive=\"active\">\n                    <a class=\"nav-link\" routerLink=\"/vault\">{{'myVault' | i18n}}</a>\n                </li>\n                <li class=\"nav-item\" routerLinkActive=\"active\">\n                    <a class=\"nav-link\" routerLink=\"/tools\">{{'tools' | i18n}}</a>\n                </li>\n                <li class=\"nav-item\" routerLinkActive=\"active\">\n                    <a class=\"nav-link\" routerLink=\"/settings\">{{'settings' | i18n}}</a>\n                </li>\n            </ul>\n        </div>\n        <ul class=\"navbar-nav flex-row ml-md-auto d-none d-md-flex\">\n            <li class=\"nav-item dropdown\">\n                <a class=\"nav-item nav-link dropdown-toggle\" href=\"#\" id=\"nav-profile\" data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\" aria-expanded=\"false\">\n                    <i class=\"fa fa-user-circle fa-lg\"></i>\n                </a>\n                <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"nav-profile\">\n                    <div class=\"dropdown-item-text d-flex align-items-center\" *ngIf=\"name\" appStopProp>\n                        <app-avatar [data]=\"name\" [email]=\"email\" size=\"25\" fontSize=\"14\" [circle]=\"true\"></app-avatar>\n                        <div class=\"ml-2 overflow-hidden\">\n                            <span>{{'loggedInAs' | i18n}}</span>\n                            <small class=\"text-muted\">{{name}}</small>\n                        </div>\n                    </div>\n                    <div class=\"dropdown-divider\"></div>\n                    <a class=\"dropdown-item\" href=\"#\" routerLink=\"/settings/account\">\n                        <i class=\"fa fa-fw fa-user\"></i>\n                        {{'myAccount' | i18n}}\n                    </a>\n                    <a class=\"dropdown-item\" href=\"https://help.bitwarden.com\" target=\"_blank\" rel=\"noopener\">\n                        <i class=\"fa fa-fw fa-question-circle\"></i>\n                        {{'getHelp' | i18n}}\n                    </a>\n                    <a class=\"dropdown-item\" href=\"https://bitwarden.com#download\" target=\"_blank\" rel=\"noopener\">\n                        <i class=\"fa fa-fw fa-download\"></i>\n                        {{'getApps' | i18n}}\n                    </a>\n                    <div class=\"dropdown-divider\"></div>\n                    <button type=\"button\" class=\"dropdown-item\" (click)=\"lock()\">\n                        <i class=\"fa fa-fw fa-lock\"></i>\n                        {{'lockNow' | i18n}}\n                    </button>\n                    <button type=\"button\" class=\"dropdown-item\" (click)=\"logOut()\">\n                        <i class=\"fa fa-fw fa-sign-out\"></i>\n                        {{'logOut' | i18n}}\n                    </button>\n                </div>\n            </li>\n        </ul>\n    </div>\n</nav>\n","<div class=\"container footer text-muted\">\n    <div class=\"row\">\n        <div class=\"col\">\n            &copy; {{year}}, 8bit Solutions LLC\n        </div>\n        <div class=\"col text-center\"></div>\n        <div class=\"col text-right\">\n            {{'versionNumber' | i18n : version}}\n        </div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\n@Component({\n    selector: 'app-verify-email',\n    templateUrl: 'verify-email.component.html',\n})\nexport class VerifyEmailComponent {\n    actionPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService) { }\n\n    async send() {\n        if (this.actionPromise != null) {\n            return;\n        }\n        try {\n            this.actionPromise = this.apiService.postAccountVerifyEmail();\n            await this.actionPromise;\n            this.analytics.eventTrack.next({ action: 'Sent Verification Email' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('checkInboxForVerification'));\n        } catch { }\n        this.actionPromise = null;\n    }\n}\n","<ng-container *ngIf=\"vault\">\n    <p *ngIf=\"!loaded\" class=\"text-muted\">\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n    </p>\n    <ng-container *ngIf=\"loaded\">\n        <ul class=\"fa-ul card-ul carets\" *ngIf=\"organizations && organizations.length\">\n            <li *ngFor=\"let o of organizations\">\n                <a [routerLink]=\"['/organizations', o.id]\" class=\"text-body\">\n                    <i class=\"fa-li fa fa-caret-right\"></i> {{o.name}}\n                    <i *ngIf=\"!o.enabled\" class=\"fa fa-exclamation-triangle text-danger\"\n                        title=\"{{'organizationIsDisabled' | i18n}}\"></i>\n                </a>\n            </li>\n        </ul>\n        <p *ngIf=\"!organizations || !organizations.length\">{{'noOrganizationsList' | i18n}}</p>\n    </ng-container>\n    <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-block btn-outline-primary\">\n        <i class=\"fa fa-plus fa-fw\"></i>\n        {{'newOrganization' | i18n}}\n    </a>\n</ng-container>\n<ng-container *ngIf=\"!vault\">\n    <div class=\"page-header d-flex\">\n        <h1>\n            {{'organizations' | i18n}}\n            <small [appApiAction]=\"actionPromise\" #action>\n                <i class=\"fa fa-spinner fa-spin text-muted\" *ngIf=\"action.loading\" title=\"{{'loading' | i18n}}\"></i>\n            </small>\n        </h1>\n        <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-sm btn-outline-primary ml-auto\"\n            *ngIf=\"!loaded || (organizations && organizations.length)\">\n            <i class=\"fa fa-plus fa-fw\"></i>\n            {{'newOrganization' | i18n}}\n        </a>\n    </div>\n    <i class=\"fa fa-spinner fa-spin text-muted\" *ngIf=\"!loaded\" title=\"{{'loading' | i18n}}\"></i>\n    <ng-container *ngIf=\"loaded\">\n        <ng-container *ngIf=\"!organizations || !organizations.length\">\n            <p>{{'noOrganizationsList' | i18n}}</p>\n            <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-outline-primary\">\n                <i class=\"fa fa-plus fa-fw\"></i>\n                {{'newOrganization' | i18n}}\n            </a>\n        </ng-container>\n        <table class=\"table table-hover table-list\" *ngIf=\"organizations && organizations.length\">\n            <tbody>\n                <tr *ngFor=\"let o of organizations\">\n                    <td width=\"30\">\n                        <app-avatar [data]=\"o.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar>\n                    </td>\n                    <td>\n                        <a href=\"#\" [routerLink]=\"['/organizations', o.id]\">{{o.name}}</a>\n                        <i *ngIf=\"!o.enabled\" class=\"fa fa-exclamation-triangle text-danger\"\n                            title=\"{{'organizationIsDisabled' | i18n}}\"></i>\n                    </td>\n                    <td class=\"table-list-options\">\n                        <div class=\"dropdown\" appListDropdown>\n                            <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\"\n                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                <i class=\"fa fa-cog fa-lg\"></i>\n                            </button>\n                            <div class=\"dropdown-menu dropdown-menu-right\">\n                                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"leave(o)\">\n                                    <i class=\"fa fa-fw fa-sign-out\"></i>\n                                    {{'leave' | i18n}}\n                                </a>\n                            </div>\n                        </div>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </ng-container>\n</ng-container>\n","import { Component } from '@angular/core';\n\nimport {\n    Toast,\n    ToasterService,\n} from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { FolderService } from 'jslib/abstractions/folder.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { SyncService } from 'jslib/abstractions/sync.service';\n\nimport { CipherString } from 'jslib/models/domain/cipherString';\n\nimport { CipherWithIdRequest } from 'jslib/models/request/cipherWithIdRequest';\nimport { FolderWithIdRequest } from 'jslib/models/request/folderWithIdRequest';\nimport { UpdateKeyRequest } from 'jslib/models/request/updateKeyRequest';\n\n@Component({\n    selector: 'app-update-key',\n    templateUrl: 'update-key.component.html',\n})\nexport class UpdateKeyComponent {\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private cryptoService: CryptoService, private messagingService: MessagingService,\n        private syncService: SyncService, private folderService: FolderService,\n        private cipherService: CipherService) { }\n\n    async submit() {\n        const hasEncKey = await this.cryptoService.hasEncKey();\n        if (hasEncKey) {\n            return;\n        }\n\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        try {\n            this.formPromise = this.makeRequest().then((request) => {\n                return this.apiService.postAccountKey(request);\n            });\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Key Updated' });\n            const toast: Toast = {\n                type: 'success',\n                title: this.i18nService.t('keyUpdated'),\n                body: this.i18nService.t('logBackInOthersToo'),\n                timeout: 15000,\n            };\n            this.toasterService.popAsync(toast);\n            this.messagingService.send('logout');\n        } catch { }\n    }\n\n    private async makeRequest(): Promise<UpdateKeyRequest> {\n        const key = await this.cryptoService.getKey();\n        const encKey = await this.cryptoService.makeEncKey(key);\n        const privateKey = await this.cryptoService.getPrivateKey();\n        let encPrivateKey: CipherString = null;\n        if (privateKey != null) {\n            encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n        }\n        const request = new UpdateKeyRequest();\n        request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n        request.key = encKey[1].encryptedString;\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n\n        await this.syncService.fullSync(true);\n\n        const folders = await this.folderService.getAllDecrypted();\n        for (let i = 0; i < folders.length; i++) {\n            if (folders[i].id == null) {\n                continue;\n            }\n            const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n            request.folders.push(new FolderWithIdRequest(folder));\n        }\n\n        const ciphers = await this.cipherService.getAllDecrypted();\n        for (let i = 0; i < ciphers.length; i++) {\n            if (ciphers[i].organizationId != null) {\n                continue;\n            }\n            const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n            request.ciphers.push(new CipherWithIdRequest(cipher));\n        }\n\n        return request;\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nexport class CardApi extends BaseResponse {\n    cardholderName: string;\n    brand: string;\n    number: string;\n    expMonth: string;\n    expYear: string;\n    code: string;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.cardholderName = this.getResponseProperty('CardholderName');\n        this.brand = this.getResponseProperty('Brand');\n        this.number = this.getResponseProperty('Number');\n        this.expMonth = this.getResponseProperty('ExpMonth');\n        this.expYear = this.getResponseProperty('ExpYear');\n        this.code = this.getResponseProperty('Code');\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nimport { FieldType } from '../../enums/fieldType';\n\nexport class FieldApi extends BaseResponse {\n    name: string;\n    value: string;\n    type: FieldType;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.type = this.getResponseProperty('Type');\n        this.name = this.getResponseProperty('Name');\n        this.value = this.getResponseProperty('Value');\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nexport class IdentityApi extends BaseResponse {\n    title: string;\n    firstName: string;\n    middleName: string;\n    lastName: string;\n    address1: string;\n    address2: string;\n    address3: string;\n    city: string;\n    state: string;\n    postalCode: string;\n    country: string;\n    company: string;\n    email: string;\n    phone: string;\n    ssn: string;\n    username: string;\n    passportNumber: string;\n    licenseNumber: string;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.title = this.getResponseProperty('Title');\n        this.firstName = this.getResponseProperty('FirstName');\n        this.middleName = this.getResponseProperty('MiddleName');\n        this.lastName = this.getResponseProperty('LastName');\n        this.address1 = this.getResponseProperty('Address1');\n        this.address2 = this.getResponseProperty('Address2');\n        this.address3 = this.getResponseProperty('Address3');\n        this.city = this.getResponseProperty('City');\n        this.state = this.getResponseProperty('State');\n        this.postalCode = this.getResponseProperty('PostalCode');\n        this.country = this.getResponseProperty('Country');\n        this.company = this.getResponseProperty('Company');\n        this.email = this.getResponseProperty('Email');\n        this.phone = this.getResponseProperty('Phone');\n        this.ssn = this.getResponseProperty('SSN');\n        this.username = this.getResponseProperty('Username');\n        this.passportNumber = this.getResponseProperty('PassportNumber');\n        this.licenseNumber = this.getResponseProperty('LicenseNumber');\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nimport { LoginUriApi } from './loginUriApi';\n\nexport class LoginApi extends BaseResponse {\n    uris: LoginUriApi[];\n    username: string;\n    password: string;\n    passwordRevisionDate: string;\n    totp: string;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.username = this.getResponseProperty('Username');\n        this.password = this.getResponseProperty('Password');\n        this.passwordRevisionDate = this.getResponseProperty('PasswordRevisionDate');\n        this.totp = this.getResponseProperty('Totp');\n\n        const uris = this.getResponseProperty('Uris');\n        if (uris != null) {\n            this.uris = uris.map((u: any) => new LoginUriApi(u));\n        }\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nimport { UriMatchType } from '../../enums/uriMatchType';\n\nexport class LoginUriApi extends BaseResponse {\n    uri: string;\n    match: UriMatchType = null;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.uri = this.getResponseProperty('Uri');\n        const match = this.getResponseProperty('Match');\n        this.match = match != null ? match : null;\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nimport { SecureNoteType } from '../../enums/secureNoteType';\n\nexport class SecureNoteApi extends BaseResponse {\n    type: SecureNoteType;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.type = this.getResponseProperty('Type');\n    }\n}\n","import { FolderRequest } from './folderRequest';\n\nimport { Folder } from '../domain/folder';\n\nexport class FolderWithIdRequest extends FolderRequest {\n    id: string;\n\n    constructor(folder: Folder) {\n        super(folder);\n        this.id = folder.id;\n    }\n}\n","import { CipherWithIdRequest } from './cipherWithIdRequest';\nimport { FolderWithIdRequest } from './folderWithIdRequest';\n\nexport class UpdateKeyRequest {\n    ciphers: CipherWithIdRequest[] = [];\n    folders: FolderWithIdRequest[] = [];\n    masterPasswordHash: string;\n    privateKey: string;\n    key: string;\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\n@Component({\n    selector: 'app-vault-bulk-delete',\n    templateUrl: 'bulk-delete.component.html',\n})\nexport class BulkDeleteComponent {\n    @Input() cipherIds: string[] = [];\n    @Output() onDeleted = new EventEmitter();\n\n    formPromise: Promise<any>;\n\n    constructor(private analytics: Angulartics2, private cipherService: CipherService,\n        private toasterService: ToasterService, private i18nService: I18nService) { }\n\n    async submit() {\n        this.formPromise = this.cipherService.deleteManyWithServer(this.cipherIds);\n        await this.formPromise;\n        this.onDeleted.emit();\n        this.analytics.eventTrack.next({ action: 'Bulk Deleted Items' });\n        this.toasterService.popAsync('success', null, this.i18nService.t('deletedItems'));\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { FolderService } from 'jslib/abstractions/folder.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { FolderView } from 'jslib/models/view/folderView';\n\n@Component({\n    selector: 'app-vault-bulk-move',\n    templateUrl: 'bulk-move.component.html',\n})\nexport class BulkMoveComponent implements OnInit {\n    @Input() cipherIds: string[] = [];\n    @Output() onMoved = new EventEmitter();\n\n    folderId: string = null;\n    folders: FolderView[] = [];\n    formPromise: Promise<any>;\n\n    constructor(private analytics: Angulartics2, private cipherService: CipherService,\n        private toasterService: ToasterService, private i18nService: I18nService,\n        private folderService: FolderService) { }\n\n    async ngOnInit() {\n        this.folders = await this.folderService.getAllDecrypted();\n        this.folderId = this.folders[0].id;\n    }\n\n    async submit() {\n        this.formPromise = this.cipherService.moveManyWithServer(this.cipherIds, this.folderId);\n        await this.formPromise;\n        this.onMoved.emit();\n        this.analytics.eventTrack.next({ action: 'Bulk Moved Items' });\n        this.toasterService.popAsync('success', null, this.i18nService.t('movedItems'));\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { CipherView } from 'jslib/models/view';\nimport { CollectionView } from 'jslib/models/view/collectionView';\n\nimport { Organization } from 'jslib/models/domain/organization';\n\n@Component({\n    selector: 'app-vault-bulk-share',\n    templateUrl: 'bulk-share.component.html',\n})\nexport class BulkShareComponent implements OnInit {\n    @Input() ciphers: CipherView[] = [];\n    @Input() organizationId: string;\n    @Output() onShared = new EventEmitter();\n\n    nonShareableCount = 0;\n    collections: CollectionView[] = [];\n    organizations: Organization[] = [];\n    shareableCiphers: CipherView[] = [];\n    formPromise: Promise<any>;\n\n    private writeableCollections: CollectionView[] = [];\n\n    constructor(private analytics: Angulartics2, private cipherService: CipherService,\n        private toasterService: ToasterService, private i18nService: I18nService,\n        private collectionService: CollectionService, private userService: UserService) { }\n\n    async ngOnInit() {\n        this.shareableCiphers = this.ciphers.filter((c) => !c.hasOldAttachments && c.organizationId == null);\n        this.nonShareableCount = this.ciphers.length - this.shareableCiphers.length;\n        const allCollections = await this.collectionService.getAllDecrypted();\n        this.writeableCollections = allCollections.filter((c) => !c.readOnly);\n        this.organizations = await this.userService.getAllOrganizations();\n        if (this.organizationId == null && this.organizations.length > 0) {\n            this.organizationId = this.organizations[0].id;\n        }\n        this.filterCollections();\n    }\n\n    ngOnDestroy() {\n        this.selectAll(false);\n    }\n\n    filterCollections() {\n        this.selectAll(false);\n        if (this.organizationId == null || this.writeableCollections.length === 0) {\n            this.collections = [];\n        } else {\n            this.collections = this.writeableCollections.filter((c) => c.organizationId === this.organizationId);\n        }\n    }\n\n    async submit() {\n        const checkedCollectionIds = this.collections.filter((c) => (c as any).checked).map((c) => c.id);\n        try {\n            this.formPromise = this.cipherService.shareManyWithServer(this.shareableCiphers, this.organizationId,\n                checkedCollectionIds);\n            await this.formPromise;\n            this.onShared.emit();\n            this.analytics.eventTrack.next({ action: 'Bulk Shared Items' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('sharedItems'));\n        } catch { }\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n    }\n\n    selectAll(select: boolean) {\n        const collections = select ? this.collections : this.writeableCollections;\n        collections.forEach((c) => this.check(c, select));\n    }\n\n    get canSave() {\n        if (this.shareableCiphers != null && this.shareableCiphers.length > 0 && this.collections != null) {\n            for (let i = 0; i < this.collections.length; i++) {\n                if ((this.collections[i] as any).checked) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { FolderService } from 'jslib/abstractions/folder.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport {\n    FolderAddEditComponent as BaseFolderAddEditComponent,\n} from 'jslib/angular/components/folder-add-edit.component';\n\n@Component({\n    selector: 'app-folder-add-edit',\n    templateUrl: 'folder-add-edit.component.html',\n})\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n    constructor(folderService: FolderService, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService) {\n        super(folderService, i18nService, platformUtilsService);\n    }\n}\n","import {\n    Component,\n    OnDestroy,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { CollectionView } from 'jslib/models/view/collectionView';\n\nimport { ShareComponent as BaseShareComponent } from 'jslib/angular/components/share.component';\n\n@Component({\n    selector: 'app-vault-share',\n    templateUrl: 'share.component.html',\n})\nexport class ShareComponent extends BaseShareComponent implements OnDestroy {\n    constructor(collectionService: CollectionService, platformUtilsService: PlatformUtilsService,\n        i18nService: I18nService, userService: UserService,\n        cipherService: CipherService) {\n        super(collectionService, platformUtilsService, i18nService, userService, cipherService);\n    }\n\n    ngOnDestroy() {\n        this.selectAll(false);\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n    }\n\n    selectAll(select: boolean) {\n        const collections = select ? this.collections : this.writeableCollections;\n        collections.forEach((c) => this.check(c, select));\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { UpdateProfileRequest } from 'jslib/models/request/updateProfileRequest';\n\nimport { ProfileResponse } from 'jslib/models/response/profileResponse';\n\n@Component({\n    selector: 'app-profile',\n    templateUrl: 'profile.component.html',\n})\nexport class ProfileComponent implements OnInit {\n    loading = true;\n    profile: ProfileResponse;\n    fingerprint: string;\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private userService: UserService, private cryptoService: CryptoService) { }\n\n    async ngOnInit() {\n        this.profile = await this.apiService.getProfile();\n        this.loading = false;\n        const fingerprint = await this.cryptoService.getFingerprint(await this.userService.getUserId());\n        if (fingerprint != null) {\n            this.fingerprint = fingerprint.join('-');\n        }\n    }\n\n    async submit() {\n        try {\n            const request = new UpdateProfileRequest(this.profile.name, this.profile.masterPasswordHint);\n            this.formPromise = this.apiService.putProfile(request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Updated Profile' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('accountUpdated'));\n        } catch { }\n    }\n}\n","import {\n    Component,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { EmailRequest } from 'jslib/models/request/emailRequest';\nimport { EmailTokenRequest } from 'jslib/models/request/emailTokenRequest';\n\n@Component({\n    selector: 'app-change-email',\n    templateUrl: 'change-email.component.html',\n})\nexport class ChangeEmailComponent {\n    masterPassword: string;\n    newEmail: string;\n    token: string;\n    tokenSent = false;\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private cryptoService: CryptoService, private messagingService: MessagingService,\n        private userService: UserService) { }\n\n    async submit() {\n        const hasEncKey = await this.cryptoService.hasEncKey();\n        if (!hasEncKey) {\n            this.toasterService.popAsync('error', null, this.i18nService.t('updateKey'));\n            return;\n        }\n\n        this.newEmail = this.newEmail.trim().toLowerCase();\n        if (!this.tokenSent) {\n            const request = new EmailTokenRequest();\n            request.newEmail = this.newEmail;\n            request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n            try {\n                this.formPromise = this.apiService.postEmailToken(request);\n                await this.formPromise;\n                this.tokenSent = true;\n            } catch { }\n        } else {\n            const request = new EmailRequest();\n            request.token = this.token;\n            request.newEmail = this.newEmail;\n            request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n            const kdf = await this.userService.getKdf();\n            const kdfIterations = await this.userService.getKdfIterations();\n            const newKey = await this.cryptoService.makeKey(this.masterPassword, this.newEmail, kdf, kdfIterations);\n            request.newMasterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n            const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n            request.key = newEncKey[1].encryptedString;\n            try {\n                this.formPromise = this.apiService.postEmail(request);\n                await this.formPromise;\n                this.reset();\n                this.analytics.eventTrack.next({ action: 'Changed Email' });\n                this.toasterService.popAsync('success', this.i18nService.t('emailChanged'),\n                    this.i18nService.t('logBackIn'));\n                this.messagingService.send('logout');\n            } catch { }\n        }\n    }\n\n    reset() {\n        this.token = this.newEmail = this.masterPassword = null;\n        this.tokenSent = false;\n    }\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class EmailTokenRequest extends PasswordVerificationRequest {\n    newEmail: string;\n    masterPasswordHash: string;\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { FolderService } from 'jslib/abstractions/folder.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib/abstractions/sync.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { CipherString } from 'jslib/models/domain/cipherString';\nimport { SymmetricCryptoKey } from 'jslib/models/domain/symmetricCryptoKey';\n\nimport { CipherWithIdRequest } from 'jslib/models/request/cipherWithIdRequest';\nimport { FolderWithIdRequest } from 'jslib/models/request/folderWithIdRequest';\nimport { PasswordRequest } from 'jslib/models/request/passwordRequest';\nimport { UpdateKeyRequest } from 'jslib/models/request/updateKeyRequest';\n\n@Component({\n    selector: 'app-change-password',\n    templateUrl: 'change-password.component.html',\n})\nexport class ChangePasswordComponent implements OnInit {\n    currentMasterPassword: string;\n    newMasterPassword: string;\n    confirmNewMasterPassword: string;\n    formPromise: Promise<any>;\n    masterPasswordScore: number;\n    rotateEncKey = false;\n\n    private masterPasswordStrengthTimeout: any;\n    private email: string;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private cryptoService: CryptoService, private messagingService: MessagingService,\n        private userService: UserService, private passwordGenerationService: PasswordGenerationService,\n        private platformUtilsService: PlatformUtilsService, private folderService: FolderService,\n        private cipherService: CipherService, private syncService: SyncService) { }\n\n    async ngOnInit() {\n        this.email = await this.userService.getEmail();\n    }\n\n    async submit() {\n        const hasEncKey = await this.cryptoService.hasEncKey();\n        if (!hasEncKey) {\n            this.toasterService.popAsync('error', null, this.i18nService.t('updateKey'));\n            return;\n        }\n\n        if (this.currentMasterPassword == null || this.currentMasterPassword === '' ||\n            this.newMasterPassword == null || this.newMasterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n        if (this.newMasterPassword.length < 8) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassLength'));\n            return;\n        }\n        if (this.newMasterPassword !== this.confirmNewMasterPassword) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassDoesntMatch'));\n            return;\n        }\n\n        const strengthResult = this.passwordGenerationService.passwordStrength(this.newMasterPassword,\n            this.getPasswordStrengthUserInput());\n        if (strengthResult != null && strengthResult.score < 3) {\n            const result = await this.platformUtilsService.showDialog(this.i18nService.t('weakMasterPasswordDesc'),\n                this.i18nService.t('weakMasterPassword'), this.i18nService.t('yes'), this.i18nService.t('no'),\n                'warning');\n            if (!result) {\n                return;\n            }\n        }\n\n        if (this.rotateEncKey) {\n            await this.syncService.fullSync(true);\n        }\n\n        const request = new PasswordRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.currentMasterPassword, null);\n        const email = await this.userService.getEmail();\n        const kdf = await this.userService.getKdf();\n        const kdfIterations = await this.userService.getKdfIterations();\n        const newKey = await this.cryptoService.makeKey(this.newMasterPassword, email.trim().toLowerCase(),\n            kdf, kdfIterations);\n        request.newMasterPasswordHash = await this.cryptoService.hashPassword(this.newMasterPassword, newKey);\n        const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n        request.key = newEncKey[1].encryptedString;\n        try {\n            if (this.rotateEncKey) {\n                this.formPromise = this.apiService.postPassword(request).then(() => {\n                    return this.updateKey(newKey, request.newMasterPasswordHash);\n                });\n            } else {\n                this.formPromise = this.apiService.postPassword(request);\n            }\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Changed Password' });\n            this.toasterService.popAsync('success', this.i18nService.t('masterPasswordChanged'),\n                this.i18nService.t('logBackIn'));\n            this.messagingService.send('logout');\n        } catch { }\n    }\n\n    updatePasswordStrength() {\n        if (this.masterPasswordStrengthTimeout != null) {\n            clearTimeout(this.masterPasswordStrengthTimeout);\n        }\n        this.masterPasswordStrengthTimeout = setTimeout(() => {\n            const strengthResult = this.passwordGenerationService.passwordStrength(this.newMasterPassword,\n                this.getPasswordStrengthUserInput());\n            this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n        }, 300);\n    }\n\n    async rotateEncKeyClicked() {\n        if (this.rotateEncKey) {\n            const ciphers = await this.cipherService.getAllDecrypted();\n            let hasOldAttachments = false;\n            if (ciphers != null) {\n                for (let i = 0; i < ciphers.length; i++) {\n                    if (ciphers[i].organizationId == null && ciphers[i].hasOldAttachments) {\n                        hasOldAttachments = true;\n                        break;\n                    }\n                }\n            }\n\n            if (hasOldAttachments) {\n                const learnMore = await this.platformUtilsService.showDialog(\n                    this.i18nService.t('oldAttachmentsNeedFixDesc'), null,\n                    this.i18nService.t('learnMore'), this.i18nService.t('close'), 'warning');\n                if (learnMore) {\n                    this.platformUtilsService.launchUri(\n                        'https://help.bitwarden.com/article/attachments/#fixing-old-attachments');\n                }\n                this.rotateEncKey = false;\n                return;\n            }\n\n            const result = await this.platformUtilsService.showDialog(\n                this.i18nService.t('updateEncryptionKeyWarning') + ' ' +\n                this.i18nService.t('rotateEncKeyConfirmation'), this.i18nService.t('rotateEncKeyTitle'),\n                this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n            if (!result) {\n                this.rotateEncKey = false;\n            }\n        }\n    }\n\n    private getPasswordStrengthUserInput() {\n        let userInput: string[] = [];\n        const atPosition = this.email.indexOf('@');\n        if (atPosition > -1) {\n            userInput = userInput.concat(this.email.substr(0, atPosition).trim().toLowerCase().split(/[^A-Za-z0-9]/));\n        }\n        return userInput;\n    }\n\n    private async updateKey(key: SymmetricCryptoKey, masterPasswordHash: string) {\n        const encKey = await this.cryptoService.makeEncKey(key);\n        const privateKey = await this.cryptoService.getPrivateKey();\n        let encPrivateKey: CipherString = null;\n        if (privateKey != null) {\n            encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n        }\n        const request = new UpdateKeyRequest();\n        request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n        request.key = encKey[1].encryptedString;\n        request.masterPasswordHash = masterPasswordHash;\n\n        const folders = await this.folderService.getAllDecrypted();\n        for (let i = 0; i < folders.length; i++) {\n            if (folders[i].id == null) {\n                continue;\n            }\n            const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n            request.folders.push(new FolderWithIdRequest(folder));\n        }\n\n        const ciphers = await this.cipherService.getAllDecrypted();\n        for (let i = 0; i < ciphers.length; i++) {\n            if (ciphers[i].organizationId != null) {\n                continue;\n            }\n\n            const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n            request.ciphers.push(new CipherWithIdRequest(cipher));\n        }\n\n        await this.apiService.postAccountKey(request);\n    }\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class PasswordRequest extends PasswordVerificationRequest {\n    newMasterPasswordHash: string;\n    key: string;\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { KdfRequest } from 'jslib/models/request/kdfRequest';\n\nimport { KdfType } from 'jslib/enums/kdfType';\n\n@Component({\n    selector: 'app-change-kdf',\n    templateUrl: 'change-kdf.component.html',\n})\nexport class ChangeKdfComponent implements OnInit {\n    masterPassword: string;\n    kdfIterations: number;\n    kdf = KdfType.PBKDF2_SHA256;\n    kdfOptions: any[] = [];\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private cryptoService: CryptoService, private messagingService: MessagingService,\n        private userService: UserService) {\n        this.kdfOptions = [\n            { name: 'PBKDF2 SHA-256', value: KdfType.PBKDF2_SHA256 },\n        ];\n    }\n\n    async ngOnInit() {\n        this.kdf = await this.userService.getKdf();\n        this.kdfIterations = await this.userService.getKdfIterations();\n    }\n\n    async submit() {\n        const hasEncKey = await this.cryptoService.hasEncKey();\n        if (!hasEncKey) {\n            this.toasterService.popAsync('error', null, this.i18nService.t('updateKey'));\n            return;\n        }\n\n        const request = new KdfRequest();\n        request.kdf = this.kdf;\n        request.kdfIterations = this.kdfIterations;\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        const email = await this.userService.getEmail();\n        const newKey = await this.cryptoService.makeKey(this.masterPassword, email, this.kdf, this.kdfIterations);\n        request.newMasterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n        const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n        request.key = newEncKey[1].encryptedString;\n        try {\n            this.formPromise = this.apiService.postAccountKdf(request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Changed KDF' });\n            this.toasterService.popAsync('success', this.i18nService.t('encKeySettingsChanged'),\n                this.i18nService.t('logBackIn'));\n            this.messagingService.send('logout');\n        } catch { }\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\n\nimport { PasswordVerificationRequest } from 'jslib/models/request/passwordVerificationRequest';\n\n@Component({\n    selector: 'app-deauthorize-sessions',\n    templateUrl: 'deauthorize-sessions.component.html',\n})\nexport class DeauthorizeSessionsComponent {\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private cryptoService: CryptoService, private messagingService: MessagingService) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        try {\n            this.formPromise = this.apiService.postSecurityStamp(request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Deauthorized Sessions' });\n            this.toasterService.popAsync('success', this.i18nService.t('sessionsDeauthorized'),\n                this.i18nService.t('logBackIn'));\n            this.messagingService.send('logout');\n        } catch { }\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\n\nimport { PasswordVerificationRequest } from 'jslib/models/request/passwordVerificationRequest';\n\n@Component({\n    selector: 'app-delete-account',\n    templateUrl: 'delete-account.component.html',\n})\nexport class DeleteAccountComponent {\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private cryptoService: CryptoService, private messagingService: MessagingService) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        try {\n            this.formPromise = this.apiService.deleteAccount(request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Deleted Account' });\n            this.toasterService.popAsync('success', this.i18nService.t('accountDeleted'),\n                this.i18nService.t('accountDeletedDesc'));\n            this.messagingService.send('logout');\n        } catch { }\n    }\n}\n","import {\n    Component,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { UpdateTwoFactorAuthenticatorRequest } from 'jslib/models/request/updateTwoFactorAuthenticatorRequest';\nimport { TwoFactorAuthenticatorResponse } from 'jslib/models/response/twoFactorAuthenticatorResponse';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-authenticator',\n    templateUrl: 'two-factor-authenticator.component.html',\n})\nexport class TwoFactorAuthenticatorComponent extends TwoFactorBaseComponent implements OnInit, OnDestroy {\n    type = TwoFactorProviderType.Authenticator;\n    key: string;\n    token: string;\n    formPromise: Promise<any>;\n\n    private qrScript: HTMLScriptElement;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        analytics: Angulartics2, toasterService: ToasterService,\n        private userService: UserService, platformUtilsService: PlatformUtilsService) {\n        super(apiService, i18nService, analytics, toasterService, platformUtilsService);\n        this.qrScript = window.document.createElement('script');\n        this.qrScript.src = 'scripts/qrious.min.js';\n        this.qrScript.async = true;\n    }\n\n    ngOnInit() {\n        window.document.body.appendChild(this.qrScript);\n    }\n\n    ngOnDestroy() {\n        window.document.body.removeChild(this.qrScript);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        return this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        if (this.enabled) {\n            return super.disable(this.formPromise);\n        } else {\n            return this.enable();\n        }\n    }\n\n    protected enable() {\n        const request = new UpdateTwoFactorAuthenticatorRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        request.token = this.token;\n        request.key = this.key;\n\n        return super.enable(async () => {\n            this.formPromise = this.apiService.putTwoFactorAuthenticator(request);\n            const response = await this.formPromise;\n            await this.processResponse(response);\n        });\n    }\n\n    private async processResponse(response: TwoFactorAuthenticatorResponse) {\n        this.token = null;\n        this.enabled = response.enabled;\n        this.key = response.key;\n        const email = await this.userService.getEmail();\n        window.setTimeout(() => {\n            const qr = new (window as any).QRious({\n                element: document.getElementById('qr'),\n                value: 'otpauth://totp/Bitwarden:' + encodeURIComponent(email) +\n                    '?secret=' + encodeURIComponent(this.key) + '&issuer=Bitwarden',\n                size: 160,\n            });\n        }, 100);\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { TwoFactorEmailRequest } from 'jslib/models/request/twoFactorEmailRequest';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\nimport { UpdateTwoFactorEmailRequest } from 'jslib/models/request/updateTwoFactorEmailRequest';\nimport { TwoFactorEmailResponse } from 'jslib/models/response/twoFactorEmailResponse';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-email',\n    templateUrl: 'two-factor-email.component.html',\n})\nexport class TwoFactorEmailComponent extends TwoFactorBaseComponent {\n    type = TwoFactorProviderType.Email;\n    email: string;\n    token: string;\n    sentEmail: string;\n    formPromise: Promise<any>;\n    emailPromise: Promise<any>;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        analytics: Angulartics2, toasterService: ToasterService,\n        platformUtilsService: PlatformUtilsService, private userService: UserService) {\n        super(apiService, i18nService, analytics, toasterService, platformUtilsService);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        return this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        if (this.enabled) {\n            return super.disable(this.formPromise);\n        } else {\n            return this.enable();\n        }\n    }\n\n    async sendEmail() {\n        try {\n            const request = new TwoFactorEmailRequest(this.email, this.masterPasswordHash);\n            this.emailPromise = this.apiService.postTwoFactorEmailSetup(request);\n            await this.emailPromise;\n            this.sentEmail = this.email;\n        } catch { }\n    }\n\n    protected enable() {\n        const request = new UpdateTwoFactorEmailRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        request.email = this.email;\n        request.token = this.token;\n\n        return super.enable(async () => {\n            this.formPromise = this.apiService.putTwoFactorEmail(request);\n            const response = await this.formPromise;\n            await this.processResponse(response);\n        });\n    }\n\n    private async processResponse(response: TwoFactorEmailResponse) {\n        this.token = null;\n        this.email = response.email;\n        this.enabled = response.enabled;\n        if (!this.enabled && (this.email == null || this.email === '')) {\n            this.email = await this.userService.getEmail();\n        }\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { TwoFactorRecoverResponse } from 'jslib/models/response/twoFactorRescoverResponse';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\n\n@Component({\n    selector: 'app-two-factor-recovery',\n    templateUrl: 'two-factor-recovery.component.html',\n})\nexport class TwoFactorRecoveryComponent {\n    type = -1;\n    code: string;\n    authed: boolean;\n    twoFactorProviderType = TwoFactorProviderType;\n\n    constructor(private i18nService: I18nService) { }\n\n    auth(authResponse: any) {\n        this.authed = true;\n        this.processResponse(authResponse.response);\n    }\n\n    print() {\n        const w = window.open();\n        w.document.write('<div style=\"font-size: 18px; text-align: center;\">' +\n            '<p>' + this.i18nService.t('twoFactorRecoveryYourCode') + ':</p>' +\n            '<code style=\"font-family: Menlo, Monaco, Consolas, \\'Courier New\\', monospace;\">' +\n            this.code + '</code></div>' +\n            '<p style=\"text-align: center;\">' + new Date() + '</p>');\n        w.print();\n        w.close();\n    }\n\n    private formatString(s: string) {\n        if (s == null) {\n            return null;\n        }\n        return s.replace(/(.{4})/g, '$1 ').trim().toUpperCase();\n    }\n\n    private processResponse(response: TwoFactorRecoverResponse) {\n        this.code = this.formatString(response.code);\n    }\n}\n","import {\n    Component,\n    NgZone,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\n\nimport { PasswordVerificationRequest } from 'jslib/models/request/passwordVerificationRequest';\nimport { UpdateTwoFactorU2fDeleteRequest } from 'jslib/models/request/updateTwoFactorU2fDeleteRequest';\nimport { UpdateTwoFactorU2fRequest } from 'jslib/models/request/updateTwoFactorU2fRequest';\nimport {\n    ChallengeResponse,\n    TwoFactorU2fResponse,\n} from 'jslib/models/response/twoFactorU2fResponse';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-u2f',\n    templateUrl: 'two-factor-u2f.component.html',\n})\nexport class TwoFactorU2fComponent extends TwoFactorBaseComponent implements OnInit, OnDestroy {\n    type = TwoFactorProviderType.U2f;\n    name: string;\n    keys: any[];\n    keyIdAvailable: number = null;\n    keysConfiguredCount = 0;\n    u2fError: boolean;\n    u2fListening: boolean;\n    u2fResponse: string;\n    challengePromise: Promise<ChallengeResponse>;\n    formPromise: Promise<any>;\n\n    private u2fScript: HTMLScriptElement;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        analytics: Angulartics2, toasterService: ToasterService,\n        platformUtilsService: PlatformUtilsService, private ngZone: NgZone) {\n        super(apiService, i18nService, analytics, toasterService, platformUtilsService);\n        this.u2fScript = window.document.createElement('script');\n        this.u2fScript.src = 'scripts/u2f.js';\n        this.u2fScript.async = true;\n    }\n\n    ngOnInit() {\n        window.document.body.appendChild(this.u2fScript);\n    }\n\n    ngOnDestroy() {\n        window.document.body.removeChild(this.u2fScript);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        if (this.u2fResponse == null || this.keyIdAvailable == null) {\n            // Should never happen.\n            return Promise.reject();\n        }\n        const request = new UpdateTwoFactorU2fRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        request.deviceResponse = this.u2fResponse;\n        request.id = this.keyIdAvailable;\n        request.name = this.name;\n\n        return super.enable(async () => {\n            this.formPromise = this.apiService.putTwoFactorU2f(request);\n            const response = await this.formPromise;\n            await this.processResponse(response);\n        });\n    }\n\n    disable() {\n        return super.disable(this.formPromise);\n    }\n\n    async remove(key: any) {\n        if (this.keysConfiguredCount <= 1 || key.removePromise != null) {\n            return;\n        }\n        const name = key.name != null ? key.name : this.i18nService.t('u2fkeyX', key.id);\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('removeU2fConfirmation'), name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n        const request = new UpdateTwoFactorU2fDeleteRequest();\n        request.id = key.id;\n        request.masterPasswordHash = this.masterPasswordHash;\n        try {\n            key.removePromise = this.apiService.deleteTwoFactorU2f(request);\n            const response = await key.removePromise;\n            key.removePromise = null;\n            await this.processResponse(response);\n        } catch { }\n    }\n\n    async readKey() {\n        if (this.keyIdAvailable == null) {\n            return;\n        }\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        try {\n            this.challengePromise = this.apiService.getTwoFactorU2fChallenge(request);\n            const challenge = await this.challengePromise;\n            this.readDevice(challenge);\n        } catch { }\n    }\n\n    private readDevice(u2fChallenge: ChallengeResponse) {\n        // tslint:disable-next-line\n        console.log('listening for key...');\n        this.resetU2f(true);\n        (window as any).u2f.register(u2fChallenge.appId, [{\n            version: u2fChallenge.version,\n            challenge: u2fChallenge.challenge,\n            attestation: 'direct',\n        }], [], (data: any) => {\n            this.ngZone.run(() => {\n                this.u2fListening = false;\n                if (data.errorCode) {\n                    this.u2fError = true;\n                    // tslint:disable-next-line\n                    console.log('error: ' + data.errorCode);\n                    return;\n                }\n                this.u2fResponse = JSON.stringify(data);\n            });\n        }, 15);\n    }\n\n    private resetU2f(listening = false) {\n        this.u2fResponse = null;\n        this.u2fError = false;\n        this.u2fListening = listening;\n    }\n\n    private processResponse(response: TwoFactorU2fResponse) {\n        this.resetU2f();\n        this.keys = [];\n        this.keyIdAvailable = null;\n        this.name = null;\n        this.keysConfiguredCount = 0;\n        for (let i = 1; i <= 5; i++) {\n            if (response.keys != null) {\n                const key = response.keys.filter((k) => k.id === i);\n                if (key.length > 0) {\n                    this.keysConfiguredCount++;\n                    this.keys.push({\n                        id: i, name: key[0].name,\n                        configured: true,\n                        compromised: key[0].compromised,\n                        removePromise: null,\n                    });\n                    continue;\n                }\n            }\n            this.keys.push({ id: i, name: null, configured: false, compromised: false, removePromise: null });\n            if (this.keyIdAvailable == null) {\n                this.keyIdAvailable = i;\n            }\n        }\n        this.enabled = response.enabled;\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { UpdateTwoFactorYubioOtpRequest } from 'jslib/models/request/updateTwoFactorYubioOtpRequest';\nimport { TwoFactorYubiKeyResponse } from 'jslib/models/response/twoFactorYubiKeyResponse';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-yubikey',\n    templateUrl: 'two-factor-yubikey.component.html',\n})\nexport class TwoFactorYubiKeyComponent extends TwoFactorBaseComponent {\n    type = TwoFactorProviderType.Yubikey;\n    keys: any[];\n    nfc = false;\n\n    formPromise: Promise<any>;\n    disablePromise: Promise<any>;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        analytics: Angulartics2, toasterService: ToasterService,\n        platformUtilsService: PlatformUtilsService) {\n        super(apiService, i18nService, analytics, toasterService, platformUtilsService);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        const request = new UpdateTwoFactorYubioOtpRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        request.key1 = this.keys != null && this.keys.length > 0 ? this.keys[0].key : null;\n        request.key2 = this.keys != null && this.keys.length > 1 ? this.keys[1].key : null;\n        request.key3 = this.keys != null && this.keys.length > 2 ? this.keys[2].key : null;\n        request.key4 = this.keys != null && this.keys.length > 3 ? this.keys[3].key : null;\n        request.key5 = this.keys != null && this.keys.length > 4 ? this.keys[4].key : null;\n        request.nfc = this.nfc;\n\n        return super.enable(async () => {\n            this.formPromise = this.apiService.putTwoFactorYubiKey(request);\n            const response = await this.formPromise;\n            await this.processResponse(response);\n            this.toasterService.popAsync('success', null, this.i18nService.t('yubikeysUpdated'));\n        });\n    }\n\n    disable() {\n        return super.disable(this.disablePromise);\n    }\n\n    remove(key: any) {\n        key.existingKey = null;\n        key.key = null;\n    }\n\n    private processResponse(response: TwoFactorYubiKeyResponse) {\n        this.enabled = response.enabled;\n        this.keys = [\n            { key: response.key1, existingKey: this.padRight(response.key1) },\n            { key: response.key2, existingKey: this.padRight(response.key2) },\n            { key: response.key3, existingKey: this.padRight(response.key3) },\n            { key: response.key4, existingKey: this.padRight(response.key4) },\n            { key: response.key5, existingKey: this.padRight(response.key5) },\n        ];\n        this.nfc = response.nfc || !response.enabled;\n    }\n\n    private padRight(str: string, character = '•', size = 44) {\n        if (str == null || character == null || str.length >= size) {\n            return str;\n        }\n        const max = (size - str.length) / character.length;\n        for (let i = 0; i < max; i++) {\n            str += character;\n        }\n        return str;\n    }\n}\n","export class WebConstants {\n    static readonly stripeTestKey = 'pk_test_KPoCfZXu7mznb9uSCPZ2JpTD';\n    static readonly stripeLiveKey = 'pk_live_bpN0P37nMxrMQkcaHXtAybJk';\n    static readonly btSandboxKey = 'sandbox_r72q8jq6_9pnxkwm75f87sdc2';\n    static readonly btProductionKey = 'production_qfbsv8kc_njj2zjtyngtjmbjd';\n    static readonly paypal = {\n        businessIdProduction: '4ZDA7DLUUJGMN',\n        businessIdSandbox: 'AD3LAUZSNVPJY',\n        buttonActionProduction: 'https://www.paypal.com/cgi-bin/webscr',\n        buttonActionSandbox: 'https://www.sandbox.paypal.com/cgi-bin/webscr',\n    };\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"card-body\">\n        <button type=\"button\" class=\"close\" attr.aria-label=\"{{'cancel' | i18n}}\" title=\"{{'cancel' | i18n}}\"\n            (click)=\"cancel()\"><span aria-hidden=\"true\">&times;</span></button>\n        <h3 class=\"card-body-header\">{{'addCredit' | i18n}}</h3>\n        <div class=\"mb-4 text-lg\" *ngIf=\"showOptions\">\n            <div class=\"form-check form-check-inline\">\n                <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"credit-method-paypal\"\n                    [value]=\"paymentMethodType.PayPal\" [(ngModel)]=\"method\">\n                <label class=\"form-check-label\" for=\"credit-method-paypal\">\n                    <i class=\"fa fa-fw fa-paypal\"></i> PayPal</label>\n            </div>\n            <div class=\"form-check form-check-inline\">\n                <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"credit-method-bitcoin\"\n                    [value]=\"paymentMethodType.BitPay\" [(ngModel)]=\"method\">\n                <label class=\"form-check-label\" for=\"credit-method-bitcoin\">\n                    <i class=\"fa fa-fw fa-bitcoin\"></i> Bitcoin</label>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <div class=\"row\">\n                <div class=\"col-4\">\n                    <label for=\"creditAmount\">{{'amount' | i18n}}</label>\n                    <div class=\"input-group\">\n                        <div class=\"input-group-prepend\"><span class=\"input-group-text\">$USD</span></div>\n                        <input id=\"creditAmount\" class=\"form-control\" type=\"text\" name=\"CreditAmount\"\n                            [(ngModel)]=\"creditAmount\" (blur)=\"formatAmount()\" required>\n                    </div>\n                </div>\n            </div>\n            <small class=\"form-text text-muted\">{{'creditDelayed' | i18n}}</small>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading || ppLoading\">\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n            <span>{{'submit' | i18n}}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n            {{'cancel' | i18n}}\n        </button>\n    </div>\n</form>\n<form #ppButtonForm action=\"{{ppButtonFormAction}}\" method=\"post\" target=\"_top\">\n    <input type=\"hidden\" name=\"cmd\" value=\"_xclick\">\n    <input type=\"hidden\" name=\"business\" value=\"{{ppButtonBusinessId}}\">\n    <input type=\"hidden\" name=\"button_subtype\" value=\"services\">\n    <input type=\"hidden\" name=\"no_note\" value=\"1\">\n    <input type=\"hidden\" name=\"no_shipping\" value=\"1\">\n    <input type=\"hidden\" name=\"rm\" value=\"1\">\n    <input type=\"hidden\" name=\"return\" value=\"{{returnUrl}}\">\n    <input type=\"hidden\" name=\"cancel_return\" value=\"{{returnUrl}}\">\n    <input type=\"hidden\" name=\"currency_code\" value=\"USD\">\n    <input type=\"hidden\" name=\"image_url\" value=\"https://bitwarden.com/images/paypal-banner.png\">\n    <input type=\"hidden\" name=\"bn\" value=\"PP-BuyNowBF:btn_buynow_LG.gif:NonHosted\">\n    <input type=\"hidden\" name=\"amount\" value=\"{{creditAmount}}\">\n    <input type=\"hidden\" name=\"custom\" value=\"{{ppButtonCustomField}}\">\n    <input type=\"hidden\" name=\"item_name\" value=\"Bitwarden Account Credit\">\n    <input type=\"hidden\" name=\"item_number\" value=\"{{subject}}\">\n</form>\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"card-body\">\n        <button type=\"button\" class=\"close\" attr.aria-label=\"{{'cancel' | i18n}}\" title=\"{{'cancel' | i18n}}\"\n            (click)=\"cancel()\"><span aria-hidden=\"true\">&times;</span></button>\n        <h3 class=\"card-body-header\">{{(currentType != null ? 'changePaymentMethod' : 'addPaymentMethod') | i18n}}</h3>\n        <app-payment [hideBank]=\"!organizationId\" [hideCredit]=\"true\"></app-payment>\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n            <span>{{'submit' | i18n}}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n            {{'cancel' | i18n}}\n        </button>\n    </div>\n</form>\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n        <label for=\"file\" class=\"sr-only\">{{'licenseFile' | i18n}}</label>\n        <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required>\n        <small\n            class=\"form-text text-muted\">{{'licenseFileDesc' | i18n : (!organizationId ? 'bitwarden_premium_license.json' : 'bitwarden_organization_license.json')}}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n        <span>{{'submit' | i18n}}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n        {{'cancel' | i18n}}\n    </button>\n</form>\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"card-body\">\n        <button type=\"button\" class=\"close\" attr.aria-label=\"{{'cancel' | i18n}}\" title=\"{{'cancel' | i18n}}\"\n            (click)=\"cancel()\"><span aria-hidden=\"true\">&times;</span></button>\n        <h3 class=\"card-body-header\">{{(add ? 'addStorage' : 'removeStorage') | i18n}}</h3>\n        <div class=\"row\">\n            <div class=\"form-group col-6\">\n                <label for=\"storageAdjustment\">{{(add ? 'gbStorageAdd' : 'gbStorageRemove') | i18n}}</label>\n                <input id=\"storageAdjustment\" class=\"form-control\" type=\"number\" name=\"StroageGbAdjustment\"\n                    [(ngModel)]=\"storageAdjustment\" min=\"0\" max=\"99\" step=\"1\" required>\n            </div>\n        </div>\n        <div *ngIf=\"add\" class=\"mb-3\">\n            <strong>{{'total' | i18n}}:</strong> {{storageAdjustment || 0}} GB &times; {{storageGbPrice | currency:'$'}}\n            = {{adjustedStorageTotal\n            | currency:'$'}} /{{interval | i18n}}\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n            <span>{{'submit' | i18n}}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n            {{'cancel' | i18n}}\n        </button>\n        <small class=\"d-block text-muted mt-3\">\n            {{(add ? 'storageAddNote' : 'storageRemoveNote') | i18n}}\n        </small>\n    </div>\n</form>\n<app-payment [showMethods]=\"false\"></app-payment>\n","<ng-container *ngIf=\"createOrganization && selfHosted\">\n    <p>{{'uploadLicenseFileOrg' | i18n}}</p>\n    <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n        <div class=\"form-group\">\n            <label for=\"file\">{{'licenseFile' | i18n}}</label>\n            <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required>\n            <small\n                class=\"form-text text-muted\">{{'licenseFileDesc' | i18n : 'bitwarden_organization_license.json'}}</small>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n            <span>{{'submit' | i18n}}</span>\n        </button>\n    </form>\n</ng-container>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"!selfHosted\">\n    <h2 class=\"mt-5\">{{'generalInformation' | i18n}}</h2>\n    <div class=\"row\" *ngIf=\"createOrganization\">\n        <div class=\"form-group col-6\">\n            <label for=\"name\">{{'organizationName' | i18n}}</label>\n            <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required>\n        </div>\n        <div class=\"form-group col-6\">\n            <label for=\"billingEmail\">{{'billingEmail' | i18n}}</label>\n            <input id=\"billingEmail\" class=\"form-control\" type=\"text\" name=\"BillingEmail\" [(ngModel)]=\"billingEmail\"\n                required>\n        </div>\n    </div>\n    <div class=\"form-group form-check\">\n        <input id=\"ownedBusiness\" class=\"form-check-input\" type=\"checkbox\" name=\"OwnedBusiness\"\n            [(ngModel)]=\"ownedBusiness\" (change)=\"changedOwnedBusiness()\">\n        <label for=\"ownedBusiness\" class=\"form-check-label\">{{'accountOwnedBusiness' | i18n}}</label>\n    </div>\n    <div class=\"row\" *ngIf=\"ownedBusiness\">\n        <div class=\"form-group col-6\">\n            <label for=\"businessName\">{{'businessName' | i18n}}</label>\n            <input id=\"businessName\" class=\"form-control\" type=\"text\" name=\"BusinessName\" [(ngModel)]=\"businessName\">\n        </div>\n    </div>\n    <h2 class=\"mt-5\">{{'chooseYourPlan' | i18n}}</h2>\n    <div class=\"form-check form-check-block\" *ngIf=\"!ownedBusiness && showFree\">\n        <input class=\"form-check-input\" type=\"radio\" name=\"PlanType\" id=\"planFree\" value=\"free\" [(ngModel)]=\"plan\"\n            (change)=\"changedPlan()\">\n        <label class=\"form-check-label\" for=\"planFree\">\n            {{'planNameFree' | i18n}}\n            <small class=\"mb-1\">{{'planDescFree' | i18n : '1'}}</small>\n            <small>• {{'limitedUsers' | i18n : '2'}}</small>\n            <small>• {{'limitedCollections' | i18n : '2'}}</small>\n            <span>{{'freeForever' | i18n}}</span>\n        </label>\n    </div>\n    <div class=\"form-check form-check-block\" *ngIf=\"!ownedBusiness\">\n        <input class=\"form-check-input\" type=\"radio\" name=\"PlanType\" id=\"planFamilies\" value=\"families\"\n            [(ngModel)]=\"plan\" (change)=\"changedPlan()\">\n        <label class=\"form-check-label\" for=\"planFamilies\">\n            {{'planNameFamilies' | i18n}}\n            <small class=\"mb-1\">{{'planDescFamilies' | i18n}}</small>\n            <small>• {{'addShareLimitedUsers' | i18n : '5'}}</small>\n            <small>• {{'createUnlimitedCollections' | i18n}}</small>\n            <small>• {{'gbEncryptedFileStorage' | i18n : '1 GB'}}</small>\n            <small>• {{'onPremHostingOptional' | i18n}}</small>\n            <small>• {{'priorityCustomerSupport' | i18n}}</small>\n            <small>• {{'xDayFreeTrial' | i18n : '7'}}</small>\n            <span>{{1 | currency:'$'}} /{{'month' | i18n}}, {{'includesXUsers' | i18n : 5}}</span>\n        </label>\n    </div>\n    <div class=\"form-check form-check-block\">\n        <input class=\"form-check-input\" type=\"radio\" name=\"PlanType\" id=\"planTeams\" value=\"teams\" [(ngModel)]=\"plan\"\n            (change)=\"changedPlan()\">\n        <label class=\"form-check-label\" for=\"planTeams\">\n            {{'planNameTeams' | i18n}}\n            <small class=\"mb-1\">{{'planDescTeams' | i18n}}</small>\n            <small>• {{'addShareUnlimitedUsers' | i18n}}</small>\n            <small>• {{'createUnlimitedCollections' | i18n}}</small>\n            <small>• {{'gbEncryptedFileStorage' | i18n : '1 GB'}}</small>\n            <small>• {{'priorityCustomerSupport' | i18n}}</small>\n            <small>• {{'xDayFreeTrial' | i18n : '7'}}</small>\n            <span>{{5 | currency:'$'}} /{{'month' | i18n}}, {{'includesXUsers' | i18n : 5}},\n                {{('additionalUsers' | i18n).toLowerCase()}}\n                {{2 | currency:'$'}} /{{'month' | i18n}}</span>\n        </label>\n    </div>\n    <div class=\"form-check form-check-block\">\n        <input class=\"form-check-input\" type=\"radio\" name=\"PlanType\" id=\"planEnterprise\" value=\"enterprise\"\n            [(ngModel)]=\"plan\" (change)=\"changedPlan()\">\n        <label class=\"form-check-label\" for=\"planEnterprise\">\n            {{'planNameEnterprise' | i18n}}\n            <small class=\"mb-1\">{{'planDescEnterprise' | i18n}}</small>\n            <small>• {{'addShareUnlimitedUsers' | i18n}}</small>\n            <small>• {{'createUnlimitedCollections' | i18n}}</small>\n            <small>• {{'gbEncryptedFileStorage' | i18n : '1 GB'}}</small>\n            <small>• {{'controlAccessWithGroups' | i18n}}</small>\n            <small>• {{'trackAuditLogs' | i18n}}</small>\n            <small>• {{'syncUsersFromDirectory' | i18n}}</small>\n            <small>• {{'onPremHostingOptional' | i18n}}</small>\n            <small>• {{'usersGetPremium' | i18n}}</small>\n            <small>• {{'priorityCustomerSupport' | i18n}}</small>\n            <small>• {{'xDayFreeTrial' | i18n : '7'}}</small>\n            <span>{{'costPerUser' | i18n : (3 | currency:'$')}} /{{'month' | i18n}}</span>\n        </label>\n    </div>\n    <ng-container *ngIf=\"!plans[plan].noPayment\">\n        <ng-container *ngIf=\"!plans[plan].noAdditionalSeats && !plans[plan].baseSeats\">\n            <h2 class=\"mt-5\">{{'users' | i18n}}</h2>\n            <div class=\"row\">\n                <div class=\"col-6\">\n                    <label for=\"additionalSeats\">{{'userSeats' | i18n}}</label>\n                    <input id=\"additionalSeats\" class=\"form-control\" type=\"number\" name=\"AdditionalSeats\"\n                        [(ngModel)]=\"additionalSeats\" min=\"1\" max=\"100000\" placeholder=\"{{'userSeatsDesc' | i18n}}\"\n                        required>\n                    <small class=\"text-muted form-text\">{{'userSeatsHowManyDesc' | i18n}}</small>\n                </div>\n            </div>\n        </ng-container>\n        <h2 class=\"mt-5\">{{'addons' | i18n}}</h2>\n        <div class=\"row\" *ngIf=\"!plans[plan].noAdditionalSeats && plans[plan].baseSeats\">\n            <div class=\"form-group col-6\">\n                <label for=\"additionalSeats\">{{'additionalUserSeats' | i18n}}</label>\n                <input id=\"additionalSeats\" class=\"form-control\" type=\"number\" name=\"AdditionalSeats\"\n                    [(ngModel)]=\"additionalSeats\" min=\"0\" max=\"100000\" placeholder=\"{{'userSeatsDesc' | i18n}}\">\n                <small\n                    class=\"text-muted form-text\">{{'userSeatsAdditionalDesc' | i18n : plans[plan].baseSeats : (plans[plan].seatPrice | currency:'$')}}</small>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"form-group col-6\">\n                <label for=\"additionalStorage\">{{'additionalStorageGb' | i18n}}</label>\n                <input id=\"additionalStorage\" class=\"form-control\" type=\"number\" name=\"AdditionalStorageGb\"\n                    [(ngModel)]=\"additionalStorage\" min=\"0\" max=\"99\" step=\"1\"\n                    placeholder=\"{{'additionalStorageGbDesc' | i18n}}\">\n                <small\n                    class=\"text-muted form-text\">{{'additionalStorageIntervalDesc' | i18n : '1 GB' : (storageGb.price | currency:'$') : ('month' | i18n)}}</small>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"form-group col-6\" *ngIf=\"plans[plan].canBuyPremiumAccessAddon\">\n                <div class=\"form-check\">\n                    <input id=\"premiumAccess\" class=\"form-check-input\" type=\"checkbox\" name=\"PremiumAccessAddon\"\n                        [(ngModel)]=\"premiumAccessAddon\">\n                    <label for=\"premiumAccess\" class=\"form-check-label bold\">{{'premiumAccess' | i18n}}</label>\n                </div>\n                <small\n                    class=\"text-muted form-text\">{{'premiumAccessDesc' | i18n : (3.33 | currency:'$') : ('month' | i18n)}}</small>\n            </div>\n        </div>\n        <h2 class=\"spaced-header\">{{'summary' | i18n}}</h2>\n        <div class=\"form-check form-check-block\">\n            <input class=\"form-check-input\" type=\"radio\" name=\"BillingInterval\" id=\"intervalAnnually\" value=\"year\"\n                [(ngModel)]=\"interval\">\n            <label class=\"form-check-label\" for=\"intervalAnnually\">\n                {{'annually' | i18n}}\n                <small *ngIf=\"plans[plan].annualBasePrice\">\n                    {{'basePrice' | i18n}}: {{plans[plan].basePrice | currency:'$'}} &times;12 {{'monthAbbr' | i18n}} =\n                    {{baseTotal(true) | currency:'$'}}\n                    /{{'year' | i18n}}\n                </small>\n                <small *ngIf=\"!plans[plan].noAdditionalSeats\">\n                    <span *ngIf=\"plans[plan].baseSeats\">{{'additionalUsers' | i18n}}:</span>\n                    <span *ngIf=\"!plans[plan].baseSeats\">{{'users' | i18n}}:</span>\n                    {{additionalSeats || 0}} &times; {{plans[plan].seatPrice | currency:'$'}} &times;12\n                    {{'monthAbbr' | i18n}} = {{seatTotal(true)\n                    | currency:'$'}} /{{'year' | i18n}}\n                </small>\n                <small>\n                    {{'additionalStorageGb' | i18n}}: {{additionalStorage || 0}} &times;\n                    {{storageGb.price | currency:'$'}} &times;12 {{'monthAbbr'\n                    | i18n}} = {{additionalStorageTotal(true) | currency:'$'}} /{{'year' | i18n}}\n                </small>\n                <small *ngIf=\"plans[plan].canBuyPremiumAccessAddon && premiumAccessAddon\">\n                    {{'premiumAccess' | i18n}}:\n                    {{3.33 | currency:'$'}} &times;12 {{'monthAbbr' | i18n}} = {{40 | currency:'$'}} /{{'year' | i18n}}\n                </small>\n            </label>\n        </div>\n        <div class=\"form-check form-check-block\" *ngIf=\"plans[plan].monthlySeatPrice\">\n            <input class=\"form-check-input\" type=\"radio\" name=\"BillingInterval\" id=\"intervalMonthly\" value=\"month\"\n                [(ngModel)]=\"interval\">\n            <label class=\"form-check-label\" for=\"intervalMonthly\">\n                {{'monthly' | i18n}}\n                <small *ngIf=\"plans[plan].monthlyBasePrice\">\n                    {{'basePrice' | i18n}}: {{baseTotal(false) | currency:'$'}} /{{'month' | i18n}}\n                </small>\n                <small *ngIf=\"!plans[plan].noAdditionalSeats\">\n                    <span *ngIf=\"plans[plan].baseSeats\">{{'additionalUsers' | i18n}}:</span>\n                    <span *ngIf=\"!plans[plan].baseSeats\">{{'users' | i18n}}:</span>\n                    {{additionalSeats || 0}} &times; {{plans[plan].monthlySeatPrice | currency:'$'}} =\n                    {{seatTotal(false) | currency:'$'}} /{{'month'\n                    | i18n}}\n                </small>\n                <small>\n                    {{'additionalStorageGb' | i18n}}: {{additionalStorage || 0}} &times;\n                    {{storageGb.monthlyPrice | currency:'$'}} = {{additionalStorageTotal(false)\n                    | currency:'$'}} /{{'month' | i18n}}\n                </small>\n            </label>\n        </div>\n        <hr class=\"my-3\">\n        <div class=\"text-lg\">\n            <strong>{{'total' | i18n}}:</strong> {{total | currency:'USD $'}} /{{interval | i18n}}\n        </div>\n        <ng-container *ngIf=\"createOrganization\">\n            <small class=\"text-muted font-italic\">{{'paymentChargedWithTrial' | i18n : (interval | i18n) }}</small>\n            <h2 class=\"spaced-header mb-4\">{{'paymentInformation' | i18n}}</h2>\n            <app-payment [hideCredit]=\"true\"></app-payment>\n        </ng-container>\n        <ng-container *ngIf=\"!createOrganization\">\n            <app-payment [showMethods]=\"false\"></app-payment>\n        </ng-container>\n        <small class=\"text-muted font-italic mt-2 d-block\" *ngIf=\"!createOrganization\">\n            {{'paymentCharged' | i18n : (interval | i18n) }}</small>\n    </ng-container>\n    <div [ngClass]=\"{'mt-4': !createOrganization || plans[plan].noPayment}\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n            <span>{{'submit' | i18n}}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\">\n            {{'cancel' | i18n}}\n        </button>\n    </div>\n</form>\n","export enum PlanType {\n    Free = 0,\n    FamiliesAnnually = 1,\n    TeamsMonthly = 2,\n    TeamsAnnually = 3,\n    EnterpriseMonthly = 4,\n    EnterpriseAnnually = 5,\n    Custom = 6,\n}\n","import {\n    Pipe,\n    PipeTransform,\n} from '@angular/core';\n\n/**\n * A pipe that sanitizes HTML and highlights numbers and special characters (in different colors each).\n */\n@Pipe({ name: 'colorPassword' })\nexport class ColorPasswordPipe implements PipeTransform {\n    transform(password: string) {\n        let colorizedPassword = '';\n        for (let i = 0; i < password.length; i++) {\n            let character = password[i];\n            let isSpecial = false;\n            // Sanitize HTML first.\n            switch (character) {\n                case '&':\n                    character = '&amp;';\n                    isSpecial = true;\n                    break;\n                case '<':\n                    character = '&lt;';\n                    isSpecial = true;\n                    break;\n                case '>':\n                    character = '&gt;';\n                    isSpecial = true;\n                    break;\n                case ' ':\n                    character = '&nbsp;';\n                    isSpecial = true;\n                    break;\n                default:\n                    break;\n            }\n            let type = 'letter';\n            if (isSpecial || character.match(/[^\\w ]/)) {\n                type = 'special';\n            } else if (character.match(/\\d/)) {\n                type = 'number';\n            }\n            colorizedPassword += '<span class=\"password-' + type + '\">' + character + '</span>';\n        }\n        return colorizedPassword;\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    HostListener,\n} from '@angular/core';\n\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\n\n@Directive({\n    selector: '[appSelectCopy]',\n})\nexport class SelectCopyDirective {\n    constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) { }\n\n    @HostListener('copy') onCopy() {\n        if (window == null) {\n            return;\n        }\n        let copyText = '';\n        const selection = window.getSelection();\n        for (let i = 0; i < selection.rangeCount; i++) {\n            const range = selection.getRangeAt(i);\n            const text = range.toString();\n\n            // The selection should only contain one line of text. In some cases however, the\n            // selection contains newlines and space characters from the indentation of following\n            // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\n            // that aren't part of the password, the selection has to be trimmed.\n            let stringEndPos = text.length;\n            const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\n            if (newLinePos > -1) {\n                const otherPart = text.substr(newLinePos).trim();\n                if (otherPart === '') {\n                    stringEndPos = newLinePos;\n                }\n            }\n            copyText += text.substring(0, stringEndPos);\n        }\n        this.platformUtilsService.copyToClipboard(copyText, { window: window });\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport {\n    PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent,\n} from 'jslib/angular/components/password-generator-history.component';\n\n@Component({\n    selector: 'app-password-generator-history',\n    templateUrl: 'password-generator-history.component.html',\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n    constructor(passwordGenerationService: PasswordGenerationService, platformUtilsService: PlatformUtilsService,\n        i18nService: I18nService) {\n        super(passwordGenerationService, platformUtilsService, i18nService, window);\n    }\n}\n","import { AttachmentResponse } from '../response/attachmentResponse';\n\nexport class AttachmentData {\n    id: string;\n    url: string;\n    fileName: string;\n    key: string;\n    size: string;\n    sizeName: string;\n\n    constructor(response?: AttachmentResponse) {\n        if (response == null) {\n            return;\n        }\n        this.id = response.id;\n        this.url = response.url;\n        this.fileName = response.fileName;\n        this.key = response.key;\n        this.size = response.size;\n        this.sizeName = response.sizeName;\n    }\n}\n","import { CardApi } from '../api/cardApi';\n\nexport class CardData {\n    cardholderName: string;\n    brand: string;\n    number: string;\n    expMonth: string;\n    expYear: string;\n    code: string;\n\n    constructor(data?: CardApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.cardholderName = data.cardholderName;\n        this.brand = data.brand;\n        this.number = data.number;\n        this.expMonth = data.expMonth;\n        this.expYear = data.expYear;\n        this.code = data.code;\n    }\n}\n","import { FieldType } from '../../enums/fieldType';\n\nimport { FieldApi } from '../api/fieldApi';\n\nexport class FieldData {\n    type: FieldType;\n    name: string;\n    value: string;\n\n    constructor(response?: FieldApi) {\n        if (response == null) {\n            return;\n        }\n        this.type = response.type;\n        this.name = response.name;\n        this.value = response.value;\n    }\n}\n","import { IdentityApi } from '../api/identityApi';\n\nexport class IdentityData {\n    title: string;\n    firstName: string;\n    middleName: string;\n    lastName: string;\n    address1: string;\n    address2: string;\n    address3: string;\n    city: string;\n    state: string;\n    postalCode: string;\n    country: string;\n    company: string;\n    email: string;\n    phone: string;\n    ssn: string;\n    username: string;\n    passportNumber: string;\n    licenseNumber: string;\n\n    constructor(data?: IdentityApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.title = data.title;\n        this.firstName = data.firstName;\n        this.middleName = data.middleName;\n        this.lastName = data.lastName;\n        this.address1 = data.address1;\n        this.address2 = data.address2;\n        this.address3 = data.address3;\n        this.city = data.city;\n        this.state = data.state;\n        this.postalCode = data.postalCode;\n        this.country = data.country;\n        this.company = data.company;\n        this.email = data.email;\n        this.phone = data.phone;\n        this.ssn = data.ssn;\n        this.username = data.username;\n        this.passportNumber = data.passportNumber;\n        this.licenseNumber = data.licenseNumber;\n    }\n}\n","import { LoginApi } from '../api/loginApi';\n\nimport { LoginUriData } from './loginUriData';\n\nexport class LoginData {\n    uris: LoginUriData[];\n    username: string;\n    password: string;\n    passwordRevisionDate: string;\n    totp: string;\n\n    constructor(data?: LoginApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.username = data.username;\n        this.password = data.password;\n        this.passwordRevisionDate = data.passwordRevisionDate;\n        this.totp = data.totp;\n\n        if (data.uris) {\n            this.uris = data.uris.map((u) => new LoginUriData(u));\n        }\n    }\n}\n","import { UriMatchType } from '../../enums/uriMatchType';\n\nimport { LoginUriApi } from '../api/loginUriApi';\n\nexport class LoginUriData {\n    uri: string;\n    match: UriMatchType = null;\n\n    constructor(data?: LoginUriApi) {\n        if (data == null) {\n            return;\n        }\n        this.uri = data.uri;\n        this.match = data.match;\n    }\n}\n","import { PasswordHistoryResponse } from '../response/passwordHistoryResponse';\n\nexport class PasswordHistoryData {\n    password: string;\n    lastUsedDate: string;\n\n    constructor(response?: PasswordHistoryResponse) {\n        if (response == null) {\n            return;\n        }\n\n        this.password = response.password;\n        this.lastUsedDate = response.lastUsedDate;\n    }\n}\n","import { SecureNoteType } from '../../enums/secureNoteType';\n\nimport { SecureNoteApi } from '../api/secureNoteApi';\n\nexport class SecureNoteData {\n    type: SecureNoteType;\n\n    constructor(data?: SecureNoteApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.type = data.type;\n    }\n}\n","import { AttachmentData } from '../data/attachmentData';\n\nimport { AttachmentView } from '../view/attachmentView';\n\nimport { CipherString } from './cipherString';\nimport Domain from './domainBase';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nimport { CryptoService } from '../../abstractions/crypto.service';\n\nimport { Utils } from '../../misc/utils';\n\nexport class Attachment extends Domain {\n    id: string;\n    url: string;\n    size: string;\n    sizeName: string;\n    key: CipherString;\n    fileName: CipherString;\n\n    constructor(obj?: AttachmentData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.size = obj.size;\n        this.buildDomainModel(this, obj, {\n            id: null,\n            url: null,\n            sizeName: null,\n            fileName: null,\n            key: null,\n        }, alreadyEncrypted, ['id', 'url', 'sizeName']);\n    }\n\n    async decrypt(orgId: string): Promise<AttachmentView> {\n        const view = await this.decryptObj(new AttachmentView(this), {\n            fileName: null,\n        }, orgId);\n\n        if (this.key != null) {\n            let cryptoService: CryptoService;\n            const containerService = (Utils.global as any).bitwardenContainerService;\n            if (containerService) {\n                cryptoService = containerService.getCryptoService();\n            } else {\n                throw new Error('global bitwardenContainerService not initialized.');\n            }\n\n            try {\n                const orgKey = await cryptoService.getOrgKey(orgId);\n                const decValue = await cryptoService.decryptToBytes(this.key, orgKey);\n                view.key = new SymmetricCryptoKey(decValue);\n            } catch (e) {\n                // TODO: error?\n            }\n        }\n\n        return view;\n    }\n\n    toAttachmentData(): AttachmentData {\n        const a = new AttachmentData();\n        a.size = this.size;\n        this.buildDataModel(this, a, {\n            id: null,\n            url: null,\n            sizeName: null,\n            fileName: null,\n            key: null,\n        }, ['id', 'url', 'sizeName']);\n        return a;\n    }\n}\n","import { View } from './view';\n\nimport { Attachment } from '../domain/attachment';\nimport { SymmetricCryptoKey } from '../domain/symmetricCryptoKey';\n\nexport class AttachmentView implements View {\n    id: string = null;\n    url: string = null;\n    size: string = null;\n    sizeName: string = null;\n    fileName: string = null;\n    key: SymmetricCryptoKey = null;\n\n    constructor(a?: Attachment) {\n        if (!a) {\n            return;\n        }\n\n        this.id = a.id;\n        this.url = a.url;\n        this.size = a.size;\n        this.sizeName = a.sizeName;\n    }\n\n    get fileSize(): number {\n        try {\n            if (this.size != null) {\n                return parseInt(this.size, null);\n            }\n        } catch { }\n        return 0;\n    }\n}\n","import { EncryptionType } from '../../enums/encryptionType';\n\nimport { Utils } from '../../misc/utils';\n\nexport class SymmetricCryptoKey {\n    key: ArrayBuffer;\n    encKey?: ArrayBuffer;\n    macKey?: ArrayBuffer;\n    encType: EncryptionType;\n\n    keyB64: string;\n    encKeyB64: string;\n    macKeyB64: string;\n\n    meta: any;\n\n    constructor(key: ArrayBuffer, encType?: EncryptionType) {\n        if (key == null) {\n            throw new Error('Must provide key');\n        }\n\n        if (encType == null) {\n            if (key.byteLength === 32) {\n                encType = EncryptionType.AesCbc256_B64;\n            } else if (key.byteLength === 64) {\n                encType = EncryptionType.AesCbc256_HmacSha256_B64;\n            } else {\n                throw new Error('Unable to determine encType.');\n            }\n        }\n\n        this.key = key;\n        this.encType = encType;\n\n        if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n            this.encKey = key;\n            this.macKey = null;\n        } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n            this.encKey = key.slice(0, 16);\n            this.macKey = key.slice(16, 32);\n        } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n            this.encKey = key.slice(0, 32);\n            this.macKey = key.slice(32, 64);\n        } else {\n            throw new Error('Unsupported encType/key length.');\n        }\n\n        if (this.key != null) {\n            this.keyB64 = Utils.fromBufferToB64(this.key);\n        }\n        if (this.encKey != null) {\n            this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n        }\n        if (this.macKey != null) {\n            this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n        }\n    }\n}\n","import { CardData } from '../data/cardData';\n\nimport { CipherString } from './cipherString';\nimport Domain from './domainBase';\n\nimport { CardView } from '../view/cardView';\n\nexport class Card extends Domain {\n    cardholderName: CipherString;\n    brand: CipherString;\n    number: CipherString;\n    expMonth: CipherString;\n    expYear: CipherString;\n    code: CipherString;\n\n    constructor(obj?: CardData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(orgId: string): Promise<CardView> {\n        return this.decryptObj(new CardView(this), {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n        }, orgId);\n    }\n\n    toCardData(): CardData {\n        const c = new CardData();\n        this.buildDataModel(this, c, {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n        });\n        return c;\n    }\n}\n","import { FieldType } from '../../enums/fieldType';\n\nimport { FieldData } from '../data/fieldData';\n\nimport { CipherString } from './cipherString';\nimport Domain from './domainBase';\n\nimport { FieldView } from '../view/fieldView';\n\nexport class Field extends Domain {\n    name: CipherString;\n    value: CipherString;\n    type: FieldType;\n\n    constructor(obj?: FieldData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.type = obj.type;\n        this.buildDomainModel(this, obj, {\n            name: null,\n            value: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(orgId: string): Promise<FieldView> {\n        return this.decryptObj(new FieldView(this), {\n            name: null,\n            value: null,\n        }, orgId);\n    }\n\n    toFieldData(): FieldData {\n        const f = new FieldData();\n        this.buildDataModel(this, f, {\n            name: null,\n            value: null,\n            type: null,\n        }, ['type']);\n        return f;\n    }\n}\n","import { IdentityData } from '../data/identityData';\n\nimport { CipherString } from './cipherString';\nimport Domain from './domainBase';\n\nimport { IdentityView } from '../view/identityView';\n\nexport class Identity extends Domain {\n    title: CipherString;\n    firstName: CipherString;\n    middleName: CipherString;\n    lastName: CipherString;\n    address1: CipherString;\n    address2: CipherString;\n    address3: CipherString;\n    city: CipherString;\n    state: CipherString;\n    postalCode: CipherString;\n    country: CipherString;\n    company: CipherString;\n    email: CipherString;\n    phone: CipherString;\n    ssn: CipherString;\n    username: CipherString;\n    passportNumber: CipherString;\n    licenseNumber: CipherString;\n\n    constructor(obj?: IdentityData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(orgId: string): Promise<IdentityView> {\n        return this.decryptObj(new IdentityView(this), {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n        }, orgId);\n    }\n\n    toIdentityData(): IdentityData {\n        const i = new IdentityData();\n        this.buildDataModel(this, i, {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n        });\n        return i;\n    }\n}\n","import { LoginUri } from './loginUri';\n\nimport { LoginData } from '../data/loginData';\n\nimport { LoginView } from '../view/loginView';\n\nimport { CipherString } from './cipherString';\nimport Domain from './domainBase';\n\nexport class Login extends Domain {\n    uris: LoginUri[];\n    username: CipherString;\n    password: CipherString;\n    passwordRevisionDate?: Date;\n    totp: CipherString;\n\n    constructor(obj?: LoginData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.passwordRevisionDate = obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n        this.buildDomainModel(this, obj, {\n            username: null,\n            password: null,\n            totp: null,\n        }, alreadyEncrypted, []);\n\n        if (obj.uris) {\n            this.uris = [];\n            obj.uris.forEach((u) => {\n                this.uris.push(new LoginUri(u, alreadyEncrypted));\n            });\n        }\n    }\n\n    async decrypt(orgId: string): Promise<LoginView> {\n        const view = await this.decryptObj(new LoginView(this), {\n            username: null,\n            password: null,\n            totp: null,\n        }, orgId);\n\n        if (this.uris != null) {\n            view.uris = [];\n            for (let i = 0; i < this.uris.length; i++) {\n                const uri = await this.uris[i].decrypt(orgId);\n                view.uris.push(uri);\n            }\n        }\n\n        return view;\n    }\n\n    toLoginData(): LoginData {\n        const l = new LoginData();\n        l.passwordRevisionDate = this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n        this.buildDataModel(this, l, {\n            username: null,\n            password: null,\n            totp: null,\n        });\n\n        if (this.uris != null && this.uris.length > 0) {\n            l.uris = [];\n            this.uris.forEach((u) => {\n                l.uris.push(u.toLoginUriData());\n            });\n        }\n\n        return l;\n    }\n}\n","import { UriMatchType } from '../../enums/uriMatchType';\n\nimport { LoginUriData } from '../data/loginUriData';\n\nimport { LoginUriView } from '../view/loginUriView';\n\nimport { CipherString } from './cipherString';\nimport Domain from './domainBase';\n\nexport class LoginUri extends Domain {\n    uri: CipherString;\n    match: UriMatchType;\n\n    constructor(obj?: LoginUriData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.match = obj.match;\n        this.buildDomainModel(this, obj, {\n            uri: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(orgId: string): Promise<LoginUriView> {\n        return this.decryptObj(new LoginUriView(this), {\n            uri: null,\n        }, orgId);\n    }\n\n    toLoginUriData(): LoginUriData {\n        const u = new LoginUriData();\n        this.buildDataModel(this, u, {\n            uri: null,\n        }, ['match']);\n        return u;\n    }\n}\n","import { PasswordHistoryData } from '../data/passwordHistoryData';\n\nimport { CipherString } from './cipherString';\nimport Domain from './domainBase';\n\nimport { PasswordHistoryView } from '../view/passwordHistoryView';\n\nexport class Password extends Domain {\n    password: CipherString;\n    lastUsedDate: Date;\n\n    constructor(obj?: PasswordHistoryData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            password: null,\n        }, alreadyEncrypted);\n        this.lastUsedDate = new Date(obj.lastUsedDate);\n    }\n\n    decrypt(orgId: string): Promise<PasswordHistoryView> {\n         return this.decryptObj(new PasswordHistoryView(this), {\n            password: null,\n        }, orgId);\n    }\n\n    toPasswordHistoryData(): PasswordHistoryData {\n        const ph = new PasswordHistoryData();\n        ph.lastUsedDate = this.lastUsedDate.toISOString();\n        this.buildDataModel(this, ph, {\n            password: null,\n        });\n        return ph;\n    }\n}\n","import { SecureNoteType } from '../../enums/secureNoteType';\n\nimport { SecureNoteData } from '../data/secureNoteData';\n\nimport Domain from './domainBase';\n\nimport { SecureNoteView } from '../view/secureNoteView';\n\nexport class SecureNote extends Domain {\n    type: SecureNoteType;\n\n    constructor(obj?: SecureNoteData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.type = obj.type;\n    }\n\n    decrypt(orgId: string): Promise<SecureNoteView> {\n        return Promise.resolve(new SecureNoteView(this));\n    }\n\n    toSecureNoteData(): SecureNoteData {\n        const n = new SecureNoteData();\n        n.type = this.type;\n        return n;\n    }\n}\n","import { CipherRequest } from './cipherRequest';\n\nimport { Cipher } from '../domain/cipher';\n\nexport class CipherCreateRequest {\n    cipher: CipherRequest;\n    collectionIds: string[];\n\n    constructor(cipher: Cipher) {\n        this.cipher = new CipherRequest(cipher);\n        this.collectionIds = cipher.collectionIds;\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { CipherData } from 'jslib/models/data/cipherData';\nimport { Cipher } from 'jslib/models/domain/cipher';\nimport { Organization } from 'jslib/models/domain/organization';\n\nimport { AttachmentView } from 'jslib/models/view/attachmentView';\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from '../../vault/attachments.component';\n\n@Component({\n    selector: 'app-org-vault-attachments',\n    templateUrl: '../../vault/attachments.component.html',\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n    organization: Organization;\n\n    constructor(cipherService: CipherService, i18nService: I18nService,\n        cryptoService: CryptoService, userService: UserService,\n        platformUtilsService: PlatformUtilsService, private apiService: ApiService) {\n        super(cipherService, i18nService, cryptoService, userService, platformUtilsService);\n    }\n\n    protected async reupload(attachment: AttachmentView) {\n        if (this.organization.isAdmin && this.showFixOldAttachments(attachment)) {\n            await super.reuploadCipherAttachment(attachment, true);\n        }\n    }\n\n    protected async loadCipher() {\n        if (!this.organization.isAdmin) {\n            return await super.loadCipher();\n        }\n        const response = await this.apiService.getCipherAdmin(this.cipherId);\n        return new Cipher(new CipherData(response));\n    }\n\n    protected saveCipherAttachment(file: File) {\n        return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file, this.organization.isAdmin);\n    }\n\n    protected deleteCipherAttachment(attachmentId: string) {\n        if (!this.organization.isAdmin) {\n            return super.deleteCipherAttachment(attachmentId);\n        }\n        return this.apiService.deleteCipherAttachmentAdmin(this.cipherId, attachmentId);\n    }\n\n    protected showFixOldAttachments(attachment: AttachmentView) {\n        return attachment.key == null && this.organization.isAdmin;\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { CipherData } from 'jslib/models/data/cipherData';\nimport { Cipher } from 'jslib/models/domain/cipher';\nimport { Organization } from 'jslib/models/domain/organization';\nimport { CipherCollectionsRequest } from 'jslib/models/request/cipherCollectionsRequest';\n\nimport { CollectionsComponent as BaseCollectionsComponent } from '../../vault/collections.component';\n\n@Component({\n    selector: 'app-org-vault-collections',\n    templateUrl: '../../vault/collections.component.html',\n})\nexport class CollectionsComponent extends BaseCollectionsComponent {\n    organization: Organization;\n\n    constructor(collectionService: CollectionService, platformUtilsService: PlatformUtilsService,\n        i18nService: I18nService, cipherService: CipherService,\n        private apiService: ApiService) {\n        super(collectionService, platformUtilsService, i18nService, cipherService);\n        this.allowSelectNone = true;\n    }\n\n    protected async loadCipher() {\n        if (!this.organization.isAdmin) {\n            return await super.loadCipher();\n        }\n        const response = await this.apiService.getCipherAdmin(this.cipherId);\n        return new Cipher(new CipherData(response));\n    }\n\n    protected loadCipherCollections() {\n        if (!this.organization.isAdmin) {\n            return super.loadCipherCollections();\n        }\n        return this.collectionIds;\n    }\n\n    protected loadCollections() {\n        if (!this.organization.isAdmin) {\n            return super.loadCollections();\n        }\n        return Promise.resolve(this.collections);\n    }\n\n    protected saveCollections() {\n        if (this.organization.isAdmin) {\n            const request = new CipherCollectionsRequest(this.cipherDomain.collectionIds);\n            return this.apiService.putCipherCollectionsAdmin(this.cipherId, request);\n        } else {\n            return super.saveCollections();\n        }\n    }\n}\n","export class CipherCollectionsRequest {\n    collectionIds: string[];\n\n    constructor(collectionIds: string[]) {\n        this.collectionIds = collectionIds == null ? [] : collectionIds;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { CipherString } from 'jslib/models/domain/cipherString';\nimport { SymmetricCryptoKey } from 'jslib/models/domain/symmetricCryptoKey';\nimport { CollectionRequest } from 'jslib/models/request/collectionRequest';\nimport { SelectionReadOnlyRequest } from 'jslib/models/request/selectionReadOnlyRequest';\nimport { GroupResponse } from 'jslib/models/response/groupResponse';\n\nimport { Utils } from 'jslib/misc/utils';\n\n@Component({\n    selector: 'app-collection-add-edit',\n    templateUrl: 'collection-add-edit.component.html',\n})\nexport class CollectionAddEditComponent implements OnInit {\n    @Input() collectionId: string;\n    @Input() organizationId: string;\n    @Output() onSavedCollection = new EventEmitter();\n    @Output() onDeletedCollection = new EventEmitter();\n\n    loading = true;\n    editMode: boolean = false;\n    accessGroups: boolean = false;\n    title: string;\n    name: string;\n    externalId: string;\n    groups: GroupResponse[] = [];\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n\n    private orgKey: SymmetricCryptoKey;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private platformUtilsService: PlatformUtilsService, private cryptoService: CryptoService,\n        private userService: UserService) { }\n\n    async ngOnInit() {\n        const organization = await this.userService.getOrganization(this.organizationId);\n        this.accessGroups = organization.useGroups;\n        this.editMode = this.loading = this.collectionId != null;\n        if (this.accessGroups) {\n            const groupsResponse = await this.apiService.getGroups(this.organizationId);\n            this.groups = groupsResponse.data.map((r) => r).sort(Utils.getSortFunction(this.i18nService, 'name'));\n        }\n        this.orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editCollection');\n            try {\n                const collection = await this.apiService.getCollectionDetails(this.organizationId, this.collectionId);\n                this.name = await this.cryptoService.decryptToUtf8(new CipherString(collection.name), this.orgKey);\n                this.externalId = collection.externalId;\n                if (collection.groups != null && this.groups.length > 0) {\n                    collection.groups.forEach((s) => {\n                        const group = this.groups.filter((g) => !g.accessAll && g.id === s.id);\n                        if (group != null && group.length > 0) {\n                            (group[0] as any).checked = true;\n                            (group[0] as any).readOnly = s.readOnly;\n                        }\n                    });\n                }\n            } catch { }\n        } else {\n            this.title = this.i18nService.t('addCollection');\n        }\n\n        this.groups.forEach((g) => {\n            if (g.accessAll) {\n                (g as any).checked = true;\n            }\n        });\n\n        this.loading = false;\n    }\n\n    check(g: GroupResponse, select?: boolean) {\n        if (g.accessAll) {\n            return;\n        }\n        (g as any).checked = select == null ? !(g as any).checked : select;\n        if (!(g as any).checked) {\n            (g as any).readOnly = false;\n        }\n    }\n\n    selectAll(select: boolean) {\n        this.groups.forEach((g) => this.check(g, select));\n    }\n\n    async submit() {\n        if (this.orgKey == null) {\n            throw new Error('No encryption key for this organization.');\n        }\n\n        const request = new CollectionRequest();\n        request.name = (await this.cryptoService.encrypt(this.name, this.orgKey)).encryptedString;\n        request.externalId = this.externalId;\n        request.groups = this.groups.filter((g) => (g as any).checked && !g.accessAll)\n            .map((g) => new SelectionReadOnlyRequest(g.id, !!(g as any).readOnly));\n\n        try {\n            if (this.editMode) {\n                this.formPromise = this.apiService.putCollection(this.organizationId, this.collectionId, request);\n            } else {\n                this.formPromise = this.apiService.postCollection(this.organizationId, request);\n            }\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: this.editMode ? 'Edited Collection' : 'Created Collection' });\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t(this.editMode ? 'editedCollectionId' : 'createdCollectionId', this.name));\n            this.onSavedCollection.emit();\n        } catch { }\n    }\n\n    async delete() {\n        if (!this.editMode) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteCollectionConfirmation'), this.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.apiService.deleteCollection(this.organizationId, this.collectionId);\n            await this.deletePromise;\n            this.analytics.eventTrack.next({ action: 'Deleted Collection' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedCollectionId', this.name));\n            this.onDeletedCollection.emit();\n        } catch { }\n    }\n}\n","import { Collection } from '../domain/collection';\n\nimport { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\n\nexport class CollectionRequest {\n    name: string;\n    externalId: string;\n    groups: SelectionReadOnlyRequest[] = [];\n\n    constructor(collection?: Collection) {\n        if (collection == null) {\n            return;\n        }\n        this.name = collection.name ? collection.name.encryptedString : null;\n        this.externalId = collection.externalId;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { CollectionData } from 'jslib/models/data/collectionData';\nimport { Collection } from 'jslib/models/domain/collection';\nimport { GroupRequest } from 'jslib/models/request/groupRequest';\nimport { SelectionReadOnlyRequest } from 'jslib/models/request/selectionReadOnlyRequest';\nimport { CollectionDetailsResponse } from 'jslib/models/response/collectionResponse';\nimport { CollectionView } from 'jslib/models/view/collectionView';\n\n@Component({\n    selector: 'app-group-add-edit',\n    templateUrl: 'group-add-edit.component.html',\n})\nexport class GroupAddEditComponent implements OnInit {\n    @Input() groupId: string;\n    @Input() organizationId: string;\n    @Output() onSavedGroup = new EventEmitter();\n    @Output() onDeletedGroup = new EventEmitter();\n\n    loading = true;\n    editMode: boolean = false;\n    title: string;\n    name: string;\n    externalId: string;\n    access: 'all' | 'selected' = 'selected';\n    collections: CollectionView[] = [];\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private collectionService: CollectionService, private platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        this.editMode = this.loading = this.groupId != null;\n        await this.loadCollections();\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editGroup');\n            try {\n                const group = await this.apiService.getGroupDetails(this.organizationId, this.groupId);\n                this.access = group.accessAll ? 'all' : 'selected';\n                this.name = group.name;\n                this.externalId = group.externalId;\n                if (group.collections != null && this.collections != null) {\n                    group.collections.forEach((s) => {\n                        const collection = this.collections.filter((c) => c.id === s.id);\n                        if (collection != null && collection.length > 0) {\n                            (collection[0] as any).checked = true;\n                            collection[0].readOnly = s.readOnly;\n                        }\n                    });\n                }\n            } catch { }\n        } else {\n            this.title = this.i18nService.t('addGroup');\n        }\n\n        this.loading = false;\n    }\n\n    async loadCollections() {\n        const response = await this.apiService.getCollections(this.organizationId);\n        const collections = response.data.map((r) =>\n            new Collection(new CollectionData(r as CollectionDetailsResponse)));\n        this.collections = await this.collectionService.decryptMany(collections);\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n        if (!(c as any).checked) {\n            c.readOnly = false;\n        }\n    }\n\n    selectAll(select: boolean) {\n        this.collections.forEach((c) => this.check(c, select));\n    }\n\n    async submit() {\n        const request = new GroupRequest();\n        request.name = this.name;\n        request.externalId = this.externalId;\n        request.accessAll = this.access === 'all';\n        if (!request.accessAll) {\n            request.collections = this.collections.filter((c) => (c as any).checked)\n                .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly));\n        }\n\n        try {\n            if (this.editMode) {\n                this.formPromise = this.apiService.putGroup(this.organizationId, this.groupId, request);\n            } else {\n                this.formPromise = this.apiService.postGroup(this.organizationId, request);\n            }\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: this.editMode ? 'Edited Group' : 'Created Group' });\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t(this.editMode ? 'editedGroupId' : 'createdGroupId', this.name));\n            this.onSavedGroup.emit();\n        } catch { }\n    }\n\n    async delete() {\n        if (!this.editMode) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteGroupConfirmation'), this.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.apiService.deleteGroup(this.organizationId, this.groupId);\n            await this.deletePromise;\n            this.analytics.eventTrack.next({ action: 'Deleted Group' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedGroupId', this.name));\n            this.onDeletedGroup.emit();\n        } catch { }\n    }\n}\n","export class OrganizationUserConfirmRequest {\n    key: string;\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { CollectionData } from 'jslib/models/data/collectionData';\nimport { Collection } from 'jslib/models/domain/collection';\nimport { OrganizationUserInviteRequest } from 'jslib/models/request/organizationUserInviteRequest';\nimport { OrganizationUserUpdateRequest } from 'jslib/models/request/organizationUserUpdateRequest';\nimport { SelectionReadOnlyRequest } from 'jslib/models/request/selectionReadOnlyRequest';\nimport { CollectionDetailsResponse } from 'jslib/models/response/collectionResponse';\nimport { CollectionView } from 'jslib/models/view/collectionView';\n\nimport { OrganizationUserType } from 'jslib/enums/organizationUserType';\n\n@Component({\n    selector: 'app-user-add-edit',\n    templateUrl: 'user-add-edit.component.html',\n})\nexport class UserAddEditComponent implements OnInit {\n    @Input() name: string;\n    @Input() organizationUserId: string;\n    @Input() organizationId: string;\n    @Output() onSavedUser = new EventEmitter();\n    @Output() onDeletedUser = new EventEmitter();\n\n    loading = true;\n    editMode: boolean = false;\n    title: string;\n    emails: string;\n    type: OrganizationUserType = OrganizationUserType.User;\n    access: 'all' | 'selected' = 'selected';\n    collections: CollectionView[] = [];\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n    organizationUserType = OrganizationUserType;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private collectionService: CollectionService, private platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        this.editMode = this.loading = this.organizationUserId != null;\n        await this.loadCollections();\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editUser');\n            try {\n                const user = await this.apiService.getOrganizationUser(this.organizationId, this.organizationUserId);\n                this.access = user.accessAll ? 'all' : 'selected';\n                this.type = user.type;\n                if (user.collections != null && this.collections != null) {\n                    user.collections.forEach((s) => {\n                        const collection = this.collections.filter((c) => c.id === s.id);\n                        if (collection != null && collection.length > 0) {\n                            (collection[0] as any).checked = true;\n                            collection[0].readOnly = s.readOnly;\n                        }\n                    });\n                }\n            } catch { }\n        } else {\n            this.title = this.i18nService.t('inviteUser');\n        }\n\n        this.loading = false;\n    }\n\n    async loadCollections() {\n        const response = await this.apiService.getCollections(this.organizationId);\n        const collections = response.data.map((r) =>\n            new Collection(new CollectionData(r as CollectionDetailsResponse)));\n        this.collections = await this.collectionService.decryptMany(collections);\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n        if (!(c as any).checked) {\n            c.readOnly = false;\n        }\n    }\n\n    selectAll(select: boolean) {\n        this.collections.forEach((c) => this.check(c, select));\n    }\n\n    async submit() {\n        let collections: SelectionReadOnlyRequest[] = null;\n        if (this.access !== 'all') {\n            collections = this.collections.filter((c) => (c as any).checked)\n                .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly));\n        }\n\n        try {\n            if (this.editMode) {\n                const request = new OrganizationUserUpdateRequest();\n                request.accessAll = this.access === 'all';\n                request.type = this.type;\n                request.collections = collections;\n                this.formPromise = this.apiService.putOrganizationUser(this.organizationId, this.organizationUserId,\n                    request);\n            } else {\n                const request = new OrganizationUserInviteRequest();\n                request.emails = this.emails.trim().split(/\\s*,\\s*/);\n                request.accessAll = this.access === 'all';\n                request.type = this.type;\n                request.collections = collections;\n                this.formPromise = this.apiService.postOrganizationUserInvite(this.organizationId, request);\n            }\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: this.editMode ? 'Edited User' : 'Invited User' });\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t(this.editMode ? 'editedUserId' : 'invitedUsers', this.name));\n            this.onSavedUser.emit();\n        } catch { }\n    }\n\n    async delete() {\n        if (!this.editMode) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('removeUserConfirmation'), this.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.apiService.deleteOrganizationUser(this.organizationId, this.organizationUserId);\n            await this.deletePromise;\n            this.analytics.eventTrack.next({ action: 'Deleted User' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('removedUserId', this.name));\n            this.onDeletedUser.emit();\n        } catch { }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ConstantsService } from 'jslib/services/constants.service';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { StorageService } from 'jslib/abstractions/storage.service';\n\nimport { OrganizationUserConfirmRequest } from 'jslib/models/request/organizationUserConfirmRequest';\n\nimport { Utils } from 'jslib/misc/utils';\n\n@Component({\n    selector: 'app-user-confirm',\n    templateUrl: 'user-confirm.component.html',\n})\nexport class UserConfirmComponent implements OnInit {\n    @Input() name: string;\n    @Input() userId: string;\n    @Input() organizationUserId: string;\n    @Input() organizationId: string;\n    @Output() onConfirmedUser = new EventEmitter();\n\n    dontAskAgain = false;\n    loading = true;\n    fingerprint: string;\n    formPromise: Promise<any>;\n\n    private publicKey: Uint8Array = null;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private cryptoService: CryptoService, private storageService: StorageService) { }\n\n    async ngOnInit() {\n        try {\n            const publicKeyResponse = await this.apiService.getUserPublicKey(this.userId);\n            if (publicKeyResponse != null) {\n                this.publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n                const fingerprint = await this.cryptoService.getFingerprint(this.userId, this.publicKey.buffer);\n                if (fingerprint != null) {\n                    this.fingerprint = fingerprint.join('-');\n                }\n            }\n        } catch { }\n        this.loading = false;\n    }\n\n    async submit() {\n        if (this.loading) {\n            return;\n        }\n\n        if (this.dontAskAgain) {\n            await this.storageService.save(ConstantsService.autoConfirmFingerprints, true);\n        }\n\n        try {\n            this.formPromise = this.doConfirmation();\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Confirmed User' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('hasBeenConfirmed', this.name));\n            this.onConfirmedUser.emit();\n        } catch { }\n    }\n\n    private async doConfirmation() {\n        const orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const key = await this.cryptoService.rsaEncrypt(orgKey.key, this.publicKey.buffer);\n        const request = new OrganizationUserConfirmRequest();\n        request.key = key.encryptedString;\n        await this.apiService.postOrganizationUserConfirm(this.organizationId, this.organizationUserId, request);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { OrganizationUserUpdateGroupsRequest } from 'jslib/models/request/organizationUserUpdateGroupsRequest';\nimport { GroupResponse } from 'jslib/models/response/groupResponse';\n\nimport { Utils } from 'jslib/misc/utils';\n\n@Component({\n    selector: 'app-user-groups',\n    templateUrl: 'user-groups.component.html',\n})\nexport class UserGroupsComponent implements OnInit {\n    @Input() name: string;\n    @Input() organizationUserId: string;\n    @Input() organizationId: string;\n    @Output() onSavedUser = new EventEmitter();\n\n    loading = true;\n    groups: GroupResponse[] = [];\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService) { }\n\n    async ngOnInit() {\n        const groupsResponse = await this.apiService.getGroups(this.organizationId);\n        const groups = groupsResponse.data.map((r) => r);\n        groups.sort(Utils.getSortFunction(this.i18nService, 'name'));\n        this.groups = groups;\n\n        try {\n            const userGroups = await this.apiService.getOrganizationUserGroups(\n                this.organizationId, this.organizationUserId);\n            if (userGroups != null && this.groups != null) {\n                userGroups.forEach((ug) => {\n                    const group = this.groups.filter((g) => g.id === ug);\n                    if (group != null && group.length > 0) {\n                        (group[0] as any).checked = true;\n                    }\n                });\n            }\n        } catch { }\n\n        this.loading = false;\n    }\n\n    check(g: GroupResponse, select?: boolean) {\n        (g as any).checked = select == null ? !(g as any).checked : select;\n        if (!(g as any).checked) {\n            (g as any).readOnly = false;\n        }\n    }\n\n    selectAll(select: boolean) {\n        this.groups.forEach((g) => this.check(g, select));\n    }\n\n    async submit() {\n        const request = new OrganizationUserUpdateGroupsRequest();\n        request.groupIds = this.groups.filter((g) => (g as any).checked).map((g) => g.id);\n\n        try {\n            this.formPromise = this.apiService.putOrganizationUserGroups(this.organizationId, this.organizationUserId,\n                request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Edited User Groups' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('editedGroupsForUser', this.name));\n            this.onSavedUser.emit();\n        } catch { }\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { PasswordVerificationRequest } from 'jslib/models/request/passwordVerificationRequest';\n\nimport { ApiKeyResponse } from 'jslib/models/response/apiKeyResponse';\n\n@Component({\n    selector: 'app-api-key',\n    templateUrl: 'api-key.component.html',\n})\nexport class ApiKeyComponent {\n    organizationId: string;\n\n    masterPassword: string;\n    formPromise: Promise<ApiKeyResponse>;\n    clientId: string;\n    clientSecret: string;\n    scope: string;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private cryptoService: CryptoService, private router: Router) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        try {\n            this.formPromise = this.apiService.postOrganizationApiKey(this.organizationId, request);\n            const response = await this.formPromise;\n            this.clientSecret = response.apiKey;\n            this.clientId = 'organization.' + this.organizationId;\n            this.scope = 'api.organization';\n            this.analytics.eventTrack.next({ action: 'Viewed Organization API Key' });\n        } catch { }\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { PasswordVerificationRequest } from 'jslib/models/request/passwordVerificationRequest';\n\n@Component({\n    selector: 'app-delete-organization',\n    templateUrl: 'delete-organization.component.html',\n})\nexport class DeleteOrganizationComponent {\n    organizationId: string;\n\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private cryptoService: CryptoService, private router: Router) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        try {\n            this.formPromise = this.apiService.deleteOrganization(this.organizationId, request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Deleted Organization' });\n            this.toasterService.popAsync('success', this.i18nService.t('organizationDeleted'),\n                this.i18nService.t('organizationDeletedDesc'));\n            this.router.navigate(['/']);\n        } catch { }\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { PasswordVerificationRequest } from 'jslib/models/request/passwordVerificationRequest';\n\nimport { ApiKeyResponse } from 'jslib/models/response/apiKeyResponse';\n\n@Component({\n    selector: 'app-rotate-api-key',\n    templateUrl: 'rotate-api-key.component.html',\n})\nexport class RotateApiKeyComponent {\n    organizationId: string;\n\n    masterPassword: string;\n    formPromise: Promise<ApiKeyResponse>;\n    clientId: string;\n    clientSecret: string;\n    scope: string;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private cryptoService: CryptoService, private router: Router) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        try {\n            this.formPromise = this.apiService.postOrganizationRotateApiKey(this.organizationId, request);\n            const response = await this.formPromise;\n            this.clientSecret = response.apiKey;\n            this.clientId = 'organization.' + this.organizationId;\n            this.scope = 'api.organization';\n            this.analytics.eventTrack.next({ action: 'Rotated Organization API Key' });\n        } catch { }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\n@Component({\n    selector: 'app-change-plan',\n    templateUrl: 'change-plan.component.html',\n})\nexport class ChangePlanComponent {\n    @Input() organizationId: string;\n    @Output() onChanged = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private platformUtilsService: PlatformUtilsService) { }\n\n    async submit() {\n        try {\n            this.platformUtilsService.eventTrack('Changed Plan');\n            this.onChanged.emit();\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\n@Component({\n    selector: 'app-download-license',\n    templateUrl: 'download-license.component.html',\n})\nexport class DownloadLicenseComponent {\n    @Input() organizationId: string;\n    @Output() onDownloaded = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    installationId: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private platformUtilsService: PlatformUtilsService) { }\n\n    async submit() {\n        if (this.installationId == null || this.installationId === '') {\n            return;\n        }\n\n        try {\n            this.formPromise = this.apiService.getOrganizationLicense(this.organizationId, this.installationId);\n            const license = await this.formPromise;\n            const licenseString = JSON.stringify(license, null, 2);\n            this.platformUtilsService.saveFile(window, licenseString, null, 'bitwarden_organization_license.json');\n            this.platformUtilsService.eventTrack('Downloaded License');\n            this.onDownloaded.emit();\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ViewChild,\n} from '@angular/core';\n\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { SeatRequest } from 'jslib/models/request/seatRequest';\n\nimport { PaymentComponent } from '../../settings/payment.component';\n\n@Component({\n    selector: 'app-adjust-seats',\n    templateUrl: 'adjust-seats.component.html',\n})\nexport class AdjustSeatsComponent {\n    @Input() seatPrice = 0;\n    @Input() add = true;\n    @Input() organizationId: string;\n    @Input() interval = 'year';\n    @Output() onAdjusted = new EventEmitter<number>();\n    @Output() onCanceled = new EventEmitter();\n\n    @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n\n    seatAdjustment = 0;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private router: Router, private activatedRoute: ActivatedRoute) { }\n\n    async submit() {\n        try {\n            const request = new SeatRequest();\n            request.seatAdjustment = this.seatAdjustment;\n            if (!this.add) {\n                request.seatAdjustment *= -1;\n            }\n\n            let paymentFailed = false;\n            const action = async () => {\n                const result = await this.apiService.postOrganizationSeat(this.organizationId, request);\n                if (result != null && result.paymentIntentClientSecret != null) {\n                    try {\n                        await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\n                    } catch {\n                        paymentFailed = true;\n                    }\n                }\n            };\n            this.formPromise = action();\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: this.add ? 'Added Seats' : 'Removed Seats' });\n            this.onAdjusted.emit(this.seatAdjustment);\n            if (paymentFailed) {\n                this.toasterService.popAsync({\n                    body: this.i18nService.t('couldNotChargeCardPayInvoice'),\n                    type: 'warning',\n                    timeout: 10000,\n                });\n                this.router.navigate(['../billing'], { relativeTo: this.activatedRoute });\n            } else {\n                this.toasterService.popAsync('success', null,\n                    this.i18nService.t('adjustedSeats', request.seatAdjustment.toString()));\n            }\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n\n    get adjustedSeatTotal(): number {\n        return this.seatAdjustment * this.seatPrice;\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    forwardRef,\n    HostListener,\n    Input,\n    Renderer2,\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR,\n    NgControl,\n} from '@angular/forms';\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n    selector: 'input[type=checkbox][appTrueFalseValue]',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TrueFalseValueDirective),\n            multi: true,\n        },\n    ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n    @Input() trueValue = true;\n    @Input() falseValue = false;\n\n    constructor(private elementRef: ElementRef, private renderer: Renderer2) { }\n\n    @HostListener('change', ['$event'])\n    onHostChange(ev: any) {\n        this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n    }\n\n    writeValue(obj: any): void {\n        if (obj === this.trueValue) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'checked', true);\n        } else {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'checked', false);\n        }\n    }\n\n    registerOnChange(fn: any): void {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched(fn: any): void { /* nothing */ }\n\n    setDisabledState?(isDisabled: boolean): void { /* nothing */ }\n\n    private propagateChange = (_: any) => { /* nothing */ };\n}\n","import { DeviceType } from '../enums/deviceType';\n\nimport { ApiService as ApiServiceAbstraction } from '../abstractions/api.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\nimport { TokenService } from '../abstractions/token.service';\n\nimport { EnvironmentUrls } from '../models/domain/environmentUrls';\n\nimport { BitPayInvoiceRequest } from '../models/request/bitPayInvoiceRequest';\nimport { CipherBulkDeleteRequest } from '../models/request/cipherBulkDeleteRequest';\nimport { CipherBulkMoveRequest } from '../models/request/cipherBulkMoveRequest';\nimport { CipherBulkShareRequest } from '../models/request/cipherBulkShareRequest';\nimport { CipherCollectionsRequest } from '../models/request/cipherCollectionsRequest';\nimport { CipherCreateRequest } from '../models/request/cipherCreateRequest';\nimport { CipherRequest } from '../models/request/cipherRequest';\nimport { CipherShareRequest } from '../models/request/cipherShareRequest';\nimport { CollectionRequest } from '../models/request/collectionRequest';\nimport { DeleteRecoverRequest } from '../models/request/deleteRecoverRequest';\nimport { EmailRequest } from '../models/request/emailRequest';\nimport { EmailTokenRequest } from '../models/request/emailTokenRequest';\nimport { EventRequest } from '../models/request/eventRequest';\nimport { FolderRequest } from '../models/request/folderRequest';\nimport { GroupRequest } from '../models/request/groupRequest';\nimport { ImportCiphersRequest } from '../models/request/importCiphersRequest';\nimport { ImportDirectoryRequest } from '../models/request/importDirectoryRequest';\nimport { ImportOrganizationCiphersRequest } from '../models/request/importOrganizationCiphersRequest';\nimport { KdfRequest } from '../models/request/kdfRequest';\nimport { KeysRequest } from '../models/request/keysRequest';\nimport { OrganizationCreateRequest } from '../models/request/organizationCreateRequest';\nimport { OrganizationUpdateRequest } from '../models/request/organizationUpdateRequest';\nimport { OrganizationUpgradeRequest } from '../models/request/organizationUpgradeRequest';\nimport { OrganizationUserAcceptRequest } from '../models/request/organizationUserAcceptRequest';\nimport { OrganizationUserConfirmRequest } from '../models/request/organizationUserConfirmRequest';\nimport { OrganizationUserInviteRequest } from '../models/request/organizationUserInviteRequest';\nimport { OrganizationUserUpdateGroupsRequest } from '../models/request/organizationUserUpdateGroupsRequest';\nimport { OrganizationUserUpdateRequest } from '../models/request/organizationUserUpdateRequest';\nimport { PasswordHintRequest } from '../models/request/passwordHintRequest';\nimport { PasswordRequest } from '../models/request/passwordRequest';\nimport { PasswordVerificationRequest } from '../models/request/passwordVerificationRequest';\nimport { PaymentRequest } from '../models/request/paymentRequest';\nimport { PreloginRequest } from '../models/request/preloginRequest';\nimport { RegisterRequest } from '../models/request/registerRequest';\nimport { SeatRequest } from '../models/request/seatRequest';\nimport { SelectionReadOnlyRequest } from '../models/request/selectionReadOnlyRequest';\nimport { StorageRequest } from '../models/request/storageRequest';\nimport { TokenRequest } from '../models/request/tokenRequest';\nimport { TwoFactorEmailRequest } from '../models/request/twoFactorEmailRequest';\nimport { TwoFactorProviderRequest } from '../models/request/twoFactorProviderRequest';\nimport { TwoFactorRecoveryRequest } from '../models/request/twoFactorRecoveryRequest';\nimport { UpdateDomainsRequest } from '../models/request/updateDomainsRequest';\nimport { UpdateKeyRequest } from '../models/request/updateKeyRequest';\nimport { UpdateProfileRequest } from '../models/request/updateProfileRequest';\nimport { UpdateTwoFactorAuthenticatorRequest } from '../models/request/updateTwoFactorAuthenticatorRequest';\nimport { UpdateTwoFactorDuoRequest } from '../models/request/updateTwoFactorDuoRequest';\nimport { UpdateTwoFactorEmailRequest } from '../models/request/updateTwoFactorEmailRequest';\nimport { UpdateTwoFactorU2fDeleteRequest } from '../models/request/updateTwoFactorU2fDeleteRequest';\nimport { UpdateTwoFactorU2fRequest } from '../models/request/updateTwoFactorU2fRequest';\nimport { UpdateTwoFactorYubioOtpRequest } from '../models/request/updateTwoFactorYubioOtpRequest';\nimport { VerifyBankRequest } from '../models/request/verifyBankRequest';\nimport { VerifyDeleteRecoverRequest } from '../models/request/verifyDeleteRecoverRequest';\nimport { VerifyEmailRequest } from '../models/request/verifyEmailRequest';\n\nimport { ApiKeyResponse } from '../models/response/apiKeyResponse';\nimport { BillingResponse } from '../models/response/billingResponse';\nimport { BreachAccountResponse } from '../models/response/breachAccountResponse';\nimport { CipherResponse } from '../models/response/cipherResponse';\nimport {\n    CollectionGroupDetailsResponse,\n    CollectionResponse,\n} from '../models/response/collectionResponse';\nimport { DomainsResponse } from '../models/response/domainsResponse';\nimport { ErrorResponse } from '../models/response/errorResponse';\nimport { EventResponse } from '../models/response/eventResponse';\nimport { FolderResponse } from '../models/response/folderResponse';\nimport {\n    GroupDetailsResponse,\n    GroupResponse,\n} from '../models/response/groupResponse';\nimport { IdentityTokenResponse } from '../models/response/identityTokenResponse';\nimport { IdentityTwoFactorResponse } from '../models/response/identityTwoFactorResponse';\nimport { ListResponse } from '../models/response/listResponse';\nimport { OrganizationResponse } from '../models/response/organizationResponse';\nimport { OrganizationSubscriptionResponse } from '../models/response/organizationSubscriptionResponse';\nimport {\n    OrganizationUserDetailsResponse,\n    OrganizationUserUserDetailsResponse,\n} from '../models/response/organizationUserResponse';\nimport { PaymentResponse } from '../models/response/paymentResponse';\nimport { PreloginResponse } from '../models/response/preloginResponse';\nimport { ProfileResponse } from '../models/response/profileResponse';\nimport { SelectionReadOnlyResponse } from '../models/response/selectionReadOnlyResponse';\nimport { SubscriptionResponse } from '../models/response/subscriptionResponse';\nimport { SyncResponse } from '../models/response/syncResponse';\nimport { TwoFactorAuthenticatorResponse } from '../models/response/twoFactorAuthenticatorResponse';\nimport { TwoFactorDuoResponse } from '../models/response/twoFactorDuoResponse';\nimport { TwoFactorEmailResponse } from '../models/response/twoFactorEmailResponse';\nimport { TwoFactorProviderResponse } from '../models/response/twoFactorProviderResponse';\nimport { TwoFactorRecoverResponse } from '../models/response/twoFactorRescoverResponse';\nimport {\n    ChallengeResponse,\n    TwoFactorU2fResponse,\n} from '../models/response/twoFactorU2fResponse';\nimport { TwoFactorYubiKeyResponse } from '../models/response/twoFactorYubiKeyResponse';\nimport { UserKeyResponse } from '../models/response/userKeyResponse';\n\nexport class ApiService implements ApiServiceAbstraction {\n    urlsSet: boolean = false;\n    apiBaseUrl: string;\n    identityBaseUrl: string;\n    eventsBaseUrl: string;\n\n    private device: DeviceType;\n    private deviceType: string;\n    private isWebClient = false;\n    private isDesktopClient = false;\n    private usingBaseUrl = false;\n\n    constructor(private tokenService: TokenService, private platformUtilsService: PlatformUtilsService,\n        private logoutCallback: (expired: boolean) => Promise<void>) {\n        this.device = platformUtilsService.getDevice();\n        this.deviceType = this.device.toString();\n        this.isWebClient = this.device === DeviceType.IEBrowser || this.device === DeviceType.ChromeBrowser ||\n            this.device === DeviceType.EdgeBrowser || this.device === DeviceType.FirefoxBrowser ||\n            this.device === DeviceType.OperaBrowser || this.device === DeviceType.SafariBrowser ||\n            this.device === DeviceType.UnknownBrowser || this.device === DeviceType.VivaldiBrowser;\n        this.isDesktopClient = this.device === DeviceType.WindowsDesktop || this.device === DeviceType.MacOsDesktop ||\n            this.device === DeviceType.LinuxDesktop;\n    }\n\n    setUrls(urls: EnvironmentUrls): void {\n        this.urlsSet = true;\n\n        if (urls.base != null) {\n            this.usingBaseUrl = true;\n            this.apiBaseUrl = urls.base + '/api';\n            this.identityBaseUrl = urls.base + '/identity';\n            this.eventsBaseUrl = urls.base + '/events';\n            return;\n        }\n\n        this.apiBaseUrl = urls.api;\n        this.identityBaseUrl = urls.identity;\n        this.eventsBaseUrl = urls.events;\n\n        // Production\n        if (this.apiBaseUrl == null) {\n            this.apiBaseUrl = 'https://api.bitwarden.com';\n        }\n        if (this.identityBaseUrl == null) {\n            this.identityBaseUrl = 'https://identity.bitwarden.com';\n        }\n        if (this.eventsBaseUrl == null) {\n            this.eventsBaseUrl = 'https://events.bitwarden.com';\n        }\n    }\n\n    // Auth APIs\n\n    async postIdentityToken(request: TokenRequest): Promise<IdentityTokenResponse | IdentityTwoFactorResponse> {\n        const response = await this.fetch(new Request(this.identityBaseUrl + '/connect/token', {\n            body: this.qsStringify(request.toIdentityToken(this.platformUtilsService.identityClientId)),\n            credentials: this.getCredentials(),\n            cache: 'no-cache',\n            headers: new Headers({\n                'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',\n                'Accept': 'application/json',\n                'Device-Type': this.deviceType,\n            }),\n            method: 'POST',\n        }));\n\n        let responseJson: any = null;\n        if (this.isJsonResponse(response)) {\n            responseJson = await response.json();\n        }\n\n        if (responseJson != null) {\n            if (response.status === 200) {\n                return new IdentityTokenResponse(responseJson);\n            } else if (response.status === 400 && responseJson.TwoFactorProviders2 &&\n                Object.keys(responseJson.TwoFactorProviders2).length) {\n                await this.tokenService.clearTwoFactorToken(request.email);\n                return new IdentityTwoFactorResponse(responseJson);\n            }\n        }\n\n        return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n    }\n\n    async refreshIdentityToken(): Promise<any> {\n        try {\n            await this.doRefreshToken();\n        } catch (e) {\n            return Promise.reject(null);\n        }\n    }\n\n    // Account APIs\n\n    async getProfile(): Promise<ProfileResponse> {\n        const r = await this.send('GET', '/accounts/profile', null, true, true);\n        return new ProfileResponse(r);\n    }\n\n    async getUserBilling(): Promise<BillingResponse> {\n        const r = await this.send('GET', '/accounts/billing', null, true, true);\n        return new BillingResponse(r);\n    }\n\n    async getUserSubscription(): Promise<SubscriptionResponse> {\n        const r = await this.send('GET', '/accounts/subscription', null, true, true);\n        return new SubscriptionResponse(r);\n    }\n\n    async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n        const r = await this.send('PUT', '/accounts/profile', request, true, true);\n        return new ProfileResponse(r);\n    }\n\n    async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n        const r = await this.send('POST', '/accounts/prelogin', request, false, true);\n        return new PreloginResponse(r);\n    }\n\n    postEmailToken(request: EmailTokenRequest): Promise<any> {\n        return this.send('POST', '/accounts/email-token', request, true, false);\n    }\n\n    postEmail(request: EmailRequest): Promise<any> {\n        return this.send('POST', '/accounts/email', request, true, false);\n    }\n\n    postPassword(request: PasswordRequest): Promise<any> {\n        return this.send('POST', '/accounts/password', request, true, false);\n    }\n\n    postSecurityStamp(request: PasswordVerificationRequest): Promise<any> {\n        return this.send('POST', '/accounts/security-stamp', request, true, false);\n    }\n\n    deleteAccount(request: PasswordVerificationRequest): Promise<any> {\n        return this.send('DELETE', '/accounts', request, true, false);\n    }\n\n    async getAccountRevisionDate(): Promise<number> {\n        const r = await this.send('GET', '/accounts/revision-date', null, true, true);\n        return r as number;\n    }\n\n    postPasswordHint(request: PasswordHintRequest): Promise<any> {\n        return this.send('POST', '/accounts/password-hint', request, false, false);\n    }\n\n    postRegister(request: RegisterRequest): Promise<any> {\n        return this.send('POST', '/accounts/register', request, false, false);\n    }\n\n    async postPremium(data: FormData): Promise<PaymentResponse> {\n        const r = await this.send('POST', '/accounts/premium', data, true, true);\n        return new PaymentResponse(r);\n    }\n\n    postReinstatePremium(): Promise<any> {\n        return this.send('POST', '/accounts/reinstate-premium', null, true, false);\n    }\n\n    postCancelPremium(): Promise<any> {\n        return this.send('POST', '/accounts/cancel-premium', null, true, false);\n    }\n\n    async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n        const r = await this.send('POST', '/accounts/storage', request, true, true);\n        return new PaymentResponse(r);\n    }\n\n    postAccountPayment(request: PaymentRequest): Promise<any> {\n        return this.send('POST', '/accounts/payment', request, true, false);\n    }\n\n    postAccountLicense(data: FormData): Promise<any> {\n        return this.send('POST', '/accounts/license', data, true, false);\n    }\n\n    postAccountKeys(request: KeysRequest): Promise<any> {\n        return this.send('POST', '/accounts/keys', request, true, false);\n    }\n\n    postAccountKey(request: UpdateKeyRequest): Promise<any> {\n        return this.send('POST', '/accounts/key', request, true, false);\n    }\n\n    postAccountVerifyEmail(): Promise<any> {\n        return this.send('POST', '/accounts/verify-email', null, true, false);\n    }\n\n    postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n        return this.send('POST', '/accounts/verify-email-token', request, false, false);\n    }\n\n    postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n        return this.send('POST', '/accounts/delete-recover', request, false, false);\n    }\n\n    postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n        return this.send('POST', '/accounts/delete-recover-token', request, false, false);\n    }\n\n    postAccountKdf(request: KdfRequest): Promise<any> {\n        return this.send('POST', '/accounts/kdf', request, true, false);\n    }\n\n    // Folder APIs\n\n    async getFolder(id: string): Promise<FolderResponse> {\n        const r = await this.send('GET', '/folders/' + id, null, true, true);\n        return new FolderResponse(r);\n    }\n\n    async postFolder(request: FolderRequest): Promise<FolderResponse> {\n        const r = await this.send('POST', '/folders', request, true, true);\n        return new FolderResponse(r);\n    }\n\n    async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n        const r = await this.send('PUT', '/folders/' + id, request, true, true);\n        return new FolderResponse(r);\n    }\n\n    deleteFolder(id: string): Promise<any> {\n        return this.send('DELETE', '/folders/' + id, null, true, false);\n    }\n\n    // Cipher APIs\n\n    async getCipher(id: string): Promise<CipherResponse> {\n        const r = await this.send('GET', '/ciphers/' + id, null, true, true);\n        return new CipherResponse(r);\n    }\n\n    async getCipherAdmin(id: string): Promise<CipherResponse> {\n        const r = await this.send('GET', '/ciphers/' + id + '/admin', null, true, true);\n        return new CipherResponse(r);\n    }\n\n    async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n        const r = await this.send('GET', '/ciphers/organization-details?organizationId=' + organizationId,\n            null, true, true);\n        return new ListResponse(r, CipherResponse);\n    }\n\n    async postCipher(request: CipherRequest): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers/create', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers/admin', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n        const r = await this.send('PUT', '/ciphers/' + id, request, true, true);\n        return new CipherResponse(r);\n    }\n\n    async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n        const r = await this.send('PUT', '/ciphers/' + id + '/admin', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    deleteCipher(id: string): Promise<any> {\n        return this.send('DELETE', '/ciphers/' + id, null, true, false);\n    }\n\n    deleteCipherAdmin(id: string): Promise<any> {\n        return this.send('DELETE', '/ciphers/' + id + '/admin', null, true, false);\n    }\n\n    deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n        return this.send('DELETE', '/ciphers', request, true, false);\n    }\n\n    putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/move', request, true, false);\n    }\n\n    async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n        const r = await this.send('PUT', '/ciphers/' + id + '/share', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/share', request, true, false);\n    }\n\n    putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/' + id + '/collections', request, true, false);\n    }\n\n    putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/' + id + '/collections-admin', request, true, false);\n    }\n\n    postPurgeCiphers(request: PasswordVerificationRequest, organizationId: string = null): Promise<any> {\n        let path = '/ciphers/purge';\n        if (organizationId != null) {\n            path += '?organizationId=' + organizationId;\n        }\n        return this.send('POST', path, request, true, false);\n    }\n\n    postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n        return this.send('POST', '/ciphers/import', request, true, false);\n    }\n\n    postImportOrganizationCiphers(organizationId: string, request: ImportOrganizationCiphersRequest): Promise<any> {\n        return this.send('POST', '/ciphers/import-organization?organizationId=' + organizationId, request, true, false);\n    }\n\n    // Attachments APIs\n\n    async postCipherAttachment(id: string, data: FormData): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers/' + id + '/attachment', data, true, true);\n        return new CipherResponse(r);\n    }\n\n    async postCipherAttachmentAdmin(id: string, data: FormData): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers/' + id + '/attachment-admin', data, true, true);\n        return new CipherResponse(r);\n    }\n\n    deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n        return this.send('DELETE', '/ciphers/' + id + '/attachment/' + attachmentId, null, true, false);\n    }\n\n    deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n        return this.send('DELETE', '/ciphers/' + id + '/attachment/' + attachmentId + '/admin', null, true, false);\n    }\n\n    postShareCipherAttachment(id: string, attachmentId: string, data: FormData,\n        organizationId: string): Promise<any> {\n        return this.send('POST', '/ciphers/' + id + '/attachment/' +\n            attachmentId + '/share?organizationId=' + organizationId, data, true, false);\n    }\n\n    // Collections APIs\n\n    async getCollectionDetails(organizationId: string, id: string): Promise<CollectionGroupDetailsResponse> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/collections/' + id + '/details',\n            null, true, true);\n        return new CollectionGroupDetailsResponse(r);\n    }\n\n    async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n        const r = await this.send('GET', '/collections', null, true, true);\n        return new ListResponse(r, CollectionResponse);\n    }\n\n    async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/collections', null, true, true);\n        return new ListResponse(r, CollectionResponse);\n    }\n\n    async getCollectionUsers(organizationId: string, id: string): Promise<SelectionReadOnlyResponse[]> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/collections/' + id + '/users',\n            null, true, true);\n        return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n    }\n\n    async postCollection(organizationId: string, request: CollectionRequest): Promise<CollectionResponse> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/collections', request, true, true);\n        return new CollectionResponse(r);\n    }\n\n    async putCollection(organizationId: string, id: string, request: CollectionRequest): Promise<CollectionResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/collections/' + id,\n            request, true, true);\n        return new CollectionResponse(r);\n    }\n\n    async putCollectionUsers(organizationId: string, id: string, request: SelectionReadOnlyRequest[]): Promise<any> {\n        await this.send('PUT', '/organizations/' + organizationId + '/collections/' + id + '/users',\n            request, true, false);\n    }\n\n    deleteCollection(organizationId: string, id: string): Promise<any> {\n        return this.send('DELETE', '/organizations/' + organizationId + '/collections/' + id, null, true, false);\n    }\n\n    deleteCollectionUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n        return this.send('DELETE',\n            '/organizations/' + organizationId + '/collections/' + id + '/user/' + organizationUserId,\n            null, true, false);\n    }\n\n    // Groups APIs\n\n    async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/groups/' + id + '/details',\n            null, true, true);\n        return new GroupDetailsResponse(r);\n    }\n\n    async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/groups', null, true, true);\n        return new ListResponse(r, GroupResponse);\n    }\n\n    async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/groups/' + id + '/users',\n            null, true, true);\n        return r;\n    }\n\n    async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/groups', request, true, true);\n        return new GroupResponse(r);\n    }\n\n    async putGroup(organizationId: string, id: string, request: GroupRequest): Promise<GroupResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/groups/' + id, request, true, true);\n        return new GroupResponse(r);\n    }\n\n    async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n        await this.send('PUT', '/organizations/' + organizationId + '/groups/' + id + '/users', request, true, false);\n    }\n\n    deleteGroup(organizationId: string, id: string): Promise<any> {\n        return this.send('DELETE', '/organizations/' + organizationId + '/groups/' + id, null, true, false);\n    }\n\n    deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n        return this.send('DELETE',\n            '/organizations/' + organizationId + '/groups/' + id + '/user/' + organizationUserId, null, true, false);\n    }\n\n    // Organization User APIs\n\n    async getOrganizationUser(organizationId: string, id: string): Promise<OrganizationUserDetailsResponse> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/users/' + id, null, true, true);\n        return new OrganizationUserDetailsResponse(r);\n    }\n\n    async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/users/' + id + '/groups',\n            null, true, true);\n        return r;\n    }\n\n    async getOrganizationUsers(organizationId: string): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/users', null, true, true);\n        return new ListResponse(r, OrganizationUserUserDetailsResponse);\n    }\n\n    postOrganizationUserInvite(organizationId: string, request: OrganizationUserInviteRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/users/invite', request, true, false);\n    }\n\n    postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/users/' + id + '/reinvite', null, true, false);\n    }\n\n    postOrganizationUserAccept(organizationId: string, id: string,\n        request: OrganizationUserAcceptRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/users/' + id + '/accept', request, true, false);\n    }\n\n    postOrganizationUserConfirm(organizationId: string, id: string,\n        request: OrganizationUserConfirmRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/users/' + id + '/confirm',\n            request, true, false);\n    }\n\n    putOrganizationUser(organizationId: string, id: string, request: OrganizationUserUpdateRequest): Promise<any> {\n        return this.send('PUT', '/organizations/' + organizationId + '/users/' + id, request, true, false);\n    }\n\n    putOrganizationUserGroups(organizationId: string, id: string,\n        request: OrganizationUserUpdateGroupsRequest): Promise<any> {\n        return this.send('PUT', '/organizations/' + organizationId + '/users/' + id + '/groups', request, true, false);\n    }\n\n    deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n        return this.send('DELETE', '/organizations/' + organizationId + '/users/' + id, null, true, false);\n    }\n\n    // Sync APIs\n\n    async getSync(): Promise<SyncResponse> {\n        const path = this.isDesktopClient || this.isWebClient ? '/sync?excludeDomains=true' : '/sync';\n        const r = await this.send('GET', path, null, true, true);\n        return new SyncResponse(r);\n    }\n\n    async postImportDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/import', request, true, false);\n    }\n\n    // Settings APIs\n\n    async getSettingsDomains(): Promise<DomainsResponse> {\n        const r = await this.send('GET', '/settings/domains', null, true, true);\n        return new DomainsResponse(r);\n    }\n\n    async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n        const r = await this.send('PUT', '/settings/domains', request, true, true);\n        return new DomainsResponse(r);\n    }\n\n    // Two-factor APIs\n\n    async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n        const r = await this.send('GET', '/two-factor', null, true, true);\n        return new ListResponse(r, TwoFactorProviderResponse);\n    }\n\n    async getTwoFactorOrganizationProviders(organizationId: string): Promise<ListResponse<TwoFactorProviderResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/two-factor', null, true, true);\n        return new ListResponse(r, TwoFactorProviderResponse);\n    }\n\n    async getTwoFactorAuthenticator(request: PasswordVerificationRequest): Promise<TwoFactorAuthenticatorResponse> {\n        const r = await this.send('POST', '/two-factor/get-authenticator', request, true, true);\n        return new TwoFactorAuthenticatorResponse(r);\n    }\n\n    async getTwoFactorEmail(request: PasswordVerificationRequest): Promise<TwoFactorEmailResponse> {\n        const r = await this.send('POST', '/two-factor/get-email', request, true, true);\n        return new TwoFactorEmailResponse(r);\n    }\n\n    async getTwoFactorDuo(request: PasswordVerificationRequest): Promise<TwoFactorDuoResponse> {\n        const r = await this.send('POST', '/two-factor/get-duo', request, true, true);\n        return new TwoFactorDuoResponse(r);\n    }\n\n    async getTwoFactorOrganizationDuo(organizationId: string,\n        request: PasswordVerificationRequest): Promise<TwoFactorDuoResponse> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/two-factor/get-duo',\n            request, true, true);\n        return new TwoFactorDuoResponse(r);\n    }\n\n    async getTwoFactorYubiKey(request: PasswordVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n        const r = await this.send('POST', '/two-factor/get-yubikey', request, true, true);\n        return new TwoFactorYubiKeyResponse(r);\n    }\n\n    async getTwoFactorU2f(request: PasswordVerificationRequest): Promise<TwoFactorU2fResponse> {\n        const r = await this.send('POST', '/two-factor/get-u2f', request, true, true);\n        return new TwoFactorU2fResponse(r);\n    }\n\n    async getTwoFactorU2fChallenge(request: PasswordVerificationRequest): Promise<ChallengeResponse> {\n        const r = await this.send('POST', '/two-factor/get-u2f-challenge', request, true, true);\n        return new ChallengeResponse(r);\n    }\n\n    async getTwoFactorRecover(request: PasswordVerificationRequest): Promise<TwoFactorRecoverResponse> {\n        const r = await this.send('POST', '/two-factor/get-recover', request, true, true);\n        return new TwoFactorRecoverResponse(r);\n    }\n\n    async putTwoFactorAuthenticator(\n        request: UpdateTwoFactorAuthenticatorRequest): Promise<TwoFactorAuthenticatorResponse> {\n        const r = await this.send('PUT', '/two-factor/authenticator', request, true, true);\n        return new TwoFactorAuthenticatorResponse(r);\n    }\n\n    async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n        const r = await this.send('PUT', '/two-factor/email', request, true, true);\n        return new TwoFactorEmailResponse(r);\n    }\n\n    async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n        const r = await this.send('PUT', '/two-factor/duo', request, true, true);\n        return new TwoFactorDuoResponse(r);\n    }\n\n    async putTwoFactorOrganizationDuo(organizationId: string,\n        request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/two-factor/duo', request, true, true);\n        return new TwoFactorDuoResponse(r);\n    }\n\n    async putTwoFactorYubiKey(request: UpdateTwoFactorYubioOtpRequest): Promise<TwoFactorYubiKeyResponse> {\n        const r = await this.send('PUT', '/two-factor/yubikey', request, true, true);\n        return new TwoFactorYubiKeyResponse(r);\n    }\n\n    async putTwoFactorU2f(request: UpdateTwoFactorU2fRequest): Promise<TwoFactorU2fResponse> {\n        const r = await this.send('PUT', '/two-factor/u2f', request, true, true);\n        return new TwoFactorU2fResponse(r);\n    }\n\n    async deleteTwoFactorU2f(request: UpdateTwoFactorU2fDeleteRequest): Promise<TwoFactorU2fResponse> {\n        const r = await this.send('DELETE', '/two-factor/u2f', request, true, true);\n        return new TwoFactorU2fResponse(r);\n    }\n\n    async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n        const r = await this.send('PUT', '/two-factor/disable', request, true, true);\n        return new TwoFactorProviderResponse(r);\n    }\n\n    async putTwoFactorOrganizationDisable(organizationId: string,\n        request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/two-factor/disable',\n            request, true, true);\n        return new TwoFactorProviderResponse(r);\n    }\n\n    postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n        return this.send('POST', '/two-factor/recover', request, false, false);\n    }\n\n    postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n        return this.send('POST', '/two-factor/send-email', request, true, false);\n    }\n\n    postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n        return this.send('POST', '/two-factor/send-email-login', request, false, false);\n    }\n\n    // Organization APIs\n\n    async getOrganization(id: string): Promise<OrganizationResponse> {\n        const r = await this.send('GET', '/organizations/' + id, null, true, true);\n        return new OrganizationResponse(r);\n    }\n\n    async getOrganizationBilling(id: string): Promise<BillingResponse> {\n        const r = await this.send('GET', '/organizations/' + id + '/billing', null, true, true);\n        return new BillingResponse(r);\n    }\n\n    async getOrganizationSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n        const r = await this.send('GET', '/organizations/' + id + '/subscription', null, true, true);\n        return new OrganizationSubscriptionResponse(r);\n    }\n\n    async getOrganizationLicense(id: string, installationId: string): Promise<any> {\n        return this.send('GET', '/organizations/' + id + '/license?installationId=' + installationId,\n            null, true, true);\n    }\n\n    async postOrganization(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n        const r = await this.send('POST', '/organizations', request, true, true);\n        return new OrganizationResponse(r);\n    }\n\n    async putOrganization(id: string, request: OrganizationUpdateRequest): Promise<OrganizationResponse> {\n        const r = await this.send('PUT', '/organizations/' + id, request, true, true);\n        return new OrganizationResponse(r);\n    }\n\n    postLeaveOrganization(id: string): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/leave', null, true, false);\n    }\n\n    async postOrganizationLicense(data: FormData): Promise<OrganizationResponse> {\n        const r = await this.send('POST', '/organizations/license', data, true, true);\n        return new OrganizationResponse(r);\n    }\n\n    async postOrganizationLicenseUpdate(id: string, data: FormData): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/license', data, true, false);\n    }\n\n    async postOrganizationApiKey(id: string, request: PasswordVerificationRequest): Promise<ApiKeyResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/api-key', request, true, true);\n        return new ApiKeyResponse(r);\n    }\n\n    async postOrganizationRotateApiKey(id: string, request: PasswordVerificationRequest): Promise<ApiKeyResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/rotate-api-key', request, true, true);\n        return new ApiKeyResponse(r);\n    }\n\n    async postOrganizationUpgrade(id: string, request: OrganizationUpgradeRequest): Promise<PaymentResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/upgrade', request, true, true);\n        return new PaymentResponse(r);\n    }\n\n    async postOrganizationSeat(id: string, request: SeatRequest): Promise<PaymentResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/seat', request, true, true);\n        return new PaymentResponse(r);\n    }\n\n    async postOrganizationStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/storage', request, true, true);\n        return new PaymentResponse(r);\n    }\n\n    postOrganizationPayment(id: string, request: PaymentRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/payment', request, true, false);\n    }\n\n    postOrganizationVerifyBank(id: string, request: VerifyBankRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/verify-bank', request, true, false);\n    }\n\n    postOrganizationCancel(id: string): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/cancel', null, true, false);\n    }\n\n    postOrganizationReinstate(id: string): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/reinstate', null, true, false);\n    }\n\n    deleteOrganization(id: string, request: PasswordVerificationRequest): Promise<any> {\n        return this.send('DELETE', '/organizations/' + id, request, true, false);\n    }\n\n    // Event APIs\n\n    async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET', this.addEventParameters('/events', start, end, token), null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async getEventsCipher(id: string, start: string, end: string,\n        token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET', this.addEventParameters('/ciphers/' + id + '/events', start, end, token),\n            null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async getEventsOrganization(id: string, start: string, end: string,\n        token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET', this.addEventParameters('/organizations/' + id + '/events', start, end, token),\n            null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async getEventsOrganizationUser(organizationId: string, id: string,\n        start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET',\n            this.addEventParameters('/organizations/' + organizationId + '/users/' + id + '/events', start, end, token),\n            null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async postEventsCollect(request: EventRequest[]): Promise<any> {\n        const authHeader = await this.getActiveBearerToken();\n        const headers = new Headers({\n            'Device-Type': this.deviceType,\n            'Authorization': 'Bearer ' + authHeader,\n            'Content-Type': 'application/json; charset=utf-8',\n        });\n        const response = await this.fetch(new Request(this.eventsBaseUrl + '/collect', {\n            cache: 'no-cache',\n            credentials: this.getCredentials(),\n            method: 'POST',\n            body: JSON.stringify(request),\n            headers: headers,\n        }));\n        if (response.status !== 200) {\n            return Promise.reject('Event post failed.');\n        }\n    }\n\n    // User APIs\n\n    async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n        const r = await this.send('GET', '/users/' + id + '/public-key', null, true, true);\n        return new UserKeyResponse(r);\n    }\n\n    // HIBP APIs\n\n    async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n        const r = await this.send('GET', '/hibp/breach?username=' + username, null, true, true);\n        return r.map((a: any) => new BreachAccountResponse(a));\n    }\n\n    // Misc\n\n    async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n        const r = await this.send('POST', '/bitpay-invoice', request, true, true);\n        return r as string;\n    }\n\n    async postSetupPayment(): Promise<string> {\n        const r = await this.send('POST', '/setup-payment', null, true, true);\n        return r as string;\n    }\n\n    // Helpers\n\n    async getActiveBearerToken(): Promise<string> {\n        let accessToken = await this.tokenService.getToken();\n        if (this.tokenService.tokenNeedsRefresh()) {\n            const tokenResponse = await this.doRefreshToken();\n            accessToken = tokenResponse.accessToken;\n        }\n        return accessToken;\n    }\n\n    fetch(request: Request): Promise<Response> {\n        if (request.method === 'GET') {\n            request.headers.set('Cache-Control', 'no-cache');\n            request.headers.set('Pragma', 'no-cache');\n        }\n        return this.nativeFetch(request);\n    }\n\n    nativeFetch(request: Request): Promise<Response> {\n        return fetch(request);\n    }\n\n    private async send(method: 'GET' | 'POST' | 'PUT' | 'DELETE', path: string, body: any,\n        authed: boolean, hasResponse: boolean): Promise<any> {\n        const headers = new Headers({\n            'Device-Type': this.deviceType,\n        });\n\n        const requestInit: RequestInit = {\n            cache: 'no-cache',\n            credentials: this.getCredentials(),\n            method: method,\n        };\n\n        if (authed) {\n            const authHeader = await this.getActiveBearerToken();\n            headers.set('Authorization', 'Bearer ' + authHeader);\n        }\n        if (body != null) {\n            if (typeof body === 'string') {\n                requestInit.body = body;\n                headers.set('Content-Type', 'application/x-www-form-urlencoded; charset=utf-8');\n            } else if (typeof body === 'object') {\n                if (body instanceof FormData) {\n                    requestInit.body = body;\n                } else {\n                    headers.set('Content-Type', 'application/json; charset=utf-8');\n                    requestInit.body = JSON.stringify(body);\n                }\n            }\n        }\n        if (hasResponse) {\n            headers.set('Accept', 'application/json');\n        }\n\n        requestInit.headers = headers;\n        const response = await this.fetch(new Request(this.apiBaseUrl + path, requestInit));\n\n        if (hasResponse && response.status === 200) {\n            const responseJson = await response.json();\n            return responseJson;\n        } else if (response.status !== 200) {\n            const error = await this.handleError(response, false);\n            return Promise.reject(error);\n        }\n    }\n\n    private async handleError(response: Response, tokenError: boolean): Promise<ErrorResponse> {\n        if ((tokenError && response.status === 400) || response.status === 401 || response.status === 403) {\n            await this.logoutCallback(true);\n            return null;\n        }\n\n        let responseJson: any = null;\n        if (this.isJsonResponse(response)) {\n            responseJson = await response.json();\n        }\n\n        return new ErrorResponse(responseJson, response.status, tokenError);\n    }\n\n    private async doRefreshToken(): Promise<IdentityTokenResponse> {\n        const refreshToken = await this.tokenService.getRefreshToken();\n        if (refreshToken == null || refreshToken === '') {\n            throw new Error();\n        }\n\n        const decodedToken = this.tokenService.decodeToken();\n        const response = await this.fetch(new Request(this.identityBaseUrl + '/connect/token', {\n            body: this.qsStringify({\n                grant_type: 'refresh_token',\n                client_id: decodedToken.client_id,\n                refresh_token: refreshToken,\n            }),\n            cache: 'no-cache',\n            credentials: this.getCredentials(),\n            headers: new Headers({\n                'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',\n                'Accept': 'application/json',\n                'Device-Type': this.deviceType,\n            }),\n            method: 'POST',\n        }));\n\n        if (response.status === 200) {\n            const responseJson = await response.json();\n            const tokenResponse = new IdentityTokenResponse(responseJson);\n            await this.tokenService.setTokens(tokenResponse.accessToken, tokenResponse.refreshToken);\n            return tokenResponse;\n        } else {\n            const error = await this.handleError(response, true);\n            return Promise.reject(error);\n        }\n    }\n\n    private qsStringify(params: any): string {\n        return Object.keys(params).map((key) => {\n            return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n        }).join('&');\n    }\n\n    private getCredentials(): RequestCredentials {\n        if (this.device !== DeviceType.SafariExtension && (!this.isWebClient || this.usingBaseUrl)) {\n            return 'include';\n        }\n        return undefined;\n    }\n\n    private addEventParameters(base: string, start: string, end: string, token: string) {\n        if (start != null) {\n            base += ('?start=' + start);\n        }\n        if (end != null) {\n            base += (base.indexOf('?') > -1 ? '&' : '?');\n            base += ('end=' + end);\n        }\n        if (token != null) {\n            base += (base.indexOf('?') > -1 ? '&' : '?');\n            base += ('continuationToken=' + token);\n        }\n        return base;\n    }\n\n    private isJsonResponse(response: Response): boolean {\n        const typeHeader = response.headers.get('content-type');\n        return typeHeader != null && typeHeader.indexOf('application/json') > -1;\n    }\n}\n","import { AttachmentResponse } from './attachmentResponse';\nimport { BaseResponse } from './baseResponse';\nimport { PasswordHistoryResponse } from './passwordHistoryResponse';\n\nimport { CardApi } from '../api/cardApi';\nimport { FieldApi } from '../api/fieldApi';\nimport { IdentityApi } from '../api/identityApi';\nimport { LoginApi } from '../api/loginApi';\nimport { SecureNoteApi } from '../api/secureNoteApi';\n\nexport class CipherResponse extends BaseResponse {\n    id: string;\n    organizationId: string;\n    folderId: string;\n    type: number;\n    name: string;\n    notes: string;\n    fields: FieldApi[];\n    login: LoginApi;\n    card: CardApi;\n    identity: IdentityApi;\n    secureNote: SecureNoteApi;\n    favorite: boolean;\n    edit: boolean;\n    organizationUseTotp: boolean;\n    revisionDate: string;\n    attachments: AttachmentResponse[];\n    passwordHistory: PasswordHistoryResponse[];\n    collectionIds: string[];\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.folderId = this.getResponseProperty('FolderId') || null;\n        this.type = this.getResponseProperty('Type');\n        this.name = this.getResponseProperty('Name');\n        this.notes = this.getResponseProperty('Notes');\n        this.favorite = this.getResponseProperty('Favorite') || false;\n        this.edit = this.getResponseProperty('Edit') || true;\n        this.organizationUseTotp = this.getResponseProperty('OrganizationUseTotp');\n        this.revisionDate = this.getResponseProperty('RevisionDate');\n        this.collectionIds = this.getResponseProperty('CollectionIds');\n\n        const login = this.getResponseProperty('Login');\n        if (login != null) {\n            this.login = new LoginApi(login);\n        }\n\n        const card = this.getResponseProperty('Card');\n        if (card != null) {\n            this.card = new CardApi(card);\n        }\n\n        const identity = this.getResponseProperty('Identity');\n        if (identity != null) {\n            this.identity = new IdentityApi(identity);\n        }\n\n        const secureNote = this.getResponseProperty('SecureNote');\n        if (secureNote != null) {\n            this.secureNote = new SecureNoteApi(secureNote);\n        }\n\n        const fields = this.getResponseProperty('Fields');\n        if (fields != null) {\n            this.fields = fields.map((f: any) => new FieldApi(f));\n        }\n\n        const attachments = this.getResponseProperty('Attachments');\n        if (attachments != null) {\n            this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n        }\n\n        const passwordHistory = this.getResponseProperty('PasswordHistory');\n        if (passwordHistory != null) {\n            this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { SelectionReadOnlyResponse } from './selectionReadOnlyResponse';\n\nexport class CollectionResponse extends BaseResponse {\n    id: string;\n    organizationId: string;\n    name: string;\n    externalId: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.name = this.getResponseProperty('Name');\n        this.externalId = this.getResponseProperty('ExternalId');\n    }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n    readOnly: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.readOnly = this.getResponseProperty('ReadOnly') || false;\n    }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n    groups: SelectionReadOnlyResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        const groups = this.getResponseProperty('Groups');\n        if (groups != null) {\n            this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { GlobalDomainResponse } from './globalDomainResponse';\n\nexport class DomainsResponse extends BaseResponse {\n    equivalentDomains: string[][];\n    globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        this.equivalentDomains = this.getResponseProperty('EquivalentDomains');\n        const globalEquivalentDomains = this.getResponseProperty('GlobalEquivalentDomains');\n        if (globalEquivalentDomains != null) {\n            this.globalEquivalentDomains = globalEquivalentDomains.map((d: any) => new GlobalDomainResponse(d));\n        } else {\n            this.globalEquivalentDomains = [];\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class FolderResponse extends BaseResponse {\n    id: string;\n    name: string;\n    revisionDate: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.name = this.getResponseProperty('Name');\n        this.revisionDate = this.getResponseProperty('RevisionDate');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { PlanType } from '../../enums/planType';\n\nexport class OrganizationResponse extends BaseResponse {\n    id: string;\n    name: string;\n    businessName: string;\n    businessAddress1: string;\n    businessAddress2: string;\n    businessAddress3: string;\n    businessCountry: string;\n    businessTaxNumber: string;\n    billingEmail: string;\n    plan: string;\n    planType: PlanType;\n    seats: number;\n    maxCollections: number;\n    maxStorageGb: number;\n    useGroups: boolean;\n    useDirectory: boolean;\n    useEvents: boolean;\n    useTotp: boolean;\n    use2fa: boolean;\n    useApi: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.name = this.getResponseProperty('Name');\n        this.businessName = this.getResponseProperty('BusinessName');\n        this.businessAddress1 = this.getResponseProperty('BusinessAddress1');\n        this.businessAddress2 = this.getResponseProperty('BusinessAddress2');\n        this.businessAddress3 = this.getResponseProperty('BusinessAddress3');\n        this.businessCountry = this.getResponseProperty('BusinessCountry');\n        this.businessTaxNumber = this.getResponseProperty('BusinessTaxNumber');\n        this.billingEmail = this.getResponseProperty('BillingEmail');\n        this.plan = this.getResponseProperty('Plan');\n        this.planType = this.getResponseProperty('PlanType');\n        this.seats = this.getResponseProperty('Seats');\n        this.maxCollections = this.getResponseProperty('MaxCollections');\n        this.maxStorageGb = this.getResponseProperty('MaxStorageGb');\n        this.useGroups = this.getResponseProperty('UseGroups');\n        this.useDirectory = this.getResponseProperty('UseDirectory');\n        this.useEvents = this.getResponseProperty('UseEvents');\n        this.useTotp = this.getResponseProperty('UseTotp');\n        this.use2fa = this.getResponseProperty('Use2fa');\n        this.useApi = this.getResponseProperty('UseApi');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class SubscriptionResponse extends BaseResponse {\n    storageName: string;\n    storageGb: number;\n    maxStorageGb: number;\n    subscription: BillingSubscriptionResponse;\n    upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n    license: any;\n    expiration: string;\n\n    constructor(response: any) {\n        super(response);\n        this.storageName = this.getResponseProperty('StorageName');\n        this.storageGb = this.getResponseProperty('StorageGb');\n        this.maxStorageGb = this.getResponseProperty('MaxStorageGb');\n        this.license = this.getResponseProperty('License');\n        this.expiration = this.getResponseProperty('Expiration');\n        const subscription = this.getResponseProperty('Subscription');\n        const upcomingInvoice = this.getResponseProperty('UpcomingInvoice');\n        this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n        this.upcomingInvoice = upcomingInvoice == null ? null :\n            new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n    trialStartDate: string;\n    trialEndDate: string;\n    periodStartDate: string;\n    periodEndDate: string;\n    cancelledDate: string;\n    cancelAtEndDate: boolean;\n    status: string;\n    cancelled: boolean;\n    items: BillingSubscriptionItemResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        this.trialEndDate = this.getResponseProperty('TrialStartDate');\n        this.trialEndDate = this.getResponseProperty('TrialEndDate');\n        this.periodStartDate = this.getResponseProperty('PeriodStartDate');\n        this.periodEndDate = this.getResponseProperty('PeriodEndDate');\n        this.cancelledDate = this.getResponseProperty('CancelledDate');\n        this.cancelAtEndDate = this.getResponseProperty('CancelAtEndDate');\n        this.status = this.getResponseProperty('Status');\n        this.cancelled = this.getResponseProperty('Cancelled');\n        const items = this.getResponseProperty('Items');\n        if (items != null) {\n            this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n        }\n    }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n    name: string;\n    amount: number;\n    quantity: number;\n    interval: string;\n\n    constructor(response: any) {\n        super(response);\n        this.name = this.getResponseProperty('Name');\n        this.amount = this.getResponseProperty('Amount');\n        this.quantity = this.getResponseProperty('Quantity');\n        this.interval = this.getResponseProperty('Interval');\n    }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n    date: string;\n    amount: number;\n\n    constructor(response: any) {\n        super(response);\n        this.date = this.getResponseProperty('Date');\n        this.amount = this.getResponseProperty('Amount');\n    }\n}\n","import { Utils } from '../misc/utils';\n\nimport { AppIdService as AppIdServiceAbstraction } from '../abstractions/appId.service';\nimport { StorageService } from '../abstractions/storage.service';\n\nexport class AppIdService implements AppIdServiceAbstraction {\n    constructor(private storageService: StorageService) {\n    }\n\n    getAppId(): Promise<string> {\n        return this.makeAndGetAppId('appId');\n    }\n\n    getAnonymousAppId(): Promise<string> {\n        return this.makeAndGetAppId('anonymousAppId');\n    }\n\n    private async makeAndGetAppId(key: string) {\n        const existingId = await this.storageService.get<string>(key);\n        if (existingId != null) {\n            return existingId;\n        }\n\n        const guid = Utils.newGuid();\n        await this.storageService.save(key, guid);\n        return guid;\n    }\n}\n","import { ApiService } from '../abstractions/api.service';\nimport { AuditService as AuditServiceAbstraction } from '../abstractions/audit.service';\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\n\nimport { throttle } from '../misc/throttle';\nimport { Utils } from '../misc/utils';\n\nimport { BreachAccountResponse } from '../models/response/breachAccountResponse';\nimport { ErrorResponse } from '../models/response/errorResponse';\n\nconst PwnedPasswordsApi = 'https://api.pwnedpasswords.com/range/';\n\nexport class AuditService implements AuditServiceAbstraction {\n    constructor(private cryptoFunctionService: CryptoFunctionService, private apiService: ApiService) { }\n\n    @throttle(100, () => 'passwordLeaked')\n    async passwordLeaked(password: string): Promise<number> {\n        const hashBytes = await this.cryptoFunctionService.hash(password, 'sha1');\n        const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n        const hashStart = hash.substr(0, 5);\n        const hashEnding = hash.substr(5);\n\n        const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n        const leakedHashes = await response.text();\n        const match = leakedHashes.split(/\\r?\\n/).find((v) => {\n            return v.split(':')[0] === hashEnding;\n        });\n\n        return match != null ? parseInt(match.split(':')[1], 10) : 0;\n    }\n\n    async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n        try {\n            return await this.apiService.getHibpBreach(username);\n        } catch (e) {\n            const error = e as ErrorResponse;\n            if (error.statusCode === 404) {\n                return [];\n            }\n            throw new Error();\n        }\n    }\n}\n","import { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\nimport { UriMatchType } from '../enums/uriMatchType';\n\nimport { CipherData } from '../models/data/cipherData';\n\nimport { Attachment } from '../models/domain/attachment';\nimport { Card } from '../models/domain/card';\nimport { Cipher } from '../models/domain/cipher';\nimport { CipherString } from '../models/domain/cipherString';\nimport Domain from '../models/domain/domainBase';\nimport { Field } from '../models/domain/field';\nimport { Identity } from '../models/domain/identity';\nimport { Login } from '../models/domain/login';\nimport { LoginUri } from '../models/domain/loginUri';\nimport { Password } from '../models/domain/password';\nimport { SecureNote } from '../models/domain/secureNote';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { CipherBulkDeleteRequest } from '../models/request/cipherBulkDeleteRequest';\nimport { CipherBulkMoveRequest } from '../models/request/cipherBulkMoveRequest';\nimport { CipherBulkShareRequest } from '../models/request/cipherBulkShareRequest';\nimport { CipherCollectionsRequest } from '../models/request/cipherCollectionsRequest';\nimport { CipherCreateRequest } from '../models/request/cipherCreateRequest';\nimport { CipherRequest } from '../models/request/cipherRequest';\nimport { CipherShareRequest } from '../models/request/cipherShareRequest';\n\nimport { CipherResponse } from '../models/response/cipherResponse';\nimport { ErrorResponse } from '../models/response/errorResponse';\n\nimport { AttachmentView } from '../models/view/attachmentView';\nimport { CipherView } from '../models/view/cipherView';\nimport { FieldView } from '../models/view/fieldView';\nimport { PasswordHistoryView } from '../models/view/passwordHistoryView';\nimport { View } from '../models/view/view';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CipherService as CipherServiceAbstraction } from '../abstractions/cipher.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { SearchService } from '../abstractions/search.service';\nimport { SettingsService } from '../abstractions/settings.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { ConstantsService } from './constants.service';\n\nimport { sequentialize } from '../misc/sequentialize';\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    ciphersPrefix: 'ciphers_',\n    localData: 'sitesLocalData',\n    neverDomains: 'neverDomains',\n};\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n    ['google.com', new Set(['script.google.com'])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n    // tslint:disable-next-line\n    _decryptedCipherCache: CipherView[];\n\n    constructor(private cryptoService: CryptoService, private userService: UserService,\n        private settingsService: SettingsService, private apiService: ApiService,\n        private storageService: StorageService, private i18nService: I18nService,\n        private searchService: () => SearchService) {\n    }\n\n    get decryptedCipherCache() {\n        return this._decryptedCipherCache;\n    }\n    set decryptedCipherCache(value: CipherView[]) {\n        this._decryptedCipherCache = value;\n        if (this.searchService != null) {\n            if (value == null) {\n                this.searchService().clearIndex();\n            } else {\n                this.searchService().indexCiphers();\n            }\n        }\n    }\n\n    clearCache(): void {\n        this.decryptedCipherCache = null;\n    }\n\n    async encrypt(model: CipherView, key?: SymmetricCryptoKey, originalCipher: Cipher = null): Promise<Cipher> {\n        // Adjust password history\n        if (model.id != null) {\n            if (originalCipher == null) {\n                originalCipher = await this.get(model.id);\n            }\n            if (originalCipher != null) {\n                const existingCipher = await originalCipher.decrypt();\n                model.passwordHistory = existingCipher.passwordHistory || [];\n                if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n                    if (existingCipher.login.password != null && existingCipher.login.password !== '' &&\n                        existingCipher.login.password !== model.login.password) {\n                        const ph = new PasswordHistoryView();\n                        ph.password = existingCipher.login.password;\n                        ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n                        model.passwordHistory.splice(0, 0, ph);\n                    } else {\n                        model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n                    }\n                }\n                if (existingCipher.hasFields) {\n                    const existingHiddenFields = existingCipher.fields.filter((f) => f.type === FieldType.Hidden &&\n                        f.name != null && f.name !== '' && f.value != null && f.value !== '');\n                    const hiddenFields = model.fields == null ? [] :\n                        model.fields.filter((f) => f.type === FieldType.Hidden && f.name != null && f.name !== '');\n                    existingHiddenFields.forEach((ef) => {\n                        const matchedField = hiddenFields.find((f) => f.name === ef.name);\n                        if (matchedField == null || matchedField.value !== ef.value) {\n                            const ph = new PasswordHistoryView();\n                            ph.password = ef.name + ': ' + ef.value;\n                            ph.lastUsedDate = new Date();\n                            model.passwordHistory.splice(0, 0, ph);\n                        }\n                    });\n                }\n            }\n            if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n                model.passwordHistory = null;\n            } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n                // only save last 5 history\n                model.passwordHistory = model.passwordHistory.slice(0, 5);\n            }\n        }\n\n        const cipher = new Cipher();\n        cipher.id = model.id;\n        cipher.folderId = model.folderId;\n        cipher.favorite = model.favorite;\n        cipher.organizationId = model.organizationId;\n        cipher.type = model.type;\n        cipher.collectionIds = model.collectionIds;\n\n        if (key == null && cipher.organizationId != null) {\n            key = await this.cryptoService.getOrgKey(cipher.organizationId);\n            if (key == null) {\n                throw new Error('Cannot encrypt cipher for organization. No key.');\n            }\n        }\n        await Promise.all([\n            this.encryptObjProperty(model, cipher, {\n                name: null,\n                notes: null,\n            }, key),\n            this.encryptCipherData(cipher, model, key),\n            this.encryptFields(model.fields, key).then((fields) => {\n                cipher.fields = fields;\n            }),\n            this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\n                cipher.passwordHistory = ph;\n            }),\n            this.encryptAttachments(model.attachments, key).then((attachments) => {\n                cipher.attachments = attachments;\n            }),\n        ]);\n\n        return cipher;\n    }\n\n    async encryptAttachments(attachmentsModel: AttachmentView[], key: SymmetricCryptoKey): Promise<Attachment[]> {\n        if (attachmentsModel == null || attachmentsModel.length === 0) {\n            return null;\n        }\n\n        const promises: Array<Promise<any>> = [];\n        const encAttachments: Attachment[] = [];\n        attachmentsModel.forEach(async (model) => {\n            const attachment = new Attachment();\n            attachment.id = model.id;\n            attachment.size = model.size;\n            attachment.sizeName = model.sizeName;\n            attachment.url = model.url;\n            const promise = this.encryptObjProperty(model, attachment, {\n                fileName: null,\n            }, key).then(async () => {\n                if (model.key != null) {\n                    attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n                }\n                encAttachments.push(attachment);\n            });\n            promises.push(promise);\n        });\n\n        await Promise.all(promises);\n        return encAttachments;\n    }\n\n    async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n        if (!fieldsModel || !fieldsModel.length) {\n            return null;\n        }\n\n        const self = this;\n        const encFields: Field[] = [];\n        await fieldsModel.reduce((promise, field) => {\n            return promise.then(() => {\n                return self.encryptField(field, key);\n            }).then((encField: Field) => {\n                encFields.push(encField);\n            });\n        }, Promise.resolve());\n\n        return encFields;\n    }\n\n    async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n        const field = new Field();\n        field.type = fieldModel.type;\n        // normalize boolean type field values\n        if (fieldModel.type === FieldType.Boolean && fieldModel.value !== 'true') {\n            fieldModel.value = 'false';\n        }\n\n        await this.encryptObjProperty(fieldModel, field, {\n            name: null,\n            value: null,\n        }, key);\n\n        return field;\n    }\n\n    async encryptPasswordHistories(phModels: PasswordHistoryView[], key: SymmetricCryptoKey): Promise<Password[]> {\n        if (!phModels || !phModels.length) {\n            return null;\n        }\n\n        const self = this;\n        const encPhs: Password[] = [];\n        await phModels.reduce((promise, ph) => {\n            return promise.then(() => {\n                return self.encryptPasswordHistory(ph, key);\n            }).then((encPh: Password) => {\n                encPhs.push(encPh);\n            });\n        }, Promise.resolve());\n\n        return encPhs;\n    }\n\n    async encryptPasswordHistory(phModel: PasswordHistoryView, key: SymmetricCryptoKey): Promise<Password> {\n        const ph = new Password();\n        ph.lastUsedDate = phModel.lastUsedDate;\n\n        await this.encryptObjProperty(phModel, ph, {\n            password: null,\n        }, key);\n\n        return ph;\n    }\n\n    async get(id: string): Promise<Cipher> {\n        const userId = await this.userService.getUserId();\n        const localData = await this.storageService.get<any>(Keys.localData);\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Cipher(ciphers[id], false, localData ? localData[id] : null);\n    }\n\n    async getAll(): Promise<Cipher[]> {\n        const userId = await this.userService.getUserId();\n        const localData = await this.storageService.get<any>(Keys.localData);\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        const response: Cipher[] = [];\n        for (const id in ciphers) {\n            if (ciphers.hasOwnProperty(id)) {\n                response.push(new Cipher(ciphers[id], false, localData ? localData[id] : null));\n            }\n        }\n        return response;\n    }\n\n    @sequentialize(() => 'getAllDecrypted')\n    async getAllDecrypted(): Promise<CipherView[]> {\n        if (this.decryptedCipherCache != null) {\n            return this.decryptedCipherCache;\n        }\n\n        const decCiphers: CipherView[] = [];\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            throw new Error('No key.');\n        }\n\n        const promises: any[] = [];\n        const ciphers = await this.getAll();\n        ciphers.forEach((cipher) => {\n            promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n        });\n\n        await Promise.all(promises);\n        decCiphers.sort(this.getLocaleSortingFunction());\n        this.decryptedCipherCache = decCiphers;\n        return this.decryptedCipherCache;\n    }\n\n    async getAllDecryptedForGrouping(groupingId: string, folder: boolean = true): Promise<CipherView[]> {\n        const ciphers = await this.getAllDecrypted();\n\n        return ciphers.filter((cipher) => {\n            if (folder && cipher.folderId === groupingId) {\n                return true;\n            } else if (!folder && cipher.collectionIds != null && cipher.collectionIds.indexOf(groupingId) > -1) {\n                return true;\n            }\n\n            return false;\n        });\n    }\n\n    async getAllDecryptedForUrl(url: string, includeOtherTypes?: CipherType[]): Promise<CipherView[]> {\n        if (url == null && includeOtherTypes == null) {\n            return Promise.resolve([]);\n        }\n\n        const domain = Utils.getDomain(url);\n        const eqDomainsPromise = domain == null ? Promise.resolve([]) :\n            this.settingsService.getEquivalentDomains().then((eqDomains: any[][]) => {\n                let matches: any[] = [];\n                eqDomains.forEach((eqDomain) => {\n                    if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                        matches = matches.concat(eqDomain);\n                    }\n                });\n\n                if (!matches.length) {\n                    matches.push(domain);\n                }\n\n                return matches;\n            });\n\n        const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n        const matchingDomains = result[0];\n        const ciphers = result[1];\n\n        let defaultMatch = await this.storageService.get<UriMatchType>(ConstantsService.defaultUriMatch);\n        if (defaultMatch == null) {\n            defaultMatch = UriMatchType.Domain;\n        }\n\n        return ciphers.filter((cipher) => {\n            if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n                return true;\n            }\n\n            if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n                for (let i = 0; i < cipher.login.uris.length; i++) {\n                    const u = cipher.login.uris[i];\n                    if (u.uri == null) {\n                        continue;\n                    }\n\n                    const match = u.match == null ? defaultMatch : u.match;\n                    switch (match) {\n                        case UriMatchType.Domain:\n                            if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                                if (DomainMatchBlacklist.has(u.domain)) {\n                                    const domainUrlHost = Utils.getHost(url);\n                                    if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                                        return true;\n                                    }\n                                } else {\n                                    return true;\n                                }\n                            }\n                            break;\n                        case UriMatchType.Host:\n                            const urlHost = Utils.getHost(url);\n                            if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                                return true;\n                            }\n                            break;\n                        case UriMatchType.Exact:\n                            if (url === u.uri) {\n                                return true;\n                            }\n                            break;\n                        case UriMatchType.StartsWith:\n                            if (url.startsWith(u.uri)) {\n                                return true;\n                            }\n                            break;\n                        case UriMatchType.RegularExpression:\n                            try {\n                                const regex = new RegExp(u.uri, 'i');\n                                if (regex.test(url)) {\n                                    return true;\n                                }\n                            } catch { }\n                            break;\n                        case UriMatchType.Never:\n                        default:\n                            break;\n                    }\n                }\n            }\n\n            return false;\n        });\n    }\n\n    async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n        const ciphers = await this.apiService.getCiphersOrganization(organizationId);\n        if (ciphers != null && ciphers.data != null && ciphers.data.length) {\n            const decCiphers: CipherView[] = [];\n            const promises: any[] = [];\n            ciphers.data.forEach((r) => {\n                const data = new CipherData(r);\n                const cipher = new Cipher(data);\n                promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n            });\n            await Promise.all(promises);\n            decCiphers.sort(this.getLocaleSortingFunction());\n            return decCiphers;\n        } else {\n            return [];\n        }\n    }\n\n    async getLastUsedForUrl(url: string): Promise<CipherView> {\n        const ciphers = await this.getAllDecryptedForUrl(url);\n        if (ciphers.length === 0) {\n            return null;\n        }\n\n        const sortedCiphers = ciphers.sort(this.sortCiphersByLastUsed);\n        return sortedCiphers[0];\n    }\n\n    async updateLastUsedDate(id: string): Promise<void> {\n        let ciphersLocalData = await this.storageService.get<any>(Keys.localData);\n        if (!ciphersLocalData) {\n            ciphersLocalData = {};\n        }\n\n        if (ciphersLocalData[id]) {\n            ciphersLocalData[id].lastUsedDate = new Date().getTime();\n        } else {\n            ciphersLocalData[id] = {\n                lastUsedDate: new Date().getTime(),\n            };\n        }\n\n        await this.storageService.save(Keys.localData, ciphersLocalData);\n\n        if (this.decryptedCipherCache == null) {\n            return;\n        }\n\n        for (let i = 0; i < this.decryptedCipherCache.length; i++) {\n            const cached = this.decryptedCipherCache[i];\n            if (cached.id === id) {\n                cached.localData = ciphersLocalData[id];\n                break;\n            }\n        }\n    }\n\n    async saveNeverDomain(domain: string): Promise<void> {\n        if (domain == null) {\n            return;\n        }\n\n        let domains = await this.storageService.get<{ [id: string]: any; }>(Keys.neverDomains);\n        if (!domains) {\n            domains = {};\n        }\n        domains[domain] = null;\n        await this.storageService.save(Keys.neverDomains, domains);\n    }\n\n    async saveWithServer(cipher: Cipher): Promise<any> {\n        let response: CipherResponse;\n        if (cipher.id == null) {\n            if (cipher.collectionIds != null) {\n                const request = new CipherCreateRequest(cipher);\n                response = await this.apiService.postCipherCreate(request);\n            } else {\n                const request = new CipherRequest(cipher);\n                response = await this.apiService.postCipher(request);\n            }\n            cipher.id = response.id;\n        } else {\n            const request = new CipherRequest(cipher);\n            response = await this.apiService.putCipher(cipher.id, request);\n        }\n\n        const userId = await this.userService.getUserId();\n        const data = new CipherData(response, userId, cipher.collectionIds);\n        await this.upsert(data);\n    }\n\n    async shareWithServer(cipher: CipherView, organizationId: string, collectionIds: string[]): Promise<any> {\n        const attachmentPromises: Array<Promise<any>> = [];\n        if (cipher.attachments != null) {\n            cipher.attachments.forEach((attachment) => {\n                if (attachment.key == null) {\n                    attachmentPromises.push(this.shareAttachmentWithServer(attachment, cipher.id, organizationId));\n                }\n            });\n        }\n        await Promise.all(attachmentPromises);\n\n        cipher.organizationId = organizationId;\n        cipher.collectionIds = collectionIds;\n        const encCipher = await this.encrypt(cipher);\n        const request = new CipherShareRequest(encCipher);\n        const response = await this.apiService.putShareCipher(cipher.id, request);\n        const userId = await this.userService.getUserId();\n        const data = new CipherData(response, userId, collectionIds);\n        await this.upsert(data);\n    }\n\n    async shareManyWithServer(ciphers: CipherView[], organizationId: string, collectionIds: string[]): Promise<any> {\n        const promises: Array<Promise<any>> = [];\n        const encCiphers: Cipher[] = [];\n        for (const cipher of ciphers) {\n            cipher.organizationId = organizationId;\n            cipher.collectionIds = collectionIds;\n            promises.push(this.encrypt(cipher).then((c) => {\n                encCiphers.push(c);\n            }));\n        }\n        await Promise.all(promises);\n        const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n        await this.apiService.putShareCiphers(request);\n        const userId = await this.userService.getUserId();\n        await this.upsert(encCiphers.map((c) => c.toCipherData(userId)));\n    }\n\n    saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsArrayBuffer(unencryptedFile);\n            reader.onload = async (evt: any) => {\n                try {\n                    const cData = await this.saveAttachmentRawWithServer(cipher,\n                        unencryptedFile.name, evt.target.result, admin);\n                    resolve(cData);\n                } catch (e) {\n                    reject(e);\n                }\n            };\n            reader.onerror = (evt) => {\n                reject('Error reading file.');\n            };\n        });\n    }\n\n    async saveAttachmentRawWithServer(cipher: Cipher, filename: string,\n        data: ArrayBuffer, admin = false): Promise<Cipher> {\n        const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n        const encFileName = await this.cryptoService.encrypt(filename, key);\n\n        const dataEncKey = await this.cryptoService.makeEncKey(key);\n        const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n        const fd = new FormData();\n        try {\n            const blob = new Blob([encData], { type: 'application/octet-stream' });\n            fd.append('key', dataEncKey[1].encryptedString);\n            fd.append('data', blob, encFileName.encryptedString);\n        } catch (e) {\n            if (Utils.isNode && !Utils.isBrowser) {\n                fd.append('key', dataEncKey[1].encryptedString);\n                fd.append('data', Buffer.from(encData) as any, {\n                    filepath: encFileName.encryptedString,\n                    contentType: 'application/octet-stream',\n                } as any);\n            } else {\n                throw e;\n            }\n        }\n\n        let response: CipherResponse;\n        try {\n            if (admin) {\n                response = await this.apiService.postCipherAttachmentAdmin(cipher.id, fd);\n            } else {\n                response = await this.apiService.postCipherAttachment(cipher.id, fd);\n            }\n        } catch (e) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n        }\n\n        const userId = await this.userService.getUserId();\n        const cData = new CipherData(response, userId, cipher.collectionIds);\n        if (!admin) {\n            await this.upsert(cData);\n        }\n        return new Cipher(cData);\n    }\n\n    async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n        const request = new CipherCollectionsRequest(cipher.collectionIds);\n        await this.apiService.putCipherCollections(cipher.id, request);\n        const userId = await this.userService.getUserId();\n        const data = cipher.toCipherData(userId);\n        await this.upsert(data);\n    }\n\n    async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        let ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null) {\n            ciphers = {};\n        }\n\n        if (cipher instanceof CipherData) {\n            const c = cipher as CipherData;\n            ciphers[c.id] = c;\n        } else {\n            (cipher as CipherData[]).forEach((c) => {\n                ciphers[c.id] = c;\n            });\n        }\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async replace(ciphers: { [id: string]: CipherData; }): Promise<any> {\n        const userId = await this.userService.getUserId();\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async clear(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.ciphersPrefix + userId);\n        this.clearCache();\n    }\n\n    async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n        await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n        const userId = await this.userService.getUserId();\n        let ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null) {\n            ciphers = {};\n        }\n\n        ids.forEach((id) => {\n            if (ciphers.hasOwnProperty(id)) {\n                ciphers[id].folderId = folderId;\n            }\n        });\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async delete(id: string | string[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null) {\n            return;\n        }\n\n        if (typeof id === 'string') {\n            if (ciphers[id] == null) {\n                return;\n            }\n            delete ciphers[id];\n        } else {\n            (id as string[]).forEach((i) => {\n                delete ciphers[i];\n            });\n        }\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async deleteWithServer(id: string): Promise<any> {\n        await this.apiService.deleteCipher(id);\n        await this.delete(id);\n    }\n\n    async deleteManyWithServer(ids: string[]): Promise<any> {\n        await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n        await this.delete(ids);\n    }\n\n    async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n        const userId = await this.userService.getUserId();\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n\n        if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n            return;\n        }\n\n        for (let i = 0; i < ciphers[id].attachments.length; i++) {\n            if (ciphers[id].attachments[i].id === attachmentId) {\n                ciphers[id].attachments.splice(i, 1);\n            }\n        }\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n        try {\n            await this.apiService.deleteCipherAttachment(id, attachmentId);\n        } catch (e) {\n            return Promise.reject((e as ErrorResponse).getSingleMessage());\n        }\n        await this.deleteAttachment(id, attachmentId);\n    }\n\n    sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n        const aLastUsed = a.localData && a.localData.lastUsedDate ? a.localData.lastUsedDate as number : null;\n        const bLastUsed = b.localData && b.localData.lastUsedDate ? b.localData.lastUsedDate as number : null;\n\n        const bothNotNull = aLastUsed != null && bLastUsed != null;\n        if (bothNotNull && aLastUsed < bLastUsed) {\n            return 1;\n        }\n        if (aLastUsed != null && bLastUsed == null) {\n            return -1;\n        }\n\n        if (bothNotNull && aLastUsed > bLastUsed) {\n            return -1;\n        }\n        if (bLastUsed != null && aLastUsed == null) {\n            return 1;\n        }\n\n        return 0;\n    }\n\n    sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n        const result = this.sortCiphersByLastUsed(a, b);\n        if (result !== 0) {\n            return result;\n        }\n\n        return this.getLocaleSortingFunction()(a, b);\n    }\n\n    getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n        return (a, b) => {\n            let aName = a.name;\n            let bName = b.name;\n\n            if (aName == null && bName != null) {\n                return -1;\n            }\n            if (aName != null && bName == null) {\n                return 1;\n            }\n            if (aName == null && bName == null) {\n                return 0;\n            }\n\n            const result = this.i18nService.collator ? this.i18nService.collator.compare(aName, bName) :\n                aName.localeCompare(bName);\n\n            if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n                return result;\n            }\n\n            if (a.login.username != null) {\n                aName += a.login.username;\n            }\n\n            if (b.login.username != null) {\n                bName += b.login.username;\n            }\n\n            return this.i18nService.collator ? this.i18nService.collator.compare(aName, bName) :\n                aName.localeCompare(bName);\n        };\n    }\n\n    // Helpers\n\n    private async shareAttachmentWithServer(attachmentView: AttachmentView, cipherId: string,\n        organizationId: string): Promise<any> {\n        const attachmentResponse = await this.apiService.nativeFetch(\n            new Request(attachmentView.url, { cache: 'no-cache' }));\n        if (attachmentResponse.status !== 200) {\n            throw Error('Failed to download attachment: ' + attachmentResponse.status.toString());\n        }\n\n        const buf = await attachmentResponse.arrayBuffer();\n        const decBuf = await this.cryptoService.decryptFromBytes(buf, null);\n        const key = await this.cryptoService.getOrgKey(organizationId);\n        const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n        const dataEncKey = await this.cryptoService.makeEncKey(key);\n        const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n        const fd = new FormData();\n        try {\n            const blob = new Blob([encData], { type: 'application/octet-stream' });\n            fd.append('key', dataEncKey[1].encryptedString);\n            fd.append('data', blob, encFileName.encryptedString);\n        } catch (e) {\n            if (Utils.isNode && !Utils.isBrowser) {\n                fd.append('key', dataEncKey[1].encryptedString);\n                fd.append('data', Buffer.from(encData) as any, {\n                    filepath: encFileName.encryptedString,\n                    contentType: 'application/octet-stream',\n                } as any);\n            } else {\n                throw e;\n            }\n        }\n\n        try {\n            await this.apiService.postShareCipherAttachment(cipherId, attachmentView.id, fd, organizationId);\n        } catch (e) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n        }\n    }\n\n    private async encryptObjProperty<V extends View, D extends Domain>(model: V, obj: D,\n        map: any, key: SymmetricCryptoKey): Promise<void> {\n        const promises = [];\n        const self = this;\n\n        for (const prop in map) {\n            if (!map.hasOwnProperty(prop)) {\n                continue;\n            }\n\n            // tslint:disable-next-line\n            (function (theProp, theObj) {\n                const p = Promise.resolve().then(() => {\n                    const modelProp = (model as any)[(map[theProp] || theProp)];\n                    if (modelProp && modelProp !== '') {\n                        return self.cryptoService.encrypt(modelProp, key);\n                    }\n                    return null;\n                }).then((val: CipherString) => {\n                    (theObj as any)[theProp] = val;\n                });\n                promises.push(p);\n            })(prop, obj);\n        }\n\n        await Promise.all(promises);\n    }\n\n    private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n        switch (cipher.type) {\n            case CipherType.Login:\n                cipher.login = new Login();\n                cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n                await this.encryptObjProperty(model.login, cipher.login, {\n                    username: null,\n                    password: null,\n                    totp: null,\n                }, key);\n\n                if (model.login.uris != null) {\n                    cipher.login.uris = [];\n                    for (let i = 0; i < model.login.uris.length; i++) {\n                        const loginUri = new LoginUri();\n                        loginUri.match = model.login.uris[i].match;\n                        await this.encryptObjProperty(model.login.uris[i], loginUri, {\n                            uri: null,\n                        }, key);\n                        cipher.login.uris.push(loginUri);\n                    }\n                }\n                return;\n            case CipherType.SecureNote:\n                cipher.secureNote = new SecureNote();\n                cipher.secureNote.type = model.secureNote.type;\n                return;\n            case CipherType.Card:\n                cipher.card = new Card();\n                await this.encryptObjProperty(model.card, cipher.card, {\n                    cardholderName: null,\n                    brand: null,\n                    number: null,\n                    expMonth: null,\n                    expYear: null,\n                    code: null,\n                }, key);\n                return;\n            case CipherType.Identity:\n                cipher.identity = new Identity();\n                await this.encryptObjProperty(model.identity, cipher.identity, {\n                    title: null,\n                    firstName: null,\n                    middleName: null,\n                    lastName: null,\n                    address1: null,\n                    address2: null,\n                    address3: null,\n                    city: null,\n                    state: null,\n                    postalCode: null,\n                    country: null,\n                    company: null,\n                    email: null,\n                    phone: null,\n                    ssn: null,\n                    username: null,\n                    passportNumber: null,\n                    licenseNumber: null,\n                }, key);\n                return;\n            default:\n                throw new Error('Unknown cipher type.');\n        }\n    }\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n    return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n        const originalMethod: () => Promise<any> = descriptor.value;\n        const caches = new Map<any, Map<string, Promise<any>>>();\n\n        const getCache = (obj: any) => {\n            let cache = caches.get(obj);\n            if (cache != null) {\n                return cache;\n            }\n            cache = new Map<string, Promise<any>>();\n            caches.set(obj, cache);\n            return cache;\n        };\n\n        return {\n            value: function(...args: any[]) {\n                const cache = getCache(this);\n                const argsCacheKey = cacheKey(args);\n                let response = cache.get(argsCacheKey);\n                if (response != null) {\n                    return response;\n                }\n\n                const onFinally = () => {\n                    cache.delete(argsCacheKey);\n                    if (cache.size === 0) {\n                        caches.delete(this);\n                    }\n                };\n                response = originalMethod.apply(this, args).then((val: any) => {\n                    onFinally();\n                    return val;\n                }).catch((err: any) => {\n                    onFinally();\n                    throw err;\n                });\n\n                cache.set(argsCacheKey, response);\n                return response;\n            },\n        };\n    };\n}\n","import { CollectionData } from '../models/data/collectionData';\n\nimport { Collection } from '../models/domain/collection';\nimport { TreeNode } from '../models/domain/treeNode';\n\nimport { CollectionView } from '../models/view/collectionView';\n\nimport { CollectionService as CollectionServiceAbstraction } from '../abstractions/collection.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { ServiceUtils } from '../misc/serviceUtils';\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    collectionsPrefix: 'collections_',\n};\nconst NestingDelimiter = '/';\n\nexport class CollectionService implements CollectionServiceAbstraction {\n    decryptedCollectionCache: CollectionView[];\n\n    constructor(private cryptoService: CryptoService, private userService: UserService,\n        private storageService: StorageService, private i18nService: I18nService) {\n    }\n\n    clearCache(): void {\n        this.decryptedCollectionCache = null;\n    }\n\n    async encrypt(model: CollectionView): Promise<Collection> {\n        if (model.organizationId == null) {\n            throw new Error('Collection has no organization id.');\n        }\n        const key = await this.cryptoService.getOrgKey(model.organizationId);\n        if (key == null) {\n            throw new Error('No key for this collection\\'s organization.');\n        }\n        const collection = new Collection();\n        collection.id = model.id;\n        collection.organizationId = model.organizationId;\n        collection.readOnly = model.readOnly;\n        collection.name = await this.cryptoService.encrypt(model.name, key);\n        return collection;\n    }\n\n    async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n        if (collections == null) {\n            return [];\n        }\n        const decCollections: CollectionView[] = [];\n        const promises: Array<Promise<any>> = [];\n        collections.forEach((collection) => {\n            promises.push(collection.decrypt().then((c) => decCollections.push(c)));\n        });\n        await Promise.all(promises);\n        return decCollections.sort(Utils.getSortFunction(this.i18nService, 'name'));\n    }\n\n    async get(id: string): Promise<Collection> {\n        const userId = await this.userService.getUserId();\n        const collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\n            Keys.collectionsPrefix + userId);\n        if (collections == null || !collections.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Collection(collections[id]);\n    }\n\n    async getAll(): Promise<Collection[]> {\n        const userId = await this.userService.getUserId();\n        const collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\n            Keys.collectionsPrefix + userId);\n        const response: Collection[] = [];\n        for (const id in collections) {\n            if (collections.hasOwnProperty(id)) {\n                response.push(new Collection(collections[id]));\n            }\n        }\n        return response;\n    }\n\n    async getAllDecrypted(): Promise<CollectionView[]> {\n        if (this.decryptedCollectionCache != null) {\n            return this.decryptedCollectionCache;\n        }\n\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            throw new Error('No key.');\n        }\n\n        const collections = await this.getAll();\n        this.decryptedCollectionCache = await this.decryptMany(collections);\n        return this.decryptedCollectionCache;\n    }\n\n    async getAllNested(collections: CollectionView[] = null): Promise<Array<TreeNode<CollectionView>>> {\n        if (collections == null) {\n            collections = await this.getAllDecrypted();\n        }\n        const nodes: Array<TreeNode<CollectionView>> = [];\n        collections.forEach((c) => {\n            const collectionCopy = new CollectionView();\n            collectionCopy.id = c.id;\n            collectionCopy.organizationId = c.organizationId;\n            const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, '').split(NestingDelimiter) : [];\n            ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n        });\n        return nodes;\n    }\n\n    async getNested(id: string): Promise<TreeNode<CollectionView>> {\n        const collections = await this.getAllNested();\n        return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\n    }\n\n    async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        let collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\n            Keys.collectionsPrefix + userId);\n        if (collections == null) {\n            collections = {};\n        }\n\n        if (collection instanceof CollectionData) {\n            const c = collection as CollectionData;\n            collections[c.id] = c;\n        } else {\n            (collection as CollectionData[]).forEach((c) => {\n                collections[c.id] = c;\n            });\n        }\n\n        await this.storageService.save(Keys.collectionsPrefix + userId, collections);\n        this.decryptedCollectionCache = null;\n    }\n\n    async replace(collections: { [id: string]: CollectionData; }): Promise<any> {\n        const userId = await this.userService.getUserId();\n        await this.storageService.save(Keys.collectionsPrefix + userId, collections);\n        this.decryptedCollectionCache = null;\n    }\n\n    async clear(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.collectionsPrefix + userId);\n        this.decryptedCollectionCache = null;\n    }\n\n    async delete(id: string | string[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        const collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\n            Keys.collectionsPrefix + userId);\n        if (collections == null) {\n            return;\n        }\n\n        if (typeof id === 'string') {\n            const i = id as string;\n            delete collections[id];\n        } else {\n            (id as string[]).forEach((i) => {\n                delete collections[i];\n            });\n        }\n\n        await this.storageService.save(Keys.collectionsPrefix + userId, collections);\n        this.decryptedCollectionCache = null;\n    }\n}\n","import {\n    ITreeNodeObject,\n    TreeNode,\n} from '../models/domain/treeNode';\n\nexport class ServiceUtils {\n    static nestedTraverse(nodeTree: Array<TreeNode<ITreeNodeObject>>, partIndex: number, parts: string[],\n        obj: ITreeNodeObject, parent: ITreeNodeObject, delimiter: string) {\n        if (parts.length <= partIndex) {\n            return;\n        }\n\n        const end = partIndex === parts.length - 1;\n        const partName = parts[partIndex];\n\n        for (let i = 0; i < nodeTree.length; i++) {\n            if (nodeTree[i].node.name !== parts[partIndex]) {\n                continue;\n            }\n            if (end && nodeTree[i].node.id !== obj.id) {\n                // Another node with the same name.\n                nodeTree.push(new TreeNode(obj, partName, parent));\n                return;\n            }\n            ServiceUtils.nestedTraverse(nodeTree[i].children, partIndex + 1, parts,\n                obj, nodeTree[i].node, delimiter);\n            return;\n        }\n\n        if (nodeTree.filter((n) => n.node.name === partName).length === 0) {\n            if (end) {\n                nodeTree.push(new TreeNode(obj, partName, parent));\n                return;\n            }\n            const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\n            ServiceUtils.nestedTraverse(nodeTree, 0, [newPartName, ...parts.slice(partIndex + 2)],\n                obj, parent, delimiter);\n        }\n    }\n\n    static getTreeNodeObject(nodeTree: Array<TreeNode<ITreeNodeObject>>, id: string): TreeNode<ITreeNodeObject> {\n        for (let i = 0; i < nodeTree.length; i++) {\n            if (nodeTree[i].node.id === id) {\n                return nodeTree[i];\n            } else if (nodeTree[i].children != null) {\n                const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\n                if (node !== null) {\n                    return node;\n                }\n            }\n        }\n        return null;\n    }\n}\n","import { CryptoService } from '../abstractions/crypto.service';\n\nexport class ContainerService {\n    constructor(private cryptoService: CryptoService) {\n    }\n\n    // deprecated, use attachToGlobal instead\n    attachToWindow(win: any) {\n        this.attachToGlobal(win);\n    }\n\n    attachToGlobal(global: any) {\n        if (!global.bitwardenContainerService) {\n            global.bitwardenContainerService = this;\n        }\n    }\n\n    getCryptoService(): CryptoService {\n        return this.cryptoService;\n    }\n}\n","import * as bigInt from 'big-integer';\n\nimport { EncryptionType } from '../enums/encryptionType';\nimport { KdfType } from '../enums/kdfType';\n\nimport { CipherString } from '../models/domain/cipherString';\nimport { EncryptedObject } from '../models/domain/encryptedObject';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\nimport { ProfileOrganizationResponse } from '../models/response/profileOrganizationResponse';\n\nimport { CryptoService as CryptoServiceAbstraction } from '../abstractions/crypto.service';\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\nimport { StorageService } from '../abstractions/storage.service';\n\nimport { ConstantsService } from './constants.service';\n\nimport { sequentialize } from '../misc/sequentialize';\nimport { Utils } from '../misc/utils';\nimport { EEFLongWordList } from '../misc/wordlist';\n\nconst Keys = {\n    key: 'key',\n    encOrgKeys: 'encOrgKeys',\n    encPrivateKey: 'encPrivateKey',\n    encKey: 'encKey',\n    keyHash: 'keyHash',\n};\n\nexport class CryptoService implements CryptoServiceAbstraction {\n    private key: SymmetricCryptoKey;\n    private encKey: SymmetricCryptoKey;\n    private legacyEtmKey: SymmetricCryptoKey;\n    private keyHash: string;\n    private publicKey: ArrayBuffer;\n    private privateKey: ArrayBuffer;\n    private orgKeys: Map<string, SymmetricCryptoKey>;\n\n    constructor(private storageService: StorageService, private secureStorageService: StorageService,\n        private cryptoFunctionService: CryptoFunctionService) { }\n\n    async setKey(key: SymmetricCryptoKey): Promise<any> {\n        this.key = key;\n\n        const option = await this.storageService.get<number>(ConstantsService.lockOptionKey);\n        if (option != null) {\n            // if we have a lock option set, we do not store the key\n            return;\n        }\n\n        return this.secureStorageService.save(Keys.key, key.keyB64);\n    }\n\n    setKeyHash(keyHash: string): Promise<{}> {\n        this.keyHash = keyHash;\n        return this.storageService.save(Keys.keyHash, keyHash);\n    }\n\n    async setEncKey(encKey: string): Promise<{}> {\n        if (encKey == null) {\n            return;\n        }\n\n        await this.storageService.save(Keys.encKey, encKey);\n        this.encKey = null;\n    }\n\n    async setEncPrivateKey(encPrivateKey: string): Promise<{}> {\n        if (encPrivateKey == null) {\n            return;\n        }\n\n        await this.storageService.save(Keys.encPrivateKey, encPrivateKey);\n        this.privateKey = null;\n    }\n\n    setOrgKeys(orgs: ProfileOrganizationResponse[]): Promise<{}> {\n        const orgKeys: any = {};\n        orgs.forEach((org) => {\n            orgKeys[org.id] = org.key;\n        });\n\n        this.orgKeys = null;\n        return this.storageService.save(Keys.encOrgKeys, orgKeys);\n    }\n\n    async getKey(): Promise<SymmetricCryptoKey> {\n        if (this.key != null) {\n            return this.key;\n        }\n\n        const key = await this.secureStorageService.get<string>(Keys.key);\n        if (key != null) {\n            this.key = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n        }\n\n        return key == null ? null : this.key;\n    }\n\n    async getKeyHash(): Promise<string> {\n        if (this.keyHash != null) {\n            return this.keyHash;\n        }\n\n        const keyHash = await this.storageService.get<string>(Keys.keyHash);\n        if (keyHash != null) {\n            this.keyHash = keyHash;\n        }\n\n        return keyHash == null ? null : this.keyHash;\n    }\n\n    @sequentialize(() => 'getEncKey')\n    async getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n        if (this.encKey != null) {\n            return this.encKey;\n        }\n\n        const encKey = await this.storageService.get<string>(Keys.encKey);\n        if (encKey == null) {\n            return null;\n        }\n\n        if (key == null) {\n            key = await this.getKey();\n        }\n        if (key == null) {\n            return null;\n        }\n\n        let decEncKey: ArrayBuffer;\n        const encKeyCipher = new CipherString(encKey);\n        if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n            decEncKey = await this.decryptToBytes(encKeyCipher, key);\n        } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n            const newKey = await this.stretchKey(key);\n            decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n        } else {\n            throw new Error('Unsupported encKey type.');\n        }\n\n        if (decEncKey == null) {\n            return null;\n        }\n        this.encKey = new SymmetricCryptoKey(decEncKey);\n        return this.encKey;\n    }\n\n    async getPublicKey(): Promise<ArrayBuffer> {\n        if (this.publicKey != null) {\n            return this.publicKey;\n        }\n\n        const privateKey = await this.getPrivateKey();\n        if (privateKey == null) {\n            return null;\n        }\n\n        this.publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n        return this.publicKey;\n    }\n\n    async getPrivateKey(): Promise<ArrayBuffer> {\n        if (this.privateKey != null) {\n            return this.privateKey;\n        }\n\n        const encPrivateKey = await this.storageService.get<string>(Keys.encPrivateKey);\n        if (encPrivateKey == null) {\n            return null;\n        }\n\n        this.privateKey = await this.decryptToBytes(new CipherString(encPrivateKey), null);\n        return this.privateKey;\n    }\n\n    async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n        if (publicKey == null) {\n            publicKey = await this.getPublicKey();\n        }\n        if (publicKey === null) {\n            throw new Error('No public key available.');\n        }\n        const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, 'sha256');\n        const userFingerprint = await this.hkdfExpand(keyFingerprint, Utils.fromUtf8ToArray(userId), 32);\n        return this.hashPhrase(userFingerprint.buffer);\n    }\n\n    @sequentialize(() => 'getOrgKeys')\n    async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n        if (this.orgKeys != null && this.orgKeys.size > 0) {\n            return this.orgKeys;\n        }\n\n        const encOrgKeys = await this.storageService.get<any>(Keys.encOrgKeys);\n        if (encOrgKeys == null) {\n            return null;\n        }\n\n        const orgKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n        let setKey = false;\n\n        for (const orgId in encOrgKeys) {\n            if (!encOrgKeys.hasOwnProperty(orgId)) {\n                continue;\n            }\n\n            const decValue = await this.rsaDecrypt(encOrgKeys[orgId]);\n            orgKeys.set(orgId, new SymmetricCryptoKey(decValue));\n            setKey = true;\n        }\n\n        if (setKey) {\n            this.orgKeys = orgKeys;\n        }\n\n        return this.orgKeys;\n    }\n\n    async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n        if (orgId == null) {\n            return null;\n        }\n\n        const orgKeys = await this.getOrgKeys();\n        if (orgKeys == null || !orgKeys.has(orgId)) {\n            return null;\n        }\n\n        return orgKeys.get(orgId);\n    }\n\n    async hasKey(): Promise<boolean> {\n        return (await this.getKey()) != null;\n    }\n\n    async hasEncKey(): Promise<boolean> {\n        const encKey = await this.storageService.get<string>(Keys.encKey);\n        return encKey != null;\n    }\n\n    clearKey(): Promise<any> {\n        this.key = this.legacyEtmKey = null;\n        return this.secureStorageService.remove(Keys.key);\n    }\n\n    clearKeyHash(): Promise<any> {\n        this.keyHash = null;\n        return this.storageService.remove(Keys.keyHash);\n    }\n\n    clearEncKey(memoryOnly?: boolean): Promise<any> {\n        this.encKey = null;\n        if (memoryOnly) {\n            return Promise.resolve();\n        }\n        return this.storageService.remove(Keys.encKey);\n    }\n\n    clearKeyPair(memoryOnly?: boolean): Promise<any> {\n        this.privateKey = null;\n        this.publicKey = null;\n        if (memoryOnly) {\n            return Promise.resolve();\n        }\n        return this.storageService.remove(Keys.encPrivateKey);\n    }\n\n    clearOrgKeys(memoryOnly?: boolean): Promise<any> {\n        this.orgKeys = null;\n        if (memoryOnly) {\n            return Promise.resolve();\n        }\n        return this.storageService.remove(Keys.encOrgKeys);\n    }\n\n    clearPinProtectedKey(): Promise<any> {\n        return this.storageService.remove(ConstantsService.pinProtectedKey);\n    }\n\n    clearKeys(): Promise<any> {\n        return Promise.all([\n            this.clearKey(),\n            this.clearKeyHash(),\n            this.clearOrgKeys(),\n            this.clearEncKey(),\n            this.clearKeyPair(),\n            this.clearPinProtectedKey(),\n        ]);\n    }\n\n    async toggleKey(): Promise<any> {\n        const key = await this.getKey();\n        const option = await this.storageService.get(ConstantsService.lockOptionKey);\n        if (option != null || option === 0) {\n            // if we have a lock option set, clear the key\n            await this.clearKey();\n            this.key = key;\n            return;\n        }\n\n        await this.setKey(key);\n    }\n\n    async makeKey(password: string, salt: string, kdf: KdfType, kdfIterations: number):\n        Promise<SymmetricCryptoKey> {\n        let key: ArrayBuffer = null;\n        if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n            if (kdfIterations == null) {\n                kdfIterations = 5000;\n            } else if (kdfIterations < 5000) {\n                throw new Error('PBKDF2 iteration minimum is 5000.');\n            }\n            key = await this.cryptoFunctionService.pbkdf2(password, salt, 'sha256', kdfIterations);\n        } else {\n            throw new Error('Unknown Kdf.');\n        }\n        return new SymmetricCryptoKey(key);\n    }\n\n    async makeKeyFromPin(pin: string, salt: string, kdf: KdfType, kdfIterations: number,\n        protectedKeyCs: CipherString = null):\n        Promise<SymmetricCryptoKey> {\n        if (protectedKeyCs == null) {\n            const pinProtectedKey = await this.storageService.get<string>(ConstantsService.pinProtectedKey);\n            if (pinProtectedKey == null) {\n                throw new Error('No PIN protected key found.');\n            }\n            protectedKeyCs = new CipherString(pinProtectedKey);\n        }\n        const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n        const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n        return new SymmetricCryptoKey(decKey);\n    }\n\n    async makeShareKey(): Promise<[CipherString, SymmetricCryptoKey]> {\n        const shareKey = await this.cryptoFunctionService.randomBytes(64);\n        const publicKey = await this.getPublicKey();\n        const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n        return [encShareKey, new SymmetricCryptoKey(shareKey)];\n    }\n\n    async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, CipherString]> {\n        const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n        const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n        const privateEnc = await this.encrypt(keyPair[1], key);\n        return [publicB64, privateEnc];\n    }\n\n    async makePinKey(pin: string, salt: string, kdf: KdfType, kdfIterations: number): Promise<SymmetricCryptoKey> {\n        const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n        return await this.stretchKey(pinKey);\n    }\n\n    async hashPassword(password: string, key: SymmetricCryptoKey): Promise<string> {\n        if (key == null) {\n            key = await this.getKey();\n        }\n        if (password == null || key == null) {\n            throw new Error('Invalid parameters.');\n        }\n\n        const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, 'sha256', 1);\n        return Utils.fromBufferToB64(hash);\n    }\n\n    async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, CipherString]> {\n        const theKey = await this.getKeyForEncryption(key);\n        const encKey = await this.cryptoFunctionService.randomBytes(64);\n        return this.buildEncKey(theKey, encKey);\n    }\n\n    async remakeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, CipherString]> {\n        const encKey = await this.getEncKey();\n        return this.buildEncKey(key, encKey.key);\n    }\n\n    async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<CipherString> {\n        if (plainValue == null) {\n            return Promise.resolve(null);\n        }\n\n        let plainBuf: ArrayBuffer;\n        if (typeof (plainValue) === 'string') {\n            plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n        } else {\n            plainBuf = plainValue;\n        }\n\n        const encObj = await this.aesEncrypt(plainBuf, key);\n        const iv = Utils.fromBufferToB64(encObj.iv);\n        const data = Utils.fromBufferToB64(encObj.data);\n        const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n        return new CipherString(encObj.key.encType, data, iv, mac);\n    }\n\n    async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n        const encValue = await this.aesEncrypt(plainValue, key);\n        let macLen = 0;\n        if (encValue.mac != null) {\n            macLen = encValue.mac.byteLength;\n        }\n\n        const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n        encBytes.set([encValue.key.encType]);\n        encBytes.set(new Uint8Array(encValue.iv), 1);\n        if (encValue.mac != null) {\n            encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n        }\n\n        encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n        return encBytes.buffer;\n    }\n\n    async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<CipherString> {\n        if (publicKey == null) {\n            publicKey = await this.getPublicKey();\n        }\n        if (publicKey == null) {\n            throw new Error('Public key unavailable.');\n        }\n\n        const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, 'sha1');\n        return new CipherString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n    }\n\n    async decryptToBytes(cipherString: CipherString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n        const iv = Utils.fromB64ToArray(cipherString.iv).buffer;\n        const data = Utils.fromB64ToArray(cipherString.data).buffer;\n        const mac = cipherString.mac ? Utils.fromB64ToArray(cipherString.mac).buffer : null;\n        const decipher = await this.aesDecryptToBytes(cipherString.encryptionType, data, iv, mac, key);\n        if (decipher == null) {\n            return null;\n        }\n\n        return decipher;\n    }\n\n    async decryptToUtf8(cipherString: CipherString, key?: SymmetricCryptoKey): Promise<string> {\n        return await this.aesDecryptToUtf8(cipherString.encryptionType, cipherString.data,\n            cipherString.iv, cipherString.mac, key);\n    }\n\n    async decryptFromBytes(encBuf: ArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n        if (encBuf == null) {\n            throw new Error('no encBuf.');\n        }\n\n        const encBytes = new Uint8Array(encBuf);\n        const encType = encBytes[0];\n        let ctBytes: Uint8Array = null;\n        let ivBytes: Uint8Array = null;\n        let macBytes: Uint8Array = null;\n\n        switch (encType) {\n            case EncryptionType.AesCbc128_HmacSha256_B64:\n            case EncryptionType.AesCbc256_HmacSha256_B64:\n                if (encBytes.length <= 49) { // 1 + 16 + 32 + ctLength\n                    return null;\n                }\n\n                ivBytes = encBytes.slice(1, 17);\n                macBytes = encBytes.slice(17, 49);\n                ctBytes = encBytes.slice(49);\n                break;\n            case EncryptionType.AesCbc256_B64:\n                if (encBytes.length <= 17) { // 1 + 16 + ctLength\n                    return null;\n                }\n\n                ivBytes = encBytes.slice(1, 17);\n                ctBytes = encBytes.slice(17);\n                break;\n            default:\n                return null;\n        }\n\n        return await this.aesDecryptToBytes(encType, ctBytes.buffer, ivBytes.buffer,\n            macBytes != null ? macBytes.buffer : null, key);\n    }\n\n    // EFForg/OpenWireless\n    // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n    async randomNumber(min: number, max: number): Promise<number> {\n        let rval = 0;\n        const range = max - min + 1;\n        const bitsNeeded = Math.ceil(Math.log2(range));\n        if (bitsNeeded > 53) {\n            throw new Error('We cannot generate numbers larger than 53 bits.');\n        }\n\n        const bytesNeeded = Math.ceil(bitsNeeded / 8);\n        const mask = Math.pow(2, bitsNeeded) - 1;\n        // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n        // Fill a byte array with N random numbers\n        const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n        let p = (bytesNeeded - 1) * 8;\n        for (let i = 0; i < bytesNeeded; i++) {\n            rval += byteArray[i] * Math.pow(2, p);\n            p -= 8;\n        }\n\n        // Use & to apply the mask and reduce the number of recursive lookups\n        // tslint:disable-next-line\n        rval = rval & mask;\n\n        if (rval >= range) {\n            // Integer out of acceptable range\n            return this.randomNumber(min, max);\n        }\n\n        // Return an integer that falls within the range\n        return min + rval;\n    }\n\n    // Helpers\n\n    private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n        const obj = new EncryptedObject();\n        obj.key = await this.getKeyForEncryption(key);\n        obj.iv = await this.cryptoFunctionService.randomBytes(16);\n        obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n        if (obj.key.macKey != null) {\n            const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n            macData.set(new Uint8Array(obj.iv), 0);\n            macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n            obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, 'sha256');\n        }\n\n        return obj;\n    }\n\n    private async aesDecryptToUtf8(encType: EncryptionType, data: string, iv: string, mac: string,\n        key: SymmetricCryptoKey): Promise<string> {\n        const keyForEnc = await this.getKeyForEncryption(key);\n        const theKey = this.resolveLegacyKey(encType, keyForEnc);\n\n        if (theKey.macKey != null && mac == null) {\n            // tslint:disable-next-line\n            console.error('mac required.');\n            return null;\n        }\n\n        if (theKey.encType !== encType) {\n            // tslint:disable-next-line\n            console.error('encType unavailable.');\n            return null;\n        }\n\n        const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(data, iv, mac, theKey);\n        if (fastParams.macKey != null && fastParams.mac != null) {\n            const computedMac = await this.cryptoFunctionService.hmacFast(fastParams.macData,\n                fastParams.macKey, 'sha256');\n            const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n            if (!macsEqual) {\n                // tslint:disable-next-line\n                console.error('mac failed.');\n                return null;\n            }\n        }\n\n        return this.cryptoFunctionService.aesDecryptFast(fastParams);\n    }\n\n    private async aesDecryptToBytes(encType: EncryptionType, data: ArrayBuffer, iv: ArrayBuffer,\n        mac: ArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n        const keyForEnc = await this.getKeyForEncryption(key);\n        const theKey = this.resolveLegacyKey(encType, keyForEnc);\n\n        if (theKey.macKey != null && mac == null) {\n            return null;\n        }\n\n        if (theKey.encType !== encType) {\n            return null;\n        }\n\n        if (theKey.macKey != null && mac != null) {\n            const macData = new Uint8Array(iv.byteLength + data.byteLength);\n            macData.set(new Uint8Array(iv), 0);\n            macData.set(new Uint8Array(data), iv.byteLength);\n            const computedMac = await this.cryptoFunctionService.hmac(macData.buffer, theKey.macKey, 'sha256');\n            if (computedMac === null) {\n                return null;\n            }\n\n            const macsMatch = await this.cryptoFunctionService.compare(mac, computedMac);\n            if (!macsMatch) {\n                // tslint:disable-next-line\n                console.error('mac failed.');\n                return null;\n            }\n        }\n\n        return await this.cryptoFunctionService.aesDecrypt(data, iv, theKey.encKey);\n    }\n\n    private async rsaDecrypt(encValue: string): Promise<ArrayBuffer> {\n        const headerPieces = encValue.split('.');\n        let encType: EncryptionType = null;\n        let encPieces: string[];\n\n        if (headerPieces.length === 1) {\n            encType = EncryptionType.Rsa2048_OaepSha256_B64;\n            encPieces = [headerPieces[0]];\n        } else if (headerPieces.length === 2) {\n            try {\n                encType = parseInt(headerPieces[0], null);\n                encPieces = headerPieces[1].split('|');\n            } catch (e) { }\n        }\n\n        switch (encType) {\n            case EncryptionType.Rsa2048_OaepSha256_B64:\n            case EncryptionType.Rsa2048_OaepSha1_B64:\n            // HmacSha256 types are deprecated\n            case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n            case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n                break;\n            default:\n                throw new Error('encType unavailable.');\n        }\n\n        if (encPieces == null || encPieces.length <= 0) {\n            throw new Error('encPieces unavailable.');\n        }\n\n        const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n        const privateKey = await this.getPrivateKey();\n        if (privateKey == null) {\n            throw new Error('No private key.');\n        }\n\n        let alg: 'sha1' | 'sha256' = 'sha1';\n        switch (encType) {\n            case EncryptionType.Rsa2048_OaepSha256_B64:\n            case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n                alg = 'sha256';\n                break;\n            case EncryptionType.Rsa2048_OaepSha1_B64:\n            case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n                break;\n            default:\n                throw new Error('encType unavailable.');\n        }\n\n        return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n    }\n\n    private async getKeyForEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n        if (key != null) {\n            return key;\n        }\n\n        const encKey = await this.getEncKey();\n        if (encKey != null) {\n            return encKey;\n        }\n\n        return await this.getKey();\n    }\n\n    private resolveLegacyKey(encType: EncryptionType, key: SymmetricCryptoKey): SymmetricCryptoKey {\n        if (encType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n            key.encType === EncryptionType.AesCbc256_B64) {\n            // Old encrypt-then-mac scheme, make a new key\n            if (this.legacyEtmKey == null) {\n                this.legacyEtmKey = new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n            }\n            return this.legacyEtmKey;\n        }\n\n        return key;\n    }\n\n    private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n        const newKey = new Uint8Array(64);\n        newKey.set(await this.hkdfExpand(key.key, Utils.fromUtf8ToArray('enc'), 32));\n        newKey.set(await this.hkdfExpand(key.key, Utils.fromUtf8ToArray('mac'), 32), 32);\n        return new SymmetricCryptoKey(newKey.buffer);\n    }\n\n    // ref: https://tools.ietf.org/html/rfc5869\n    private async hkdfExpand(prk: ArrayBuffer, info: Uint8Array, size: number) {\n        const hashLen = 32; // sha256\n        const okm = new Uint8Array(size);\n        let previousT = new Uint8Array(0);\n        const n = Math.ceil(size / hashLen);\n        for (let i = 0; i < n; i++) {\n            const t = new Uint8Array(previousT.length + info.length + 1);\n            t.set(previousT);\n            t.set(info, previousT.length);\n            t.set([i + 1], t.length - 1);\n            previousT = new Uint8Array(await this.cryptoFunctionService.hmac(t.buffer, prk, 'sha256'));\n            okm.set(previousT, i * hashLen);\n        }\n        return okm;\n    }\n\n    private async hashPhrase(hash: ArrayBuffer, minimumEntropy: number = 64) {\n        const entropyPerWord = Math.log(EEFLongWordList.length) / Math.log(2);\n        let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n        const hashArr = Array.from(new Uint8Array(hash));\n        const entropyAvailable = hashArr.length * 4;\n        if (numWords * entropyPerWord > entropyAvailable) {\n            throw new Error('Output entropy of hash function is too small');\n        }\n\n        const phrase: string[] = [];\n        let hashNumber = bigInt.fromArray(hashArr, 256);\n        while (numWords--) {\n            const remainder = hashNumber.mod(EEFLongWordList.length);\n            hashNumber = hashNumber.divide(EEFLongWordList.length);\n            phrase.push(EEFLongWordList[remainder as any]);\n        }\n        return phrase;\n    }\n\n    private async buildEncKey(key: SymmetricCryptoKey, encKey: ArrayBuffer)\n        : Promise<[SymmetricCryptoKey, CipherString]> {\n        let encKeyEnc: CipherString = null;\n        if (key.key.byteLength === 32) {\n            const newKey = await this.stretchKey(key);\n            encKeyEnc = await this.encrypt(encKey, newKey);\n        } else if (key.key.byteLength === 64) {\n            encKeyEnc = await this.encrypt(encKey, key);\n        } else {\n            throw new Error('Invalid key size.');\n        }\n        return [new SymmetricCryptoKey(encKey), encKeyEnc];\n    }\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EEFLongWordList = [\n    'abacus',\n    'abdomen',\n    'abdominal',\n    'abide',\n    'abiding',\n    'ability',\n    'ablaze',\n    'able',\n    'abnormal',\n    'abrasion',\n    'abrasive',\n    'abreast',\n    'abridge',\n    'abroad',\n    'abruptly',\n    'absence',\n    'absentee',\n    'absently',\n    'absinthe',\n    'absolute',\n    'absolve',\n    'abstain',\n    'abstract',\n    'absurd',\n    'accent',\n    'acclaim',\n    'acclimate',\n    'accompany',\n    'account',\n    'accuracy',\n    'accurate',\n    'accustom',\n    'acetone',\n    'achiness',\n    'aching',\n    'acid',\n    'acorn',\n    'acquaint',\n    'acquire',\n    'acre',\n    'acrobat',\n    'acronym',\n    'acting',\n    'action',\n    'activate',\n    'activator',\n    'active',\n    'activism',\n    'activist',\n    'activity',\n    'actress',\n    'acts',\n    'acutely',\n    'acuteness',\n    'aeration',\n    'aerobics',\n    'aerosol',\n    'aerospace',\n    'afar',\n    'affair',\n    'affected',\n    'affecting',\n    'affection',\n    'affidavit',\n    'affiliate',\n    'affirm',\n    'affix',\n    'afflicted',\n    'affluent',\n    'afford',\n    'affront',\n    'aflame',\n    'afloat',\n    'aflutter',\n    'afoot',\n    'afraid',\n    'afterglow',\n    'afterlife',\n    'aftermath',\n    'aftermost',\n    'afternoon',\n    'aged',\n    'ageless',\n    'agency',\n    'agenda',\n    'agent',\n    'aggregate',\n    'aghast',\n    'agile',\n    'agility',\n    'aging',\n    'agnostic',\n    'agonize',\n    'agonizing',\n    'agony',\n    'agreeable',\n    'agreeably',\n    'agreed',\n    'agreeing',\n    'agreement',\n    'aground',\n    'ahead',\n    'ahoy',\n    'aide',\n    'aids',\n    'aim',\n    'ajar',\n    'alabaster',\n    'alarm',\n    'albatross',\n    'album',\n    'alfalfa',\n    'algebra',\n    'algorithm',\n    'alias',\n    'alibi',\n    'alienable',\n    'alienate',\n    'aliens',\n    'alike',\n    'alive',\n    'alkaline',\n    'alkalize',\n    'almanac',\n    'almighty',\n    'almost',\n    'aloe',\n    'aloft',\n    'aloha',\n    'alone',\n    'alongside',\n    'aloof',\n    'alphabet',\n    'alright',\n    'although',\n    'altitude',\n    'alto',\n    'aluminum',\n    'alumni',\n    'always',\n    'amaretto',\n    'amaze',\n    'amazingly',\n    'amber',\n    'ambiance',\n    'ambiguity',\n    'ambiguous',\n    'ambition',\n    'ambitious',\n    'ambulance',\n    'ambush',\n    'amendable',\n    'amendment',\n    'amends',\n    'amenity',\n    'amiable',\n    'amicably',\n    'amid',\n    'amigo',\n    'amino',\n    'amiss',\n    'ammonia',\n    'ammonium',\n    'amnesty',\n    'amniotic',\n    'among',\n    'amount',\n    'amperage',\n    'ample',\n    'amplifier',\n    'amplify',\n    'amply',\n    'amuck',\n    'amulet',\n    'amusable',\n    'amused',\n    'amusement',\n    'amuser',\n    'amusing',\n    'anaconda',\n    'anaerobic',\n    'anagram',\n    'anatomist',\n    'anatomy',\n    'anchor',\n    'anchovy',\n    'ancient',\n    'android',\n    'anemia',\n    'anemic',\n    'aneurism',\n    'anew',\n    'angelfish',\n    'angelic',\n    'anger',\n    'angled',\n    'angler',\n    'angles',\n    'angling',\n    'angrily',\n    'angriness',\n    'anguished',\n    'angular',\n    'animal',\n    'animate',\n    'animating',\n    'animation',\n    'animator',\n    'anime',\n    'animosity',\n    'ankle',\n    'annex',\n    'annotate',\n    'announcer',\n    'annoying',\n    'annually',\n    'annuity',\n    'anointer',\n    'another',\n    'answering',\n    'antacid',\n    'antarctic',\n    'anteater',\n    'antelope',\n    'antennae',\n    'anthem',\n    'anthill',\n    'anthology',\n    'antibody',\n    'antics',\n    'antidote',\n    'antihero',\n    'antiquely',\n    'antiques',\n    'antiquity',\n    'antirust',\n    'antitoxic',\n    'antitrust',\n    'antiviral',\n    'antivirus',\n    'antler',\n    'antonym',\n    'antsy',\n    'anvil',\n    'anybody',\n    'anyhow',\n    'anymore',\n    'anyone',\n    'anyplace',\n    'anything',\n    'anytime',\n    'anyway',\n    'anywhere',\n    'aorta',\n    'apache',\n    'apostle',\n    'appealing',\n    'appear',\n    'appease',\n    'appeasing',\n    'appendage',\n    'appendix',\n    'appetite',\n    'appetizer',\n    'applaud',\n    'applause',\n    'apple',\n    'appliance',\n    'applicant',\n    'applied',\n    'apply',\n    'appointee',\n    'appraisal',\n    'appraiser',\n    'apprehend',\n    'approach',\n    'approval',\n    'approve',\n    'apricot',\n    'april',\n    'apron',\n    'aptitude',\n    'aptly',\n    'aqua',\n    'aqueduct',\n    'arbitrary',\n    'arbitrate',\n    'ardently',\n    'area',\n    'arena',\n    'arguable',\n    'arguably',\n    'argue',\n    'arise',\n    'armadillo',\n    'armband',\n    'armchair',\n    'armed',\n    'armful',\n    'armhole',\n    'arming',\n    'armless',\n    'armoire',\n    'armored',\n    'armory',\n    'armrest',\n    'army',\n    'aroma',\n    'arose',\n    'around',\n    'arousal',\n    'arrange',\n    'array',\n    'arrest',\n    'arrival',\n    'arrive',\n    'arrogance',\n    'arrogant',\n    'arson',\n    'art',\n    'ascend',\n    'ascension',\n    'ascent',\n    'ascertain',\n    'ashamed',\n    'ashen',\n    'ashes',\n    'ashy',\n    'aside',\n    'askew',\n    'asleep',\n    'asparagus',\n    'aspect',\n    'aspirate',\n    'aspire',\n    'aspirin',\n    'astonish',\n    'astound',\n    'astride',\n    'astrology',\n    'astronaut',\n    'astronomy',\n    'astute',\n    'atlantic',\n    'atlas',\n    'atom',\n    'atonable',\n    'atop',\n    'atrium',\n    'atrocious',\n    'atrophy',\n    'attach',\n    'attain',\n    'attempt',\n    'attendant',\n    'attendee',\n    'attention',\n    'attentive',\n    'attest',\n    'attic',\n    'attire',\n    'attitude',\n    'attractor',\n    'attribute',\n    'atypical',\n    'auction',\n    'audacious',\n    'audacity',\n    'audible',\n    'audibly',\n    'audience',\n    'audio',\n    'audition',\n    'augmented',\n    'august',\n    'authentic',\n    'author',\n    'autism',\n    'autistic',\n    'autograph',\n    'automaker',\n    'automated',\n    'automatic',\n    'autopilot',\n    'available',\n    'avalanche',\n    'avatar',\n    'avenge',\n    'avenging',\n    'avenue',\n    'average',\n    'aversion',\n    'avert',\n    'aviation',\n    'aviator',\n    'avid',\n    'avoid',\n    'await',\n    'awaken',\n    'award',\n    'aware',\n    'awhile',\n    'awkward',\n    'awning',\n    'awoke',\n    'awry',\n    'axis',\n    'babble',\n    'babbling',\n    'babied',\n    'baboon',\n    'backache',\n    'backboard',\n    'backboned',\n    'backdrop',\n    'backed',\n    'backer',\n    'backfield',\n    'backfire',\n    'backhand',\n    'backing',\n    'backlands',\n    'backlash',\n    'backless',\n    'backlight',\n    'backlit',\n    'backlog',\n    'backpack',\n    'backpedal',\n    'backrest',\n    'backroom',\n    'backshift',\n    'backside',\n    'backslid',\n    'backspace',\n    'backspin',\n    'backstab',\n    'backstage',\n    'backtalk',\n    'backtrack',\n    'backup',\n    'backward',\n    'backwash',\n    'backwater',\n    'backyard',\n    'bacon',\n    'bacteria',\n    'bacterium',\n    'badass',\n    'badge',\n    'badland',\n    'badly',\n    'badness',\n    'baffle',\n    'baffling',\n    'bagel',\n    'bagful',\n    'baggage',\n    'bagged',\n    'baggie',\n    'bagginess',\n    'bagging',\n    'baggy',\n    'bagpipe',\n    'baguette',\n    'baked',\n    'bakery',\n    'bakeshop',\n    'baking',\n    'balance',\n    'balancing',\n    'balcony',\n    'balmy',\n    'balsamic',\n    'bamboo',\n    'banana',\n    'banish',\n    'banister',\n    'banjo',\n    'bankable',\n    'bankbook',\n    'banked',\n    'banker',\n    'banking',\n    'banknote',\n    'bankroll',\n    'banner',\n    'bannister',\n    'banshee',\n    'banter',\n    'barbecue',\n    'barbed',\n    'barbell',\n    'barber',\n    'barcode',\n    'barge',\n    'bargraph',\n    'barista',\n    'baritone',\n    'barley',\n    'barmaid',\n    'barman',\n    'barn',\n    'barometer',\n    'barrack',\n    'barracuda',\n    'barrel',\n    'barrette',\n    'barricade',\n    'barrier',\n    'barstool',\n    'bartender',\n    'barterer',\n    'bash',\n    'basically',\n    'basics',\n    'basil',\n    'basin',\n    'basis',\n    'basket',\n    'batboy',\n    'batch',\n    'bath',\n    'baton',\n    'bats',\n    'battalion',\n    'battered',\n    'battering',\n    'battery',\n    'batting',\n    'battle',\n    'bauble',\n    'bazooka',\n    'blabber',\n    'bladder',\n    'blade',\n    'blah',\n    'blame',\n    'blaming',\n    'blanching',\n    'blandness',\n    'blank',\n    'blaspheme',\n    'blasphemy',\n    'blast',\n    'blatancy',\n    'blatantly',\n    'blazer',\n    'blazing',\n    'bleach',\n    'bleak',\n    'bleep',\n    'blemish',\n    'blend',\n    'bless',\n    'blighted',\n    'blimp',\n    'bling',\n    'blinked',\n    'blinker',\n    'blinking',\n    'blinks',\n    'blip',\n    'blissful',\n    'blitz',\n    'blizzard',\n    'bloated',\n    'bloating',\n    'blob',\n    'blog',\n    'bloomers',\n    'blooming',\n    'blooper',\n    'blot',\n    'blouse',\n    'blubber',\n    'bluff',\n    'bluish',\n    'blunderer',\n    'blunt',\n    'blurb',\n    'blurred',\n    'blurry',\n    'blurt',\n    'blush',\n    'blustery',\n    'boaster',\n    'boastful',\n    'boasting',\n    'boat',\n    'bobbed',\n    'bobbing',\n    'bobble',\n    'bobcat',\n    'bobsled',\n    'bobtail',\n    'bodacious',\n    'body',\n    'bogged',\n    'boggle',\n    'bogus',\n    'boil',\n    'bok',\n    'bolster',\n    'bolt',\n    'bonanza',\n    'bonded',\n    'bonding',\n    'bondless',\n    'boned',\n    'bonehead',\n    'boneless',\n    'bonelike',\n    'boney',\n    'bonfire',\n    'bonnet',\n    'bonsai',\n    'bonus',\n    'bony',\n    'boogeyman',\n    'boogieman',\n    'book',\n    'boondocks',\n    'booted',\n    'booth',\n    'bootie',\n    'booting',\n    'bootlace',\n    'bootleg',\n    'boots',\n    'boozy',\n    'borax',\n    'boring',\n    'borough',\n    'borrower',\n    'borrowing',\n    'boss',\n    'botanical',\n    'botanist',\n    'botany',\n    'botch',\n    'both',\n    'bottle',\n    'bottling',\n    'bottom',\n    'bounce',\n    'bouncing',\n    'bouncy',\n    'bounding',\n    'boundless',\n    'bountiful',\n    'bovine',\n    'boxcar',\n    'boxer',\n    'boxing',\n    'boxlike',\n    'boxy',\n    'breach',\n    'breath',\n    'breeches',\n    'breeching',\n    'breeder',\n    'breeding',\n    'breeze',\n    'breezy',\n    'brethren',\n    'brewery',\n    'brewing',\n    'briar',\n    'bribe',\n    'brick',\n    'bride',\n    'bridged',\n    'brigade',\n    'bright',\n    'brilliant',\n    'brim',\n    'bring',\n    'brink',\n    'brisket',\n    'briskly',\n    'briskness',\n    'bristle',\n    'brittle',\n    'broadband',\n    'broadcast',\n    'broaden',\n    'broadly',\n    'broadness',\n    'broadside',\n    'broadways',\n    'broiler',\n    'broiling',\n    'broken',\n    'broker',\n    'bronchial',\n    'bronco',\n    'bronze',\n    'bronzing',\n    'brook',\n    'broom',\n    'brought',\n    'browbeat',\n    'brownnose',\n    'browse',\n    'browsing',\n    'bruising',\n    'brunch',\n    'brunette',\n    'brunt',\n    'brush',\n    'brussels',\n    'brute',\n    'brutishly',\n    'bubble',\n    'bubbling',\n    'bubbly',\n    'buccaneer',\n    'bucked',\n    'bucket',\n    'buckle',\n    'buckshot',\n    'buckskin',\n    'bucktooth',\n    'buckwheat',\n    'buddhism',\n    'buddhist',\n    'budding',\n    'buddy',\n    'budget',\n    'buffalo',\n    'buffed',\n    'buffer',\n    'buffing',\n    'buffoon',\n    'buggy',\n    'bulb',\n    'bulge',\n    'bulginess',\n    'bulgur',\n    'bulk',\n    'bulldog',\n    'bulldozer',\n    'bullfight',\n    'bullfrog',\n    'bullhorn',\n    'bullion',\n    'bullish',\n    'bullpen',\n    'bullring',\n    'bullseye',\n    'bullwhip',\n    'bully',\n    'bunch',\n    'bundle',\n    'bungee',\n    'bunion',\n    'bunkbed',\n    'bunkhouse',\n    'bunkmate',\n    'bunny',\n    'bunt',\n    'busboy',\n    'bush',\n    'busily',\n    'busload',\n    'bust',\n    'busybody',\n    'buzz',\n    'cabana',\n    'cabbage',\n    'cabbie',\n    'cabdriver',\n    'cable',\n    'caboose',\n    'cache',\n    'cackle',\n    'cacti',\n    'cactus',\n    'caddie',\n    'caddy',\n    'cadet',\n    'cadillac',\n    'cadmium',\n    'cage',\n    'cahoots',\n    'cake',\n    'calamari',\n    'calamity',\n    'calcium',\n    'calculate',\n    'calculus',\n    'caliber',\n    'calibrate',\n    'calm',\n    'caloric',\n    'calorie',\n    'calzone',\n    'camcorder',\n    'cameo',\n    'camera',\n    'camisole',\n    'camper',\n    'campfire',\n    'camping',\n    'campsite',\n    'campus',\n    'canal',\n    'canary',\n    'cancel',\n    'candied',\n    'candle',\n    'candy',\n    'cane',\n    'canine',\n    'canister',\n    'cannabis',\n    'canned',\n    'canning',\n    'cannon',\n    'cannot',\n    'canola',\n    'canon',\n    'canopener',\n    'canopy',\n    'canteen',\n    'canyon',\n    'capable',\n    'capably',\n    'capacity',\n    'cape',\n    'capillary',\n    'capital',\n    'capitol',\n    'capped',\n    'capricorn',\n    'capsize',\n    'capsule',\n    'caption',\n    'captivate',\n    'captive',\n    'captivity',\n    'capture',\n    'caramel',\n    'carat',\n    'caravan',\n    'carbon',\n    'cardboard',\n    'carded',\n    'cardiac',\n    'cardigan',\n    'cardinal',\n    'cardstock',\n    'carefully',\n    'caregiver',\n    'careless',\n    'caress',\n    'caretaker',\n    'cargo',\n    'caring',\n    'carless',\n    'carload',\n    'carmaker',\n    'carnage',\n    'carnation',\n    'carnival',\n    'carnivore',\n    'carol',\n    'carpenter',\n    'carpentry',\n    'carpool',\n    'carport',\n    'carried',\n    'carrot',\n    'carrousel',\n    'carry',\n    'cartel',\n    'cartload',\n    'carton',\n    'cartoon',\n    'cartridge',\n    'cartwheel',\n    'carve',\n    'carving',\n    'carwash',\n    'cascade',\n    'case',\n    'cash',\n    'casing',\n    'casino',\n    'casket',\n    'cassette',\n    'casually',\n    'casualty',\n    'catacomb',\n    'catalog',\n    'catalyst',\n    'catalyze',\n    'catapult',\n    'cataract',\n    'catatonic',\n    'catcall',\n    'catchable',\n    'catcher',\n    'catching',\n    'catchy',\n    'caterer',\n    'catering',\n    'catfight',\n    'catfish',\n    'cathedral',\n    'cathouse',\n    'catlike',\n    'catnap',\n    'catnip',\n    'catsup',\n    'cattail',\n    'cattishly',\n    'cattle',\n    'catty',\n    'catwalk',\n    'caucasian',\n    'caucus',\n    'causal',\n    'causation',\n    'cause',\n    'causing',\n    'cauterize',\n    'caution',\n    'cautious',\n    'cavalier',\n    'cavalry',\n    'caviar',\n    'cavity',\n    'cedar',\n    'celery',\n    'celestial',\n    'celibacy',\n    'celibate',\n    'celtic',\n    'cement',\n    'census',\n    'ceramics',\n    'ceremony',\n    'certainly',\n    'certainty',\n    'certified',\n    'certify',\n    'cesarean',\n    'cesspool',\n    'chafe',\n    'chaffing',\n    'chain',\n    'chair',\n    'chalice',\n    'challenge',\n    'chamber',\n    'chamomile',\n    'champion',\n    'chance',\n    'change',\n    'channel',\n    'chant',\n    'chaos',\n    'chaperone',\n    'chaplain',\n    'chapped',\n    'chaps',\n    'chapter',\n    'character',\n    'charbroil',\n    'charcoal',\n    'charger',\n    'charging',\n    'chariot',\n    'charity',\n    'charm',\n    'charred',\n    'charter',\n    'charting',\n    'chase',\n    'chasing',\n    'chaste',\n    'chastise',\n    'chastity',\n    'chatroom',\n    'chatter',\n    'chatting',\n    'chatty',\n    'cheating',\n    'cheddar',\n    'cheek',\n    'cheer',\n    'cheese',\n    'cheesy',\n    'chef',\n    'chemicals',\n    'chemist',\n    'chemo',\n    'cherisher',\n    'cherub',\n    'chess',\n    'chest',\n    'chevron',\n    'chevy',\n    'chewable',\n    'chewer',\n    'chewing',\n    'chewy',\n    'chief',\n    'chihuahua',\n    'childcare',\n    'childhood',\n    'childish',\n    'childless',\n    'childlike',\n    'chili',\n    'chill',\n    'chimp',\n    'chip',\n    'chirping',\n    'chirpy',\n    'chitchat',\n    'chivalry',\n    'chive',\n    'chloride',\n    'chlorine',\n    'choice',\n    'chokehold',\n    'choking',\n    'chomp',\n    'chooser',\n    'choosing',\n    'choosy',\n    'chop',\n    'chosen',\n    'chowder',\n    'chowtime',\n    'chrome',\n    'chubby',\n    'chuck',\n    'chug',\n    'chummy',\n    'chump',\n    'chunk',\n    'churn',\n    'chute',\n    'cider',\n    'cilantro',\n    'cinch',\n    'cinema',\n    'cinnamon',\n    'circle',\n    'circling',\n    'circular',\n    'circulate',\n    'circus',\n    'citable',\n    'citadel',\n    'citation',\n    'citizen',\n    'citric',\n    'citrus',\n    'city',\n    'civic',\n    'civil',\n    'clad',\n    'claim',\n    'clambake',\n    'clammy',\n    'clamor',\n    'clamp',\n    'clamshell',\n    'clang',\n    'clanking',\n    'clapped',\n    'clapper',\n    'clapping',\n    'clarify',\n    'clarinet',\n    'clarity',\n    'clash',\n    'clasp',\n    'class',\n    'clatter',\n    'clause',\n    'clavicle',\n    'claw',\n    'clay',\n    'clean',\n    'clear',\n    'cleat',\n    'cleaver',\n    'cleft',\n    'clench',\n    'clergyman',\n    'clerical',\n    'clerk',\n    'clever',\n    'clicker',\n    'client',\n    'climate',\n    'climatic',\n    'cling',\n    'clinic',\n    'clinking',\n    'clip',\n    'clique',\n    'cloak',\n    'clobber',\n    'clock',\n    'clone',\n    'cloning',\n    'closable',\n    'closure',\n    'clothes',\n    'clothing',\n    'cloud',\n    'clover',\n    'clubbed',\n    'clubbing',\n    'clubhouse',\n    'clump',\n    'clumsily',\n    'clumsy',\n    'clunky',\n    'clustered',\n    'clutch',\n    'clutter',\n    'coach',\n    'coagulant',\n    'coastal',\n    'coaster',\n    'coasting',\n    'coastland',\n    'coastline',\n    'coat',\n    'coauthor',\n    'cobalt',\n    'cobbler',\n    'cobweb',\n    'cocoa',\n    'coconut',\n    'cod',\n    'coeditor',\n    'coerce',\n    'coexist',\n    'coffee',\n    'cofounder',\n    'cognition',\n    'cognitive',\n    'cogwheel',\n    'coherence',\n    'coherent',\n    'cohesive',\n    'coil',\n    'coke',\n    'cola',\n    'cold',\n    'coleslaw',\n    'coliseum',\n    'collage',\n    'collapse',\n    'collar',\n    'collected',\n    'collector',\n    'collide',\n    'collie',\n    'collision',\n    'colonial',\n    'colonist',\n    'colonize',\n    'colony',\n    'colossal',\n    'colt',\n    'coma',\n    'come',\n    'comfort',\n    'comfy',\n    'comic',\n    'coming',\n    'comma',\n    'commence',\n    'commend',\n    'comment',\n    'commerce',\n    'commode',\n    'commodity',\n    'commodore',\n    'common',\n    'commotion',\n    'commute',\n    'commuting',\n    'compacted',\n    'compacter',\n    'compactly',\n    'compactor',\n    'companion',\n    'company',\n    'compare',\n    'compel',\n    'compile',\n    'comply',\n    'component',\n    'composed',\n    'composer',\n    'composite',\n    'compost',\n    'composure',\n    'compound',\n    'compress',\n    'comprised',\n    'computer',\n    'computing',\n    'comrade',\n    'concave',\n    'conceal',\n    'conceded',\n    'concept',\n    'concerned',\n    'concert',\n    'conch',\n    'concierge',\n    'concise',\n    'conclude',\n    'concrete',\n    'concur',\n    'condense',\n    'condiment',\n    'condition',\n    'condone',\n    'conducive',\n    'conductor',\n    'conduit',\n    'cone',\n    'confess',\n    'confetti',\n    'confidant',\n    'confident',\n    'confider',\n    'confiding',\n    'configure',\n    'confined',\n    'confining',\n    'confirm',\n    'conflict',\n    'conform',\n    'confound',\n    'confront',\n    'confused',\n    'confusing',\n    'confusion',\n    'congenial',\n    'congested',\n    'congrats',\n    'congress',\n    'conical',\n    'conjoined',\n    'conjure',\n    'conjuror',\n    'connected',\n    'connector',\n    'consensus',\n    'consent',\n    'console',\n    'consoling',\n    'consonant',\n    'constable',\n    'constant',\n    'constrain',\n    'constrict',\n    'construct',\n    'consult',\n    'consumer',\n    'consuming',\n    'contact',\n    'container',\n    'contempt',\n    'contend',\n    'contented',\n    'contently',\n    'contents',\n    'contest',\n    'context',\n    'contort',\n    'contour',\n    'contrite',\n    'control',\n    'contusion',\n    'convene',\n    'convent',\n    'copartner',\n    'cope',\n    'copied',\n    'copier',\n    'copilot',\n    'coping',\n    'copious',\n    'copper',\n    'copy',\n    'coral',\n    'cork',\n    'cornball',\n    'cornbread',\n    'corncob',\n    'cornea',\n    'corned',\n    'corner',\n    'cornfield',\n    'cornflake',\n    'cornhusk',\n    'cornmeal',\n    'cornstalk',\n    'corny',\n    'coronary',\n    'coroner',\n    'corporal',\n    'corporate',\n    'corral',\n    'correct',\n    'corridor',\n    'corrode',\n    'corroding',\n    'corrosive',\n    'corsage',\n    'corset',\n    'cortex',\n    'cosigner',\n    'cosmetics',\n    'cosmic',\n    'cosmos',\n    'cosponsor',\n    'cost',\n    'cottage',\n    'cotton',\n    'couch',\n    'cough',\n    'could',\n    'countable',\n    'countdown',\n    'counting',\n    'countless',\n    'country',\n    'county',\n    'courier',\n    'covenant',\n    'cover',\n    'coveted',\n    'coveting',\n    'coyness',\n    'cozily',\n    'coziness',\n    'cozy',\n    'crabbing',\n    'crabgrass',\n    'crablike',\n    'crabmeat',\n    'cradle',\n    'cradling',\n    'crafter',\n    'craftily',\n    'craftsman',\n    'craftwork',\n    'crafty',\n    'cramp',\n    'cranberry',\n    'crane',\n    'cranial',\n    'cranium',\n    'crank',\n    'crate',\n    'crave',\n    'craving',\n    'crawfish',\n    'crawlers',\n    'crawling',\n    'crayfish',\n    'crayon',\n    'crazed',\n    'crazily',\n    'craziness',\n    'crazy',\n    'creamed',\n    'creamer',\n    'creamlike',\n    'crease',\n    'creasing',\n    'creatable',\n    'create',\n    'creation',\n    'creative',\n    'creature',\n    'credible',\n    'credibly',\n    'credit',\n    'creed',\n    'creme',\n    'creole',\n    'crepe',\n    'crept',\n    'crescent',\n    'crested',\n    'cresting',\n    'crestless',\n    'crevice',\n    'crewless',\n    'crewman',\n    'crewmate',\n    'crib',\n    'cricket',\n    'cried',\n    'crier',\n    'crimp',\n    'crimson',\n    'cringe',\n    'cringing',\n    'crinkle',\n    'crinkly',\n    'crisped',\n    'crisping',\n    'crisply',\n    'crispness',\n    'crispy',\n    'criteria',\n    'critter',\n    'croak',\n    'crock',\n    'crook',\n    'croon',\n    'crop',\n    'cross',\n    'crouch',\n    'crouton',\n    'crowbar',\n    'crowd',\n    'crown',\n    'crucial',\n    'crudely',\n    'crudeness',\n    'cruelly',\n    'cruelness',\n    'cruelty',\n    'crumb',\n    'crummiest',\n    'crummy',\n    'crumpet',\n    'crumpled',\n    'cruncher',\n    'crunching',\n    'crunchy',\n    'crusader',\n    'crushable',\n    'crushed',\n    'crusher',\n    'crushing',\n    'crust',\n    'crux',\n    'crying',\n    'cryptic',\n    'crystal',\n    'cubbyhole',\n    'cube',\n    'cubical',\n    'cubicle',\n    'cucumber',\n    'cuddle',\n    'cuddly',\n    'cufflink',\n    'culinary',\n    'culminate',\n    'culpable',\n    'culprit',\n    'cultivate',\n    'cultural',\n    'culture',\n    'cupbearer',\n    'cupcake',\n    'cupid',\n    'cupped',\n    'cupping',\n    'curable',\n    'curator',\n    'curdle',\n    'cure',\n    'curfew',\n    'curing',\n    'curled',\n    'curler',\n    'curliness',\n    'curling',\n    'curly',\n    'curry',\n    'curse',\n    'cursive',\n    'cursor',\n    'curtain',\n    'curtly',\n    'curtsy',\n    'curvature',\n    'curve',\n    'curvy',\n    'cushy',\n    'cusp',\n    'cussed',\n    'custard',\n    'custodian',\n    'custody',\n    'customary',\n    'customer',\n    'customize',\n    'customs',\n    'cut',\n    'cycle',\n    'cyclic',\n    'cycling',\n    'cyclist',\n    'cylinder',\n    'cymbal',\n    'cytoplasm',\n    'cytoplast',\n    'dab',\n    'dad',\n    'daffodil',\n    'dagger',\n    'daily',\n    'daintily',\n    'dainty',\n    'dairy',\n    'daisy',\n    'dallying',\n    'dance',\n    'dancing',\n    'dandelion',\n    'dander',\n    'dandruff',\n    'dandy',\n    'danger',\n    'dangle',\n    'dangling',\n    'daredevil',\n    'dares',\n    'daringly',\n    'darkened',\n    'darkening',\n    'darkish',\n    'darkness',\n    'darkroom',\n    'darling',\n    'darn',\n    'dart',\n    'darwinism',\n    'dash',\n    'dastardly',\n    'data',\n    'datebook',\n    'dating',\n    'daughter',\n    'daunting',\n    'dawdler',\n    'dawn',\n    'daybed',\n    'daybreak',\n    'daycare',\n    'daydream',\n    'daylight',\n    'daylong',\n    'dayroom',\n    'daytime',\n    'dazzler',\n    'dazzling',\n    'deacon',\n    'deafening',\n    'deafness',\n    'dealer',\n    'dealing',\n    'dealmaker',\n    'dealt',\n    'dean',\n    'debatable',\n    'debate',\n    'debating',\n    'debit',\n    'debrief',\n    'debtless',\n    'debtor',\n    'debug',\n    'debunk',\n    'decade',\n    'decaf',\n    'decal',\n    'decathlon',\n    'decay',\n    'deceased',\n    'deceit',\n    'deceiver',\n    'deceiving',\n    'december',\n    'decency',\n    'decent',\n    'deception',\n    'deceptive',\n    'decibel',\n    'decidable',\n    'decimal',\n    'decimeter',\n    'decipher',\n    'deck',\n    'declared',\n    'decline',\n    'decode',\n    'decompose',\n    'decorated',\n    'decorator',\n    'decoy',\n    'decrease',\n    'decree',\n    'dedicate',\n    'dedicator',\n    'deduce',\n    'deduct',\n    'deed',\n    'deem',\n    'deepen',\n    'deeply',\n    'deepness',\n    'deface',\n    'defacing',\n    'defame',\n    'default',\n    'defeat',\n    'defection',\n    'defective',\n    'defendant',\n    'defender',\n    'defense',\n    'defensive',\n    'deferral',\n    'deferred',\n    'defiance',\n    'defiant',\n    'defile',\n    'defiling',\n    'define',\n    'definite',\n    'deflate',\n    'deflation',\n    'deflator',\n    'deflected',\n    'deflector',\n    'defog',\n    'deforest',\n    'defraud',\n    'defrost',\n    'deftly',\n    'defuse',\n    'defy',\n    'degraded',\n    'degrading',\n    'degrease',\n    'degree',\n    'dehydrate',\n    'deity',\n    'dejected',\n    'delay',\n    'delegate',\n    'delegator',\n    'delete',\n    'deletion',\n    'delicacy',\n    'delicate',\n    'delicious',\n    'delighted',\n    'delirious',\n    'delirium',\n    'deliverer',\n    'delivery',\n    'delouse',\n    'delta',\n    'deluge',\n    'delusion',\n    'deluxe',\n    'demanding',\n    'demeaning',\n    'demeanor',\n    'demise',\n    'democracy',\n    'democrat',\n    'demote',\n    'demotion',\n    'demystify',\n    'denatured',\n    'deniable',\n    'denial',\n    'denim',\n    'denote',\n    'dense',\n    'density',\n    'dental',\n    'dentist',\n    'denture',\n    'deny',\n    'deodorant',\n    'deodorize',\n    'departed',\n    'departure',\n    'depict',\n    'deplete',\n    'depletion',\n    'deplored',\n    'deploy',\n    'deport',\n    'depose',\n    'depraved',\n    'depravity',\n    'deprecate',\n    'depress',\n    'deprive',\n    'depth',\n    'deputize',\n    'deputy',\n    'derail',\n    'deranged',\n    'derby',\n    'derived',\n    'desecrate',\n    'deserve',\n    'deserving',\n    'designate',\n    'designed',\n    'designer',\n    'designing',\n    'deskbound',\n    'desktop',\n    'deskwork',\n    'desolate',\n    'despair',\n    'despise',\n    'despite',\n    'destiny',\n    'destitute',\n    'destruct',\n    'detached',\n    'detail',\n    'detection',\n    'detective',\n    'detector',\n    'detention',\n    'detergent',\n    'detest',\n    'detonate',\n    'detonator',\n    'detoxify',\n    'detract',\n    'deuce',\n    'devalue',\n    'deviancy',\n    'deviant',\n    'deviate',\n    'deviation',\n    'deviator',\n    'device',\n    'devious',\n    'devotedly',\n    'devotee',\n    'devotion',\n    'devourer',\n    'devouring',\n    'devoutly',\n    'dexterity',\n    'dexterous',\n    'diabetes',\n    'diabetic',\n    'diabolic',\n    'diagnoses',\n    'diagnosis',\n    'diagram',\n    'dial',\n    'diameter',\n    'diaper',\n    'diaphragm',\n    'diary',\n    'dice',\n    'dicing',\n    'dictate',\n    'dictation',\n    'dictator',\n    'difficult',\n    'diffused',\n    'diffuser',\n    'diffusion',\n    'diffusive',\n    'dig',\n    'dilation',\n    'diligence',\n    'diligent',\n    'dill',\n    'dilute',\n    'dime',\n    'diminish',\n    'dimly',\n    'dimmed',\n    'dimmer',\n    'dimness',\n    'dimple',\n    'diner',\n    'dingbat',\n    'dinghy',\n    'dinginess',\n    'dingo',\n    'dingy',\n    'dining',\n    'dinner',\n    'diocese',\n    'dioxide',\n    'diploma',\n    'dipped',\n    'dipper',\n    'dipping',\n    'directed',\n    'direction',\n    'directive',\n    'directly',\n    'directory',\n    'direness',\n    'dirtiness',\n    'disabled',\n    'disagree',\n    'disallow',\n    'disarm',\n    'disarray',\n    'disaster',\n    'disband',\n    'disbelief',\n    'disburse',\n    'discard',\n    'discern',\n    'discharge',\n    'disclose',\n    'discolor',\n    'discount',\n    'discourse',\n    'discover',\n    'discuss',\n    'disdain',\n    'disengage',\n    'disfigure',\n    'disgrace',\n    'dish',\n    'disinfect',\n    'disjoin',\n    'disk',\n    'dislike',\n    'disliking',\n    'dislocate',\n    'dislodge',\n    'disloyal',\n    'dismantle',\n    'dismay',\n    'dismiss',\n    'dismount',\n    'disobey',\n    'disorder',\n    'disown',\n    'disparate',\n    'disparity',\n    'dispatch',\n    'dispense',\n    'dispersal',\n    'dispersed',\n    'disperser',\n    'displace',\n    'display',\n    'displease',\n    'disposal',\n    'dispose',\n    'disprove',\n    'dispute',\n    'disregard',\n    'disrupt',\n    'dissuade',\n    'distance',\n    'distant',\n    'distaste',\n    'distill',\n    'distinct',\n    'distort',\n    'distract',\n    'distress',\n    'district',\n    'distrust',\n    'ditch',\n    'ditto',\n    'ditzy',\n    'dividable',\n    'divided',\n    'dividend',\n    'dividers',\n    'dividing',\n    'divinely',\n    'diving',\n    'divinity',\n    'divisible',\n    'divisibly',\n    'division',\n    'divisive',\n    'divorcee',\n    'dizziness',\n    'dizzy',\n    'doable',\n    'docile',\n    'dock',\n    'doctrine',\n    'document',\n    'dodge',\n    'dodgy',\n    'doily',\n    'doing',\n    'dole',\n    'dollar',\n    'dollhouse',\n    'dollop',\n    'dolly',\n    'dolphin',\n    'domain',\n    'domelike',\n    'domestic',\n    'dominion',\n    'dominoes',\n    'donated',\n    'donation',\n    'donator',\n    'donor',\n    'donut',\n    'doodle',\n    'doorbell',\n    'doorframe',\n    'doorknob',\n    'doorman',\n    'doormat',\n    'doornail',\n    'doorpost',\n    'doorstep',\n    'doorstop',\n    'doorway',\n    'doozy',\n    'dork',\n    'dormitory',\n    'dorsal',\n    'dosage',\n    'dose',\n    'dotted',\n    'doubling',\n    'douche',\n    'dove',\n    'down',\n    'dowry',\n    'doze',\n    'drab',\n    'dragging',\n    'dragonfly',\n    'dragonish',\n    'dragster',\n    'drainable',\n    'drainage',\n    'drained',\n    'drainer',\n    'drainpipe',\n    'dramatic',\n    'dramatize',\n    'drank',\n    'drapery',\n    'drastic',\n    'draw',\n    'dreaded',\n    'dreadful',\n    'dreadlock',\n    'dreamboat',\n    'dreamily',\n    'dreamland',\n    'dreamless',\n    'dreamlike',\n    'dreamt',\n    'dreamy',\n    'drearily',\n    'dreary',\n    'drench',\n    'dress',\n    'drew',\n    'dribble',\n    'dried',\n    'drier',\n    'drift',\n    'driller',\n    'drilling',\n    'drinkable',\n    'drinking',\n    'dripping',\n    'drippy',\n    'drivable',\n    'driven',\n    'driver',\n    'driveway',\n    'driving',\n    'drizzle',\n    'drizzly',\n    'drone',\n    'drool',\n    'droop',\n    'drop-down',\n    'dropbox',\n    'dropkick',\n    'droplet',\n    'dropout',\n    'dropper',\n    'drove',\n    'drown',\n    'drowsily',\n    'drudge',\n    'drum',\n    'dry',\n    'dubbed',\n    'dubiously',\n    'duchess',\n    'duckbill',\n    'ducking',\n    'duckling',\n    'ducktail',\n    'ducky',\n    'duct',\n    'dude',\n    'duffel',\n    'dugout',\n    'duh',\n    'duke',\n    'duller',\n    'dullness',\n    'duly',\n    'dumping',\n    'dumpling',\n    'dumpster',\n    'duo',\n    'dupe',\n    'duplex',\n    'duplicate',\n    'duplicity',\n    'durable',\n    'durably',\n    'duration',\n    'duress',\n    'during',\n    'dusk',\n    'dust',\n    'dutiful',\n    'duty',\n    'duvet',\n    'dwarf',\n    'dweeb',\n    'dwelled',\n    'dweller',\n    'dwelling',\n    'dwindle',\n    'dwindling',\n    'dynamic',\n    'dynamite',\n    'dynasty',\n    'dyslexia',\n    'dyslexic',\n    'each',\n    'eagle',\n    'earache',\n    'eardrum',\n    'earflap',\n    'earful',\n    'earlobe',\n    'early',\n    'earmark',\n    'earmuff',\n    'earphone',\n    'earpiece',\n    'earplugs',\n    'earring',\n    'earshot',\n    'earthen',\n    'earthlike',\n    'earthling',\n    'earthly',\n    'earthworm',\n    'earthy',\n    'earwig',\n    'easeful',\n    'easel',\n    'easiest',\n    'easily',\n    'easiness',\n    'easing',\n    'eastbound',\n    'eastcoast',\n    'easter',\n    'eastward',\n    'eatable',\n    'eaten',\n    'eatery',\n    'eating',\n    'eats',\n    'ebay',\n    'ebony',\n    'ebook',\n    'ecard',\n    'eccentric',\n    'echo',\n    'eclair',\n    'eclipse',\n    'ecologist',\n    'ecology',\n    'economic',\n    'economist',\n    'economy',\n    'ecosphere',\n    'ecosystem',\n    'edge',\n    'edginess',\n    'edging',\n    'edgy',\n    'edition',\n    'editor',\n    'educated',\n    'education',\n    'educator',\n    'eel',\n    'effective',\n    'effects',\n    'efficient',\n    'effort',\n    'eggbeater',\n    'egging',\n    'eggnog',\n    'eggplant',\n    'eggshell',\n    'egomaniac',\n    'egotism',\n    'egotistic',\n    'either',\n    'eject',\n    'elaborate',\n    'elastic',\n    'elated',\n    'elbow',\n    'eldercare',\n    'elderly',\n    'eldest',\n    'electable',\n    'election',\n    'elective',\n    'elephant',\n    'elevate',\n    'elevating',\n    'elevation',\n    'elevator',\n    'eleven',\n    'elf',\n    'eligible',\n    'eligibly',\n    'eliminate',\n    'elite',\n    'elitism',\n    'elixir',\n    'elk',\n    'ellipse',\n    'elliptic',\n    'elm',\n    'elongated',\n    'elope',\n    'eloquence',\n    'eloquent',\n    'elsewhere',\n    'elude',\n    'elusive',\n    'elves',\n    'email',\n    'embargo',\n    'embark',\n    'embassy',\n    'embattled',\n    'embellish',\n    'ember',\n    'embezzle',\n    'emblaze',\n    'emblem',\n    'embody',\n    'embolism',\n    'emboss',\n    'embroider',\n    'emcee',\n    'emerald',\n    'emergency',\n    'emission',\n    'emit',\n    'emote',\n    'emoticon',\n    'emotion',\n    'empathic',\n    'empathy',\n    'emperor',\n    'emphases',\n    'emphasis',\n    'emphasize',\n    'emphatic',\n    'empirical',\n    'employed',\n    'employee',\n    'employer',\n    'emporium',\n    'empower',\n    'emptier',\n    'emptiness',\n    'empty',\n    'emu',\n    'enable',\n    'enactment',\n    'enamel',\n    'enchanted',\n    'enchilada',\n    'encircle',\n    'enclose',\n    'enclosure',\n    'encode',\n    'encore',\n    'encounter',\n    'encourage',\n    'encroach',\n    'encrust',\n    'encrypt',\n    'endanger',\n    'endeared',\n    'endearing',\n    'ended',\n    'ending',\n    'endless',\n    'endnote',\n    'endocrine',\n    'endorphin',\n    'endorse',\n    'endowment',\n    'endpoint',\n    'endurable',\n    'endurance',\n    'enduring',\n    'energetic',\n    'energize',\n    'energy',\n    'enforced',\n    'enforcer',\n    'engaged',\n    'engaging',\n    'engine',\n    'engorge',\n    'engraved',\n    'engraver',\n    'engraving',\n    'engross',\n    'engulf',\n    'enhance',\n    'enigmatic',\n    'enjoyable',\n    'enjoyably',\n    'enjoyer',\n    'enjoying',\n    'enjoyment',\n    'enlarged',\n    'enlarging',\n    'enlighten',\n    'enlisted',\n    'enquirer',\n    'enrage',\n    'enrich',\n    'enroll',\n    'enslave',\n    'ensnare',\n    'ensure',\n    'entail',\n    'entangled',\n    'entering',\n    'entertain',\n    'enticing',\n    'entire',\n    'entitle',\n    'entity',\n    'entomb',\n    'entourage',\n    'entrap',\n    'entree',\n    'entrench',\n    'entrust',\n    'entryway',\n    'entwine',\n    'enunciate',\n    'envelope',\n    'enviable',\n    'enviably',\n    'envious',\n    'envision',\n    'envoy',\n    'envy',\n    'enzyme',\n    'epic',\n    'epidemic',\n    'epidermal',\n    'epidermis',\n    'epidural',\n    'epilepsy',\n    'epileptic',\n    'epilogue',\n    'epiphany',\n    'episode',\n    'equal',\n    'equate',\n    'equation',\n    'equator',\n    'equinox',\n    'equipment',\n    'equity',\n    'equivocal',\n    'eradicate',\n    'erasable',\n    'erased',\n    'eraser',\n    'erasure',\n    'ergonomic',\n    'errand',\n    'errant',\n    'erratic',\n    'error',\n    'erupt',\n    'escalate',\n    'escalator',\n    'escapable',\n    'escapade',\n    'escapist',\n    'escargot',\n    'eskimo',\n    'esophagus',\n    'espionage',\n    'espresso',\n    'esquire',\n    'essay',\n    'essence',\n    'essential',\n    'establish',\n    'estate',\n    'esteemed',\n    'estimate',\n    'estimator',\n    'estranged',\n    'estrogen',\n    'etching',\n    'eternal',\n    'eternity',\n    'ethanol',\n    'ether',\n    'ethically',\n    'ethics',\n    'euphemism',\n    'evacuate',\n    'evacuee',\n    'evade',\n    'evaluate',\n    'evaluator',\n    'evaporate',\n    'evasion',\n    'evasive',\n    'even',\n    'everglade',\n    'evergreen',\n    'everybody',\n    'everyday',\n    'everyone',\n    'evict',\n    'evidence',\n    'evident',\n    'evil',\n    'evoke',\n    'evolution',\n    'evolve',\n    'exact',\n    'exalted',\n    'example',\n    'excavate',\n    'excavator',\n    'exceeding',\n    'exception',\n    'excess',\n    'exchange',\n    'excitable',\n    'exciting',\n    'exclaim',\n    'exclude',\n    'excluding',\n    'exclusion',\n    'exclusive',\n    'excretion',\n    'excretory',\n    'excursion',\n    'excusable',\n    'excusably',\n    'excuse',\n    'exemplary',\n    'exemplify',\n    'exemption',\n    'exerciser',\n    'exert',\n    'exes',\n    'exfoliate',\n    'exhale',\n    'exhaust',\n    'exhume',\n    'exile',\n    'existing',\n    'exit',\n    'exodus',\n    'exonerate',\n    'exorcism',\n    'exorcist',\n    'expand',\n    'expanse',\n    'expansion',\n    'expansive',\n    'expectant',\n    'expedited',\n    'expediter',\n    'expel',\n    'expend',\n    'expenses',\n    'expensive',\n    'expert',\n    'expire',\n    'expiring',\n    'explain',\n    'expletive',\n    'explicit',\n    'explode',\n    'exploit',\n    'explore',\n    'exploring',\n    'exponent',\n    'exporter',\n    'exposable',\n    'expose',\n    'exposure',\n    'express',\n    'expulsion',\n    'exquisite',\n    'extended',\n    'extending',\n    'extent',\n    'extenuate',\n    'exterior',\n    'external',\n    'extinct',\n    'extortion',\n    'extradite',\n    'extras',\n    'extrovert',\n    'extrude',\n    'extruding',\n    'exuberant',\n    'fable',\n    'fabric',\n    'fabulous',\n    'facebook',\n    'facecloth',\n    'facedown',\n    'faceless',\n    'facelift',\n    'faceplate',\n    'faceted',\n    'facial',\n    'facility',\n    'facing',\n    'facsimile',\n    'faction',\n    'factoid',\n    'factor',\n    'factsheet',\n    'factual',\n    'faculty',\n    'fade',\n    'fading',\n    'failing',\n    'falcon',\n    'fall',\n    'false',\n    'falsify',\n    'fame',\n    'familiar',\n    'family',\n    'famine',\n    'famished',\n    'fanatic',\n    'fancied',\n    'fanciness',\n    'fancy',\n    'fanfare',\n    'fang',\n    'fanning',\n    'fantasize',\n    'fantastic',\n    'fantasy',\n    'fascism',\n    'fastball',\n    'faster',\n    'fasting',\n    'fastness',\n    'faucet',\n    'favorable',\n    'favorably',\n    'favored',\n    'favoring',\n    'favorite',\n    'fax',\n    'feast',\n    'federal',\n    'fedora',\n    'feeble',\n    'feed',\n    'feel',\n    'feisty',\n    'feline',\n    'felt-tip',\n    'feminine',\n    'feminism',\n    'feminist',\n    'feminize',\n    'femur',\n    'fence',\n    'fencing',\n    'fender',\n    'ferment',\n    'fernlike',\n    'ferocious',\n    'ferocity',\n    'ferret',\n    'ferris',\n    'ferry',\n    'fervor',\n    'fester',\n    'festival',\n    'festive',\n    'festivity',\n    'fetal',\n    'fetch',\n    'fever',\n    'fiber',\n    'fiction',\n    'fiddle',\n    'fiddling',\n    'fidelity',\n    'fidgeting',\n    'fidgety',\n    'fifteen',\n    'fifth',\n    'fiftieth',\n    'fifty',\n    'figment',\n    'figure',\n    'figurine',\n    'filing',\n    'filled',\n    'filler',\n    'filling',\n    'film',\n    'filter',\n    'filth',\n    'filtrate',\n    'finale',\n    'finalist',\n    'finalize',\n    'finally',\n    'finance',\n    'financial',\n    'finch',\n    'fineness',\n    'finer',\n    'finicky',\n    'finished',\n    'finisher',\n    'finishing',\n    'finite',\n    'finless',\n    'finlike',\n    'fiscally',\n    'fit',\n    'five',\n    'flaccid',\n    'flagman',\n    'flagpole',\n    'flagship',\n    'flagstick',\n    'flagstone',\n    'flail',\n    'flakily',\n    'flaky',\n    'flame',\n    'flammable',\n    'flanked',\n    'flanking',\n    'flannels',\n    'flap',\n    'flaring',\n    'flashback',\n    'flashbulb',\n    'flashcard',\n    'flashily',\n    'flashing',\n    'flashy',\n    'flask',\n    'flatbed',\n    'flatfoot',\n    'flatly',\n    'flatness',\n    'flatten',\n    'flattered',\n    'flatterer',\n    'flattery',\n    'flattop',\n    'flatware',\n    'flatworm',\n    'flavored',\n    'flavorful',\n    'flavoring',\n    'flaxseed',\n    'fled',\n    'fleshed',\n    'fleshy',\n    'flick',\n    'flier',\n    'flight',\n    'flinch',\n    'fling',\n    'flint',\n    'flip',\n    'flirt',\n    'float',\n    'flock',\n    'flogging',\n    'flop',\n    'floral',\n    'florist',\n    'floss',\n    'flounder',\n    'flyable',\n    'flyaway',\n    'flyer',\n    'flying',\n    'flyover',\n    'flypaper',\n    'foam',\n    'foe',\n    'fog',\n    'foil',\n    'folic',\n    'folk',\n    'follicle',\n    'follow',\n    'fondling',\n    'fondly',\n    'fondness',\n    'fondue',\n    'font',\n    'food',\n    'fool',\n    'footage',\n    'football',\n    'footbath',\n    'footboard',\n    'footer',\n    'footgear',\n    'foothill',\n    'foothold',\n    'footing',\n    'footless',\n    'footman',\n    'footnote',\n    'footpad',\n    'footpath',\n    'footprint',\n    'footrest',\n    'footsie',\n    'footsore',\n    'footwear',\n    'footwork',\n    'fossil',\n    'foster',\n    'founder',\n    'founding',\n    'fountain',\n    'fox',\n    'foyer',\n    'fraction',\n    'fracture',\n    'fragile',\n    'fragility',\n    'fragment',\n    'fragrance',\n    'fragrant',\n    'frail',\n    'frame',\n    'framing',\n    'frantic',\n    'fraternal',\n    'frayed',\n    'fraying',\n    'frays',\n    'freckled',\n    'freckles',\n    'freebase',\n    'freebee',\n    'freebie',\n    'freedom',\n    'freefall',\n    'freehand',\n    'freeing',\n    'freeload',\n    'freely',\n    'freemason',\n    'freeness',\n    'freestyle',\n    'freeware',\n    'freeway',\n    'freewill',\n    'freezable',\n    'freezing',\n    'freight',\n    'french',\n    'frenzied',\n    'frenzy',\n    'frequency',\n    'frequent',\n    'fresh',\n    'fretful',\n    'fretted',\n    'friction',\n    'friday',\n    'fridge',\n    'fried',\n    'friend',\n    'frighten',\n    'frightful',\n    'frigidity',\n    'frigidly',\n    'frill',\n    'fringe',\n    'frisbee',\n    'frisk',\n    'fritter',\n    'frivolous',\n    'frolic',\n    'from',\n    'front',\n    'frostbite',\n    'frosted',\n    'frostily',\n    'frosting',\n    'frostlike',\n    'frosty',\n    'froth',\n    'frown',\n    'frozen',\n    'fructose',\n    'frugality',\n    'frugally',\n    'fruit',\n    'frustrate',\n    'frying',\n    'gab',\n    'gaffe',\n    'gag',\n    'gainfully',\n    'gaining',\n    'gains',\n    'gala',\n    'gallantly',\n    'galleria',\n    'gallery',\n    'galley',\n    'gallon',\n    'gallows',\n    'gallstone',\n    'galore',\n    'galvanize',\n    'gambling',\n    'game',\n    'gaming',\n    'gamma',\n    'gander',\n    'gangly',\n    'gangrene',\n    'gangway',\n    'gap',\n    'garage',\n    'garbage',\n    'garden',\n    'gargle',\n    'garland',\n    'garlic',\n    'garment',\n    'garnet',\n    'garnish',\n    'garter',\n    'gas',\n    'gatherer',\n    'gathering',\n    'gating',\n    'gauging',\n    'gauntlet',\n    'gauze',\n    'gave',\n    'gawk',\n    'gazing',\n    'gear',\n    'gecko',\n    'geek',\n    'geiger',\n    'gem',\n    'gender',\n    'generic',\n    'generous',\n    'genetics',\n    'genre',\n    'gentile',\n    'gentleman',\n    'gently',\n    'gents',\n    'geography',\n    'geologic',\n    'geologist',\n    'geology',\n    'geometric',\n    'geometry',\n    'geranium',\n    'gerbil',\n    'geriatric',\n    'germicide',\n    'germinate',\n    'germless',\n    'germproof',\n    'gestate',\n    'gestation',\n    'gesture',\n    'getaway',\n    'getting',\n    'getup',\n    'giant',\n    'gibberish',\n    'giblet',\n    'giddily',\n    'giddiness',\n    'giddy',\n    'gift',\n    'gigabyte',\n    'gigahertz',\n    'gigantic',\n    'giggle',\n    'giggling',\n    'giggly',\n    'gigolo',\n    'gilled',\n    'gills',\n    'gimmick',\n    'girdle',\n    'giveaway',\n    'given',\n    'giver',\n    'giving',\n    'gizmo',\n    'gizzard',\n    'glacial',\n    'glacier',\n    'glade',\n    'gladiator',\n    'gladly',\n    'glamorous',\n    'glamour',\n    'glance',\n    'glancing',\n    'glandular',\n    'glare',\n    'glaring',\n    'glass',\n    'glaucoma',\n    'glazing',\n    'gleaming',\n    'gleeful',\n    'glider',\n    'gliding',\n    'glimmer',\n    'glimpse',\n    'glisten',\n    'glitch',\n    'glitter',\n    'glitzy',\n    'gloater',\n    'gloating',\n    'gloomily',\n    'gloomy',\n    'glorified',\n    'glorifier',\n    'glorify',\n    'glorious',\n    'glory',\n    'gloss',\n    'glove',\n    'glowing',\n    'glowworm',\n    'glucose',\n    'glue',\n    'gluten',\n    'glutinous',\n    'glutton',\n    'gnarly',\n    'gnat',\n    'goal',\n    'goatskin',\n    'goes',\n    'goggles',\n    'going',\n    'goldfish',\n    'goldmine',\n    'goldsmith',\n    'golf',\n    'goliath',\n    'gonad',\n    'gondola',\n    'gone',\n    'gong',\n    'good',\n    'gooey',\n    'goofball',\n    'goofiness',\n    'goofy',\n    'google',\n    'goon',\n    'gopher',\n    'gore',\n    'gorged',\n    'gorgeous',\n    'gory',\n    'gosling',\n    'gossip',\n    'gothic',\n    'gotten',\n    'gout',\n    'gown',\n    'grab',\n    'graceful',\n    'graceless',\n    'gracious',\n    'gradation',\n    'graded',\n    'grader',\n    'gradient',\n    'grading',\n    'gradually',\n    'graduate',\n    'graffiti',\n    'grafted',\n    'grafting',\n    'grain',\n    'granddad',\n    'grandkid',\n    'grandly',\n    'grandma',\n    'grandpa',\n    'grandson',\n    'granite',\n    'granny',\n    'granola',\n    'grant',\n    'granular',\n    'grape',\n    'graph',\n    'grapple',\n    'grappling',\n    'grasp',\n    'grass',\n    'gratified',\n    'gratify',\n    'grating',\n    'gratitude',\n    'gratuity',\n    'gravel',\n    'graveness',\n    'graves',\n    'graveyard',\n    'gravitate',\n    'gravity',\n    'gravy',\n    'gray',\n    'grazing',\n    'greasily',\n    'greedily',\n    'greedless',\n    'greedy',\n    'green',\n    'greeter',\n    'greeting',\n    'grew',\n    'greyhound',\n    'grid',\n    'grief',\n    'grievance',\n    'grieving',\n    'grievous',\n    'grill',\n    'grimace',\n    'grimacing',\n    'grime',\n    'griminess',\n    'grimy',\n    'grinch',\n    'grinning',\n    'grip',\n    'gristle',\n    'grit',\n    'groggily',\n    'groggy',\n    'groin',\n    'groom',\n    'groove',\n    'grooving',\n    'groovy',\n    'grope',\n    'ground',\n    'grouped',\n    'grout',\n    'grove',\n    'grower',\n    'growing',\n    'growl',\n    'grub',\n    'grudge',\n    'grudging',\n    'grueling',\n    'gruffly',\n    'grumble',\n    'grumbling',\n    'grumbly',\n    'grumpily',\n    'grunge',\n    'grunt',\n    'guacamole',\n    'guidable',\n    'guidance',\n    'guide',\n    'guiding',\n    'guileless',\n    'guise',\n    'gulf',\n    'gullible',\n    'gully',\n    'gulp',\n    'gumball',\n    'gumdrop',\n    'gumminess',\n    'gumming',\n    'gummy',\n    'gurgle',\n    'gurgling',\n    'guru',\n    'gush',\n    'gusto',\n    'gusty',\n    'gutless',\n    'guts',\n    'gutter',\n    'guy',\n    'guzzler',\n    'gyration',\n    'habitable',\n    'habitant',\n    'habitat',\n    'habitual',\n    'hacked',\n    'hacker',\n    'hacking',\n    'hacksaw',\n    'had',\n    'haggler',\n    'haiku',\n    'half',\n    'halogen',\n    'halt',\n    'halved',\n    'halves',\n    'hamburger',\n    'hamlet',\n    'hammock',\n    'hamper',\n    'hamster',\n    'hamstring',\n    'handbag',\n    'handball',\n    'handbook',\n    'handbrake',\n    'handcart',\n    'handclap',\n    'handclasp',\n    'handcraft',\n    'handcuff',\n    'handed',\n    'handful',\n    'handgrip',\n    'handgun',\n    'handheld',\n    'handiness',\n    'handiwork',\n    'handlebar',\n    'handled',\n    'handler',\n    'handling',\n    'handmade',\n    'handoff',\n    'handpick',\n    'handprint',\n    'handrail',\n    'handsaw',\n    'handset',\n    'handsfree',\n    'handshake',\n    'handstand',\n    'handwash',\n    'handwork',\n    'handwoven',\n    'handwrite',\n    'handyman',\n    'hangnail',\n    'hangout',\n    'hangover',\n    'hangup',\n    'hankering',\n    'hankie',\n    'hanky',\n    'haphazard',\n    'happening',\n    'happier',\n    'happiest',\n    'happily',\n    'happiness',\n    'happy',\n    'harbor',\n    'hardcopy',\n    'hardcore',\n    'hardcover',\n    'harddisk',\n    'hardened',\n    'hardener',\n    'hardening',\n    'hardhat',\n    'hardhead',\n    'hardiness',\n    'hardly',\n    'hardness',\n    'hardship',\n    'hardware',\n    'hardwired',\n    'hardwood',\n    'hardy',\n    'harmful',\n    'harmless',\n    'harmonica',\n    'harmonics',\n    'harmonize',\n    'harmony',\n    'harness',\n    'harpist',\n    'harsh',\n    'harvest',\n    'hash',\n    'hassle',\n    'haste',\n    'hastily',\n    'hastiness',\n    'hasty',\n    'hatbox',\n    'hatchback',\n    'hatchery',\n    'hatchet',\n    'hatching',\n    'hatchling',\n    'hate',\n    'hatless',\n    'hatred',\n    'haunt',\n    'haven',\n    'hazard',\n    'hazelnut',\n    'hazily',\n    'haziness',\n    'hazing',\n    'hazy',\n    'headache',\n    'headband',\n    'headboard',\n    'headcount',\n    'headdress',\n    'headed',\n    'header',\n    'headfirst',\n    'headgear',\n    'heading',\n    'headlamp',\n    'headless',\n    'headlock',\n    'headphone',\n    'headpiece',\n    'headrest',\n    'headroom',\n    'headscarf',\n    'headset',\n    'headsman',\n    'headstand',\n    'headstone',\n    'headway',\n    'headwear',\n    'heap',\n    'heat',\n    'heave',\n    'heavily',\n    'heaviness',\n    'heaving',\n    'hedge',\n    'hedging',\n    'heftiness',\n    'hefty',\n    'helium',\n    'helmet',\n    'helper',\n    'helpful',\n    'helping',\n    'helpless',\n    'helpline',\n    'hemlock',\n    'hemstitch',\n    'hence',\n    'henchman',\n    'henna',\n    'herald',\n    'herbal',\n    'herbicide',\n    'herbs',\n    'heritage',\n    'hermit',\n    'heroics',\n    'heroism',\n    'herring',\n    'herself',\n    'hertz',\n    'hesitancy',\n    'hesitant',\n    'hesitate',\n    'hexagon',\n    'hexagram',\n    'hubcap',\n    'huddle',\n    'huddling',\n    'huff',\n    'hug',\n    'hula',\n    'hulk',\n    'hull',\n    'human',\n    'humble',\n    'humbling',\n    'humbly',\n    'humid',\n    'humiliate',\n    'humility',\n    'humming',\n    'hummus',\n    'humongous',\n    'humorist',\n    'humorless',\n    'humorous',\n    'humpback',\n    'humped',\n    'humvee',\n    'hunchback',\n    'hundredth',\n    'hunger',\n    'hungrily',\n    'hungry',\n    'hunk',\n    'hunter',\n    'hunting',\n    'huntress',\n    'huntsman',\n    'hurdle',\n    'hurled',\n    'hurler',\n    'hurling',\n    'hurray',\n    'hurricane',\n    'hurried',\n    'hurry',\n    'hurt',\n    'husband',\n    'hush',\n    'husked',\n    'huskiness',\n    'hut',\n    'hybrid',\n    'hydrant',\n    'hydrated',\n    'hydration',\n    'hydrogen',\n    'hydroxide',\n    'hyperlink',\n    'hypertext',\n    'hyphen',\n    'hypnoses',\n    'hypnosis',\n    'hypnotic',\n    'hypnotism',\n    'hypnotist',\n    'hypnotize',\n    'hypocrisy',\n    'hypocrite',\n    'ibuprofen',\n    'ice',\n    'iciness',\n    'icing',\n    'icky',\n    'icon',\n    'icy',\n    'idealism',\n    'idealist',\n    'idealize',\n    'ideally',\n    'idealness',\n    'identical',\n    'identify',\n    'identity',\n    'ideology',\n    'idiocy',\n    'idiom',\n    'idly',\n    'igloo',\n    'ignition',\n    'ignore',\n    'iguana',\n    'illicitly',\n    'illusion',\n    'illusive',\n    'image',\n    'imaginary',\n    'imagines',\n    'imaging',\n    'imbecile',\n    'imitate',\n    'imitation',\n    'immature',\n    'immerse',\n    'immersion',\n    'imminent',\n    'immobile',\n    'immodest',\n    'immorally',\n    'immortal',\n    'immovable',\n    'immovably',\n    'immunity',\n    'immunize',\n    'impaired',\n    'impale',\n    'impart',\n    'impatient',\n    'impeach',\n    'impeding',\n    'impending',\n    'imperfect',\n    'imperial',\n    'impish',\n    'implant',\n    'implement',\n    'implicate',\n    'implicit',\n    'implode',\n    'implosion',\n    'implosive',\n    'imply',\n    'impolite',\n    'important',\n    'importer',\n    'impose',\n    'imposing',\n    'impotence',\n    'impotency',\n    'impotent',\n    'impound',\n    'imprecise',\n    'imprint',\n    'imprison',\n    'impromptu',\n    'improper',\n    'improve',\n    'improving',\n    'improvise',\n    'imprudent',\n    'impulse',\n    'impulsive',\n    'impure',\n    'impurity',\n    'iodine',\n    'iodize',\n    'ion',\n    'ipad',\n    'iphone',\n    'ipod',\n    'irate',\n    'irk',\n    'iron',\n    'irregular',\n    'irrigate',\n    'irritable',\n    'irritably',\n    'irritant',\n    'irritate',\n    'islamic',\n    'islamist',\n    'isolated',\n    'isolating',\n    'isolation',\n    'isotope',\n    'issue',\n    'issuing',\n    'italicize',\n    'italics',\n    'item',\n    'itinerary',\n    'itunes',\n    'ivory',\n    'ivy',\n    'jab',\n    'jackal',\n    'jacket',\n    'jackknife',\n    'jackpot',\n    'jailbird',\n    'jailbreak',\n    'jailer',\n    'jailhouse',\n    'jalapeno',\n    'jam',\n    'janitor',\n    'january',\n    'jargon',\n    'jarring',\n    'jasmine',\n    'jaundice',\n    'jaunt',\n    'java',\n    'jawed',\n    'jawless',\n    'jawline',\n    'jaws',\n    'jaybird',\n    'jaywalker',\n    'jazz',\n    'jeep',\n    'jeeringly',\n    'jellied',\n    'jelly',\n    'jersey',\n    'jester',\n    'jet',\n    'jiffy',\n    'jigsaw',\n    'jimmy',\n    'jingle',\n    'jingling',\n    'jinx',\n    'jitters',\n    'jittery',\n    'job',\n    'jockey',\n    'jockstrap',\n    'jogger',\n    'jogging',\n    'john',\n    'joining',\n    'jokester',\n    'jokingly',\n    'jolliness',\n    'jolly',\n    'jolt',\n    'jot',\n    'jovial',\n    'joyfully',\n    'joylessly',\n    'joyous',\n    'joyride',\n    'joystick',\n    'jubilance',\n    'jubilant',\n    'judge',\n    'judgingly',\n    'judicial',\n    'judiciary',\n    'judo',\n    'juggle',\n    'juggling',\n    'jugular',\n    'juice',\n    'juiciness',\n    'juicy',\n    'jujitsu',\n    'jukebox',\n    'july',\n    'jumble',\n    'jumbo',\n    'jump',\n    'junction',\n    'juncture',\n    'june',\n    'junior',\n    'juniper',\n    'junkie',\n    'junkman',\n    'junkyard',\n    'jurist',\n    'juror',\n    'jury',\n    'justice',\n    'justifier',\n    'justify',\n    'justly',\n    'justness',\n    'juvenile',\n    'kabob',\n    'kangaroo',\n    'karaoke',\n    'karate',\n    'karma',\n    'kebab',\n    'keenly',\n    'keenness',\n    'keep',\n    'keg',\n    'kelp',\n    'kennel',\n    'kept',\n    'kerchief',\n    'kerosene',\n    'kettle',\n    'kick',\n    'kiln',\n    'kilobyte',\n    'kilogram',\n    'kilometer',\n    'kilowatt',\n    'kilt',\n    'kimono',\n    'kindle',\n    'kindling',\n    'kindly',\n    'kindness',\n    'kindred',\n    'kinetic',\n    'kinfolk',\n    'king',\n    'kinship',\n    'kinsman',\n    'kinswoman',\n    'kissable',\n    'kisser',\n    'kissing',\n    'kitchen',\n    'kite',\n    'kitten',\n    'kitty',\n    'kiwi',\n    'kleenex',\n    'knapsack',\n    'knee',\n    'knelt',\n    'knickers',\n    'knoll',\n    'koala',\n    'kooky',\n    'kosher',\n    'krypton',\n    'kudos',\n    'kung',\n    'labored',\n    'laborer',\n    'laboring',\n    'laborious',\n    'labrador',\n    'ladder',\n    'ladies',\n    'ladle',\n    'ladybug',\n    'ladylike',\n    'lagged',\n    'lagging',\n    'lagoon',\n    'lair',\n    'lake',\n    'lance',\n    'landed',\n    'landfall',\n    'landfill',\n    'landing',\n    'landlady',\n    'landless',\n    'landline',\n    'landlord',\n    'landmark',\n    'landmass',\n    'landmine',\n    'landowner',\n    'landscape',\n    'landside',\n    'landslide',\n    'language',\n    'lankiness',\n    'lanky',\n    'lantern',\n    'lapdog',\n    'lapel',\n    'lapped',\n    'lapping',\n    'laptop',\n    'lard',\n    'large',\n    'lark',\n    'lash',\n    'lasso',\n    'last',\n    'latch',\n    'late',\n    'lather',\n    'latitude',\n    'latrine',\n    'latter',\n    'latticed',\n    'launch',\n    'launder',\n    'laundry',\n    'laurel',\n    'lavender',\n    'lavish',\n    'laxative',\n    'lazily',\n    'laziness',\n    'lazy',\n    'lecturer',\n    'left',\n    'legacy',\n    'legal',\n    'legend',\n    'legged',\n    'leggings',\n    'legible',\n    'legibly',\n    'legislate',\n    'lego',\n    'legroom',\n    'legume',\n    'legwarmer',\n    'legwork',\n    'lemon',\n    'lend',\n    'length',\n    'lens',\n    'lent',\n    'leotard',\n    'lesser',\n    'letdown',\n    'lethargic',\n    'lethargy',\n    'letter',\n    'lettuce',\n    'level',\n    'leverage',\n    'levers',\n    'levitate',\n    'levitator',\n    'liability',\n    'liable',\n    'liberty',\n    'librarian',\n    'library',\n    'licking',\n    'licorice',\n    'lid',\n    'life',\n    'lifter',\n    'lifting',\n    'liftoff',\n    'ligament',\n    'likely',\n    'likeness',\n    'likewise',\n    'liking',\n    'lilac',\n    'lilly',\n    'lily',\n    'limb',\n    'limeade',\n    'limelight',\n    'limes',\n    'limit',\n    'limping',\n    'limpness',\n    'line',\n    'lingo',\n    'linguini',\n    'linguist',\n    'lining',\n    'linked',\n    'linoleum',\n    'linseed',\n    'lint',\n    'lion',\n    'lip',\n    'liquefy',\n    'liqueur',\n    'liquid',\n    'lisp',\n    'list',\n    'litigate',\n    'litigator',\n    'litmus',\n    'litter',\n    'little',\n    'livable',\n    'lived',\n    'lively',\n    'liver',\n    'livestock',\n    'lividly',\n    'living',\n    'lizard',\n    'lubricant',\n    'lubricate',\n    'lucid',\n    'luckily',\n    'luckiness',\n    'luckless',\n    'lucrative',\n    'ludicrous',\n    'lugged',\n    'lukewarm',\n    'lullaby',\n    'lumber',\n    'luminance',\n    'luminous',\n    'lumpiness',\n    'lumping',\n    'lumpish',\n    'lunacy',\n    'lunar',\n    'lunchbox',\n    'luncheon',\n    'lunchroom',\n    'lunchtime',\n    'lung',\n    'lurch',\n    'lure',\n    'luridness',\n    'lurk',\n    'lushly',\n    'lushness',\n    'luster',\n    'lustfully',\n    'lustily',\n    'lustiness',\n    'lustrous',\n    'lusty',\n    'luxurious',\n    'luxury',\n    'lying',\n    'lyrically',\n    'lyricism',\n    'lyricist',\n    'lyrics',\n    'macarena',\n    'macaroni',\n    'macaw',\n    'mace',\n    'machine',\n    'machinist',\n    'magazine',\n    'magenta',\n    'maggot',\n    'magical',\n    'magician',\n    'magma',\n    'magnesium',\n    'magnetic',\n    'magnetism',\n    'magnetize',\n    'magnifier',\n    'magnify',\n    'magnitude',\n    'magnolia',\n    'mahogany',\n    'maimed',\n    'majestic',\n    'majesty',\n    'majorette',\n    'majority',\n    'makeover',\n    'maker',\n    'makeshift',\n    'making',\n    'malformed',\n    'malt',\n    'mama',\n    'mammal',\n    'mammary',\n    'mammogram',\n    'manager',\n    'managing',\n    'manatee',\n    'mandarin',\n    'mandate',\n    'mandatory',\n    'mandolin',\n    'manger',\n    'mangle',\n    'mango',\n    'mangy',\n    'manhandle',\n    'manhole',\n    'manhood',\n    'manhunt',\n    'manicotti',\n    'manicure',\n    'manifesto',\n    'manila',\n    'mankind',\n    'manlike',\n    'manliness',\n    'manly',\n    'manmade',\n    'manned',\n    'mannish',\n    'manor',\n    'manpower',\n    'mantis',\n    'mantra',\n    'manual',\n    'many',\n    'map',\n    'marathon',\n    'marauding',\n    'marbled',\n    'marbles',\n    'marbling',\n    'march',\n    'mardi',\n    'margarine',\n    'margarita',\n    'margin',\n    'marigold',\n    'marina',\n    'marine',\n    'marital',\n    'maritime',\n    'marlin',\n    'marmalade',\n    'maroon',\n    'married',\n    'marrow',\n    'marry',\n    'marshland',\n    'marshy',\n    'marsupial',\n    'marvelous',\n    'marxism',\n    'mascot',\n    'masculine',\n    'mashed',\n    'mashing',\n    'massager',\n    'masses',\n    'massive',\n    'mastiff',\n    'matador',\n    'matchbook',\n    'matchbox',\n    'matcher',\n    'matching',\n    'matchless',\n    'material',\n    'maternal',\n    'maternity',\n    'math',\n    'mating',\n    'matriarch',\n    'matrimony',\n    'matrix',\n    'matron',\n    'matted',\n    'matter',\n    'maturely',\n    'maturing',\n    'maturity',\n    'mauve',\n    'maverick',\n    'maximize',\n    'maximum',\n    'maybe',\n    'mayday',\n    'mayflower',\n    'moaner',\n    'moaning',\n    'mobile',\n    'mobility',\n    'mobilize',\n    'mobster',\n    'mocha',\n    'mocker',\n    'mockup',\n    'modified',\n    'modify',\n    'modular',\n    'modulator',\n    'module',\n    'moisten',\n    'moistness',\n    'moisture',\n    'molar',\n    'molasses',\n    'mold',\n    'molecular',\n    'molecule',\n    'molehill',\n    'mollusk',\n    'mom',\n    'monastery',\n    'monday',\n    'monetary',\n    'monetize',\n    'moneybags',\n    'moneyless',\n    'moneywise',\n    'mongoose',\n    'mongrel',\n    'monitor',\n    'monkhood',\n    'monogamy',\n    'monogram',\n    'monologue',\n    'monopoly',\n    'monorail',\n    'monotone',\n    'monotype',\n    'monoxide',\n    'monsieur',\n    'monsoon',\n    'monstrous',\n    'monthly',\n    'monument',\n    'moocher',\n    'moodiness',\n    'moody',\n    'mooing',\n    'moonbeam',\n    'mooned',\n    'moonlight',\n    'moonlike',\n    'moonlit',\n    'moonrise',\n    'moonscape',\n    'moonshine',\n    'moonstone',\n    'moonwalk',\n    'mop',\n    'morale',\n    'morality',\n    'morally',\n    'morbidity',\n    'morbidly',\n    'morphine',\n    'morphing',\n    'morse',\n    'mortality',\n    'mortally',\n    'mortician',\n    'mortified',\n    'mortify',\n    'mortuary',\n    'mosaic',\n    'mossy',\n    'most',\n    'mothball',\n    'mothproof',\n    'motion',\n    'motivate',\n    'motivator',\n    'motive',\n    'motocross',\n    'motor',\n    'motto',\n    'mountable',\n    'mountain',\n    'mounted',\n    'mounting',\n    'mourner',\n    'mournful',\n    'mouse',\n    'mousiness',\n    'moustache',\n    'mousy',\n    'mouth',\n    'movable',\n    'move',\n    'movie',\n    'moving',\n    'mower',\n    'mowing',\n    'much',\n    'muck',\n    'mud',\n    'mug',\n    'mulberry',\n    'mulch',\n    'mule',\n    'mulled',\n    'mullets',\n    'multiple',\n    'multiply',\n    'multitask',\n    'multitude',\n    'mumble',\n    'mumbling',\n    'mumbo',\n    'mummified',\n    'mummify',\n    'mummy',\n    'mumps',\n    'munchkin',\n    'mundane',\n    'municipal',\n    'muppet',\n    'mural',\n    'murkiness',\n    'murky',\n    'murmuring',\n    'muscular',\n    'museum',\n    'mushily',\n    'mushiness',\n    'mushroom',\n    'mushy',\n    'music',\n    'musket',\n    'muskiness',\n    'musky',\n    'mustang',\n    'mustard',\n    'muster',\n    'mustiness',\n    'musty',\n    'mutable',\n    'mutate',\n    'mutation',\n    'mute',\n    'mutilated',\n    'mutilator',\n    'mutiny',\n    'mutt',\n    'mutual',\n    'muzzle',\n    'myself',\n    'myspace',\n    'mystified',\n    'mystify',\n    'myth',\n    'nacho',\n    'nag',\n    'nail',\n    'name',\n    'naming',\n    'nanny',\n    'nanometer',\n    'nape',\n    'napkin',\n    'napped',\n    'napping',\n    'nappy',\n    'narrow',\n    'nastily',\n    'nastiness',\n    'national',\n    'native',\n    'nativity',\n    'natural',\n    'nature',\n    'naturist',\n    'nautical',\n    'navigate',\n    'navigator',\n    'navy',\n    'nearby',\n    'nearest',\n    'nearly',\n    'nearness',\n    'neatly',\n    'neatness',\n    'nebula',\n    'nebulizer',\n    'nectar',\n    'negate',\n    'negation',\n    'negative',\n    'neglector',\n    'negligee',\n    'negligent',\n    'negotiate',\n    'nemeses',\n    'nemesis',\n    'neon',\n    'nephew',\n    'nerd',\n    'nervous',\n    'nervy',\n    'nest',\n    'net',\n    'neurology',\n    'neuron',\n    'neurosis',\n    'neurotic',\n    'neuter',\n    'neutron',\n    'never',\n    'next',\n    'nibble',\n    'nickname',\n    'nicotine',\n    'niece',\n    'nifty',\n    'nimble',\n    'nimbly',\n    'nineteen',\n    'ninetieth',\n    'ninja',\n    'nintendo',\n    'ninth',\n    'nuclear',\n    'nuclei',\n    'nucleus',\n    'nugget',\n    'nullify',\n    'number',\n    'numbing',\n    'numbly',\n    'numbness',\n    'numeral',\n    'numerate',\n    'numerator',\n    'numeric',\n    'numerous',\n    'nuptials',\n    'nursery',\n    'nursing',\n    'nurture',\n    'nutcase',\n    'nutlike',\n    'nutmeg',\n    'nutrient',\n    'nutshell',\n    'nuttiness',\n    'nutty',\n    'nuzzle',\n    'nylon',\n    'oaf',\n    'oak',\n    'oasis',\n    'oat',\n    'obedience',\n    'obedient',\n    'obituary',\n    'object',\n    'obligate',\n    'obliged',\n    'oblivion',\n    'oblivious',\n    'oblong',\n    'obnoxious',\n    'oboe',\n    'obscure',\n    'obscurity',\n    'observant',\n    'observer',\n    'observing',\n    'obsessed',\n    'obsession',\n    'obsessive',\n    'obsolete',\n    'obstacle',\n    'obstinate',\n    'obstruct',\n    'obtain',\n    'obtrusive',\n    'obtuse',\n    'obvious',\n    'occultist',\n    'occupancy',\n    'occupant',\n    'occupier',\n    'occupy',\n    'ocean',\n    'ocelot',\n    'octagon',\n    'octane',\n    'october',\n    'octopus',\n    'ogle',\n    'oil',\n    'oink',\n    'ointment',\n    'okay',\n    'old',\n    'olive',\n    'olympics',\n    'omega',\n    'omen',\n    'ominous',\n    'omission',\n    'omit',\n    'omnivore',\n    'onboard',\n    'oncoming',\n    'ongoing',\n    'onion',\n    'online',\n    'onlooker',\n    'only',\n    'onscreen',\n    'onset',\n    'onshore',\n    'onslaught',\n    'onstage',\n    'onto',\n    'onward',\n    'onyx',\n    'oops',\n    'ooze',\n    'oozy',\n    'opacity',\n    'opal',\n    'open',\n    'operable',\n    'operate',\n    'operating',\n    'operation',\n    'operative',\n    'operator',\n    'opium',\n    'opossum',\n    'opponent',\n    'oppose',\n    'opposing',\n    'opposite',\n    'oppressed',\n    'oppressor',\n    'opt',\n    'opulently',\n    'osmosis',\n    'other',\n    'otter',\n    'ouch',\n    'ought',\n    'ounce',\n    'outage',\n    'outback',\n    'outbid',\n    'outboard',\n    'outbound',\n    'outbreak',\n    'outburst',\n    'outcast',\n    'outclass',\n    'outcome',\n    'outdated',\n    'outdoors',\n    'outer',\n    'outfield',\n    'outfit',\n    'outflank',\n    'outgoing',\n    'outgrow',\n    'outhouse',\n    'outing',\n    'outlast',\n    'outlet',\n    'outline',\n    'outlook',\n    'outlying',\n    'outmatch',\n    'outmost',\n    'outnumber',\n    'outplayed',\n    'outpost',\n    'outpour',\n    'output',\n    'outrage',\n    'outrank',\n    'outreach',\n    'outright',\n    'outscore',\n    'outsell',\n    'outshine',\n    'outshoot',\n    'outsider',\n    'outskirts',\n    'outsmart',\n    'outsource',\n    'outspoken',\n    'outtakes',\n    'outthink',\n    'outward',\n    'outweigh',\n    'outwit',\n    'oval',\n    'ovary',\n    'oven',\n    'overact',\n    'overall',\n    'overarch',\n    'overbid',\n    'overbill',\n    'overbite',\n    'overblown',\n    'overboard',\n    'overbook',\n    'overbuilt',\n    'overcast',\n    'overcoat',\n    'overcome',\n    'overcook',\n    'overcrowd',\n    'overdraft',\n    'overdrawn',\n    'overdress',\n    'overdrive',\n    'overdue',\n    'overeager',\n    'overeater',\n    'overexert',\n    'overfed',\n    'overfeed',\n    'overfill',\n    'overflow',\n    'overfull',\n    'overgrown',\n    'overhand',\n    'overhang',\n    'overhaul',\n    'overhead',\n    'overhear',\n    'overheat',\n    'overhung',\n    'overjoyed',\n    'overkill',\n    'overlabor',\n    'overlaid',\n    'overlap',\n    'overlay',\n    'overload',\n    'overlook',\n    'overlord',\n    'overlying',\n    'overnight',\n    'overpass',\n    'overpay',\n    'overplant',\n    'overplay',\n    'overpower',\n    'overprice',\n    'overrate',\n    'overreach',\n    'overreact',\n    'override',\n    'overripe',\n    'overrule',\n    'overrun',\n    'overshoot',\n    'overshot',\n    'oversight',\n    'oversized',\n    'oversleep',\n    'oversold',\n    'overspend',\n    'overstate',\n    'overstay',\n    'overstep',\n    'overstock',\n    'overstuff',\n    'oversweet',\n    'overtake',\n    'overthrow',\n    'overtime',\n    'overtly',\n    'overtone',\n    'overture',\n    'overturn',\n    'overuse',\n    'overvalue',\n    'overview',\n    'overwrite',\n    'owl',\n    'oxford',\n    'oxidant',\n    'oxidation',\n    'oxidize',\n    'oxidizing',\n    'oxygen',\n    'oxymoron',\n    'oyster',\n    'ozone',\n    'paced',\n    'pacemaker',\n    'pacific',\n    'pacifier',\n    'pacifism',\n    'pacifist',\n    'pacify',\n    'padded',\n    'padding',\n    'paddle',\n    'paddling',\n    'padlock',\n    'pagan',\n    'pager',\n    'paging',\n    'pajamas',\n    'palace',\n    'palatable',\n    'palm',\n    'palpable',\n    'palpitate',\n    'paltry',\n    'pampered',\n    'pamperer',\n    'pampers',\n    'pamphlet',\n    'panama',\n    'pancake',\n    'pancreas',\n    'panda',\n    'pandemic',\n    'pang',\n    'panhandle',\n    'panic',\n    'panning',\n    'panorama',\n    'panoramic',\n    'panther',\n    'pantomime',\n    'pantry',\n    'pants',\n    'pantyhose',\n    'paparazzi',\n    'papaya',\n    'paper',\n    'paprika',\n    'papyrus',\n    'parabola',\n    'parachute',\n    'parade',\n    'paradox',\n    'paragraph',\n    'parakeet',\n    'paralegal',\n    'paralyses',\n    'paralysis',\n    'paralyze',\n    'paramedic',\n    'parameter',\n    'paramount',\n    'parasail',\n    'parasite',\n    'parasitic',\n    'parcel',\n    'parched',\n    'parchment',\n    'pardon',\n    'parish',\n    'parka',\n    'parking',\n    'parkway',\n    'parlor',\n    'parmesan',\n    'parole',\n    'parrot',\n    'parsley',\n    'parsnip',\n    'partake',\n    'parted',\n    'parting',\n    'partition',\n    'partly',\n    'partner',\n    'partridge',\n    'party',\n    'passable',\n    'passably',\n    'passage',\n    'passcode',\n    'passenger',\n    'passerby',\n    'passing',\n    'passion',\n    'passive',\n    'passivism',\n    'passover',\n    'passport',\n    'password',\n    'pasta',\n    'pasted',\n    'pastel',\n    'pastime',\n    'pastor',\n    'pastrami',\n    'pasture',\n    'pasty',\n    'patchwork',\n    'patchy',\n    'paternal',\n    'paternity',\n    'path',\n    'patience',\n    'patient',\n    'patio',\n    'patriarch',\n    'patriot',\n    'patrol',\n    'patronage',\n    'patronize',\n    'pauper',\n    'pavement',\n    'paver',\n    'pavestone',\n    'pavilion',\n    'paving',\n    'pawing',\n    'payable',\n    'payback',\n    'paycheck',\n    'payday',\n    'payee',\n    'payer',\n    'paying',\n    'payment',\n    'payphone',\n    'payroll',\n    'pebble',\n    'pebbly',\n    'pecan',\n    'pectin',\n    'peculiar',\n    'peddling',\n    'pediatric',\n    'pedicure',\n    'pedigree',\n    'pedometer',\n    'pegboard',\n    'pelican',\n    'pellet',\n    'pelt',\n    'pelvis',\n    'penalize',\n    'penalty',\n    'pencil',\n    'pendant',\n    'pending',\n    'penholder',\n    'penknife',\n    'pennant',\n    'penniless',\n    'penny',\n    'penpal',\n    'pension',\n    'pentagon',\n    'pentagram',\n    'pep',\n    'perceive',\n    'percent',\n    'perch',\n    'percolate',\n    'perennial',\n    'perfected',\n    'perfectly',\n    'perfume',\n    'periscope',\n    'perish',\n    'perjurer',\n    'perjury',\n    'perkiness',\n    'perky',\n    'perm',\n    'peroxide',\n    'perpetual',\n    'perplexed',\n    'persecute',\n    'persevere',\n    'persuaded',\n    'persuader',\n    'pesky',\n    'peso',\n    'pessimism',\n    'pessimist',\n    'pester',\n    'pesticide',\n    'petal',\n    'petite',\n    'petition',\n    'petri',\n    'petroleum',\n    'petted',\n    'petticoat',\n    'pettiness',\n    'petty',\n    'petunia',\n    'phantom',\n    'phobia',\n    'phoenix',\n    'phonebook',\n    'phoney',\n    'phonics',\n    'phoniness',\n    'phony',\n    'phosphate',\n    'photo',\n    'phrase',\n    'phrasing',\n    'placard',\n    'placate',\n    'placidly',\n    'plank',\n    'planner',\n    'plant',\n    'plasma',\n    'plaster',\n    'plastic',\n    'plated',\n    'platform',\n    'plating',\n    'platinum',\n    'platonic',\n    'platter',\n    'platypus',\n    'plausible',\n    'plausibly',\n    'playable',\n    'playback',\n    'player',\n    'playful',\n    'playgroup',\n    'playhouse',\n    'playing',\n    'playlist',\n    'playmaker',\n    'playmate',\n    'playoff',\n    'playpen',\n    'playroom',\n    'playset',\n    'plaything',\n    'playtime',\n    'plaza',\n    'pleading',\n    'pleat',\n    'pledge',\n    'plentiful',\n    'plenty',\n    'plethora',\n    'plexiglas',\n    'pliable',\n    'plod',\n    'plop',\n    'plot',\n    'plow',\n    'ploy',\n    'pluck',\n    'plug',\n    'plunder',\n    'plunging',\n    'plural',\n    'plus',\n    'plutonium',\n    'plywood',\n    'poach',\n    'pod',\n    'poem',\n    'poet',\n    'pogo',\n    'pointed',\n    'pointer',\n    'pointing',\n    'pointless',\n    'pointy',\n    'poise',\n    'poison',\n    'poker',\n    'poking',\n    'polar',\n    'police',\n    'policy',\n    'polio',\n    'polish',\n    'politely',\n    'polka',\n    'polo',\n    'polyester',\n    'polygon',\n    'polygraph',\n    'polymer',\n    'poncho',\n    'pond',\n    'pony',\n    'popcorn',\n    'pope',\n    'poplar',\n    'popper',\n    'poppy',\n    'popsicle',\n    'populace',\n    'popular',\n    'populate',\n    'porcupine',\n    'pork',\n    'porous',\n    'porridge',\n    'portable',\n    'portal',\n    'portfolio',\n    'porthole',\n    'portion',\n    'portly',\n    'portside',\n    'poser',\n    'posh',\n    'posing',\n    'possible',\n    'possibly',\n    'possum',\n    'postage',\n    'postal',\n    'postbox',\n    'postcard',\n    'posted',\n    'poster',\n    'posting',\n    'postnasal',\n    'posture',\n    'postwar',\n    'pouch',\n    'pounce',\n    'pouncing',\n    'pound',\n    'pouring',\n    'pout',\n    'powdered',\n    'powdering',\n    'powdery',\n    'power',\n    'powwow',\n    'pox',\n    'praising',\n    'prance',\n    'prancing',\n    'pranker',\n    'prankish',\n    'prankster',\n    'prayer',\n    'praying',\n    'preacher',\n    'preaching',\n    'preachy',\n    'preamble',\n    'precinct',\n    'precise',\n    'precision',\n    'precook',\n    'precut',\n    'predator',\n    'predefine',\n    'predict',\n    'preface',\n    'prefix',\n    'preflight',\n    'preformed',\n    'pregame',\n    'pregnancy',\n    'pregnant',\n    'preheated',\n    'prelaunch',\n    'prelaw',\n    'prelude',\n    'premiere',\n    'premises',\n    'premium',\n    'prenatal',\n    'preoccupy',\n    'preorder',\n    'prepaid',\n    'prepay',\n    'preplan',\n    'preppy',\n    'preschool',\n    'prescribe',\n    'preseason',\n    'preset',\n    'preshow',\n    'president',\n    'presoak',\n    'press',\n    'presume',\n    'presuming',\n    'preteen',\n    'pretended',\n    'pretender',\n    'pretense',\n    'pretext',\n    'pretty',\n    'pretzel',\n    'prevail',\n    'prevalent',\n    'prevent',\n    'preview',\n    'previous',\n    'prewar',\n    'prewashed',\n    'prideful',\n    'pried',\n    'primal',\n    'primarily',\n    'primary',\n    'primate',\n    'primer',\n    'primp',\n    'princess',\n    'print',\n    'prior',\n    'prism',\n    'prison',\n    'prissy',\n    'pristine',\n    'privacy',\n    'private',\n    'privatize',\n    'prize',\n    'proactive',\n    'probable',\n    'probably',\n    'probation',\n    'probe',\n    'probing',\n    'probiotic',\n    'problem',\n    'procedure',\n    'process',\n    'proclaim',\n    'procreate',\n    'procurer',\n    'prodigal',\n    'prodigy',\n    'produce',\n    'product',\n    'profane',\n    'profanity',\n    'professed',\n    'professor',\n    'profile',\n    'profound',\n    'profusely',\n    'progeny',\n    'prognosis',\n    'program',\n    'progress',\n    'projector',\n    'prologue',\n    'prolonged',\n    'promenade',\n    'prominent',\n    'promoter',\n    'promotion',\n    'prompter',\n    'promptly',\n    'prone',\n    'prong',\n    'pronounce',\n    'pronto',\n    'proofing',\n    'proofread',\n    'proofs',\n    'propeller',\n    'properly',\n    'property',\n    'proponent',\n    'proposal',\n    'propose',\n    'props',\n    'prorate',\n    'protector',\n    'protegee',\n    'proton',\n    'prototype',\n    'protozoan',\n    'protract',\n    'protrude',\n    'proud',\n    'provable',\n    'proved',\n    'proven',\n    'provided',\n    'provider',\n    'providing',\n    'province',\n    'proving',\n    'provoke',\n    'provoking',\n    'provolone',\n    'prowess',\n    'prowler',\n    'prowling',\n    'proximity',\n    'proxy',\n    'prozac',\n    'prude',\n    'prudishly',\n    'prune',\n    'pruning',\n    'pry',\n    'psychic',\n    'public',\n    'publisher',\n    'pucker',\n    'pueblo',\n    'pug',\n    'pull',\n    'pulmonary',\n    'pulp',\n    'pulsate',\n    'pulse',\n    'pulverize',\n    'puma',\n    'pumice',\n    'pummel',\n    'punch',\n    'punctual',\n    'punctuate',\n    'punctured',\n    'pungent',\n    'punisher',\n    'punk',\n    'pupil',\n    'puppet',\n    'puppy',\n    'purchase',\n    'pureblood',\n    'purebred',\n    'purely',\n    'pureness',\n    'purgatory',\n    'purge',\n    'purging',\n    'purifier',\n    'purify',\n    'purist',\n    'puritan',\n    'purity',\n    'purple',\n    'purplish',\n    'purposely',\n    'purr',\n    'purse',\n    'pursuable',\n    'pursuant',\n    'pursuit',\n    'purveyor',\n    'pushcart',\n    'pushchair',\n    'pusher',\n    'pushiness',\n    'pushing',\n    'pushover',\n    'pushpin',\n    'pushup',\n    'pushy',\n    'putdown',\n    'putt',\n    'puzzle',\n    'puzzling',\n    'pyramid',\n    'pyromania',\n    'python',\n    'quack',\n    'quadrant',\n    'quail',\n    'quaintly',\n    'quake',\n    'quaking',\n    'qualified',\n    'qualifier',\n    'qualify',\n    'quality',\n    'qualm',\n    'quantum',\n    'quarrel',\n    'quarry',\n    'quartered',\n    'quarterly',\n    'quarters',\n    'quartet',\n    'quench',\n    'query',\n    'quicken',\n    'quickly',\n    'quickness',\n    'quicksand',\n    'quickstep',\n    'quiet',\n    'quill',\n    'quilt',\n    'quintet',\n    'quintuple',\n    'quirk',\n    'quit',\n    'quiver',\n    'quizzical',\n    'quotable',\n    'quotation',\n    'quote',\n    'rabid',\n    'race',\n    'racing',\n    'racism',\n    'rack',\n    'racoon',\n    'radar',\n    'radial',\n    'radiance',\n    'radiantly',\n    'radiated',\n    'radiation',\n    'radiator',\n    'radio',\n    'radish',\n    'raffle',\n    'raft',\n    'rage',\n    'ragged',\n    'raging',\n    'ragweed',\n    'raider',\n    'railcar',\n    'railing',\n    'railroad',\n    'railway',\n    'raisin',\n    'rake',\n    'raking',\n    'rally',\n    'ramble',\n    'rambling',\n    'ramp',\n    'ramrod',\n    'ranch',\n    'rancidity',\n    'random',\n    'ranged',\n    'ranger',\n    'ranging',\n    'ranked',\n    'ranking',\n    'ransack',\n    'ranting',\n    'rants',\n    'rare',\n    'rarity',\n    'rascal',\n    'rash',\n    'rasping',\n    'ravage',\n    'raven',\n    'ravine',\n    'raving',\n    'ravioli',\n    'ravishing',\n    'reabsorb',\n    'reach',\n    'reacquire',\n    'reaction',\n    'reactive',\n    'reactor',\n    'reaffirm',\n    'ream',\n    'reanalyze',\n    'reappear',\n    'reapply',\n    'reappoint',\n    'reapprove',\n    'rearrange',\n    'rearview',\n    'reason',\n    'reassign',\n    'reassure',\n    'reattach',\n    'reawake',\n    'rebalance',\n    'rebate',\n    'rebel',\n    'rebirth',\n    'reboot',\n    'reborn',\n    'rebound',\n    'rebuff',\n    'rebuild',\n    'rebuilt',\n    'reburial',\n    'rebuttal',\n    'recall',\n    'recant',\n    'recapture',\n    'recast',\n    'recede',\n    'recent',\n    'recess',\n    'recharger',\n    'recipient',\n    'recital',\n    'recite',\n    'reckless',\n    'reclaim',\n    'recliner',\n    'reclining',\n    'recluse',\n    'reclusive',\n    'recognize',\n    'recoil',\n    'recollect',\n    'recolor',\n    'reconcile',\n    'reconfirm',\n    'reconvene',\n    'recopy',\n    'record',\n    'recount',\n    'recoup',\n    'recovery',\n    'recreate',\n    'rectal',\n    'rectangle',\n    'rectified',\n    'rectify',\n    'recycled',\n    'recycler',\n    'recycling',\n    'reemerge',\n    'reenact',\n    'reenter',\n    'reentry',\n    'reexamine',\n    'referable',\n    'referee',\n    'reference',\n    'refill',\n    'refinance',\n    'refined',\n    'refinery',\n    'refining',\n    'refinish',\n    'reflected',\n    'reflector',\n    'reflex',\n    'reflux',\n    'refocus',\n    'refold',\n    'reforest',\n    'reformat',\n    'reformed',\n    'reformer',\n    'reformist',\n    'refract',\n    'refrain',\n    'refreeze',\n    'refresh',\n    'refried',\n    'refueling',\n    'refund',\n    'refurbish',\n    'refurnish',\n    'refusal',\n    'refuse',\n    'refusing',\n    'refutable',\n    'refute',\n    'regain',\n    'regalia',\n    'regally',\n    'reggae',\n    'regime',\n    'region',\n    'register',\n    'registrar',\n    'registry',\n    'regress',\n    'regretful',\n    'regroup',\n    'regular',\n    'regulate',\n    'regulator',\n    'rehab',\n    'reheat',\n    'rehire',\n    'rehydrate',\n    'reimburse',\n    'reissue',\n    'reiterate',\n    'rejoice',\n    'rejoicing',\n    'rejoin',\n    'rekindle',\n    'relapse',\n    'relapsing',\n    'relatable',\n    'related',\n    'relation',\n    'relative',\n    'relax',\n    'relay',\n    'relearn',\n    'release',\n    'relenting',\n    'reliable',\n    'reliably',\n    'reliance',\n    'reliant',\n    'relic',\n    'relieve',\n    'relieving',\n    'relight',\n    'relish',\n    'relive',\n    'reload',\n    'relocate',\n    'relock',\n    'reluctant',\n    'rely',\n    'remake',\n    'remark',\n    'remarry',\n    'rematch',\n    'remedial',\n    'remedy',\n    'remember',\n    'reminder',\n    'remindful',\n    'remission',\n    'remix',\n    'remnant',\n    'remodeler',\n    'remold',\n    'remorse',\n    'remote',\n    'removable',\n    'removal',\n    'removed',\n    'remover',\n    'removing',\n    'rename',\n    'renderer',\n    'rendering',\n    'rendition',\n    'renegade',\n    'renewable',\n    'renewably',\n    'renewal',\n    'renewed',\n    'renounce',\n    'renovate',\n    'renovator',\n    'rentable',\n    'rental',\n    'rented',\n    'renter',\n    'reoccupy',\n    'reoccur',\n    'reopen',\n    'reorder',\n    'repackage',\n    'repacking',\n    'repaint',\n    'repair',\n    'repave',\n    'repaying',\n    'repayment',\n    'repeal',\n    'repeated',\n    'repeater',\n    'repent',\n    'rephrase',\n    'replace',\n    'replay',\n    'replica',\n    'reply',\n    'reporter',\n    'repose',\n    'repossess',\n    'repost',\n    'repressed',\n    'reprimand',\n    'reprint',\n    'reprise',\n    'reproach',\n    'reprocess',\n    'reproduce',\n    'reprogram',\n    'reps',\n    'reptile',\n    'reptilian',\n    'repugnant',\n    'repulsion',\n    'repulsive',\n    'repurpose',\n    'reputable',\n    'reputably',\n    'request',\n    'require',\n    'requisite',\n    'reroute',\n    'rerun',\n    'resale',\n    'resample',\n    'rescuer',\n    'reseal',\n    'research',\n    'reselect',\n    'reseller',\n    'resemble',\n    'resend',\n    'resent',\n    'reset',\n    'reshape',\n    'reshoot',\n    'reshuffle',\n    'residence',\n    'residency',\n    'resident',\n    'residual',\n    'residue',\n    'resigned',\n    'resilient',\n    'resistant',\n    'resisting',\n    'resize',\n    'resolute',\n    'resolved',\n    'resonant',\n    'resonate',\n    'resort',\n    'resource',\n    'respect',\n    'resubmit',\n    'result',\n    'resume',\n    'resupply',\n    'resurface',\n    'resurrect',\n    'retail',\n    'retainer',\n    'retaining',\n    'retake',\n    'retaliate',\n    'retention',\n    'rethink',\n    'retinal',\n    'retired',\n    'retiree',\n    'retiring',\n    'retold',\n    'retool',\n    'retorted',\n    'retouch',\n    'retrace',\n    'retract',\n    'retrain',\n    'retread',\n    'retreat',\n    'retrial',\n    'retrieval',\n    'retriever',\n    'retry',\n    'return',\n    'retying',\n    'retype',\n    'reunion',\n    'reunite',\n    'reusable',\n    'reuse',\n    'reveal',\n    'reveler',\n    'revenge',\n    'revenue',\n    'reverb',\n    'revered',\n    'reverence',\n    'reverend',\n    'reversal',\n    'reverse',\n    'reversing',\n    'reversion',\n    'revert',\n    'revisable',\n    'revise',\n    'revision',\n    'revisit',\n    'revivable',\n    'revival',\n    'reviver',\n    'reviving',\n    'revocable',\n    'revoke',\n    'revolt',\n    'revolver',\n    'revolving',\n    'reward',\n    'rewash',\n    'rewind',\n    'rewire',\n    'reword',\n    'rework',\n    'rewrap',\n    'rewrite',\n    'rhyme',\n    'ribbon',\n    'ribcage',\n    'rice',\n    'riches',\n    'richly',\n    'richness',\n    'rickety',\n    'ricotta',\n    'riddance',\n    'ridden',\n    'ride',\n    'riding',\n    'rifling',\n    'rift',\n    'rigging',\n    'rigid',\n    'rigor',\n    'rimless',\n    'rimmed',\n    'rind',\n    'rink',\n    'rinse',\n    'rinsing',\n    'riot',\n    'ripcord',\n    'ripeness',\n    'ripening',\n    'ripping',\n    'ripple',\n    'rippling',\n    'riptide',\n    'rise',\n    'rising',\n    'risk',\n    'risotto',\n    'ritalin',\n    'ritzy',\n    'rival',\n    'riverbank',\n    'riverbed',\n    'riverboat',\n    'riverside',\n    'riveter',\n    'riveting',\n    'roamer',\n    'roaming',\n    'roast',\n    'robbing',\n    'robe',\n    'robin',\n    'robotics',\n    'robust',\n    'rockband',\n    'rocker',\n    'rocket',\n    'rockfish',\n    'rockiness',\n    'rocking',\n    'rocklike',\n    'rockslide',\n    'rockstar',\n    'rocky',\n    'rogue',\n    'roman',\n    'romp',\n    'rope',\n    'roping',\n    'roster',\n    'rosy',\n    'rotten',\n    'rotting',\n    'rotunda',\n    'roulette',\n    'rounding',\n    'roundish',\n    'roundness',\n    'roundup',\n    'roundworm',\n    'routine',\n    'routing',\n    'rover',\n    'roving',\n    'royal',\n    'rubbed',\n    'rubber',\n    'rubbing',\n    'rubble',\n    'rubdown',\n    'ruby',\n    'ruckus',\n    'rudder',\n    'rug',\n    'ruined',\n    'rule',\n    'rumble',\n    'rumbling',\n    'rummage',\n    'rumor',\n    'runaround',\n    'rundown',\n    'runner',\n    'running',\n    'runny',\n    'runt',\n    'runway',\n    'rupture',\n    'rural',\n    'ruse',\n    'rush',\n    'rust',\n    'rut',\n    'sabbath',\n    'sabotage',\n    'sacrament',\n    'sacred',\n    'sacrifice',\n    'sadden',\n    'saddlebag',\n    'saddled',\n    'saddling',\n    'sadly',\n    'sadness',\n    'safari',\n    'safeguard',\n    'safehouse',\n    'safely',\n    'safeness',\n    'saffron',\n    'saga',\n    'sage',\n    'sagging',\n    'saggy',\n    'said',\n    'saint',\n    'sake',\n    'salad',\n    'salami',\n    'salaried',\n    'salary',\n    'saline',\n    'salon',\n    'saloon',\n    'salsa',\n    'salt',\n    'salutary',\n    'salute',\n    'salvage',\n    'salvaging',\n    'salvation',\n    'same',\n    'sample',\n    'sampling',\n    'sanction',\n    'sanctity',\n    'sanctuary',\n    'sandal',\n    'sandbag',\n    'sandbank',\n    'sandbar',\n    'sandblast',\n    'sandbox',\n    'sanded',\n    'sandfish',\n    'sanding',\n    'sandlot',\n    'sandpaper',\n    'sandpit',\n    'sandstone',\n    'sandstorm',\n    'sandworm',\n    'sandy',\n    'sanitary',\n    'sanitizer',\n    'sank',\n    'santa',\n    'sapling',\n    'sappiness',\n    'sappy',\n    'sarcasm',\n    'sarcastic',\n    'sardine',\n    'sash',\n    'sasquatch',\n    'sassy',\n    'satchel',\n    'satiable',\n    'satin',\n    'satirical',\n    'satisfied',\n    'satisfy',\n    'saturate',\n    'saturday',\n    'sauciness',\n    'saucy',\n    'sauna',\n    'savage',\n    'savanna',\n    'saved',\n    'savings',\n    'savior',\n    'savor',\n    'saxophone',\n    'say',\n    'scabbed',\n    'scabby',\n    'scalded',\n    'scalding',\n    'scale',\n    'scaling',\n    'scallion',\n    'scallop',\n    'scalping',\n    'scam',\n    'scandal',\n    'scanner',\n    'scanning',\n    'scant',\n    'scapegoat',\n    'scarce',\n    'scarcity',\n    'scarecrow',\n    'scared',\n    'scarf',\n    'scarily',\n    'scariness',\n    'scarring',\n    'scary',\n    'scavenger',\n    'scenic',\n    'schedule',\n    'schematic',\n    'scheme',\n    'scheming',\n    'schilling',\n    'schnapps',\n    'scholar',\n    'science',\n    'scientist',\n    'scion',\n    'scoff',\n    'scolding',\n    'scone',\n    'scoop',\n    'scooter',\n    'scope',\n    'scorch',\n    'scorebook',\n    'scorecard',\n    'scored',\n    'scoreless',\n    'scorer',\n    'scoring',\n    'scorn',\n    'scorpion',\n    'scotch',\n    'scoundrel',\n    'scoured',\n    'scouring',\n    'scouting',\n    'scouts',\n    'scowling',\n    'scrabble',\n    'scraggly',\n    'scrambled',\n    'scrambler',\n    'scrap',\n    'scratch',\n    'scrawny',\n    'screen',\n    'scribble',\n    'scribe',\n    'scribing',\n    'scrimmage',\n    'script',\n    'scroll',\n    'scrooge',\n    'scrounger',\n    'scrubbed',\n    'scrubber',\n    'scruffy',\n    'scrunch',\n    'scrutiny',\n    'scuba',\n    'scuff',\n    'sculptor',\n    'sculpture',\n    'scurvy',\n    'scuttle',\n    'secluded',\n    'secluding',\n    'seclusion',\n    'second',\n    'secrecy',\n    'secret',\n    'sectional',\n    'sector',\n    'secular',\n    'securely',\n    'security',\n    'sedan',\n    'sedate',\n    'sedation',\n    'sedative',\n    'sediment',\n    'seduce',\n    'seducing',\n    'segment',\n    'seismic',\n    'seizing',\n    'seldom',\n    'selected',\n    'selection',\n    'selective',\n    'selector',\n    'self',\n    'seltzer',\n    'semantic',\n    'semester',\n    'semicolon',\n    'semifinal',\n    'seminar',\n    'semisoft',\n    'semisweet',\n    'senate',\n    'senator',\n    'send',\n    'senior',\n    'senorita',\n    'sensation',\n    'sensitive',\n    'sensitize',\n    'sensually',\n    'sensuous',\n    'sepia',\n    'september',\n    'septic',\n    'septum',\n    'sequel',\n    'sequence',\n    'sequester',\n    'series',\n    'sermon',\n    'serotonin',\n    'serpent',\n    'serrated',\n    'serve',\n    'service',\n    'serving',\n    'sesame',\n    'sessions',\n    'setback',\n    'setting',\n    'settle',\n    'settling',\n    'setup',\n    'sevenfold',\n    'seventeen',\n    'seventh',\n    'seventy',\n    'severity',\n    'shabby',\n    'shack',\n    'shaded',\n    'shadily',\n    'shadiness',\n    'shading',\n    'shadow',\n    'shady',\n    'shaft',\n    'shakable',\n    'shakily',\n    'shakiness',\n    'shaking',\n    'shaky',\n    'shale',\n    'shallot',\n    'shallow',\n    'shame',\n    'shampoo',\n    'shamrock',\n    'shank',\n    'shanty',\n    'shape',\n    'shaping',\n    'share',\n    'sharpener',\n    'sharper',\n    'sharpie',\n    'sharply',\n    'sharpness',\n    'shawl',\n    'sheath',\n    'shed',\n    'sheep',\n    'sheet',\n    'shelf',\n    'shell',\n    'shelter',\n    'shelve',\n    'shelving',\n    'sherry',\n    'shield',\n    'shifter',\n    'shifting',\n    'shiftless',\n    'shifty',\n    'shimmer',\n    'shimmy',\n    'shindig',\n    'shine',\n    'shingle',\n    'shininess',\n    'shining',\n    'shiny',\n    'ship',\n    'shirt',\n    'shivering',\n    'shock',\n    'shone',\n    'shoplift',\n    'shopper',\n    'shopping',\n    'shoptalk',\n    'shore',\n    'shortage',\n    'shortcake',\n    'shortcut',\n    'shorten',\n    'shorter',\n    'shorthand',\n    'shortlist',\n    'shortly',\n    'shortness',\n    'shorts',\n    'shortwave',\n    'shorty',\n    'shout',\n    'shove',\n    'showbiz',\n    'showcase',\n    'showdown',\n    'shower',\n    'showgirl',\n    'showing',\n    'showman',\n    'shown',\n    'showoff',\n    'showpiece',\n    'showplace',\n    'showroom',\n    'showy',\n    'shrank',\n    'shrapnel',\n    'shredder',\n    'shredding',\n    'shrewdly',\n    'shriek',\n    'shrill',\n    'shrimp',\n    'shrine',\n    'shrink',\n    'shrivel',\n    'shrouded',\n    'shrubbery',\n    'shrubs',\n    'shrug',\n    'shrunk',\n    'shucking',\n    'shudder',\n    'shuffle',\n    'shuffling',\n    'shun',\n    'shush',\n    'shut',\n    'shy',\n    'siamese',\n    'siberian',\n    'sibling',\n    'siding',\n    'sierra',\n    'siesta',\n    'sift',\n    'sighing',\n    'silenced',\n    'silencer',\n    'silent',\n    'silica',\n    'silicon',\n    'silk',\n    'silliness',\n    'silly',\n    'silo',\n    'silt',\n    'silver',\n    'similarly',\n    'simile',\n    'simmering',\n    'simple',\n    'simplify',\n    'simply',\n    'sincere',\n    'sincerity',\n    'singer',\n    'singing',\n    'single',\n    'singular',\n    'sinister',\n    'sinless',\n    'sinner',\n    'sinuous',\n    'sip',\n    'siren',\n    'sister',\n    'sitcom',\n    'sitter',\n    'sitting',\n    'situated',\n    'situation',\n    'sixfold',\n    'sixteen',\n    'sixth',\n    'sixties',\n    'sixtieth',\n    'sixtyfold',\n    'sizable',\n    'sizably',\n    'size',\n    'sizing',\n    'sizzle',\n    'sizzling',\n    'skater',\n    'skating',\n    'skedaddle',\n    'skeletal',\n    'skeleton',\n    'skeptic',\n    'sketch',\n    'skewed',\n    'skewer',\n    'skid',\n    'skied',\n    'skier',\n    'skies',\n    'skiing',\n    'skilled',\n    'skillet',\n    'skillful',\n    'skimmed',\n    'skimmer',\n    'skimming',\n    'skimpily',\n    'skincare',\n    'skinhead',\n    'skinless',\n    'skinning',\n    'skinny',\n    'skintight',\n    'skipper',\n    'skipping',\n    'skirmish',\n    'skirt',\n    'skittle',\n    'skydiver',\n    'skylight',\n    'skyline',\n    'skype',\n    'skyrocket',\n    'skyward',\n    'slab',\n    'slacked',\n    'slacker',\n    'slacking',\n    'slackness',\n    'slacks',\n    'slain',\n    'slam',\n    'slander',\n    'slang',\n    'slapping',\n    'slapstick',\n    'slashed',\n    'slashing',\n    'slate',\n    'slather',\n    'slaw',\n    'sled',\n    'sleek',\n    'sleep',\n    'sleet',\n    'sleeve',\n    'slept',\n    'sliceable',\n    'sliced',\n    'slicer',\n    'slicing',\n    'slick',\n    'slider',\n    'slideshow',\n    'sliding',\n    'slighted',\n    'slighting',\n    'slightly',\n    'slimness',\n    'slimy',\n    'slinging',\n    'slingshot',\n    'slinky',\n    'slip',\n    'slit',\n    'sliver',\n    'slobbery',\n    'slogan',\n    'sloped',\n    'sloping',\n    'sloppily',\n    'sloppy',\n    'slot',\n    'slouching',\n    'slouchy',\n    'sludge',\n    'slug',\n    'slum',\n    'slurp',\n    'slush',\n    'sly',\n    'small',\n    'smartly',\n    'smartness',\n    'smasher',\n    'smashing',\n    'smashup',\n    'smell',\n    'smelting',\n    'smile',\n    'smilingly',\n    'smirk',\n    'smite',\n    'smith',\n    'smitten',\n    'smock',\n    'smog',\n    'smoked',\n    'smokeless',\n    'smokiness',\n    'smoking',\n    'smoky',\n    'smolder',\n    'smooth',\n    'smother',\n    'smudge',\n    'smudgy',\n    'smuggler',\n    'smuggling',\n    'smugly',\n    'smugness',\n    'snack',\n    'snagged',\n    'snaking',\n    'snap',\n    'snare',\n    'snarl',\n    'snazzy',\n    'sneak',\n    'sneer',\n    'sneeze',\n    'sneezing',\n    'snide',\n    'sniff',\n    'snippet',\n    'snipping',\n    'snitch',\n    'snooper',\n    'snooze',\n    'snore',\n    'snoring',\n    'snorkel',\n    'snort',\n    'snout',\n    'snowbird',\n    'snowboard',\n    'snowbound',\n    'snowcap',\n    'snowdrift',\n    'snowdrop',\n    'snowfall',\n    'snowfield',\n    'snowflake',\n    'snowiness',\n    'snowless',\n    'snowman',\n    'snowplow',\n    'snowshoe',\n    'snowstorm',\n    'snowsuit',\n    'snowy',\n    'snub',\n    'snuff',\n    'snuggle',\n    'snugly',\n    'snugness',\n    'speak',\n    'spearfish',\n    'spearhead',\n    'spearman',\n    'spearmint',\n    'species',\n    'specimen',\n    'specked',\n    'speckled',\n    'specks',\n    'spectacle',\n    'spectator',\n    'spectrum',\n    'speculate',\n    'speech',\n    'speed',\n    'spellbind',\n    'speller',\n    'spelling',\n    'spendable',\n    'spender',\n    'spending',\n    'spent',\n    'spew',\n    'sphere',\n    'spherical',\n    'sphinx',\n    'spider',\n    'spied',\n    'spiffy',\n    'spill',\n    'spilt',\n    'spinach',\n    'spinal',\n    'spindle',\n    'spinner',\n    'spinning',\n    'spinout',\n    'spinster',\n    'spiny',\n    'spiral',\n    'spirited',\n    'spiritism',\n    'spirits',\n    'spiritual',\n    'splashed',\n    'splashing',\n    'splashy',\n    'splatter',\n    'spleen',\n    'splendid',\n    'splendor',\n    'splice',\n    'splicing',\n    'splinter',\n    'splotchy',\n    'splurge',\n    'spoilage',\n    'spoiled',\n    'spoiler',\n    'spoiling',\n    'spoils',\n    'spoken',\n    'spokesman',\n    'sponge',\n    'spongy',\n    'sponsor',\n    'spoof',\n    'spookily',\n    'spooky',\n    'spool',\n    'spoon',\n    'spore',\n    'sporting',\n    'sports',\n    'sporty',\n    'spotless',\n    'spotlight',\n    'spotted',\n    'spotter',\n    'spotting',\n    'spotty',\n    'spousal',\n    'spouse',\n    'spout',\n    'sprain',\n    'sprang',\n    'sprawl',\n    'spray',\n    'spree',\n    'sprig',\n    'spring',\n    'sprinkled',\n    'sprinkler',\n    'sprint',\n    'sprite',\n    'sprout',\n    'spruce',\n    'sprung',\n    'spry',\n    'spud',\n    'spur',\n    'sputter',\n    'spyglass',\n    'squabble',\n    'squad',\n    'squall',\n    'squander',\n    'squash',\n    'squatted',\n    'squatter',\n    'squatting',\n    'squeak',\n    'squealer',\n    'squealing',\n    'squeamish',\n    'squeegee',\n    'squeeze',\n    'squeezing',\n    'squid',\n    'squiggle',\n    'squiggly',\n    'squint',\n    'squire',\n    'squirt',\n    'squishier',\n    'squishy',\n    'stability',\n    'stabilize',\n    'stable',\n    'stack',\n    'stadium',\n    'staff',\n    'stage',\n    'staging',\n    'stagnant',\n    'stagnate',\n    'stainable',\n    'stained',\n    'staining',\n    'stainless',\n    'stalemate',\n    'staleness',\n    'stalling',\n    'stallion',\n    'stamina',\n    'stammer',\n    'stamp',\n    'stand',\n    'stank',\n    'staple',\n    'stapling',\n    'starboard',\n    'starch',\n    'stardom',\n    'stardust',\n    'starfish',\n    'stargazer',\n    'staring',\n    'stark',\n    'starless',\n    'starlet',\n    'starlight',\n    'starlit',\n    'starring',\n    'starry',\n    'starship',\n    'starter',\n    'starting',\n    'startle',\n    'startling',\n    'startup',\n    'starved',\n    'starving',\n    'stash',\n    'state',\n    'static',\n    'statistic',\n    'statue',\n    'stature',\n    'status',\n    'statute',\n    'statutory',\n    'staunch',\n    'stays',\n    'steadfast',\n    'steadier',\n    'steadily',\n    'steadying',\n    'steam',\n    'steed',\n    'steep',\n    'steerable',\n    'steering',\n    'steersman',\n    'stegosaur',\n    'stellar',\n    'stem',\n    'stench',\n    'stencil',\n    'step',\n    'stereo',\n    'sterile',\n    'sterility',\n    'sterilize',\n    'sterling',\n    'sternness',\n    'sternum',\n    'stew',\n    'stick',\n    'stiffen',\n    'stiffly',\n    'stiffness',\n    'stifle',\n    'stifling',\n    'stillness',\n    'stilt',\n    'stimulant',\n    'stimulate',\n    'stimuli',\n    'stimulus',\n    'stinger',\n    'stingily',\n    'stinging',\n    'stingray',\n    'stingy',\n    'stinking',\n    'stinky',\n    'stipend',\n    'stipulate',\n    'stir',\n    'stitch',\n    'stock',\n    'stoic',\n    'stoke',\n    'stole',\n    'stomp',\n    'stonewall',\n    'stoneware',\n    'stonework',\n    'stoning',\n    'stony',\n    'stood',\n    'stooge',\n    'stool',\n    'stoop',\n    'stoplight',\n    'stoppable',\n    'stoppage',\n    'stopped',\n    'stopper',\n    'stopping',\n    'stopwatch',\n    'storable',\n    'storage',\n    'storeroom',\n    'storewide',\n    'storm',\n    'stout',\n    'stove',\n    'stowaway',\n    'stowing',\n    'straddle',\n    'straggler',\n    'strained',\n    'strainer',\n    'straining',\n    'strangely',\n    'stranger',\n    'strangle',\n    'strategic',\n    'strategy',\n    'stratus',\n    'straw',\n    'stray',\n    'streak',\n    'stream',\n    'street',\n    'strength',\n    'strenuous',\n    'strep',\n    'stress',\n    'stretch',\n    'strewn',\n    'stricken',\n    'strict',\n    'stride',\n    'strife',\n    'strike',\n    'striking',\n    'strive',\n    'striving',\n    'strobe',\n    'strode',\n    'stroller',\n    'strongbox',\n    'strongly',\n    'strongman',\n    'struck',\n    'structure',\n    'strudel',\n    'struggle',\n    'strum',\n    'strung',\n    'strut',\n    'stubbed',\n    'stubble',\n    'stubbly',\n    'stubborn',\n    'stucco',\n    'stuck',\n    'student',\n    'studied',\n    'studio',\n    'study',\n    'stuffed',\n    'stuffing',\n    'stuffy',\n    'stumble',\n    'stumbling',\n    'stump',\n    'stung',\n    'stunned',\n    'stunner',\n    'stunning',\n    'stunt',\n    'stupor',\n    'sturdily',\n    'sturdy',\n    'styling',\n    'stylishly',\n    'stylist',\n    'stylized',\n    'stylus',\n    'suave',\n    'subarctic',\n    'subatomic',\n    'subdivide',\n    'subdued',\n    'subduing',\n    'subfloor',\n    'subgroup',\n    'subheader',\n    'subject',\n    'sublease',\n    'sublet',\n    'sublevel',\n    'sublime',\n    'submarine',\n    'submerge',\n    'submersed',\n    'submitter',\n    'subpanel',\n    'subpar',\n    'subplot',\n    'subprime',\n    'subscribe',\n    'subscript',\n    'subsector',\n    'subside',\n    'subsiding',\n    'subsidize',\n    'subsidy',\n    'subsoil',\n    'subsonic',\n    'substance',\n    'subsystem',\n    'subtext',\n    'subtitle',\n    'subtly',\n    'subtotal',\n    'subtract',\n    'subtype',\n    'suburb',\n    'subway',\n    'subwoofer',\n    'subzero',\n    'succulent',\n    'such',\n    'suction',\n    'sudden',\n    'sudoku',\n    'suds',\n    'sufferer',\n    'suffering',\n    'suffice',\n    'suffix',\n    'suffocate',\n    'suffrage',\n    'sugar',\n    'suggest',\n    'suing',\n    'suitable',\n    'suitably',\n    'suitcase',\n    'suitor',\n    'sulfate',\n    'sulfide',\n    'sulfite',\n    'sulfur',\n    'sulk',\n    'sullen',\n    'sulphate',\n    'sulphuric',\n    'sultry',\n    'superbowl',\n    'superglue',\n    'superhero',\n    'superior',\n    'superjet',\n    'superman',\n    'supermom',\n    'supernova',\n    'supervise',\n    'supper',\n    'supplier',\n    'supply',\n    'support',\n    'supremacy',\n    'supreme',\n    'surcharge',\n    'surely',\n    'sureness',\n    'surface',\n    'surfacing',\n    'surfboard',\n    'surfer',\n    'surgery',\n    'surgical',\n    'surging',\n    'surname',\n    'surpass',\n    'surplus',\n    'surprise',\n    'surreal',\n    'surrender',\n    'surrogate',\n    'surround',\n    'survey',\n    'survival',\n    'survive',\n    'surviving',\n    'survivor',\n    'sushi',\n    'suspect',\n    'suspend',\n    'suspense',\n    'sustained',\n    'sustainer',\n    'swab',\n    'swaddling',\n    'swagger',\n    'swampland',\n    'swan',\n    'swapping',\n    'swarm',\n    'sway',\n    'swear',\n    'sweat',\n    'sweep',\n    'swell',\n    'swept',\n    'swerve',\n    'swifter',\n    'swiftly',\n    'swiftness',\n    'swimmable',\n    'swimmer',\n    'swimming',\n    'swimsuit',\n    'swimwear',\n    'swinger',\n    'swinging',\n    'swipe',\n    'swirl',\n    'switch',\n    'swivel',\n    'swizzle',\n    'swooned',\n    'swoop',\n    'swoosh',\n    'swore',\n    'sworn',\n    'swung',\n    'sycamore',\n    'sympathy',\n    'symphonic',\n    'symphony',\n    'symptom',\n    'synapse',\n    'syndrome',\n    'synergy',\n    'synopses',\n    'synopsis',\n    'synthesis',\n    'synthetic',\n    'syrup',\n    'system',\n    't-shirt',\n    'tabasco',\n    'tabby',\n    'tableful',\n    'tables',\n    'tablet',\n    'tableware',\n    'tabloid',\n    'tackiness',\n    'tacking',\n    'tackle',\n    'tackling',\n    'tacky',\n    'taco',\n    'tactful',\n    'tactical',\n    'tactics',\n    'tactile',\n    'tactless',\n    'tadpole',\n    'taekwondo',\n    'tag',\n    'tainted',\n    'take',\n    'taking',\n    'talcum',\n    'talisman',\n    'tall',\n    'talon',\n    'tamale',\n    'tameness',\n    'tamer',\n    'tamper',\n    'tank',\n    'tanned',\n    'tannery',\n    'tanning',\n    'tantrum',\n    'tapeless',\n    'tapered',\n    'tapering',\n    'tapestry',\n    'tapioca',\n    'tapping',\n    'taps',\n    'tarantula',\n    'target',\n    'tarmac',\n    'tarnish',\n    'tarot',\n    'tartar',\n    'tartly',\n    'tartness',\n    'task',\n    'tassel',\n    'taste',\n    'tastiness',\n    'tasting',\n    'tasty',\n    'tattered',\n    'tattle',\n    'tattling',\n    'tattoo',\n    'taunt',\n    'tavern',\n    'thank',\n    'that',\n    'thaw',\n    'theater',\n    'theatrics',\n    'thee',\n    'theft',\n    'theme',\n    'theology',\n    'theorize',\n    'thermal',\n    'thermos',\n    'thesaurus',\n    'these',\n    'thesis',\n    'thespian',\n    'thicken',\n    'thicket',\n    'thickness',\n    'thieving',\n    'thievish',\n    'thigh',\n    'thimble',\n    'thing',\n    'think',\n    'thinly',\n    'thinner',\n    'thinness',\n    'thinning',\n    'thirstily',\n    'thirsting',\n    'thirsty',\n    'thirteen',\n    'thirty',\n    'thong',\n    'thorn',\n    'those',\n    'thousand',\n    'thrash',\n    'thread',\n    'threaten',\n    'threefold',\n    'thrift',\n    'thrill',\n    'thrive',\n    'thriving',\n    'throat',\n    'throbbing',\n    'throng',\n    'throttle',\n    'throwaway',\n    'throwback',\n    'thrower',\n    'throwing',\n    'thud',\n    'thumb',\n    'thumping',\n    'thursday',\n    'thus',\n    'thwarting',\n    'thyself',\n    'tiara',\n    'tibia',\n    'tidal',\n    'tidbit',\n    'tidiness',\n    'tidings',\n    'tidy',\n    'tiger',\n    'tighten',\n    'tightly',\n    'tightness',\n    'tightrope',\n    'tightwad',\n    'tigress',\n    'tile',\n    'tiling',\n    'till',\n    'tilt',\n    'timid',\n    'timing',\n    'timothy',\n    'tinderbox',\n    'tinfoil',\n    'tingle',\n    'tingling',\n    'tingly',\n    'tinker',\n    'tinkling',\n    'tinsel',\n    'tinsmith',\n    'tint',\n    'tinwork',\n    'tiny',\n    'tipoff',\n    'tipped',\n    'tipper',\n    'tipping',\n    'tiptoeing',\n    'tiptop',\n    'tiring',\n    'tissue',\n    'trace',\n    'tracing',\n    'track',\n    'traction',\n    'tractor',\n    'trade',\n    'trading',\n    'tradition',\n    'traffic',\n    'tragedy',\n    'trailing',\n    'trailside',\n    'train',\n    'traitor',\n    'trance',\n    'tranquil',\n    'transfer',\n    'transform',\n    'translate',\n    'transpire',\n    'transport',\n    'transpose',\n    'trapdoor',\n    'trapeze',\n    'trapezoid',\n    'trapped',\n    'trapper',\n    'trapping',\n    'traps',\n    'trash',\n    'travel',\n    'traverse',\n    'travesty',\n    'tray',\n    'treachery',\n    'treading',\n    'treadmill',\n    'treason',\n    'treat',\n    'treble',\n    'tree',\n    'trekker',\n    'tremble',\n    'trembling',\n    'tremor',\n    'trench',\n    'trend',\n    'trespass',\n    'triage',\n    'trial',\n    'triangle',\n    'tribesman',\n    'tribunal',\n    'tribune',\n    'tributary',\n    'tribute',\n    'triceps',\n    'trickery',\n    'trickily',\n    'tricking',\n    'trickle',\n    'trickster',\n    'tricky',\n    'tricolor',\n    'tricycle',\n    'trident',\n    'tried',\n    'trifle',\n    'trifocals',\n    'trillion',\n    'trilogy',\n    'trimester',\n    'trimmer',\n    'trimming',\n    'trimness',\n    'trinity',\n    'trio',\n    'tripod',\n    'tripping',\n    'triumph',\n    'trivial',\n    'trodden',\n    'trolling',\n    'trombone',\n    'trophy',\n    'tropical',\n    'tropics',\n    'trouble',\n    'troubling',\n    'trough',\n    'trousers',\n    'trout',\n    'trowel',\n    'truce',\n    'truck',\n    'truffle',\n    'trump',\n    'trunks',\n    'trustable',\n    'trustee',\n    'trustful',\n    'trusting',\n    'trustless',\n    'truth',\n    'try',\n    'tubby',\n    'tubeless',\n    'tubular',\n    'tucking',\n    'tuesday',\n    'tug',\n    'tuition',\n    'tulip',\n    'tumble',\n    'tumbling',\n    'tummy',\n    'turban',\n    'turbine',\n    'turbofan',\n    'turbojet',\n    'turbulent',\n    'turf',\n    'turkey',\n    'turmoil',\n    'turret',\n    'turtle',\n    'tusk',\n    'tutor',\n    'tutu',\n    'tux',\n    'tweak',\n    'tweed',\n    'tweet',\n    'tweezers',\n    'twelve',\n    'twentieth',\n    'twenty',\n    'twerp',\n    'twice',\n    'twiddle',\n    'twiddling',\n    'twig',\n    'twilight',\n    'twine',\n    'twins',\n    'twirl',\n    'twistable',\n    'twisted',\n    'twister',\n    'twisting',\n    'twisty',\n    'twitch',\n    'twitter',\n    'tycoon',\n    'tying',\n    'tyke',\n    'udder',\n    'ultimate',\n    'ultimatum',\n    'ultra',\n    'umbilical',\n    'umbrella',\n    'umpire',\n    'unabashed',\n    'unable',\n    'unadorned',\n    'unadvised',\n    'unafraid',\n    'unaired',\n    'unaligned',\n    'unaltered',\n    'unarmored',\n    'unashamed',\n    'unaudited',\n    'unawake',\n    'unaware',\n    'unbaked',\n    'unbalance',\n    'unbeaten',\n    'unbend',\n    'unbent',\n    'unbiased',\n    'unbitten',\n    'unblended',\n    'unblessed',\n    'unblock',\n    'unbolted',\n    'unbounded',\n    'unboxed',\n    'unbraided',\n    'unbridle',\n    'unbroken',\n    'unbuckled',\n    'unbundle',\n    'unburned',\n    'unbutton',\n    'uncanny',\n    'uncapped',\n    'uncaring',\n    'uncertain',\n    'unchain',\n    'unchanged',\n    'uncharted',\n    'uncheck',\n    'uncivil',\n    'unclad',\n    'unclaimed',\n    'unclamped',\n    'unclasp',\n    'uncle',\n    'unclip',\n    'uncloak',\n    'unclog',\n    'unclothed',\n    'uncoated',\n    'uncoiled',\n    'uncolored',\n    'uncombed',\n    'uncommon',\n    'uncooked',\n    'uncork',\n    'uncorrupt',\n    'uncounted',\n    'uncouple',\n    'uncouth',\n    'uncover',\n    'uncross',\n    'uncrown',\n    'uncrushed',\n    'uncured',\n    'uncurious',\n    'uncurled',\n    'uncut',\n    'undamaged',\n    'undated',\n    'undaunted',\n    'undead',\n    'undecided',\n    'undefined',\n    'underage',\n    'underarm',\n    'undercoat',\n    'undercook',\n    'undercut',\n    'underdog',\n    'underdone',\n    'underfed',\n    'underfeed',\n    'underfoot',\n    'undergo',\n    'undergrad',\n    'underhand',\n    'underline',\n    'underling',\n    'undermine',\n    'undermost',\n    'underpaid',\n    'underpass',\n    'underpay',\n    'underrate',\n    'undertake',\n    'undertone',\n    'undertook',\n    'undertow',\n    'underuse',\n    'underwear',\n    'underwent',\n    'underwire',\n    'undesired',\n    'undiluted',\n    'undivided',\n    'undocked',\n    'undoing',\n    'undone',\n    'undrafted',\n    'undress',\n    'undrilled',\n    'undusted',\n    'undying',\n    'unearned',\n    'unearth',\n    'unease',\n    'uneasily',\n    'uneasy',\n    'uneatable',\n    'uneaten',\n    'unedited',\n    'unelected',\n    'unending',\n    'unengaged',\n    'unenvied',\n    'unequal',\n    'unethical',\n    'uneven',\n    'unexpired',\n    'unexposed',\n    'unfailing',\n    'unfair',\n    'unfasten',\n    'unfazed',\n    'unfeeling',\n    'unfiled',\n    'unfilled',\n    'unfitted',\n    'unfitting',\n    'unfixable',\n    'unfixed',\n    'unflawed',\n    'unfocused',\n    'unfold',\n    'unfounded',\n    'unframed',\n    'unfreeze',\n    'unfrosted',\n    'unfrozen',\n    'unfunded',\n    'unglazed',\n    'ungloved',\n    'unglue',\n    'ungodly',\n    'ungraded',\n    'ungreased',\n    'unguarded',\n    'unguided',\n    'unhappily',\n    'unhappy',\n    'unharmed',\n    'unhealthy',\n    'unheard',\n    'unhearing',\n    'unheated',\n    'unhelpful',\n    'unhidden',\n    'unhinge',\n    'unhitched',\n    'unholy',\n    'unhook',\n    'unicorn',\n    'unicycle',\n    'unified',\n    'unifier',\n    'uniformed',\n    'uniformly',\n    'unify',\n    'unimpeded',\n    'uninjured',\n    'uninstall',\n    'uninsured',\n    'uninvited',\n    'union',\n    'uniquely',\n    'unisexual',\n    'unison',\n    'unissued',\n    'unit',\n    'universal',\n    'universe',\n    'unjustly',\n    'unkempt',\n    'unkind',\n    'unknotted',\n    'unknowing',\n    'unknown',\n    'unlaced',\n    'unlatch',\n    'unlawful',\n    'unleaded',\n    'unlearned',\n    'unleash',\n    'unless',\n    'unleveled',\n    'unlighted',\n    'unlikable',\n    'unlimited',\n    'unlined',\n    'unlinked',\n    'unlisted',\n    'unlit',\n    'unlivable',\n    'unloaded',\n    'unloader',\n    'unlocked',\n    'unlocking',\n    'unlovable',\n    'unloved',\n    'unlovely',\n    'unloving',\n    'unluckily',\n    'unlucky',\n    'unmade',\n    'unmanaged',\n    'unmanned',\n    'unmapped',\n    'unmarked',\n    'unmasked',\n    'unmasking',\n    'unmatched',\n    'unmindful',\n    'unmixable',\n    'unmixed',\n    'unmolded',\n    'unmoral',\n    'unmovable',\n    'unmoved',\n    'unmoving',\n    'unnamable',\n    'unnamed',\n    'unnatural',\n    'unneeded',\n    'unnerve',\n    'unnerving',\n    'unnoticed',\n    'unopened',\n    'unopposed',\n    'unpack',\n    'unpadded',\n    'unpaid',\n    'unpainted',\n    'unpaired',\n    'unpaved',\n    'unpeeled',\n    'unpicked',\n    'unpiloted',\n    'unpinned',\n    'unplanned',\n    'unplanted',\n    'unpleased',\n    'unpledged',\n    'unplowed',\n    'unplug',\n    'unpopular',\n    'unproven',\n    'unquote',\n    'unranked',\n    'unrated',\n    'unraveled',\n    'unreached',\n    'unread',\n    'unreal',\n    'unreeling',\n    'unrefined',\n    'unrelated',\n    'unrented',\n    'unrest',\n    'unretired',\n    'unrevised',\n    'unrigged',\n    'unripe',\n    'unrivaled',\n    'unroasted',\n    'unrobed',\n    'unroll',\n    'unruffled',\n    'unruly',\n    'unrushed',\n    'unsaddle',\n    'unsafe',\n    'unsaid',\n    'unsalted',\n    'unsaved',\n    'unsavory',\n    'unscathed',\n    'unscented',\n    'unscrew',\n    'unsealed',\n    'unseated',\n    'unsecured',\n    'unseeing',\n    'unseemly',\n    'unseen',\n    'unselect',\n    'unselfish',\n    'unsent',\n    'unsettled',\n    'unshackle',\n    'unshaken',\n    'unshaved',\n    'unshaven',\n    'unsheathe',\n    'unshipped',\n    'unsightly',\n    'unsigned',\n    'unskilled',\n    'unsliced',\n    'unsmooth',\n    'unsnap',\n    'unsocial',\n    'unsoiled',\n    'unsold',\n    'unsolved',\n    'unsorted',\n    'unspoiled',\n    'unspoken',\n    'unstable',\n    'unstaffed',\n    'unstamped',\n    'unsteady',\n    'unsterile',\n    'unstirred',\n    'unstitch',\n    'unstopped',\n    'unstuck',\n    'unstuffed',\n    'unstylish',\n    'unsubtle',\n    'unsubtly',\n    'unsuited',\n    'unsure',\n    'unsworn',\n    'untagged',\n    'untainted',\n    'untaken',\n    'untamed',\n    'untangled',\n    'untapped',\n    'untaxed',\n    'unthawed',\n    'unthread',\n    'untidy',\n    'untie',\n    'until',\n    'untimed',\n    'untimely',\n    'untitled',\n    'untoasted',\n    'untold',\n    'untouched',\n    'untracked',\n    'untrained',\n    'untreated',\n    'untried',\n    'untrimmed',\n    'untrue',\n    'untruth',\n    'unturned',\n    'untwist',\n    'untying',\n    'unusable',\n    'unused',\n    'unusual',\n    'unvalued',\n    'unvaried',\n    'unvarying',\n    'unveiled',\n    'unveiling',\n    'unvented',\n    'unviable',\n    'unvisited',\n    'unvocal',\n    'unwanted',\n    'unwarlike',\n    'unwary',\n    'unwashed',\n    'unwatched',\n    'unweave',\n    'unwed',\n    'unwelcome',\n    'unwell',\n    'unwieldy',\n    'unwilling',\n    'unwind',\n    'unwired',\n    'unwitting',\n    'unwomanly',\n    'unworldly',\n    'unworn',\n    'unworried',\n    'unworthy',\n    'unwound',\n    'unwoven',\n    'unwrapped',\n    'unwritten',\n    'unzip',\n    'upbeat',\n    'upchuck',\n    'upcoming',\n    'upcountry',\n    'update',\n    'upfront',\n    'upgrade',\n    'upheaval',\n    'upheld',\n    'uphill',\n    'uphold',\n    'uplifted',\n    'uplifting',\n    'upload',\n    'upon',\n    'upper',\n    'upright',\n    'uprising',\n    'upriver',\n    'uproar',\n    'uproot',\n    'upscale',\n    'upside',\n    'upstage',\n    'upstairs',\n    'upstart',\n    'upstate',\n    'upstream',\n    'upstroke',\n    'upswing',\n    'uptake',\n    'uptight',\n    'uptown',\n    'upturned',\n    'upward',\n    'upwind',\n    'uranium',\n    'urban',\n    'urchin',\n    'urethane',\n    'urgency',\n    'urgent',\n    'urging',\n    'urologist',\n    'urology',\n    'usable',\n    'usage',\n    'useable',\n    'used',\n    'uselessly',\n    'user',\n    'usher',\n    'usual',\n    'utensil',\n    'utility',\n    'utilize',\n    'utmost',\n    'utopia',\n    'utter',\n    'vacancy',\n    'vacant',\n    'vacate',\n    'vacation',\n    'vagabond',\n    'vagrancy',\n    'vagrantly',\n    'vaguely',\n    'vagueness',\n    'valiant',\n    'valid',\n    'valium',\n    'valley',\n    'valuables',\n    'value',\n    'vanilla',\n    'vanish',\n    'vanity',\n    'vanquish',\n    'vantage',\n    'vaporizer',\n    'variable',\n    'variably',\n    'varied',\n    'variety',\n    'various',\n    'varmint',\n    'varnish',\n    'varsity',\n    'varying',\n    'vascular',\n    'vaseline',\n    'vastly',\n    'vastness',\n    'veal',\n    'vegan',\n    'veggie',\n    'vehicular',\n    'velcro',\n    'velocity',\n    'velvet',\n    'vendetta',\n    'vending',\n    'vendor',\n    'veneering',\n    'vengeful',\n    'venomous',\n    'ventricle',\n    'venture',\n    'venue',\n    'venus',\n    'verbalize',\n    'verbally',\n    'verbose',\n    'verdict',\n    'verify',\n    'verse',\n    'version',\n    'versus',\n    'vertebrae',\n    'vertical',\n    'vertigo',\n    'very',\n    'vessel',\n    'vest',\n    'veteran',\n    'veto',\n    'vexingly',\n    'viability',\n    'viable',\n    'vibes',\n    'vice',\n    'vicinity',\n    'victory',\n    'video',\n    'viewable',\n    'viewer',\n    'viewing',\n    'viewless',\n    'viewpoint',\n    'vigorous',\n    'village',\n    'villain',\n    'vindicate',\n    'vineyard',\n    'vintage',\n    'violate',\n    'violation',\n    'violator',\n    'violet',\n    'violin',\n    'viper',\n    'viral',\n    'virtual',\n    'virtuous',\n    'virus',\n    'visa',\n    'viscosity',\n    'viscous',\n    'viselike',\n    'visible',\n    'visibly',\n    'vision',\n    'visiting',\n    'visitor',\n    'visor',\n    'vista',\n    'vitality',\n    'vitalize',\n    'vitally',\n    'vitamins',\n    'vivacious',\n    'vividly',\n    'vividness',\n    'vixen',\n    'vocalist',\n    'vocalize',\n    'vocally',\n    'vocation',\n    'voice',\n    'voicing',\n    'void',\n    'volatile',\n    'volley',\n    'voltage',\n    'volumes',\n    'voter',\n    'voting',\n    'voucher',\n    'vowed',\n    'vowel',\n    'voyage',\n    'wackiness',\n    'wad',\n    'wafer',\n    'waffle',\n    'waged',\n    'wager',\n    'wages',\n    'waggle',\n    'wagon',\n    'wake',\n    'waking',\n    'walk',\n    'walmart',\n    'walnut',\n    'walrus',\n    'waltz',\n    'wand',\n    'wannabe',\n    'wanted',\n    'wanting',\n    'wasabi',\n    'washable',\n    'washbasin',\n    'washboard',\n    'washbowl',\n    'washcloth',\n    'washday',\n    'washed',\n    'washer',\n    'washhouse',\n    'washing',\n    'washout',\n    'washroom',\n    'washstand',\n    'washtub',\n    'wasp',\n    'wasting',\n    'watch',\n    'water',\n    'waviness',\n    'waving',\n    'wavy',\n    'whacking',\n    'whacky',\n    'wham',\n    'wharf',\n    'wheat',\n    'whenever',\n    'whiff',\n    'whimsical',\n    'whinny',\n    'whiny',\n    'whisking',\n    'whoever',\n    'whole',\n    'whomever',\n    'whoopee',\n    'whooping',\n    'whoops',\n    'why',\n    'wick',\n    'widely',\n    'widen',\n    'widget',\n    'widow',\n    'width',\n    'wieldable',\n    'wielder',\n    'wife',\n    'wifi',\n    'wikipedia',\n    'wildcard',\n    'wildcat',\n    'wilder',\n    'wildfire',\n    'wildfowl',\n    'wildland',\n    'wildlife',\n    'wildly',\n    'wildness',\n    'willed',\n    'willfully',\n    'willing',\n    'willow',\n    'willpower',\n    'wilt',\n    'wimp',\n    'wince',\n    'wincing',\n    'wind',\n    'wing',\n    'winking',\n    'winner',\n    'winnings',\n    'winter',\n    'wipe',\n    'wired',\n    'wireless',\n    'wiring',\n    'wiry',\n    'wisdom',\n    'wise',\n    'wish',\n    'wisplike',\n    'wispy',\n    'wistful',\n    'wizard',\n    'wobble',\n    'wobbling',\n    'wobbly',\n    'wok',\n    'wolf',\n    'wolverine',\n    'womanhood',\n    'womankind',\n    'womanless',\n    'womanlike',\n    'womanly',\n    'womb',\n    'woof',\n    'wooing',\n    'wool',\n    'woozy',\n    'word',\n    'work',\n    'worried',\n    'worrier',\n    'worrisome',\n    'worry',\n    'worsening',\n    'worshiper',\n    'worst',\n    'wound',\n    'woven',\n    'wow',\n    'wrangle',\n    'wrath',\n    'wreath',\n    'wreckage',\n    'wrecker',\n    'wrecking',\n    'wrench',\n    'wriggle',\n    'wriggly',\n    'wrinkle',\n    'wrinkly',\n    'wrist',\n    'writing',\n    'written',\n    'wrongdoer',\n    'wronged',\n    'wrongful',\n    'wrongly',\n    'wrongness',\n    'wrought',\n    'xbox',\n    'xerox',\n    'yahoo',\n    'yam',\n    'yanking',\n    'yapping',\n    'yard',\n    'yarn',\n    'yeah',\n    'yearbook',\n    'yearling',\n    'yearly',\n    'yearning',\n    'yeast',\n    'yelling',\n    'yelp',\n    'yen',\n    'yesterday',\n    'yiddish',\n    'yield',\n    'yin',\n    'yippee',\n    'yo-yo',\n    'yodel',\n    'yoga',\n    'yogurt',\n    'yonder',\n    'yoyo',\n    'yummy',\n    'zap',\n    'zealous',\n    'zebra',\n    'zen',\n    'zeppelin',\n    'zero',\n    'zestfully',\n    'zesty',\n    'zigzagged',\n    'zipfile',\n    'zipping',\n    'zippy',\n    'zips',\n    'zit',\n    'zodiac',\n    'zombie',\n    'zone',\n    'zoning',\n    'zookeeper',\n    'zoologist',\n    'zoology',\n    'zoom',\n];\n","import { EnvironmentUrls } from '../models/domain/environmentUrls';\n\nimport { ConstantsService } from './constants.service';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { EnvironmentService as EnvironmentServiceAbstraction } from '../abstractions/environment.service';\nimport { NotificationsService } from '../abstractions/notifications.service';\nimport { StorageService } from '../abstractions/storage.service';\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n    baseUrl: string;\n    webVaultUrl: string;\n    apiUrl: string;\n    identityUrl: string;\n    iconsUrl: string;\n    notificationsUrl: string;\n    eventsUrl: string;\n\n    constructor(private apiService: ApiService, private storageService: StorageService,\n        private notificationsService: NotificationsService) { }\n\n    getWebVaultUrl(): string {\n        if (this.webVaultUrl != null) {\n            return this.webVaultUrl;\n        } else if (this.baseUrl) {\n            return this.baseUrl;\n        }\n        return null;\n    }\n\n    async setUrlsFromStorage(): Promise<void> {\n        const urlsObj: any = await this.storageService.get(ConstantsService.environmentUrlsKey);\n        const urls = urlsObj || {\n            base: null,\n            api: null,\n            identity: null,\n            icons: null,\n            notifications: null,\n            events: null,\n            webVault: null,\n        };\n\n        const envUrls = new EnvironmentUrls();\n\n        if (urls.base) {\n            this.baseUrl = envUrls.base = urls.base;\n            this.apiService.setUrls(envUrls);\n            return;\n        }\n\n        this.webVaultUrl = urls.webVault;\n        this.apiUrl = envUrls.api = urls.api;\n        this.identityUrl = envUrls.identity = urls.identity;\n        this.iconsUrl = urls.icons;\n        this.notificationsUrl = urls.notifications;\n        this.eventsUrl = envUrls.events = urls.events;\n        this.apiService.setUrls(envUrls);\n    }\n\n    async setUrls(urls: any): Promise<any> {\n        urls.base = this.formatUrl(urls.base);\n        urls.webVault = this.formatUrl(urls.webVault);\n        urls.api = this.formatUrl(urls.api);\n        urls.identity = this.formatUrl(urls.identity);\n        urls.icons = this.formatUrl(urls.icons);\n        urls.notifications = this.formatUrl(urls.notifications);\n        urls.events = this.formatUrl(urls.events);\n\n        await this.storageService.save(ConstantsService.environmentUrlsKey, {\n            base: urls.base,\n            api: urls.api,\n            identity: urls.identity,\n            webVault: urls.webVault,\n            icons: urls.icons,\n            notifications: urls.notifications,\n            events: urls.events,\n        });\n\n        this.baseUrl = urls.base;\n        this.webVaultUrl = urls.webVault;\n        this.apiUrl = urls.api;\n        this.identityUrl = urls.identity;\n        this.iconsUrl = urls.icons;\n        this.notificationsUrl = urls.notifications;\n        this.eventsUrl = urls.events;\n\n        const envUrls = new EnvironmentUrls();\n        if (this.baseUrl) {\n            envUrls.base = this.baseUrl;\n        } else {\n            envUrls.api = this.apiUrl;\n            envUrls.identity = this.identityUrl;\n            envUrls.events = this.eventsUrl;\n        }\n\n        this.apiService.setUrls(envUrls);\n        if (this.notificationsService != null) {\n            this.notificationsService.init(this);\n        }\n        return urls;\n    }\n\n    private formatUrl(url: string): string {\n        if (url == null || url === '') {\n            return null;\n        }\n\n        url = url.replace(/\\/+$/g, '');\n        if (!url.startsWith('http://') && !url.startsWith('https://')) {\n            url = 'https://' + url;\n        }\n\n        return url.trim();\n    }\n}\n","import { FolderData } from '../models/data/folderData';\n\nimport { Folder } from '../models/domain/folder';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\nimport { TreeNode } from '../models/domain/treeNode';\n\nimport { FolderRequest } from '../models/request/folderRequest';\n\nimport { FolderResponse } from '../models/response/folderResponse';\n\nimport { FolderView } from '../models/view/folderView';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { FolderService as FolderServiceAbstraction } from '../abstractions/folder.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\nimport { CipherData } from '../models/data/cipherData';\n\nimport { ServiceUtils } from '../misc/serviceUtils';\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    foldersPrefix: 'folders_',\n    ciphersPrefix: 'ciphers_',\n};\nconst NestingDelimiter = '/';\n\nexport class FolderService implements FolderServiceAbstraction {\n    decryptedFolderCache: FolderView[];\n\n    constructor(private cryptoService: CryptoService, private userService: UserService,\n        private apiService: ApiService, private storageService: StorageService,\n        private i18nService: I18nService, private cipherService: CipherService) { }\n\n    clearCache(): void {\n        this.decryptedFolderCache = null;\n    }\n\n    async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n        const folder = new Folder();\n        folder.id = model.id;\n        folder.name = await this.cryptoService.encrypt(model.name, key);\n        return folder;\n    }\n\n    async get(id: string): Promise<Folder> {\n        const userId = await this.userService.getUserId();\n        const folders = await this.storageService.get<{ [id: string]: FolderData; }>(\n            Keys.foldersPrefix + userId);\n        if (folders == null || !folders.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Folder(folders[id]);\n    }\n\n    async getAll(): Promise<Folder[]> {\n        const userId = await this.userService.getUserId();\n        const folders = await this.storageService.get<{ [id: string]: FolderData; }>(\n            Keys.foldersPrefix + userId);\n        const response: Folder[] = [];\n        for (const id in folders) {\n            if (folders.hasOwnProperty(id)) {\n                response.push(new Folder(folders[id]));\n            }\n        }\n        return response;\n    }\n\n    async getAllDecrypted(): Promise<FolderView[]> {\n        if (this.decryptedFolderCache != null) {\n            return this.decryptedFolderCache;\n        }\n\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            throw new Error('No key.');\n        }\n\n        const decFolders: FolderView[] = [];\n        const promises: Array<Promise<any>> = [];\n        const folders = await this.getAll();\n        folders.forEach((folder) => {\n            promises.push(folder.decrypt().then((f) => decFolders.push(f)));\n        });\n\n        await Promise.all(promises);\n        decFolders.sort(Utils.getSortFunction(this.i18nService, 'name'));\n\n        const noneFolder = new FolderView();\n        noneFolder.name = this.i18nService.t('noneFolder');\n        decFolders.push(noneFolder);\n\n        this.decryptedFolderCache = decFolders;\n        return this.decryptedFolderCache;\n    }\n\n    async getAllNested(): Promise<Array<TreeNode<FolderView>>> {\n        const folders = await this.getAllDecrypted();\n        const nodes: Array<TreeNode<FolderView>> = [];\n        folders.forEach((f) => {\n            const folderCopy = new FolderView();\n            folderCopy.id = f.id;\n            folderCopy.revisionDate = f.revisionDate;\n            const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, '').split(NestingDelimiter) : [];\n            ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n        });\n        return nodes;\n    }\n\n    async getNested(id: string): Promise<TreeNode<FolderView>> {\n        const folders = await this.getAllNested();\n        return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\n    }\n\n    async saveWithServer(folder: Folder): Promise<any> {\n        const request = new FolderRequest(folder);\n\n        let response: FolderResponse;\n        if (folder.id == null) {\n            response = await this.apiService.postFolder(request);\n            folder.id = response.id;\n        } else {\n            response = await this.apiService.putFolder(folder.id, request);\n        }\n\n        const userId = await this.userService.getUserId();\n        const data = new FolderData(response, userId);\n        await this.upsert(data);\n    }\n\n    async upsert(folder: FolderData | FolderData[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        let folders = await this.storageService.get<{ [id: string]: FolderData; }>(\n            Keys.foldersPrefix + userId);\n        if (folders == null) {\n            folders = {};\n        }\n\n        if (folder instanceof FolderData) {\n            const f = folder as FolderData;\n            folders[f.id] = f;\n        } else {\n            (folder as FolderData[]).forEach((f) => {\n                folders[f.id] = f;\n            });\n        }\n\n        await this.storageService.save(Keys.foldersPrefix + userId, folders);\n        this.decryptedFolderCache = null;\n    }\n\n    async replace(folders: { [id: string]: FolderData; }): Promise<any> {\n        const userId = await this.userService.getUserId();\n        await this.storageService.save(Keys.foldersPrefix + userId, folders);\n        this.decryptedFolderCache = null;\n    }\n\n    async clear(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.foldersPrefix + userId);\n        this.decryptedFolderCache = null;\n    }\n\n    async delete(id: string | string[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        const folders = await this.storageService.get<{ [id: string]: FolderData; }>(\n            Keys.foldersPrefix + userId);\n        if (folders == null) {\n            return;\n        }\n\n        if (typeof id === 'string') {\n            if (folders[id] == null) {\n                return;\n            }\n            delete folders[id];\n        } else {\n            (id as string[]).forEach((i) => {\n                delete folders[i];\n            });\n        }\n\n        await this.storageService.save(Keys.foldersPrefix + userId, folders);\n        this.decryptedFolderCache = null;\n\n        // Items in a deleted folder are re-assigned to \"No Folder\"\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(Keys.ciphersPrefix + userId);\n        if (ciphers != null) {\n            const updates: CipherData[] = [];\n            for (const cId in ciphers) {\n                if (ciphers[cId].folderId === id) {\n                    ciphers[cId].folderId = null;\n                    updates.push(ciphers[cId]);\n                }\n            }\n            if (updates.length > 0) {\n                this.cipherService.upsert(updates);\n            }\n        }\n    }\n\n    async deleteWithServer(id: string): Promise<any> {\n        await this.apiService.deleteFolder(id);\n        await this.delete(id);\n    }\n}\n","import { FolderResponse } from '../response/folderResponse';\n\nexport class FolderData {\n    id: string;\n    userId: string;\n    name: string;\n    revisionDate: string;\n\n    constructor(response: FolderResponse, userId: string) {\n        this.userId = userId;\n        this.name = response.name;\n        this.id = response.id;\n        this.revisionDate = response.revisionDate;\n    }\n}\n","import { I18nService as I18nServiceAbstraction } from '../abstractions/i18n.service';\n\nexport class I18nService implements I18nServiceAbstraction {\n    locale: string;\n    // First locale is the default (English)\n    supportedTranslationLocales: string[] = ['en'];\n    translationLocale: string;\n    collator: Intl.Collator;\n    localeNames = new Map<string, string>([\n        ['af', 'Afrikaans'],\n        ['bg', 'български'],\n        ['ca', 'català'],\n        ['cs', 'čeština'],\n        ['da', 'dansk'],\n        ['de', 'Deutsch'],\n        ['el', 'Ελληνικά'],\n        ['en', 'English'],\n        ['en-GB', 'English (British)'],\n        ['eo', 'Esperanto'],\n        ['es', 'español'],\n        ['et', 'eesti'],\n        ['fa', 'فارسی'],\n        ['fi', 'suomi'],\n        ['fr', 'français'],\n        ['he', 'עברית'],\n        ['hi', 'हिन्दी'],\n        ['hr', 'hrvatski'],\n        ['hu', 'magyar'],\n        ['id', 'Bahasa Indonesia'],\n        ['it', 'italiano'],\n        ['ja', '日本語'],\n        ['ko', '한국어'],\n        ['nb', 'norsk (bokmål)'],\n        ['nl', 'Nederlands'],\n        ['pl', 'polski'],\n        ['pt-BR', 'português do Brasil'],\n        ['pt-PT', 'português'],\n        ['ro', 'română'],\n        ['ru', 'русский'],\n        ['sk', 'slovenčina'],\n        ['sv', 'svenska'],\n        ['th', 'ไทย'],\n        ['tr', 'Türkçe'],\n        ['uk', 'українська'],\n        ['vi', 'Tiếng Việt'],\n        ['zh-CN', '中文（中国大陆）'],\n        ['zh-TW', '中文（台灣）'],\n    ]);\n\n    protected inited: boolean;\n    protected defaultMessages: any = {};\n    protected localeMessages: any = {};\n\n    constructor(protected systemLanguage: string, protected localesDirectory: string,\n        protected getLocalesJson: (formattedLocale: string) => Promise<any>) {\n        this.systemLanguage = systemLanguage.replace('_', '-');\n    }\n\n    async init(locale?: string) {\n        if (this.inited) {\n            throw new Error('i18n already initialized.');\n        }\n        if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n            throw new Error('supportedTranslationLocales not set.');\n        }\n\n        this.inited = true;\n        this.locale = this.translationLocale = locale != null ? locale : this.systemLanguage;\n\n        try {\n            this.collator = new Intl.Collator(this.locale, { numeric: true, sensitivity: 'base' });\n        } catch {\n            this.collator = null;\n        }\n\n        if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n            this.translationLocale = this.translationLocale.slice(0, 2);\n\n            if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n                this.translationLocale = this.supportedTranslationLocales[0];\n            }\n        }\n\n        if (this.localesDirectory != null) {\n            await this.loadMessages(this.translationLocale, this.localeMessages);\n            if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n                await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n            }\n        }\n    }\n\n    t(id: string, p1?: string, p2?: string, p3?: string): string {\n        return this.translate(id, p1, p2, p3);\n    }\n\n    translate(id: string, p1?: string, p2?: string, p3?: string): string {\n        let result: string;\n        if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n            result = this.localeMessages[id];\n        } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n            result = this.defaultMessages[id];\n        } else {\n            result = '';\n        }\n\n        if (result !== '') {\n            if (p1 != null) {\n                result = result.split('__$1__').join(p1);\n            }\n            if (p2 != null) {\n                result = result.split('__$2__').join(p2);\n            }\n            if (p3 != null) {\n                result = result.split('__$3__').join(p3);\n            }\n        }\n\n        return result;\n    }\n\n    private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n        const formattedLocale = locale.replace('-', '_');\n        const locales = await this.getLocalesJson(formattedLocale);\n        for (const prop in locales) {\n            if (!locales.hasOwnProperty(prop)) {\n                continue;\n            }\n            messagesObj[prop] = locales[prop].message;\n\n            if (locales[prop].placeholders) {\n                for (const placeProp in locales[prop].placeholders) {\n                    if (!locales[prop].placeholders.hasOwnProperty(placeProp) ||\n                        !locales[prop].placeholders[placeProp].content) {\n                        continue;\n                    }\n\n                    const replaceToken = '\\\\$' + placeProp.toUpperCase() + '\\\\$';\n                    let replaceContent = locales[prop].placeholders[placeProp].content;\n                    if (replaceContent === '$1' || replaceContent === '$2' || replaceContent === '$3') {\n                        replaceContent = '__$' + replaceContent + '__';\n                    }\n                    messagesObj[prop] = messagesObj[prop].replace(new RegExp(replaceToken, 'g'), replaceContent);\n                }\n            }\n        }\n    }\n\n}\n","import { ConstantsService } from './constants.service';\n\nimport { CipherService } from '../abstractions/cipher.service';\nimport { CollectionService } from '../abstractions/collection.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { FolderService } from '../abstractions/folder.service';\nimport { LockService as LockServiceAbstraction } from '../abstractions/lock.service';\nimport { MessagingService } from '../abstractions/messaging.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\nimport { SearchService } from '../abstractions/search.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { CipherString } from '../models/domain/cipherString';\n\nexport class LockService implements LockServiceAbstraction {\n    pinProtectedKey: CipherString = null;\n\n    private inited = false;\n\n    constructor(private cipherService: CipherService, private folderService: FolderService,\n        private collectionService: CollectionService, private cryptoService: CryptoService,\n        private platformUtilsService: PlatformUtilsService, private storageService: StorageService,\n        private messagingService: MessagingService, private searchService: SearchService,\n        private userService: UserService, private lockedCallback: () => Promise<void> = null) {\n    }\n\n    init(checkOnInterval: boolean) {\n        if (this.inited) {\n            return;\n        }\n\n        this.inited = true;\n        if (checkOnInterval) {\n            this.checkLock();\n            setInterval(() => this.checkLock(), 10 * 1000); // check every 10 seconds\n        }\n    }\n\n    async isLocked(): Promise<boolean> {\n        const hasKey = await this.cryptoService.hasKey();\n        return !hasKey;\n    }\n\n    async checkLock(): Promise<void> {\n        if (await this.platformUtilsService.isViewOpen()) {\n            // Do not lock\n            return;\n        }\n\n        const authed = await this.userService.isAuthenticated();\n        if (!authed) {\n            return;\n        }\n\n        if (await this.isLocked()) {\n            return;\n        }\n\n        let lockOption = this.platformUtilsService.lockTimeout();\n        if (lockOption == null) {\n            lockOption = await this.storageService.get<number>(ConstantsService.lockOptionKey);\n        }\n        if (lockOption == null || lockOption < 0) {\n            return;\n        }\n\n        const lastActive = await this.storageService.get<number>(ConstantsService.lastActiveKey);\n        if (lastActive == null) {\n            return;\n        }\n\n        const lockOptionSeconds = lockOption * 60;\n        const diffSeconds = ((new Date()).getTime() - lastActive) / 1000;\n        if (diffSeconds >= lockOptionSeconds) {\n            // need to lock now\n            await this.lock(true);\n        }\n    }\n\n    async lock(allowSoftLock = false): Promise<void> {\n        const authed = await this.userService.isAuthenticated();\n        if (!authed) {\n            return;\n        }\n\n        await Promise.all([\n            this.cryptoService.clearKey(),\n            this.cryptoService.clearOrgKeys(true),\n            this.cryptoService.clearKeyPair(true),\n            this.cryptoService.clearEncKey(true),\n        ]);\n\n        this.folderService.clearCache();\n        this.cipherService.clearCache();\n        this.collectionService.clearCache();\n        this.searchService.clearIndex();\n        this.messagingService.send('locked');\n        if (this.lockedCallback != null) {\n            await this.lockedCallback();\n        }\n    }\n\n    async setLockOption(lockOption: number): Promise<void> {\n        await this.storageService.save(ConstantsService.lockOptionKey, lockOption);\n        await this.cryptoService.toggleKey();\n    }\n\n    async isPinLockSet(): Promise<[boolean, boolean]> {\n        const protectedPin = await this.storageService.get<string>(ConstantsService.protectedPin);\n        const pinProtectedKey = await this.storageService.get<string>(ConstantsService.pinProtectedKey);\n        return [protectedPin != null, pinProtectedKey != null];\n    }\n\n    clear(): Promise<any> {\n        this.pinProtectedKey = null;\n        return this.storageService.remove(ConstantsService.protectedPin);\n    }\n}\n","import * as zxcvbn from 'zxcvbn';\n\nimport { CipherString } from '../models/domain/cipherString';\nimport { GeneratedPasswordHistory } from '../models/domain/generatedPasswordHistory';\n\nimport { CryptoService } from '../abstractions/crypto.service';\nimport {\n    PasswordGenerationService as PasswordGenerationServiceAbstraction,\n} from '../abstractions/passwordGeneration.service';\nimport { StorageService } from '../abstractions/storage.service';\n\nimport { EEFLongWordList } from '../misc/wordlist';\n\nconst DefaultOptions = {\n    length: 14,\n    ambiguous: false,\n    number: true,\n    minNumber: 1,\n    uppercase: true,\n    minUppercase: 0,\n    lowercase: true,\n    minLowercase: 0,\n    special: false,\n    minSpecial: 1,\n    type: 'password',\n    numWords: 3,\n    wordSeparator: '-',\n    capitalize: false,\n    includeNumber: false,\n};\n\nconst Keys = {\n    options: 'passwordGenerationOptions',\n    history: 'generatedPasswordHistory',\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n    private optionsCache: any;\n    private history: GeneratedPasswordHistory[];\n\n    constructor(private cryptoService: CryptoService, private storageService: StorageService) { }\n\n    async generatePassword(options: any): Promise<string> {\n        // overload defaults with given options\n        const o = Object.assign({}, DefaultOptions, options);\n\n        if (o.type === 'passphrase') {\n            return this.generatePassphrase(options);\n        }\n\n        // sanitize\n        if (o.uppercase && o.minUppercase <= 0) {\n            o.minUppercase = 1;\n        }\n        if (o.lowercase && o.minLowercase <= 0) {\n            o.minLowercase = 1;\n        }\n        if (o.number && o.minNumber <= 0) {\n            o.minNumber = 1;\n        }\n        if (o.special && o.minSpecial <= 0) {\n            o.minSpecial = 1;\n        }\n\n        if (!o.length || o.length < 1) {\n            o.length = 10;\n        }\n\n        const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n        if (o.length < minLength) {\n            o.length = minLength;\n        }\n\n        const positions: string[] = [];\n        if (o.lowercase && o.minLowercase > 0) {\n            for (let i = 0; i < o.minLowercase; i++) {\n                positions.push('l');\n            }\n        }\n        if (o.uppercase && o.minUppercase > 0) {\n            for (let i = 0; i < o.minUppercase; i++) {\n                positions.push('u');\n            }\n        }\n        if (o.number && o.minNumber > 0) {\n            for (let i = 0; i < o.minNumber; i++) {\n                positions.push('n');\n            }\n        }\n        if (o.special && o.minSpecial > 0) {\n            for (let i = 0; i < o.minSpecial; i++) {\n                positions.push('s');\n            }\n        }\n        while (positions.length < o.length) {\n            positions.push('a');\n        }\n\n        // shuffle\n        await this.shuffleArray(positions);\n\n        // build out the char sets\n        let allCharSet = '';\n\n        let lowercaseCharSet = 'abcdefghijkmnopqrstuvwxyz';\n        if (o.ambiguous) {\n            lowercaseCharSet += 'l';\n        }\n        if (o.lowercase) {\n            allCharSet += lowercaseCharSet;\n        }\n\n        let uppercaseCharSet = 'ABCDEFGHJKLMNPQRSTUVWXYZ';\n        if (o.ambiguous) {\n            uppercaseCharSet += 'IO';\n        }\n        if (o.uppercase) {\n            allCharSet += uppercaseCharSet;\n        }\n\n        let numberCharSet = '23456789';\n        if (o.ambiguous) {\n            numberCharSet += '01';\n        }\n        if (o.number) {\n            allCharSet += numberCharSet;\n        }\n\n        const specialCharSet = '!@#$%^&*';\n        if (o.special) {\n            allCharSet += specialCharSet;\n        }\n\n        let password = '';\n        for (let i = 0; i < o.length; i++) {\n            let positionChars: string;\n            switch (positions[i]) {\n                case 'l':\n                    positionChars = lowercaseCharSet;\n                    break;\n                case 'u':\n                    positionChars = uppercaseCharSet;\n                    break;\n                case 'n':\n                    positionChars = numberCharSet;\n                    break;\n                case 's':\n                    positionChars = specialCharSet;\n                    break;\n                case 'a':\n                    positionChars = allCharSet;\n                    break;\n                default:\n                    break;\n            }\n\n            const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n            password += positionChars.charAt(randomCharIndex);\n        }\n\n        return password;\n    }\n\n    async generatePassphrase(options: any): Promise<string> {\n        const o = Object.assign({}, DefaultOptions, options);\n\n        if (o.numWords == null || o.numWords <= 2) {\n            o.numWords = DefaultOptions.numWords;\n        }\n        if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n            o.wordSeparator = ' ';\n        }\n        if (o.capitalize == null) {\n            o.capitalize = false;\n        }\n        if (o.includeNumber == null) {\n            o.includeNumber = false;\n        }\n\n        const listLength = EEFLongWordList.length - 1;\n        const wordList = new Array(o.numWords);\n        for (let i = 0; i < o.numWords; i++) {\n            const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n            if (o.capitalize) {\n                wordList[i] = this.capitalize(EEFLongWordList[wordIndex]);\n            } else {\n                wordList[i] = EEFLongWordList[wordIndex];\n            }\n        }\n\n        if (o.includeNumber) {\n            await this.appendRandomNumberToRandomWord(wordList);\n        }\n        return wordList.join(o.wordSeparator);\n    }\n\n    async getOptions() {\n        if (this.optionsCache == null) {\n            const options = await this.storageService.get(Keys.options);\n            if (options == null) {\n                this.optionsCache = DefaultOptions;\n            } else {\n                this.optionsCache = Object.assign({}, DefaultOptions, options);\n            }\n        }\n\n        return this.optionsCache;\n    }\n\n    async saveOptions(options: any) {\n        await this.storageService.save(Keys.options, options);\n        this.optionsCache = options;\n    }\n\n    async getHistory(): Promise<GeneratedPasswordHistory[]> {\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            return new Array<GeneratedPasswordHistory>();\n        }\n\n        if (!this.history) {\n            const encrypted = await this.storageService.get<GeneratedPasswordHistory[]>(Keys.history);\n            this.history = await this.decryptHistory(encrypted);\n        }\n\n        return this.history || new Array<GeneratedPasswordHistory>();\n    }\n\n    async addHistory(password: string): Promise<any> {\n        // Cannot add new history if no key is available\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            return;\n        }\n\n        const currentHistory = await this.getHistory();\n\n        // Prevent duplicates\n        if (this.matchesPrevious(password, currentHistory)) {\n            return;\n        }\n\n        currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n        // Remove old items.\n        if (currentHistory.length > MaxPasswordsInHistory) {\n            currentHistory.pop();\n        }\n\n        const newHistory = await this.encryptHistory(currentHistory);\n        return await this.storageService.save(Keys.history, newHistory);\n    }\n\n    async clear(): Promise<any> {\n        this.history = [];\n        return await this.storageService.remove(Keys.history);\n    }\n\n    passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n        if (password == null || password.length === 0) {\n            return null;\n        }\n        let globalUserInputs = ['bitwarden', 'bit', 'warden'];\n        if (userInputs != null && userInputs.length > 0) {\n            globalUserInputs = globalUserInputs.concat(userInputs);\n        }\n        // Use a hash set to get rid of any duplicate user inputs\n        const finalUserInputs = Array.from(new Set(globalUserInputs));\n        const result = zxcvbn(password, finalUserInputs);\n        return result;\n    }\n\n    private capitalize(str: string) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    }\n\n    private async appendRandomNumberToRandomWord(wordList: string[]) {\n        if (wordList == null || wordList.length <= 0) {\n            return;\n        }\n        const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n        const num = await this.cryptoService.randomNumber(0, 9);\n        wordList[index] = wordList[index] + num;\n    }\n\n    private async encryptHistory(history: GeneratedPasswordHistory[]): Promise<GeneratedPasswordHistory[]> {\n        if (history == null || history.length === 0) {\n            return Promise.resolve([]);\n        }\n\n        const promises = history.map(async (item) => {\n            const encrypted = await this.cryptoService.encrypt(item.password);\n            return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n        });\n\n        return await Promise.all(promises);\n    }\n\n    private async decryptHistory(history: GeneratedPasswordHistory[]): Promise<GeneratedPasswordHistory[]> {\n        if (history == null || history.length === 0) {\n            return Promise.resolve([]);\n        }\n\n        const promises = history.map(async (item) => {\n            const decrypted = await this.cryptoService.decryptToUtf8(new CipherString(item.password));\n            return new GeneratedPasswordHistory(decrypted, item.date);\n        });\n\n        return await Promise.all(promises);\n    }\n\n    private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n        if (history == null || history.length === 0) {\n            return false;\n        }\n\n        return history[history.length - 1].password === password;\n    }\n\n    // ref: https://stackoverflow.com/a/12646864/1090359\n    private async shuffleArray(array: string[]) {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = await this.cryptoService.randomNumber(0, i);\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n    }\n}\n","import { SettingsService as SettingsServiceAbstraction } from '../abstractions/settings.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nconst Keys = {\n    settingsPrefix: 'settings_',\n    equivalentDomains: 'equivalentDomains',\n};\n\nexport class SettingsService implements SettingsServiceAbstraction {\n    private settingsCache: any;\n\n    constructor(private userService: UserService, private storageService: StorageService) {\n    }\n\n    clearCache(): void {\n        this.settingsCache = null;\n    }\n\n    getEquivalentDomains(): Promise<any> {\n        return this.getSettingsKey(Keys.equivalentDomains);\n    }\n\n    async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n        await this.setSettingsKey(Keys.equivalentDomains, equivalentDomains);\n    }\n\n    async clear(userId: string): Promise<void> {\n        await this.storageService.remove(Keys.settingsPrefix + userId);\n        this.clearCache();\n    }\n\n    // Helpers\n\n    private async getSettings(): Promise<any> {\n        if (this.settingsCache == null) {\n            const userId = await this.userService.getUserId();\n            this.settingsCache = this.storageService.get(Keys.settingsPrefix + userId);\n        }\n        return this.settingsCache;\n    }\n\n    private async getSettingsKey(key: string): Promise<any> {\n        const settings = await this.getSettings();\n        if (settings != null && settings[key]) {\n            return settings[key];\n        }\n        return null;\n    }\n\n    private async setSettingsKey(key: string, value: any): Promise<void> {\n        const userId = await this.userService.getUserId();\n        let settings = await this.getSettings();\n        if (!settings) {\n            settings = {};\n        }\n\n        settings[key] = value;\n        await this.storageService.save(Keys.settingsPrefix + userId, settings);\n        this.settingsCache = settings;\n    }\n}\n","import { StateService as StateServiceAbstraction } from '../abstractions/state.service';\n\nexport class StateService implements StateServiceAbstraction {\n    private state: any = {};\n\n    get<T>(key: string): Promise<T> {\n        if (this.state.hasOwnProperty(key)) {\n            return Promise.resolve(this.state[key]);\n        }\n        return Promise.resolve(null);\n    }\n\n    save(key: string, obj: any): Promise<any> {\n        this.state[key] = obj;\n        return Promise.resolve();\n    }\n\n    remove(key: string): Promise<any> {\n        delete this.state[key];\n        return Promise.resolve();\n    }\n\n    purge(): Promise<any> {\n        this.state = {};\n        return Promise.resolve();\n    }\n}\n","import { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { CollectionService } from '../abstractions/collection.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { FolderService } from '../abstractions/folder.service';\nimport { MessagingService } from '../abstractions/messaging.service';\nimport { SettingsService } from '../abstractions/settings.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { SyncService as SyncServiceAbstraction } from '../abstractions/sync.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { CipherData } from '../models/data/cipherData';\nimport { CollectionData } from '../models/data/collectionData';\nimport { FolderData } from '../models/data/folderData';\nimport { OrganizationData } from '../models/data/organizationData';\n\nimport { CipherResponse } from '../models/response/cipherResponse';\nimport { CollectionDetailsResponse } from '../models/response/collectionResponse';\nimport { DomainsResponse } from '../models/response/domainsResponse';\nimport { FolderResponse } from '../models/response/folderResponse';\nimport {\n    SyncCipherNotification,\n    SyncFolderNotification,\n} from '../models/response/notificationResponse';\nimport { ProfileResponse } from '../models/response/profileResponse';\n\nconst Keys = {\n    lastSyncPrefix: 'lastSync_',\n};\n\nexport class SyncService implements SyncServiceAbstraction {\n    syncInProgress: boolean = false;\n\n    constructor(private userService: UserService, private apiService: ApiService,\n        private settingsService: SettingsService, private folderService: FolderService,\n        private cipherService: CipherService, private cryptoService: CryptoService,\n        private collectionService: CollectionService, private storageService: StorageService,\n        private messagingService: MessagingService, private logoutCallback: (expired: boolean) => Promise<void>) {\n    }\n\n    async getLastSync(): Promise<Date> {\n        const userId = await this.userService.getUserId();\n        if (userId == null) {\n            return null;\n        }\n\n        const lastSync = await this.storageService.get<any>(Keys.lastSyncPrefix + userId);\n        if (lastSync) {\n            return new Date(lastSync);\n        }\n\n        return null;\n    }\n\n    async setLastSync(date: Date): Promise<any> {\n        const userId = await this.userService.getUserId();\n        if (userId == null) {\n            return;\n        }\n\n        await this.storageService.save(Keys.lastSyncPrefix + userId, date.toJSON());\n    }\n\n    async fullSync(forceSync: boolean): Promise<boolean> {\n        this.syncStarted();\n        const isAuthenticated = await this.userService.isAuthenticated();\n        if (!isAuthenticated) {\n            return this.syncCompleted(false);\n        }\n\n        const now = new Date();\n        const needsSyncResult = await this.needsSyncing(forceSync);\n        const needsSync = needsSyncResult[0];\n        const skipped = needsSyncResult[1];\n\n        if (skipped) {\n            return this.syncCompleted(false);\n        }\n\n        if (!needsSync) {\n            await this.setLastSync(now);\n            return this.syncCompleted(false);\n        }\n\n        const userId = await this.userService.getUserId();\n        try {\n            const response = await this.apiService.getSync();\n\n            await this.syncProfile(response.profile);\n            await this.syncFolders(userId, response.folders);\n            await this.syncCollections(response.collections);\n            await this.syncCiphers(userId, response.ciphers);\n            await this.syncSettings(userId, response.domains);\n\n            await this.setLastSync(now);\n            return this.syncCompleted(true);\n        } catch (e) {\n            return this.syncCompleted(false);\n        }\n    }\n\n    async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            try {\n                const localFolder = await this.folderService.get(notification.id);\n                if ((!isEdit && localFolder == null) ||\n                    (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)) {\n                    const remoteFolder = await this.apiService.getFolder(notification.id);\n                    if (remoteFolder != null) {\n                        const userId = await this.userService.getUserId();\n                        await this.folderService.upsert(new FolderData(remoteFolder, userId));\n                        this.messagingService.send('syncedUpsertedFolder', { folderId: notification.id });\n                        return this.syncCompleted(true);\n                    }\n                }\n            } catch { }\n        }\n        return this.syncCompleted(false);\n    }\n\n    async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            await this.folderService.delete(notification.id);\n            this.messagingService.send('syncedDeletedFolder', { folderId: notification.id });\n            this.syncCompleted(true);\n            return true;\n        }\n        return this.syncCompleted(false);\n    }\n\n    async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            try {\n                let shouldUpdate = true;\n                const localCipher = await this.cipherService.get(notification.id);\n                if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n                    shouldUpdate = false;\n                }\n\n                let checkCollections = false;\n                if (shouldUpdate) {\n                    if (isEdit) {\n                        shouldUpdate = localCipher != null;\n                        checkCollections = true;\n                    } else {\n                        if (notification.collectionIds == null || notification.organizationId == null) {\n                            shouldUpdate = localCipher == null;\n                        } else {\n                            shouldUpdate = false;\n                            checkCollections = true;\n                        }\n                    }\n                }\n\n                if (!shouldUpdate && checkCollections && notification.organizationId != null &&\n                    notification.collectionIds != null && notification.collectionIds.length > 0) {\n                    const collections = await this.collectionService.getAll();\n                    if (collections != null) {\n                        for (let i = 0; i < collections.length; i++) {\n                            if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                                shouldUpdate = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (shouldUpdate) {\n                    const remoteCipher = await this.apiService.getCipher(notification.id);\n                    if (remoteCipher != null) {\n                        const userId = await this.userService.getUserId();\n                        await this.cipherService.upsert(new CipherData(remoteCipher, userId));\n                        this.messagingService.send('syncedUpsertedCipher', { cipherId: notification.id });\n                        return this.syncCompleted(true);\n                    }\n                }\n            } catch (e) {\n                if (e != null && e.statusCode === 404 && isEdit) {\n                    await this.cipherService.delete(notification.id);\n                    this.messagingService.send('syncedDeletedCipher', { cipherId: notification.id });\n                    return this.syncCompleted(true);\n                }\n            }\n        }\n        return this.syncCompleted(false);\n    }\n\n    async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            await this.cipherService.delete(notification.id);\n            this.messagingService.send('syncedDeletedCipher', { cipherId: notification.id });\n            return this.syncCompleted(true);\n        }\n        return this.syncCompleted(false);\n    }\n\n    // Helpers\n\n    private syncStarted() {\n        this.syncInProgress = true;\n        this.messagingService.send('syncStarted');\n    }\n\n    private syncCompleted(successfully: boolean): boolean {\n        this.syncInProgress = false;\n        this.messagingService.send('syncCompleted', { successfully: successfully });\n        return successfully;\n    }\n\n    private async needsSyncing(forceSync: boolean) {\n        if (forceSync) {\n            return [true, false];\n        }\n\n        const lastSync = await this.getLastSync();\n        if (lastSync == null || lastSync.getTime() === 0) {\n            return [true, false];\n        }\n\n        try {\n            const response = await this.apiService.getAccountRevisionDate();\n            if (new Date(response) <= lastSync) {\n                return [false, false];\n            }\n            return [true, false];\n        } catch (e) {\n            return [false, true];\n        }\n    }\n\n    private async syncProfile(response: ProfileResponse) {\n        const stamp = await this.userService.getSecurityStamp();\n        if (stamp != null && stamp !== response.securityStamp) {\n            if (this.logoutCallback != null) {\n                await this.logoutCallback(true);\n            }\n\n            throw new Error('Stamp has changed');\n        }\n\n        await this.cryptoService.setEncKey(response.key);\n        await this.cryptoService.setEncPrivateKey(response.privateKey);\n        await this.cryptoService.setOrgKeys(response.organizations);\n        await this.userService.setSecurityStamp(response.securityStamp);\n\n        const organizations: { [id: string]: OrganizationData; } = {};\n        response.organizations.forEach((o) => {\n            organizations[o.id] = new OrganizationData(o);\n        });\n        return await this.userService.replaceOrganizations(organizations);\n    }\n\n    private async syncFolders(userId: string, response: FolderResponse[]) {\n        const folders: { [id: string]: FolderData; } = {};\n        response.forEach((f) => {\n            folders[f.id] = new FolderData(f, userId);\n        });\n        return await this.folderService.replace(folders);\n    }\n\n    private async syncCollections(response: CollectionDetailsResponse[]) {\n        const collections: { [id: string]: CollectionData; } = {};\n        response.forEach((c) => {\n            collections[c.id] = new CollectionData(c);\n        });\n        return await this.collectionService.replace(collections);\n    }\n\n    private async syncCiphers(userId: string, response: CipherResponse[]) {\n        const ciphers: { [id: string]: CipherData; } = {};\n        response.forEach((c) => {\n            ciphers[c.id] = new CipherData(c, userId);\n        });\n        return await this.cipherService.replace(ciphers);\n    }\n\n    private async syncSettings(userId: string, response: DomainsResponse) {\n        let eqDomains: string[][] = [];\n        if (response != null && response.equivalentDomains != null) {\n            eqDomains = eqDomains.concat(response.equivalentDomains);\n        }\n\n        if (response != null && response.globalEquivalentDomains != null) {\n            response.globalEquivalentDomains.forEach((global) => {\n                if (global.domains.length > 0) {\n                    eqDomains.push(global.domains);\n                }\n            });\n        }\n\n        return this.settingsService.setEquivalentDomains(eqDomains);\n    }\n}\n","import { ConstantsService } from './constants.service';\n\nimport { StorageService } from '../abstractions/storage.service';\nimport { TokenService as TokenServiceAbstraction } from '../abstractions/token.service';\n\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    accessToken: 'accessToken',\n    refreshToken: 'refreshToken',\n    twoFactorTokenPrefix: 'twoFactorToken_',\n};\n\nexport class TokenService implements TokenServiceAbstraction {\n    token: string;\n    decodedToken: any;\n    refreshToken: string;\n\n    constructor(private storageService: StorageService) {\n    }\n\n    setTokens(accessToken: string, refreshToken: string): Promise<any> {\n        return Promise.all([\n            this.setToken(accessToken),\n            this.setRefreshToken(refreshToken),\n        ]);\n    }\n\n    setToken(token: string): Promise<any> {\n        this.token = token;\n        this.decodedToken = null;\n        return this.storageService.save(Keys.accessToken, token);\n    }\n\n    async getToken(): Promise<string> {\n        if (this.token != null) {\n            return this.token;\n        }\n\n        this.token = await this.storageService.get<string>(Keys.accessToken);\n        return this.token;\n    }\n\n    setRefreshToken(refreshToken: string): Promise<any> {\n        this.refreshToken = refreshToken;\n        return this.storageService.save(Keys.refreshToken, refreshToken);\n    }\n\n    async getRefreshToken(): Promise<string> {\n        if (this.refreshToken != null) {\n            return this.refreshToken;\n        }\n\n        this.refreshToken = await this.storageService.get<string>(Keys.refreshToken);\n        return this.refreshToken;\n    }\n\n    setTwoFactorToken(token: string, email: string): Promise<any> {\n        return this.storageService.save(Keys.twoFactorTokenPrefix + email, token);\n    }\n\n    getTwoFactorToken(email: string): Promise<string> {\n        return this.storageService.get<string>(Keys.twoFactorTokenPrefix + email);\n    }\n\n    clearTwoFactorToken(email: string): Promise<any> {\n        return this.storageService.remove(Keys.twoFactorTokenPrefix + email);\n    }\n\n    clearToken(): Promise<any> {\n        this.token = null;\n        this.decodedToken = null;\n        this.refreshToken = null;\n\n        return Promise.all([\n            this.storageService.remove(Keys.accessToken),\n            this.storageService.remove(Keys.refreshToken),\n        ]);\n    }\n\n    // jwthelper methods\n    // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n    decodeToken(): any {\n        if (this.decodedToken) {\n            return this.decodedToken;\n        }\n\n        if (this.token == null) {\n            throw new Error('Token not found.');\n        }\n\n        const parts = this.token.split('.');\n        if (parts.length !== 3) {\n            throw new Error('JWT must have 3 parts');\n        }\n\n        const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n        if (decoded == null) {\n            throw new Error('Cannot decode the token');\n        }\n\n        this.decodedToken = JSON.parse(decoded);\n        return this.decodedToken;\n    }\n\n    getTokenExpirationDate(): Date {\n        const decoded = this.decodeToken();\n        if (typeof decoded.exp === 'undefined') {\n            return null;\n        }\n\n        const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n        d.setUTCSeconds(decoded.exp);\n        return d;\n    }\n\n    tokenSecondsRemaining(offsetSeconds: number = 0): number {\n        const d = this.getTokenExpirationDate();\n        if (d == null) {\n            return 0;\n        }\n\n        const msRemaining = d.valueOf() - (new Date().valueOf() + (offsetSeconds * 1000));\n        return Math.round(msRemaining / 1000);\n    }\n\n    tokenNeedsRefresh(minutes: number = 5): boolean {\n        const sRemaining = this.tokenSecondsRemaining();\n        return sRemaining < (60 * minutes);\n    }\n\n    getUserId(): string {\n        const decoded = this.decodeToken();\n        if (typeof decoded.sub === 'undefined') {\n            throw new Error('No user id found');\n        }\n\n        return decoded.sub as string;\n    }\n\n    getEmail(): string {\n        const decoded = this.decodeToken();\n        if (typeof decoded.email === 'undefined') {\n            throw new Error('No email found');\n        }\n\n        return decoded.email as string;\n    }\n\n    getEmailVerified(): boolean {\n        const decoded = this.decodeToken();\n        if (typeof decoded.email_verified === 'undefined') {\n            throw new Error('No email verification found');\n        }\n\n        return decoded.email_verified as boolean;\n    }\n\n    getName(): string {\n        const decoded = this.decodeToken();\n        if (typeof decoded.name === 'undefined') {\n            return null;\n        }\n\n        return decoded.name as string;\n    }\n\n    getPremium(): boolean {\n        const decoded = this.decodeToken();\n        if (typeof decoded.premium === 'undefined') {\n            return false;\n        }\n\n        return decoded.premium as boolean;\n    }\n\n    getIssuer(): string {\n        const decoded = this.decodeToken();\n        if (typeof decoded.iss === 'undefined') {\n            throw new Error('No issuer found');\n        }\n\n        return decoded.iss as string;\n    }\n}\n","import { ConstantsService } from './constants.service';\n\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { TotpService as TotpServiceAbstraction } from '../abstractions/totp.service';\n\nimport { Utils } from '../misc/utils';\n\nconst B32Chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567';\nconst SteamChars = '23456789BCDFGHJKMNPQRTVWXY';\n\nexport class TotpService implements TotpServiceAbstraction {\n    constructor(private storageService: StorageService, private cryptoFunctionService: CryptoFunctionService) { }\n\n    async getCode(key: string): Promise<string> {\n        if (key == null) {\n            return null;\n        }\n        let period = 30;\n        let alg: 'sha1' | 'sha256' | 'sha512' = 'sha1';\n        let digits = 6;\n        let keyB32 = key;\n        const isOtpAuth = key.toLowerCase().indexOf('otpauth://') === 0;\n        const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf('steam://') === 0;\n        if (isOtpAuth) {\n            const params = Utils.getQueryParams(key);\n            if (params.has('digits') && params.get('digits') != null) {\n                try {\n                    const digitParams = parseInt(params.get('digits').trim(), null);\n                    if (digitParams > 10) {\n                        digits = 10;\n                    } else if (digitParams > 0) {\n                        digits = digitParams;\n                    }\n                } catch { }\n            }\n            if (params.has('period') && params.get('period') != null) {\n                try {\n                    const periodParam = parseInt(params.get('period').trim(), null);\n                    if (periodParam > 0) {\n                        period = periodParam;\n                    }\n                } catch { }\n            }\n            if (params.has('secret') && params.get('secret') != null) {\n                keyB32 = params.get('secret');\n            }\n            if (params.has('algorithm') && params.get('algorithm') != null) {\n                const algParam = params.get('algorithm').toLowerCase();\n                if (algParam === 'sha1' || algParam === 'sha256' || algParam === 'sha512') {\n                    alg = algParam;\n                }\n            }\n        } else if (isSteamAuth) {\n            keyB32 = key.substr('steam://'.length);\n            digits = 5;\n        }\n\n        const epoch = Math.round(new Date().getTime() / 1000.0);\n        const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, '0');\n        const timeBytes = Utils.fromHexToArray(timeHex);\n        const keyBytes = this.b32ToBytes(keyB32);\n\n        if (!keyBytes.length || !timeBytes.length) {\n            return null;\n        }\n\n        const hash = await this.sign(keyBytes, timeBytes, alg);\n        if (hash.length === 0) {\n            return null;\n        }\n\n        /* tslint:disable */\n        const offset = (hash[hash.length - 1] & 0xf);\n        const binary = ((hash[offset] & 0x7f) << 24) | ((hash[offset + 1] & 0xff) << 16) |\n            ((hash[offset + 2] & 0xff) << 8) | (hash[offset + 3] & 0xff);\n        /* tslint:enable */\n\n        let otp = '';\n        if (isSteamAuth) {\n            // tslint:disable-next-line\n            let fullCode = binary & 0x7fffffff;\n            for (let i = 0; i < digits; i++) {\n                otp += SteamChars[fullCode % SteamChars.length];\n                fullCode = Math.trunc(fullCode / SteamChars.length);\n            }\n        } else {\n            otp = (binary % Math.pow(10, digits)).toString();\n            otp = this.leftPad(otp, digits, '0');\n        }\n\n        return otp;\n    }\n\n    getTimeInterval(key: string): number {\n        let period = 30;\n        if (key != null && key.toLowerCase().indexOf('otpauth://') === 0) {\n            const params = Utils.getQueryParams(key);\n            if (params.has('period') && params.get('period') != null) {\n                try {\n                    period = parseInt(params.get('period').trim(), null);\n                } catch { }\n            }\n        }\n        return period;\n    }\n\n    async isAutoCopyEnabled(): Promise<boolean> {\n        return !(await this.storageService.get<boolean>(ConstantsService.disableAutoTotpCopyKey));\n    }\n\n    // Helpers\n\n    private leftPad(s: string, l: number, p: string): string {\n        if (l + 1 >= s.length) {\n            s = Array(l + 1 - s.length).join(p) + s;\n        }\n        return s;\n    }\n\n    private decToHex(d: number): string {\n        return (d < 15.5 ? '0' : '') + Math.round(d).toString(16);\n    }\n\n    private b32ToHex(s: string): string {\n        s = s.toUpperCase();\n        let cleanedInput = '';\n\n        for (let i = 0; i < s.length; i++) {\n            if (B32Chars.indexOf(s[i]) < 0) {\n                continue;\n            }\n\n            cleanedInput += s[i];\n        }\n        s = cleanedInput;\n\n        let bits = '';\n        let hex = '';\n        for (let i = 0; i < s.length; i++) {\n            const byteIndex = B32Chars.indexOf(s.charAt(i));\n            if (byteIndex < 0) {\n                continue;\n            }\n            bits += this.leftPad(byteIndex.toString(2), 5, '0');\n        }\n        for (let i = 0; i + 4 <= bits.length; i += 4) {\n            const chunk = bits.substr(i, 4);\n            hex = hex + parseInt(chunk, 2).toString(16);\n        }\n        return hex;\n    }\n\n    private b32ToBytes(s: string): Uint8Array {\n        return Utils.fromHexToArray(this.b32ToHex(s));\n    }\n\n    private async sign(keyBytes: Uint8Array, timeBytes: Uint8Array, alg: 'sha1' | 'sha256' | 'sha512') {\n        const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n        return new Uint8Array(signature);\n    }\n}\n","import { StorageService } from '../abstractions/storage.service';\nimport { TokenService } from '../abstractions/token.service';\nimport { UserService as UserServiceAbstraction } from '../abstractions/user.service';\n\nimport { OrganizationData } from '../models/data/organizationData';\nimport { Organization } from '../models/domain/organization';\n\nimport { KdfType } from '../enums/kdfType';\n\nconst Keys = {\n    userId: 'userId',\n    userEmail: 'userEmail',\n    stamp: 'securityStamp',\n    kdf: 'kdf',\n    kdfIterations: 'kdfIterations',\n    organizationsPrefix: 'organizations_',\n};\n\nexport class UserService implements UserServiceAbstraction {\n    private userId: string;\n    private email: string;\n    private stamp: string;\n    private kdf: KdfType;\n    private kdfIterations: number;\n\n    constructor(private tokenService: TokenService, private storageService: StorageService) { }\n\n    setInformation(userId: string, email: string, kdf: KdfType, kdfIterations: number): Promise<any> {\n        this.email = email;\n        this.userId = userId;\n        this.kdf = kdf;\n        this.kdfIterations = kdfIterations;\n\n        return Promise.all([\n            this.storageService.save(Keys.userEmail, email),\n            this.storageService.save(Keys.userId, userId),\n            this.storageService.save(Keys.kdf, kdf),\n            this.storageService.save(Keys.kdfIterations, kdfIterations),\n        ]);\n    }\n\n    setSecurityStamp(stamp: string): Promise<any> {\n        this.stamp = stamp;\n        return this.storageService.save(Keys.stamp, stamp);\n    }\n\n    async getUserId(): Promise<string> {\n        if (this.userId == null) {\n            this.userId = await this.storageService.get<string>(Keys.userId);\n        }\n        return this.userId;\n    }\n\n    async getEmail(): Promise<string> {\n        if (this.email == null) {\n            this.email = await this.storageService.get<string>(Keys.userEmail);\n        }\n        return this.email;\n    }\n\n    async getSecurityStamp(): Promise<string> {\n        if (this.stamp == null) {\n            this.stamp = await this.storageService.get<string>(Keys.stamp);\n        }\n        return this.stamp;\n    }\n\n    async getKdf(): Promise<KdfType> {\n        if (this.kdf == null) {\n            this.kdf = await this.storageService.get<KdfType>(Keys.kdf);\n        }\n        return this.kdf;\n    }\n\n    async getKdfIterations(): Promise<number> {\n        if (this.kdfIterations == null) {\n            this.kdfIterations = await this.storageService.get<number>(Keys.kdfIterations);\n        }\n        return this.kdfIterations;\n    }\n\n    async clear(): Promise<any> {\n        const userId = await this.getUserId();\n\n        await Promise.all([\n            this.storageService.remove(Keys.userId),\n            this.storageService.remove(Keys.userEmail),\n            this.storageService.remove(Keys.stamp),\n            this.storageService.remove(Keys.kdf),\n            this.storageService.remove(Keys.kdfIterations),\n            this.clearOrganizations(userId),\n        ]);\n\n        this.userId = this.email = this.stamp = null;\n        this.kdf = null;\n        this.kdfIterations = null;\n    }\n\n    async isAuthenticated(): Promise<boolean> {\n        const token = await this.tokenService.getToken();\n        if (token == null) {\n            return false;\n        }\n\n        const userId = await this.getUserId();\n        return userId != null;\n    }\n\n    async canAccessPremium(): Promise<boolean> {\n        const tokenPremium = this.tokenService.getPremium();\n        if (tokenPremium) {\n            return true;\n        }\n\n        const orgs = await this.getAllOrganizations();\n        for (let i = 0; i < orgs.length; i++) {\n            if (orgs[i].usersGetPremium && orgs[i].enabled) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    async getOrganization(id: string): Promise<Organization> {\n        const userId = await this.getUserId();\n        const organizations = await this.storageService.get<{ [id: string]: OrganizationData; }>(\n            Keys.organizationsPrefix + userId);\n        if (organizations == null || !organizations.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Organization(organizations[id]);\n    }\n\n    async getAllOrganizations(): Promise<Organization[]> {\n        const userId = await this.getUserId();\n        const organizations = await this.storageService.get<{ [id: string]: OrganizationData; }>(\n            Keys.organizationsPrefix + userId);\n        const response: Organization[] = [];\n        for (const id in organizations) {\n            if (organizations.hasOwnProperty(id)) {\n                response.push(new Organization(organizations[id]));\n            }\n        }\n        return response;\n    }\n\n    async replaceOrganizations(organizations: { [id: string]: OrganizationData; }): Promise<any> {\n        const userId = await this.getUserId();\n        await this.storageService.save(Keys.organizationsPrefix + userId, organizations);\n    }\n\n    async clearOrganizations(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.organizationsPrefix + userId);\n    }\n}\n","import { Cipher } from './cipher';\n\nimport { CipherView } from '../view/cipherView';\n\nexport class CipherWithIds extends Cipher {\n    id: string;\n    collectionIds: string[];\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: CipherView) {\n        this.id = o.id;\n        super.build(o);\n        this.collectionIds = o.collectionIds;\n    }\n}\n","import { Collection } from './collection';\n\nimport { CollectionView } from '../view/collectionView';\n\nexport class CollectionWithId extends Collection {\n    id: string;\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: CollectionView) {\n        this.id = o.id;\n        super.build(o);\n    }\n}\n","import { Folder } from './folder';\n\nimport { FolderView } from '../view/folderView';\n\nexport class FolderWithId extends Folder {\n    id: string;\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: FolderView) {\n        this.id = o.id;\n        super.build(o);\n    }\n}\n","export enum NotificationType {\n    SyncCipherUpdate = 0,\n    SyncCipherCreate = 1,\n    SyncLoginDelete = 2,\n    SyncFolderDelete = 3,\n    SyncCiphers = 4,\n\n    SyncVault = 5,\n    SyncOrgKeys = 6,\n    SyncFolderCreate = 7,\n    SyncFolderUpdate = 8,\n    SyncCipherDelete = 9,\n    SyncSettings = 10,\n\n    LogOut = 11,\n}\n","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n    RouterStateSnapshot,\n} from '@angular/router';\n\nimport { LockService } from '../../abstractions/lock.service';\nimport { MessagingService } from '../../abstractions/messaging.service';\nimport { UserService } from '../../abstractions/user.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n    constructor(private lockService: LockService, private userService: UserService, private router: Router,\n        private messagingService: MessagingService) { }\n\n    async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n        const isAuthed = await this.userService.isAuthenticated();\n        if (!isAuthed) {\n            this.messagingService.send('authBlocked');\n            return false;\n        }\n\n        const locked = await this.lockService.isLocked();\n        if (locked) {\n            if (routerState != null) {\n                this.messagingService.send('lockedUrl', { url: routerState.url });\n            }\n            this.router.navigate(['lock']);\n            return false;\n        }\n\n        return true;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\n@Injectable()\nexport class OrganizationGuardService implements CanActivate {\n    constructor(private userService: UserService, private router: Router,\n        private toasterService: ToasterService, private i18nService: I18nService) { }\n\n    async canActivate(route: ActivatedRouteSnapshot) {\n        const org = await this.userService.getOrganization(route.params.organizationId);\n        if (org == null) {\n            this.router.navigate(['/']);\n            return false;\n        }\n        if (!org.isOwner && !org.enabled) {\n            this.toasterService.popAsync('error', null, this.i18nService.t('organizationIsDisabled'));\n            this.router.navigate(['/']);\n            return false;\n        }\n\n        return true;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { OrganizationUserType } from 'jslib/enums/organizationUserType';\n\n@Injectable()\nexport class OrganizationTypeGuardService implements CanActivate {\n    constructor(private userService: UserService, private router: Router) { }\n\n    async canActivate(route: ActivatedRouteSnapshot) {\n        const org = await this.userService.getOrganization(route.parent.params.organizationId);\n        const allowedTypes = route.data == null ? null : route.data.allowedTypes as OrganizationUserType[];\n        if (allowedTypes == null || allowedTypes.indexOf(org.type) === -1) {\n            this.router.navigate(['/organizations', org.id]);\n            return false;\n        }\n\n        return true;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { LockService } from 'jslib/abstractions/lock.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\n@Injectable()\nexport class UnauthGuardService implements CanActivate {\n    constructor(private lockService: LockService, private userService: UserService,\n        private router: Router) { }\n\n    async canActivate() {\n        const isAuthed = await this.userService.isAuthenticated();\n        if (isAuthed) {\n            const locked = await this.lockService.isLocked();\n            if (locked) {\n                this.router.navigate(['lock']);\n            } else {\n                this.router.navigate(['vault']);\n            }\n            return false;\n        }\n\n        return true;\n    }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport 'bootstrap';\nimport 'jquery';\nimport 'popper.js';\n\n// tslint:disable-next-line\nrequire('../scss/styles.scss');\n\nimport { AppModule } from './app.module';\n\nif (process.env.ENV === 'production') {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\n","import 'core-js';\n\nimport { ToasterModule } from 'angular2-toaster';\nimport { Angulartics2Module } from 'angulartics2';\nimport { Angulartics2GoogleAnalytics } from 'angulartics2/ga';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { ServicesModule } from './services/services.module';\n\nimport { AppComponent } from './app.component';\nimport { ModalComponent } from './modal.component';\n\nimport { AvatarComponent } from './components/avatar.component';\nimport { CalloutComponent } from './components/callout.component';\nimport { PasswordStrengthComponent } from './components/password-strength.component';\n\nimport { FooterComponent } from './layouts/footer.component';\nimport { FrontendLayoutComponent } from './layouts/frontend-layout.component';\nimport { NavbarComponent } from './layouts/navbar.component';\nimport { OrganizationLayoutComponent } from './layouts/organization-layout.component';\nimport { UserLayoutComponent } from './layouts/user-layout.component';\n\nimport { AcceptOrganizationComponent } from './accounts/accept-organization.component';\nimport { HintComponent } from './accounts/hint.component';\nimport { LockComponent } from './accounts/lock.component';\nimport { LoginComponent } from './accounts/login.component';\nimport { RecoverDeleteComponent } from './accounts/recover-delete.component';\nimport { RecoverTwoFactorComponent } from './accounts/recover-two-factor.component';\nimport { RegisterComponent } from './accounts/register.component';\nimport { TwoFactorOptionsComponent } from './accounts/two-factor-options.component';\nimport { TwoFactorComponent } from './accounts/two-factor.component';\nimport { VerifyEmailTokenComponent } from './accounts/verify-email-token.component';\nimport { VerifyRecoverDeleteComponent } from './accounts/verify-recover-delete.component';\n\nimport {\n    CollectionAddEditComponent as OrgCollectionAddEditComponent,\n} from './organizations/manage/collection-add-edit.component';\nimport { CollectionsComponent as OrgManageCollectionsComponent } from './organizations/manage/collections.component';\nimport { EntityEventsComponent as OrgEntityEventsComponent } from './organizations/manage/entity-events.component';\nimport { EntityUsersComponent as OrgEntityUsersComponent } from './organizations/manage/entity-users.component';\nimport { EventsComponent as OrgEventsComponent } from './organizations/manage/events.component';\nimport { GroupAddEditComponent as OrgGroupAddEditComponent } from './organizations/manage/group-add-edit.component';\nimport { GroupsComponent as OrgGroupsComponent } from './organizations/manage/groups.component';\nimport { ManageComponent as OrgManageComponent } from './organizations/manage/manage.component';\nimport { PeopleComponent as OrgPeopleComponent } from './organizations/manage/people.component';\nimport { UserAddEditComponent as OrgUserAddEditComponent } from './organizations/manage/user-add-edit.component';\nimport { UserConfirmComponent as OrgUserConfirmComponent } from './organizations/manage/user-confirm.component';\nimport { UserGroupsComponent as OrgUserGroupsComponent } from './organizations/manage/user-groups.component';\n\nimport { AccountComponent as OrgAccountComponent } from './organizations/settings/account.component';\nimport { AdjustSeatsComponent } from './organizations/settings/adjust-seats.component';\nimport { ApiKeyComponent as OrgApiKeyComponent } from './organizations/settings/api-key.component';\nimport { ChangePlanComponent } from './organizations/settings/change-plan.component';\nimport { DeleteOrganizationComponent } from './organizations/settings/delete-organization.component';\nimport { DownloadLicenseComponent } from './organizations/settings/download-license.component';\nimport { OrganizationBillingComponent } from './organizations/settings/organization-billing.component';\nimport { OrganizationSubscriptionComponent } from './organizations/settings/organization-subscription.component';\nimport { RotateApiKeyComponent as OrgRotateApiKeyComponent } from './organizations/settings/rotate-api-key.component';\nimport { SettingsComponent as OrgSettingComponent } from './organizations/settings/settings.component';\nimport {\n    TwoFactorSetupComponent as OrgTwoFactorSetupComponent,\n} from './organizations/settings/two-factor-setup.component';\n\nimport { ExportComponent as OrgExportComponent } from './organizations/tools/export.component';\nimport {\n    ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent,\n} from './organizations/tools/exposed-passwords-report.component';\nimport { ImportComponent as OrgImportComponent } from './organizations/tools/import.component';\nimport {\n    InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent,\n} from './organizations/tools/inactive-two-factor-report.component';\nimport {\n    ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent,\n} from './organizations/tools/reused-passwords-report.component';\nimport { ToolsComponent as OrgToolsComponent } from './organizations/tools/tools.component';\nimport {\n    UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent,\n} from './organizations/tools/unsecured-websites-report.component';\nimport {\n    WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent,\n} from './organizations/tools/weak-passwords-report.component';\n\nimport { AddEditComponent as OrgAddEditComponent } from './organizations/vault/add-edit.component';\nimport { AttachmentsComponent as OrgAttachmentsComponent } from './organizations/vault/attachments.component';\nimport { CiphersComponent as OrgCiphersComponent } from './organizations/vault/ciphers.component';\nimport { CollectionsComponent as OrgCollectionsComponent } from './organizations/vault/collections.component';\nimport { GroupingsComponent as OrgGroupingsComponent } from './organizations/vault/groupings.component';\nimport { VaultComponent as OrgVaultComponent } from './organizations/vault/vault.component';\n\nimport { AccountComponent } from './settings/account.component';\nimport { AddCreditComponent } from './settings/add-credit.component';\nimport { AdjustPaymentComponent } from './settings/adjust-payment.component';\nimport { AdjustStorageComponent } from './settings/adjust-storage.component';\nimport { ChangeEmailComponent } from './settings/change-email.component';\nimport { ChangeKdfComponent } from './settings/change-kdf.component';\nimport { ChangePasswordComponent } from './settings/change-password.component';\nimport { CreateOrganizationComponent } from './settings/create-organization.component';\nimport { DeauthorizeSessionsComponent } from './settings/deauthorize-sessions.component';\nimport { DeleteAccountComponent } from './settings/delete-account.component';\nimport { DomainRulesComponent } from './settings/domain-rules.component';\nimport { OptionsComponent } from './settings/options.component';\nimport { OrganizationPlansComponent } from './settings/organization-plans.component';\nimport { OrganizationsComponent } from './settings/organizations.component';\nimport { PaymentComponent } from './settings/payment.component';\nimport { PremiumComponent } from './settings/premium.component';\nimport { ProfileComponent } from './settings/profile.component';\nimport { PurgeVaultComponent } from './settings/purge-vault.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { TwoFactorAuthenticatorComponent } from './settings/two-factor-authenticator.component';\nimport { TwoFactorDuoComponent } from './settings/two-factor-duo.component';\nimport { TwoFactorEmailComponent } from './settings/two-factor-email.component';\nimport { TwoFactorRecoveryComponent } from './settings/two-factor-recovery.component';\nimport { TwoFactorSetupComponent } from './settings/two-factor-setup.component';\nimport { TwoFactorU2fComponent } from './settings/two-factor-u2f.component';\nimport { TwoFactorVerifyComponent } from './settings/two-factor-verify.component';\nimport { TwoFactorYubiKeyComponent } from './settings/two-factor-yubikey.component';\nimport { UpdateKeyComponent } from './settings/update-key.component';\nimport { UpdateLicenseComponent } from './settings/update-license.component';\nimport { UserBillingComponent } from './settings/user-billing.component';\nimport { UserSubscriptionComponent } from './settings/user-subscription.component';\nimport { VerifyEmailComponent } from './settings/verify-email.component';\n\nimport { BreachReportComponent } from './tools/breach-report.component';\nimport { ExportComponent } from './tools/export.component';\nimport { ExposedPasswordsReportComponent } from './tools/exposed-passwords-report.component';\nimport { ImportComponent } from './tools/import.component';\nimport { InactiveTwoFactorReportComponent } from './tools/inactive-two-factor-report.component';\nimport { PasswordGeneratorHistoryComponent } from './tools/password-generator-history.component';\nimport { PasswordGeneratorComponent } from './tools/password-generator.component';\nimport { ReusedPasswordsReportComponent } from './tools/reused-passwords-report.component';\nimport { ToolsComponent } from './tools/tools.component';\nimport { UnsecuredWebsitesReportComponent } from './tools/unsecured-websites-report.component';\nimport { WeakPasswordsReportComponent } from './tools/weak-passwords-report.component';\n\nimport { AddEditComponent } from './vault/add-edit.component';\nimport { AttachmentsComponent } from './vault/attachments.component';\nimport { BulkDeleteComponent } from './vault/bulk-delete.component';\nimport { BulkMoveComponent } from './vault/bulk-move.component';\nimport { BulkShareComponent } from './vault/bulk-share.component';\nimport { CiphersComponent } from './vault/ciphers.component';\nimport { CollectionsComponent } from './vault/collections.component';\nimport { FolderAddEditComponent } from './vault/folder-add-edit.component';\nimport { GroupingsComponent } from './vault/groupings.component';\nimport { ShareComponent } from './vault/share.component';\nimport { VaultComponent } from './vault/vault.component';\n\nimport { IconComponent } from 'jslib/angular/components/icon.component';\n\nimport { A11yTitleDirective } from 'jslib/angular/directives/a11y-title.directive';\nimport { ApiActionDirective } from 'jslib/angular/directives/api-action.directive';\nimport { AutofocusDirective } from 'jslib/angular/directives/autofocus.directive';\nimport { BlurClickDirective } from 'jslib/angular/directives/blur-click.directive';\nimport { BoxRowDirective } from 'jslib/angular/directives/box-row.directive';\nimport { FallbackSrcDirective } from 'jslib/angular/directives/fallback-src.directive';\nimport { InputVerbatimDirective } from 'jslib/angular/directives/input-verbatim.directive';\nimport { SelectCopyDirective } from 'jslib/angular/directives/select-copy.directive';\nimport { StopClickDirective } from 'jslib/angular/directives/stop-click.directive';\nimport { StopPropDirective } from 'jslib/angular/directives/stop-prop.directive';\nimport { TrueFalseValueDirective } from 'jslib/angular/directives/true-false-value.directive';\n\nimport { ColorPasswordPipe } from 'jslib/angular/pipes/color-password.pipe';\nimport { I18nPipe } from 'jslib/angular/pipes/i18n.pipe';\nimport { SearchCiphersPipe } from 'jslib/angular/pipes/search-ciphers.pipe';\nimport { SearchPipe } from 'jslib/angular/pipes/search.pipe';\n\nimport { registerLocaleData } from '@angular/common';\nimport localeCa from '@angular/common/locales/ca';\nimport localeCs from '@angular/common/locales/cs';\nimport localeDa from '@angular/common/locales/da';\nimport localeDe from '@angular/common/locales/de';\nimport localeEnGb from '@angular/common/locales/en-GB';\nimport localeEs from '@angular/common/locales/es';\nimport localeEt from '@angular/common/locales/et';\nimport localeFr from '@angular/common/locales/fr';\nimport localeHe from '@angular/common/locales/he';\nimport localeIt from '@angular/common/locales/it';\nimport localeJa from '@angular/common/locales/ja';\nimport localeKo from '@angular/common/locales/ko';\nimport localeNb from '@angular/common/locales/nb';\nimport localeNl from '@angular/common/locales/nl';\nimport localePl from '@angular/common/locales/pl';\nimport localePtBr from '@angular/common/locales/pt';\nimport localePtPt from '@angular/common/locales/pt-PT';\nimport localeRu from '@angular/common/locales/ru';\nimport localeSk from '@angular/common/locales/sk';\nimport localeSv from '@angular/common/locales/sv';\nimport localeUk from '@angular/common/locales/uk';\nimport localeZhCn from '@angular/common/locales/zh-Hans';\nimport localeZhTw from '@angular/common/locales/zh-Hant';\n\nregisterLocaleData(localeCa, 'ca');\nregisterLocaleData(localeCs, 'cs');\nregisterLocaleData(localeDa, 'da');\nregisterLocaleData(localeDe, 'de');\nregisterLocaleData(localeEnGb, 'en-GB');\nregisterLocaleData(localeEs, 'es');\nregisterLocaleData(localeEt, 'et');\nregisterLocaleData(localeFr, 'fr');\nregisterLocaleData(localeHe, 'he');\nregisterLocaleData(localeIt, 'it');\nregisterLocaleData(localeJa, 'ja');\nregisterLocaleData(localeKo, 'ko');\nregisterLocaleData(localeNb, 'nb');\nregisterLocaleData(localeNl, 'nl');\nregisterLocaleData(localePl, 'pl');\nregisterLocaleData(localePtBr, 'pt-BR');\nregisterLocaleData(localePtPt, 'pt-PT');\nregisterLocaleData(localeRu, 'ru');\nregisterLocaleData(localeSk, 'sk');\nregisterLocaleData(localeSv, 'sv');\nregisterLocaleData(localeUk, 'uk');\nregisterLocaleData(localeZhCn, 'zh-CN');\nregisterLocaleData(localeZhTw, 'zh-TW');\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        AppRoutingModule,\n        ServicesModule,\n        Angulartics2Module.forRoot([Angulartics2GoogleAnalytics], {\n            pageTracking: {\n                clearQueryParams: true,\n            },\n        }),\n        ToasterModule.forRoot(),\n        InfiniteScrollModule,\n        DragDropModule,\n    ],\n    declarations: [\n        A11yTitleDirective,\n        AcceptOrganizationComponent,\n        AccountComponent,\n        AddCreditComponent,\n        AddEditComponent,\n        AdjustPaymentComponent,\n        AdjustSeatsComponent,\n        AdjustStorageComponent,\n        ApiActionDirective,\n        AppComponent,\n        AttachmentsComponent,\n        AutofocusDirective,\n        AvatarComponent,\n        BlurClickDirective,\n        BoxRowDirective,\n        BreachReportComponent,\n        BulkDeleteComponent,\n        BulkMoveComponent,\n        BulkShareComponent,\n        CalloutComponent,\n        ChangeEmailComponent,\n        ChangeKdfComponent,\n        ChangePasswordComponent,\n        ChangePlanComponent,\n        CiphersComponent,\n        CollectionsComponent,\n        ColorPasswordPipe,\n        CreateOrganizationComponent,\n        DeauthorizeSessionsComponent,\n        DeleteAccountComponent,\n        DeleteOrganizationComponent,\n        DomainRulesComponent,\n        DownloadLicenseComponent,\n        ExportComponent,\n        ExposedPasswordsReportComponent,\n        FallbackSrcDirective,\n        FolderAddEditComponent,\n        FooterComponent,\n        FrontendLayoutComponent,\n        GroupingsComponent,\n        HintComponent,\n        I18nPipe,\n        IconComponent,\n        ImportComponent,\n        InactiveTwoFactorReportComponent,\n        InputVerbatimDirective,\n        LockComponent,\n        LoginComponent,\n        ModalComponent,\n        NavbarComponent,\n        OptionsComponent,\n        OrgAccountComponent,\n        OrgAddEditComponent,\n        OrgApiKeyComponent,\n        OrganizationBillingComponent,\n        OrganizationPlansComponent,\n        OrganizationSubscriptionComponent,\n        OrgAttachmentsComponent,\n        OrgCiphersComponent,\n        OrgCollectionAddEditComponent,\n        OrgCollectionsComponent,\n        OrgEntityEventsComponent,\n        OrgEntityUsersComponent,\n        OrgEventsComponent,\n        OrgExportComponent,\n        OrgExposedPasswordsReportComponent,\n        OrgImportComponent,\n        OrgInactiveTwoFactorReportComponent,\n        OrgGroupAddEditComponent,\n        OrgGroupingsComponent,\n        OrgGroupsComponent,\n        OrgManageCollectionsComponent,\n        OrgManageComponent,\n        OrgPeopleComponent,\n        OrgReusedPasswordsReportComponent,\n        OrgRotateApiKeyComponent,\n        OrgSettingComponent,\n        OrgToolsComponent,\n        OrgTwoFactorSetupComponent,\n        OrgUserAddEditComponent,\n        OrgUserConfirmComponent,\n        OrgUserGroupsComponent,\n        OrganizationsComponent,\n        OrganizationLayoutComponent,\n        OrgUnsecuredWebsitesReportComponent,\n        OrgVaultComponent,\n        OrgWeakPasswordsReportComponent,\n        PasswordGeneratorComponent,\n        PasswordGeneratorHistoryComponent,\n        PasswordStrengthComponent,\n        PaymentComponent,\n        PremiumComponent,\n        ProfileComponent,\n        PurgeVaultComponent,\n        RecoverDeleteComponent,\n        RecoverTwoFactorComponent,\n        RegisterComponent,\n        ReusedPasswordsReportComponent,\n        SearchCiphersPipe,\n        SearchPipe,\n        SelectCopyDirective,\n        SettingsComponent,\n        ShareComponent,\n        StopClickDirective,\n        StopPropDirective,\n        ToolsComponent,\n        TrueFalseValueDirective,\n        TwoFactorAuthenticatorComponent,\n        TwoFactorComponent,\n        TwoFactorDuoComponent,\n        TwoFactorEmailComponent,\n        TwoFactorOptionsComponent,\n        TwoFactorRecoveryComponent,\n        TwoFactorSetupComponent,\n        TwoFactorU2fComponent,\n        TwoFactorVerifyComponent,\n        TwoFactorYubiKeyComponent,\n        UnsecuredWebsitesReportComponent,\n        UpdateKeyComponent,\n        UpdateLicenseComponent,\n        UserBillingComponent,\n        UserLayoutComponent,\n        UserSubscriptionComponent,\n        VaultComponent,\n        VerifyEmailComponent,\n        VerifyEmailTokenComponent,\n        VerifyRecoverDeleteComponent,\n        WeakPasswordsReportComponent,\n    ],\n    entryComponents: [\n        AddEditComponent,\n        AttachmentsComponent,\n        BulkDeleteComponent,\n        BulkMoveComponent,\n        BulkShareComponent,\n        CollectionsComponent,\n        DeauthorizeSessionsComponent,\n        DeleteAccountComponent,\n        DeleteOrganizationComponent,\n        FolderAddEditComponent,\n        ModalComponent,\n        OrgAddEditComponent,\n        OrgApiKeyComponent,\n        OrgAttachmentsComponent,\n        OrgCollectionAddEditComponent,\n        OrgCollectionsComponent,\n        OrgEntityEventsComponent,\n        OrgEntityUsersComponent,\n        OrgGroupAddEditComponent,\n        OrgRotateApiKeyComponent,\n        OrgUserAddEditComponent,\n        OrgUserConfirmComponent,\n        OrgUserGroupsComponent,\n        PasswordGeneratorHistoryComponent,\n        PurgeVaultComponent,\n        ShareComponent,\n        TwoFactorAuthenticatorComponent,\n        TwoFactorDuoComponent,\n        TwoFactorEmailComponent,\n        TwoFactorOptionsComponent,\n        TwoFactorRecoveryComponent,\n        TwoFactorU2fComponent,\n        TwoFactorYubiKeyComponent,\n        UpdateKeyComponent,\n    ],\n    providers: [],\n    bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { BroadcasterService as BroadcasterServiceAbstraction } from '../abstractions/broadcaster.service';\n\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\n    subscribers: Map<string, (message: any) => any> = new Map<string, (message: any) => any>();\n\n    send(message: any, id?: string) {\n        if (id != null) {\n            if (this.subscribers.has(id)) {\n                this.subscribers.get(id)(message);\n            }\n            return;\n        }\n\n        this.subscribers.forEach((value) => {\n            value(message);\n        });\n    }\n\n    subscribe(id: string, messageCallback: (message: any) => any) {\n        this.subscribers.set(id, messageCallback);\n    }\n\n    unsubscribe(id: string) {\n        if (this.subscribers.has(id)) {\n            this.subscribers.delete(id);\n        }\n    }\n}\n","<router-outlet></router-outlet>\n<div class=\"container my-5 text-muted text-center\">\n    &copy; {{year}}, 8bit Solutions LLC\n    <br> {{'versionNumber' | i18n : version}}\n</div>\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n    <div class=\"row justify-content-md-center mt-5\">\n        <div class=\"col-5\">\n            <img src=\"images/logo-dark@2x.png\" class=\"logo mb-2\" alt=\"Bitwarden\">\n            <p class=\"lead text-center mx-4 mb-4\">{{'loginOrCreateNewAccount' | i18n}}</p>\n            <div class=\"card d-block\">\n                <div class=\"card-body\">\n                    <div class=\"form-group\">\n                        <label for=\"email\">{{'emailAddress' | i18n}}</label>\n                        <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required\n                            inputmode=\"email\" appInputVerbatim=\"false\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\n                        <div class=\"d-flex\">\n                            <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\"\n                                name=\"MasterPassword\" class=\"text-monospace form-control\" [(ngModel)]=\"masterPassword\"\n                                required appInputVerbatim>\n                            <button type=\"button\" class=\"ml-1 btn btn-link\" title=\"{{'toggleVisibility' | i18n}}\"\n                                (click)=\"togglePassword()\">\n                                <i class=\"fa fa-lg\"\n                                    [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i>\n                            </button>\n                        </div>\n                        <small class=\"form-text\">\n                            <a routerLink=\"/hint\">{{'getMasterPasswordHint' | i18n}}</a>\n                        </small>\n                    </div>\n                    <div class=\"form-check\">\n                        <input type=\"checkbox\" class=\"form-check-input\" id=\"rememberEmail\" name=\"RememberEmail\"\n                            [(ngModel)]=\"rememberEmail\">\n                        <label class=\"form-check-label\" for=\"rememberEmail\">{{'rememberEmail' | i18n}}</label>\n                    </div>\n                    <hr>\n                    <div class=\"d-flex\">\n                        <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\">\n                            <span>\n                                <i class=\"fa fa-sign-in\"></i> {{'logIn' | i18n}}\n                            </span>\n                            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                        </button>\n                        <a routerLink=\"/register\" [queryParams]=\"{email: email}\"\n                            class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n                            <i class=\"fa fa-pencil-square-o\"></i> {{'createAccount' | i18n}}\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n","import {\n    Input,\n    OnInit,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthResult } from '../../models/domain/authResult';\n\nimport { AuthService } from '../../abstractions/auth.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\nimport { StateService } from '../../abstractions/state.service';\nimport { StorageService } from '../../abstractions/storage.service';\n\nimport { ConstantsService } from '../../services/constants.service';\n\nimport { Utils } from '../../misc/utils';\n\nconst Keys = {\n    rememberedEmail: 'rememberedEmail',\n    rememberEmail: 'rememberEmail',\n};\n\nexport class LoginComponent implements OnInit {\n    @Input() email: string = '';\n    @Input() rememberEmail = true;\n\n    masterPassword: string = '';\n    showPassword: boolean = false;\n    formPromise: Promise<AuthResult>;\n    onSuccessfulLogin: () => Promise<any>;\n    onSuccessfulLoginNavigate: () => Promise<any>;\n    onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n\n    protected twoFactorRoute = '2fa';\n    protected successRoute = 'vault';\n\n    constructor(protected authService: AuthService, protected router: Router,\n        protected platformUtilsService: PlatformUtilsService, protected i18nService: I18nService,\n        private storageService: StorageService, protected stateService: StorageService) { }\n\n    async ngOnInit() {\n        if (this.email == null || this.email === '') {\n            this.email = await this.storageService.get<string>(Keys.rememberedEmail);\n            if (this.email == null) {\n                this.email = '';\n            }\n        }\n        this.rememberEmail = await this.storageService.get<boolean>(Keys.rememberEmail);\n        if (this.rememberEmail == null) {\n            this.rememberEmail = true;\n        }\n        if (Utils.isBrowser) {\n            document.getElementById(this.email == null || this.email === '' ? 'email' : 'masterPassword').focus();\n        }\n    }\n\n    async submit() {\n        if (this.email == null || this.email === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('emailRequired'));\n            return;\n        }\n        if (this.email.indexOf('@') === -1) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidEmail'));\n            return;\n        }\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        try {\n            this.formPromise = this.authService.logIn(this.email, this.masterPassword);\n            const response = await this.formPromise;\n            await this.storageService.save(Keys.rememberEmail, this.rememberEmail);\n            if (this.rememberEmail) {\n                await this.storageService.save(Keys.rememberedEmail, this.email);\n            } else {\n                await this.storageService.remove(Keys.rememberedEmail);\n            }\n            if (response.twoFactor) {\n                this.platformUtilsService.eventTrack('Logged In To Two-step');\n                if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n                    this.onSuccessfulLoginTwoFactorNavigate();\n                } else {\n                    this.router.navigate([this.twoFactorRoute]);\n                }\n            } else {\n                const disableFavicon = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\n                await this.stateService.save(ConstantsService.disableFaviconKey, !!disableFavicon);\n                if (this.onSuccessfulLogin != null) {\n                    this.onSuccessfulLogin();\n                }\n                this.platformUtilsService.eventTrack('Logged In');\n                if (this.onSuccessfulLoginNavigate != null) {\n                    this.onSuccessfulLoginNavigate();\n                } else {\n                    this.router.navigate([this.successRoute]);\n                }\n            }\n        } catch { }\n    }\n\n    togglePassword() {\n        this.platformUtilsService.eventTrack('Toggled Master Password on Login');\n        this.showPassword = !this.showPassword;\n        document.getElementById('masterPassword').focus();\n    }\n}\n","export function getDomain(host: string): string | null {\n    return null;\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate autocomplete=\"off\">\n    <div class=\"row justify-content-md-center mt-5\">\n        <div class=\"col-5\"\n            [ngClass]=\"{'col-9': selectedProviderType === providerType.Duo || selectedProviderType === providerType.OrganizationDuo}\">\n            <p class=\"lead text-center mb-4\">{{title}}</p>\n            <div class=\"card d-block\">\n                <div class=\"card-body\">\n                    <ng-container\n                        *ngIf=\"selectedProviderType === providerType.Email || selectedProviderType === providerType.Authenticator\">\n                        <p *ngIf=\"selectedProviderType === providerType.Authenticator\">\n                            {{'enterVerificationCodeApp' | i18n}}</p>\n                        <p *ngIf=\"selectedProviderType === providerType.Email\">\n                            {{'enterVerificationCodeEmail' | i18n : twoFactorEmail}}\n                        </p>\n                        <div class=\"form-group\">\n                            <label for=\"code\" class=\"sr-only\">{{'verificationCode' | i18n}}</label>\n                            <input id=\"code\" type=\"text\" name=\"Code\" class=\"form-control\" [(ngModel)]=\"token\" required\n                                appAutofocus inputmode=\"tel\" appInputVerbatim>\n                            <small class=\"form-text\" *ngIf=\"selectedProviderType === providerType.Email\">\n                                <a href=\"#\" appStopClick (click)=\"sendEmail(true)\" [appApiAction]=\"emailPromise\"\n                                    *ngIf=\"selectedProviderType === providerType.Email\">\n                                    {{'sendVerificationCodeEmailAgain' | i18n}}\n                                </a>\n                            </small>\n                        </div>\n                    </ng-container>\n                    <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\">\n                        <p class=\"text-center\">{{'insertYubiKey' | i18n}}</p>\n                        <img src=\"images/yubikey.jpg\" class=\"rounded img-fluid mb-3\" alt=\"\">\n                        <div class=\"form-group\">\n                            <label for=\"code\" class=\"sr-only\">{{'verificationCode' | i18n}}</label>\n                            <input id=\"code\" type=\"password\" name=\"Code\" class=\"form-control\" [(ngModel)]=\"token\"\n                                required appAutofocus appInputVerbatim autocomplete=\"new-password\">\n                        </div>\n                    </ng-container>\n                    <ng-container *ngIf=\"selectedProviderType === providerType.U2f\">\n                        <p class=\"text-center\" *ngIf=\"!u2fReady\">\n                            <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"></i>\n                        </p>\n                        <ng-container *ngIf=\"u2fReady\">\n                            <p class=\"text-center\">{{'insertU2f' | i18n}}</p>\n                            <img src=\"images/u2fkey.jpg\" alt=\"\" class=\"rounded img-fluid mb-3\">\n                        </ng-container>\n                    </ng-container>\n                    <ng-container *ngIf=\"selectedProviderType === providerType.Duo ||\n                        selectedProviderType === providerType.OrganizationDuo\">\n                        <div id=\"duo-frame\" class=\"mb-3\">\n                            <iframe id=\"duo_iframe\"></iframe>\n                        </div>\n                    </ng-container>\n                    <i class=\"fa fa-spinner text-muted fa-spin pull-right\" title=\"{{'loading' | i18n}}\"\n                        *ngIf=\"form.loading && selectedProviderType === providerType.U2f\"></i>\n                    <div class=\"form-check\" *ngIf=\"selectedProviderType != null\">\n                        <input id=\"remember\" type=\"checkbox\" name=\"Remember\" class=\"form-check-input\"\n                            [(ngModel)]=\"remember\">\n                        <label for=\"remember\" class=\"form-check-label\">{{'rememberMe' | i18n}}</label>\n                    </div>\n                    <ng-container *ngIf=\"selectedProviderType == null\">\n                        <p>{{'noTwoStepProviders' | i18n}}</p>\n                        <p>{{'noTwoStepProviders2' | i18n}}</p>\n                    </ng-container>\n                    <hr>\n                    <div class=\"d-flex mb-3\">\n                        <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"\n                            *ngIf=\"selectedProviderType != null && selectedProviderType !== providerType.Duo && \n                        selectedProviderType !== providerType.OrganizationDuo && selectedProviderType !== providerType.U2f\">\n                            <span>\n                                <i class=\"fa fa-sign-in\"></i> {{'continue' | i18n}}\n                            </span>\n                            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                        </button>\n                        <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n                            {{'cancel' | i18n}}\n                        </a>\n                    </div>\n                    <div class=\"text-center\">\n                        <a href=\"#\" appStopClick (click)=\"anotherMethod()\">{{'useAnotherTwoStepMethod' | i18n}}</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n<ng-template #twoFactorOptions></ng-template>\n<iframe id=\"u2f_iframe\" hidden></iframe>\n","import {\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nimport { AuthService } from '../../abstractions/auth.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\n\nexport class TwoFactorOptionsComponent implements OnInit {\n    @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n    @Output() onRecoverSelected = new EventEmitter();\n\n    providers: any[] = [];\n\n    constructor(protected authService: AuthService, protected router: Router,\n        protected i18nService: I18nService, protected platformUtilsService: PlatformUtilsService,\n        protected win: Window) { }\n\n    ngOnInit() {\n        this.providers = this.authService.getSupportedTwoFactorProviders(this.win);\n    }\n\n    choose(p: any) {\n        this.onProviderSelected.emit(p.type);\n    }\n\n    recover() {\n        this.platformUtilsService.eventTrack('Selected Recover');\n        this.platformUtilsService.launchUri('https://help.bitwarden.com/article/lost-two-step-device/');\n        this.onRecoverSelected.emit();\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n    EventEmitter,\n    OnDestroy,\n    Output,\n    Type,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { MessagingService } from '../../abstractions/messaging.service';\n\n@Component({\n    selector: 'app-modal',\n    template: `<ng-template #container></ng-template>`,\n})\nexport class ModalComponent implements OnDestroy {\n    @Output() onClose = new EventEmitter();\n    @Output() onClosed = new EventEmitter();\n    @Output() onShow = new EventEmitter();\n    @Output() onShown = new EventEmitter();\n    @ViewChild('container', { read: ViewContainerRef }) container: ViewContainerRef;\n    parentContainer: ViewContainerRef = null;\n    fade: boolean = true;\n\n    constructor(protected componentFactoryResolver: ComponentFactoryResolver,\n        protected messagingService: MessagingService) { }\n\n    ngOnDestroy() {\n        document.body.classList.remove('modal-open');\n        document.body.removeChild(document.querySelector('.modal-backdrop'));\n    }\n\n    show<T>(type: Type<T>, parentContainer: ViewContainerRef, fade: boolean = true,\n        setComponentParameters: (component: T) => void = null): T {\n        this.onShow.emit();\n        this.messagingService.send('modalShow');\n        this.parentContainer = parentContainer;\n        this.fade = fade;\n\n        document.body.classList.add('modal-open');\n        const backdrop = document.createElement('div');\n        backdrop.className = 'modal-backdrop' + (this.fade ? ' fade' : '');\n        document.body.appendChild(backdrop);\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory<T>(type);\n        const componentRef = this.container.createComponent<T>(factory);\n        if (setComponentParameters != null) {\n            setComponentParameters(componentRef.instance);\n        }\n\n        document.querySelector('.modal-dialog').addEventListener('click', (e: Event) => {\n            e.stopPropagation();\n        });\n\n        const modals = Array.from(document.querySelectorAll('.modal, .modal *[data-dismiss=\"modal\"]'));\n        for (const closeElement of modals) {\n            closeElement.addEventListener('click', (event) => {\n                this.close();\n            });\n        }\n\n        this.onShown.emit();\n        this.messagingService.send('modalShown');\n        return componentRef.instance;\n    }\n\n    close() {\n        this.onClose.emit();\n        this.messagingService.send('modalClose');\n        this.onClosed.emit();\n        this.messagingService.send('modalClosed');\n        if (this.parentContainer != null) {\n            this.parentContainer.clear();\n        }\n    }\n}\n","import {\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { DeviceType } from '../../enums/deviceType';\nimport { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nimport { TwoFactorEmailRequest } from '../../models/request/twoFactorEmailRequest';\n\nimport { ApiService } from '../../abstractions/api.service';\nimport { AuthService } from '../../abstractions/auth.service';\nimport { EnvironmentService } from '../../abstractions/environment.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\nimport { StateService } from '../../abstractions/state.service';\nimport { StorageService } from '../../abstractions/storage.service';\n\nimport { TwoFactorProviders } from '../../services/auth.service';\nimport { ConstantsService } from '../../services/constants.service';\n\nimport * as DuoWebSDK from 'duo_web_sdk';\nimport { U2f } from '../../misc/u2f';\n\nexport class TwoFactorComponent implements OnInit, OnDestroy {\n    token: string = '';\n    remember: boolean = false;\n    u2fReady: boolean = false;\n    initU2f: boolean = true;\n    providers = TwoFactorProviders;\n    providerType = TwoFactorProviderType;\n    selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n    u2fSupported: boolean = false;\n    u2f: U2f = null;\n    title: string = '';\n    twoFactorEmail: string = null;\n    formPromise: Promise<any>;\n    emailPromise: Promise<any>;\n    onSuccessfulLogin: () => Promise<any>;\n    onSuccessfulLoginNavigate: () => Promise<any>;\n\n    protected loginRoute = 'login';\n    protected successRoute = 'vault';\n\n    constructor(protected authService: AuthService, protected router: Router,\n        protected i18nService: I18nService, protected apiService: ApiService,\n        protected platformUtilsService: PlatformUtilsService, protected win: Window,\n        protected environmentService: EnvironmentService, protected stateService: StateService,\n        protected storageService: StorageService) {\n        this.u2fSupported = this.platformUtilsService.supportsU2f(win);\n    }\n\n    async ngOnInit() {\n        if (this.authService.email == null || this.authService.masterPasswordHash == null ||\n            this.authService.twoFactorProvidersData == null) {\n            this.router.navigate([this.loginRoute]);\n            return;\n        }\n\n        if (this.initU2f && this.win != null && this.u2fSupported) {\n            let customWebVaultUrl: string = null;\n            if (this.environmentService.baseUrl != null) {\n                customWebVaultUrl = this.environmentService.baseUrl;\n            } else if (this.environmentService.webVaultUrl != null) {\n                customWebVaultUrl = this.environmentService.webVaultUrl;\n            }\n\n            this.u2f = new U2f(this.win, customWebVaultUrl, (token: string) => {\n                this.token = token;\n                this.submit();\n            }, (error: string) => {\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), error);\n            }, (info: string) => {\n                if (info === 'ready') {\n                    this.u2fReady = true;\n                }\n            });\n        }\n\n        this.selectedProviderType = this.authService.getDefaultTwoFactorProvider(this.u2fSupported);\n        await this.init();\n    }\n\n    ngOnDestroy(): void {\n        this.cleanupU2f();\n        this.u2f = null;\n    }\n\n    async init() {\n        if (this.selectedProviderType == null) {\n            this.title = this.i18nService.t('loginUnavailable');\n            return;\n        }\n\n        this.cleanupU2f();\n        this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n        const providerData = this.authService.twoFactorProvidersData.get(this.selectedProviderType);\n        switch (this.selectedProviderType) {\n            case TwoFactorProviderType.U2f:\n                if (!this.u2fSupported || this.u2f == null) {\n                    break;\n                }\n\n                if (providerData.Challenge != null) {\n                    setTimeout(() => {\n                        this.u2f.init(JSON.parse(providerData.Challenge));\n                    }, 500);\n                } else {\n                    // TODO: Deprecated. Remove in future version.\n                    const challenges = JSON.parse(providerData.Challenges);\n                    if (challenges != null && challenges.length > 0) {\n                        this.u2f.init({\n                            appId: challenges[0].appId,\n                            challenge: challenges[0].challenge,\n                            keys: challenges.map((c: any) => {\n                                return {\n                                    version: c.version,\n                                    keyHandle: c.keyHandle,\n                                };\n                            }),\n                        });\n                    }\n                }\n                break;\n            case TwoFactorProviderType.Duo:\n            case TwoFactorProviderType.OrganizationDuo:\n                setTimeout(() => {\n                    DuoWebSDK.init({\n                        iframe: undefined,\n                        host: providerData.Host,\n                        sig_request: providerData.Signature,\n                        submit_callback: async (f: HTMLFormElement) => {\n                            const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n                            if (sig != null) {\n                                this.token = sig.value;\n                                await this.submit();\n                            }\n                        },\n                    });\n                }, 0);\n                break;\n            case TwoFactorProviderType.Email:\n                this.twoFactorEmail = providerData.Email;\n                if (this.authService.twoFactorProvidersData.size > 1) {\n                    await this.sendEmail(false);\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    async submit() {\n        if (this.token == null || this.token === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('verificationCodeRequired'));\n            return;\n        }\n\n        if (this.selectedProviderType === TwoFactorProviderType.U2f) {\n            if (this.u2f != null) {\n                this.u2f.stop();\n            } else {\n                return;\n            }\n        } else if (this.selectedProviderType === TwoFactorProviderType.Email ||\n            this.selectedProviderType === TwoFactorProviderType.Authenticator) {\n            this.token = this.token.replace(' ', '').trim();\n        }\n\n        try {\n            this.formPromise = this.authService.logInTwoFactor(this.selectedProviderType, this.token, this.remember);\n            await this.formPromise;\n            const disableFavicon = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\n            await this.stateService.save(ConstantsService.disableFaviconKey, !!disableFavicon);\n            if (this.onSuccessfulLogin != null) {\n                this.onSuccessfulLogin();\n            }\n            this.platformUtilsService.eventTrack('Logged In From Two-step');\n            if (this.onSuccessfulLoginNavigate != null) {\n                this.onSuccessfulLoginNavigate();\n            } else {\n                this.router.navigate([this.successRoute]);\n            }\n        } catch {\n            if (this.selectedProviderType === TwoFactorProviderType.U2f && this.u2f != null) {\n                this.u2f.start();\n            }\n        }\n    }\n\n    async sendEmail(doToast: boolean) {\n        if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n            return;\n        }\n\n        if (this.emailPromise != null) {\n            return;\n        }\n\n        try {\n            const request = new TwoFactorEmailRequest(this.authService.email, this.authService.masterPasswordHash);\n            this.emailPromise = this.apiService.postTwoFactorEmail(request);\n            await this.emailPromise;\n            if (doToast) {\n                this.platformUtilsService.showToast('success', null,\n                    this.i18nService.t('verificationCodeEmailSent', this.twoFactorEmail));\n            }\n        } catch { }\n\n        this.emailPromise = null;\n    }\n\n    private cleanupU2f() {\n        if (this.u2f != null) {\n            this.u2f.stop();\n            this.u2f.cleanup();\n        }\n    }\n}\n","import { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nexport class AuthResult {\n    twoFactor: boolean = false;\n    twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string; }> = null;\n}\n","import { DeviceType } from '../../enums/deviceType';\n\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\n\nexport class DeviceRequest {\n    type: DeviceType;\n    name: string;\n    identifier: string;\n    pushToken?: string;\n\n    constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n        this.type = platformUtilsService.getDevice();\n        this.name = platformUtilsService.getDeviceString();\n        this.identifier = appId;\n        this.pushToken = null;\n    }\n}\n","export class PreloginRequest {\n    email: string;\n\n    constructor(email: string) {\n        this.email = email;\n    }\n}\n","import { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nimport { DeviceRequest } from './deviceRequest';\n\nexport class TokenRequest {\n    email: string;\n    masterPasswordHash: string;\n    token: string;\n    provider: TwoFactorProviderType;\n    remember: boolean;\n    device?: DeviceRequest;\n\n    constructor(email: string, masterPasswordHash: string, provider: TwoFactorProviderType,\n        token: string, remember: boolean, device?: DeviceRequest) {\n        this.email = email;\n        this.masterPasswordHash = masterPasswordHash;\n        this.token = token;\n        this.provider = provider;\n        this.remember = remember;\n        this.device = device != null ? device : null;\n    }\n\n    toIdentityToken(clientId: string) {\n        const obj: any = {\n            grant_type: 'password',\n            username: this.email,\n            password: this.masterPasswordHash,\n            scope: 'api offline_access',\n            client_id: clientId,\n        };\n\n        if (this.device) {\n            obj.deviceType = this.device.type;\n            obj.deviceIdentifier = this.device.identifier;\n            obj.deviceName = this.device.name;\n            // no push tokens for browser apps yet\n            // obj.devicePushToken = this.device.pushToken;\n        }\n\n        if (this.token && this.provider != null) {\n            obj.twoFactorToken = this.token;\n            obj.twoFactorProvider = this.provider;\n            obj.twoFactorRemember = this.remember ? '1' : '0';\n        }\n\n        return obj;\n    }\n}\n","export class U2f {\n    private iframe: HTMLIFrameElement = null;\n    private connectorLink: HTMLAnchorElement;\n    private parseFunction = this.parseMessage.bind(this);\n\n    constructor(private win: Window, private webVaultUrl: string, private successCallback: Function,\n        private errorCallback: Function, private infoCallback: Function) {\n        this.connectorLink = win.document.createElement('a');\n        this.webVaultUrl = webVaultUrl != null && webVaultUrl !== '' ? webVaultUrl : 'https://vault.bitwarden.com';\n    }\n\n    init(data: any): void {\n        this.connectorLink.href = this.webVaultUrl + '/u2f-connector.html' +\n            '?data=' + this.base64Encode(JSON.stringify(data)) +\n            '&parent=' + encodeURIComponent(this.win.document.location.href) +\n            '&v=1';\n\n        this.iframe = this.win.document.getElementById('u2f_iframe') as HTMLIFrameElement;\n        this.iframe.src = this.connectorLink.href;\n\n        this.win.addEventListener('message', this.parseFunction, false);\n    }\n\n    stop() {\n        this.sendMessage('stop');\n    }\n\n    start() {\n        this.sendMessage('start');\n    }\n\n    sendMessage(message: any) {\n        if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n            return;\n        }\n\n        this.iframe.contentWindow.postMessage(message, this.iframe.src);\n    }\n\n    base64Encode(str: string): string {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n            return String.fromCharCode(('0x' + p1) as any);\n        }));\n    }\n\n    cleanup() {\n        this.win.removeEventListener('message', this.parseFunction, false);\n    }\n\n    private parseMessage(event: MessageEvent) {\n        if (!this.validMessage(event)) {\n            return;\n        }\n\n        const parts: string[] = event.data.split('|');\n        if (parts[0] === 'success' && this.successCallback) {\n            this.successCallback(parts[1]);\n        } else if (parts[0] === 'error' && this.errorCallback) {\n            this.errorCallback(parts[1]);\n        } else if (parts[0] === 'info' && this.infoCallback) {\n            this.infoCallback(parts[1]);\n        }\n    }\n\n    private validMessage(event: MessageEvent) {\n        if (event.origin == null || event.origin === '' || event.origin !== (this.connectorLink as any).origin ||\n            event.data == null || typeof (event.data) !== 'string') {\n            return false;\n        }\n\n        return event.data.indexOf('success|') === 0 || event.data.indexOf('error|') === 0 ||\n            event.data.indexOf('info|') === 0;\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n    <div class=\"row justify-content-md-center mt-5\">\n        <div class=\"col-5\">\n            <p class=\"lead text-center mb-4\">{{'createAccount' | i18n}}</p>\n            <div class=\"card d-block\">\n                <div class=\"card-body\">\n                    <app-callout title=\"{{'createOrganizationStep1' | i18n}}\" type=\"info\" icon=\"fa-thumb-tack\"\n                        *ngIf=\"showCreateOrgMessage\">\n                        {{'createOrganizationCreatePersonalAccount' | i18n}}\n                    </app-callout>\n                    <div class=\"form-group\">\n                        <label for=\"email\">{{'emailAddress' | i18n}}</label>\n                        <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required\n                            [appAutofocus]=\"email === ''\" inputmode=\"email\" appInputVerbatim=\"false\">\n                        <small class=\"form-text text-muted\">{{'emailAddressDesc' | i18n}}</small>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"name\">{{'yourName' | i18n}}</label>\n                        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\"\n                            [appAutofocus]=\"email !== ''\">\n                        <small class=\"form-text text-muted\">{{'yourNameDesc' | i18n}}</small>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\n                        <div class=\"d-flex\">\n                            <div class=\"w-100\">\n                                <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\"\n                                    name=\"MasterPassword\" class=\"text-monospace form-control mb-1\"\n                                    [(ngModel)]=\"masterPassword\" (input)=\"updatePasswordStrength()\" required\n                                    appInputVerbatim>\n                                <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\">\n                                </app-password-strength>\n                            </div>\n                            <div>\n                                <button type=\"button\" class=\"ml-1 btn btn-link\" title=\"{{'toggleVisibility' | i18n}}\"\n                                    (click)=\"togglePassword(false)\">\n                                    <i class=\"fa fa-lg\"\n                                        [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i>\n                                </button>\n                                <div class=\"progress-bar invisible\"></div>\n                            </div>\n                        </div>\n                        <small class=\"form-text text-muted\">{{'masterPassDesc' | i18n}}</small>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"masterPasswordRetype\">{{'reTypeMasterPass' | i18n}}</label>\n                        <div class=\"d-flex\">\n                            <input id=\"masterPasswordRetype\" type=\"{{showPassword ? 'text' : 'password'}}\"\n                                name=\"MasterPasswordRetype\" class=\"text-monospace form-control\"\n                                [(ngModel)]=\"confirmMasterPassword\" required appInputVerbatim>\n                            <button type=\"button\" class=\"ml-1 btn btn-link\" title=\"{{'toggleVisibility' | i18n}}\"\n                                (click)=\"togglePassword(true)\">\n                                <i class=\"fa fa-lg\"\n                                    [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"hint\">{{'masterPassHint' | i18n}}</label>\n                        <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\">\n                        <small class=\"form-text text-muted\">{{'masterPassHintDesc' | i18n}}</small>\n                    </div>\n                    <hr>\n                    <div class=\"d-flex mb-2\">\n                        <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\">\n                            <span>{{'submit' | i18n}}</span>\n                            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                        </button>\n                        <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n                            {{'cancel' | i18n}}\n                        </a>\n                    </div>\n                    <small class=\"text-muted\" *ngIf=\"showTerms\">\n                        {{'submitAgreePolicies' | i18n}}\n                        <a href=\"https://bitwarden.com/terms/\" target=\"_blank\"\n                            rel=\"noopener\">{{'termsOfService' | i18n}}</a>,\n                        <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\"\n                            rel=\"noopener\">{{'privacyPolicy' | i18n}}</a>\n                    </small>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n","import { Router } from '@angular/router';\n\nimport { KeysRequest } from '../../models/request/keysRequest';\nimport { RegisterRequest } from '../../models/request/registerRequest';\n\nimport { ApiService } from '../../abstractions/api.service';\nimport { AuthService } from '../../abstractions/auth.service';\nimport { CryptoService } from '../../abstractions/crypto.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PasswordGenerationService } from '../../abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\nimport { StateService } from '../../abstractions/state.service';\n\nimport { KdfType } from '../../enums/kdfType';\n\nexport class RegisterComponent {\n    name: string = '';\n    email: string = '';\n    masterPassword: string = '';\n    confirmMasterPassword: string = '';\n    hint: string = '';\n    showPassword: boolean = false;\n    formPromise: Promise<any>;\n    masterPasswordScore: number;\n\n    protected successRoute = 'login';\n    private masterPasswordStrengthTimeout: any;\n\n    constructor(protected authService: AuthService, protected router: Router,\n        protected i18nService: I18nService, protected cryptoService: CryptoService,\n        protected apiService: ApiService, protected stateService: StateService,\n        protected platformUtilsService: PlatformUtilsService,\n        protected passwordGenerationService: PasswordGenerationService) { }\n\n    get masterPasswordScoreWidth() {\n        return this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n    }\n\n    get masterPasswordScoreColor() {\n        switch (this.masterPasswordScore) {\n            case 4:\n                return 'success';\n            case 3:\n                return 'primary';\n            case 2:\n                return 'warning';\n            default:\n                return 'danger';\n        }\n    }\n\n    get masterPasswordScoreText() {\n        switch (this.masterPasswordScore) {\n            case 4:\n                return this.i18nService.t('strong');\n            case 3:\n                return this.i18nService.t('good');\n            case 2:\n                return this.i18nService.t('weak');\n            default:\n                return this.masterPasswordScore != null ? this.i18nService.t('weak') : null;\n        }\n    }\n\n    async submit() {\n        if (this.email == null || this.email === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('emailRequired'));\n            return;\n        }\n        if (this.email.indexOf('@') === -1) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidEmail'));\n            return;\n        }\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n        if (this.masterPassword.length < 8) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassLength'));\n            return;\n        }\n        if (this.masterPassword !== this.confirmMasterPassword) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassDoesntMatch'));\n            return;\n        }\n\n        const strengthResult = this.passwordGenerationService.passwordStrength(this.masterPassword,\n            this.getPasswordStrengthUserInput());\n        if (strengthResult != null && strengthResult.score < 3) {\n            const result = await this.platformUtilsService.showDialog(this.i18nService.t('weakMasterPasswordDesc'),\n                this.i18nService.t('weakMasterPassword'), this.i18nService.t('yes'), this.i18nService.t('no'),\n                'warning');\n            if (!result) {\n                return;\n            }\n        }\n\n        this.name = this.name === '' ? null : this.name;\n        this.email = this.email.trim().toLowerCase();\n        const kdf = KdfType.PBKDF2_SHA256;\n        const useLowerKdf = this.platformUtilsService.isEdge() || this.platformUtilsService.isIE();\n        const kdfIterations = useLowerKdf ? 10000 : 100000;\n        const key = await this.cryptoService.makeKey(this.masterPassword, this.email, kdf, kdfIterations);\n        const encKey = await this.cryptoService.makeEncKey(key);\n        const hashedPassword = await this.cryptoService.hashPassword(this.masterPassword, key);\n        const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n        const request = new RegisterRequest(this.email, this.name, hashedPassword,\n            this.hint, encKey[1].encryptedString, kdf, kdfIterations);\n        request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n        const orgInvite = await this.stateService.get<any>('orgInvitation');\n        if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n            request.token = orgInvite.token;\n            request.organizationUserId = orgInvite.organizationUserId;\n        }\n\n        try {\n            this.formPromise = this.apiService.postRegister(request);\n            await this.formPromise;\n            this.platformUtilsService.eventTrack('Registered');\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('newAccountCreated'));\n            this.router.navigate([this.successRoute], { queryParams: { email: this.email } });\n        } catch { }\n    }\n\n    togglePassword(confirmField: boolean) {\n        this.platformUtilsService.eventTrack('Toggled Master Password on Register');\n        this.showPassword = !this.showPassword;\n        document.getElementById(confirmField ? 'masterPasswordRetype' : 'masterPassword').focus();\n    }\n\n    updatePasswordStrength() {\n        if (this.masterPasswordStrengthTimeout != null) {\n            clearTimeout(this.masterPasswordStrengthTimeout);\n        }\n        this.masterPasswordStrengthTimeout = setTimeout(() => {\n            const strengthResult = this.passwordGenerationService.passwordStrength(this.masterPassword,\n                this.getPasswordStrengthUserInput());\n            this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n        }, 300);\n    }\n\n    private getPasswordStrengthUserInput() {\n        let userInput: string[] = [];\n        const atPosition = this.email.indexOf('@');\n        if (atPosition > -1) {\n            userInput = userInput.concat(this.email.substr(0, atPosition).trim().toLowerCase().split(/[^A-Za-z0-9]/));\n        }\n        if (this.name != null && this.name !== '') {\n            userInput = userInput.concat(this.name.trim().toLowerCase().split(' '));\n        }\n        return userInput;\n    }\n}\n","import { KeysRequest } from './keysRequest';\n\nimport { KdfType } from '../../enums/kdfType';\n\nexport class RegisterRequest {\n    name: string;\n    email: string;\n    masterPasswordHash: string;\n    masterPasswordHint: string;\n    key: string;\n    keys: KeysRequest;\n    token: string;\n    organizationUserId: string;\n    kdf: KdfType;\n    kdfIterations: number;\n\n    constructor(email: string, name: string, masterPasswordHash: string, masterPasswordHint: string, key: string,\n        kdf: KdfType, kdfIterations: number) {\n        this.name = name;\n        this.email = email;\n        this.masterPasswordHash = masterPasswordHash;\n        this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n        this.key = key;\n        this.kdf = kdf;\n        this.kdfIterations = kdfIterations;\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n    <div class=\"row justify-content-md-center mt-5\">\n        <div class=\"col-5\">\n            <p class=\"lead text-center mb-4\">{{'passwordHint' | i18n}}</p>\n            <div class=\"card d-block\">\n                <div class=\"card-body\">\n                    <div class=\"form-group\">\n                        <label for=\"email\">{{'emailAddress' | i18n}}</label>\n                        <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required\n                            appAutofocus inputmode=\"email\" appInputVerbatim=\"false\">\n                        <small class=\"form-text text-muted\">{{'enterEmailToGetHint' | i18n}}</small>\n                    </div>\n                    <hr>\n                    <div class=\"d-flex\">\n                        <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\">\n                            <span [hidden]=\"form.loading\">{{'submit' | i18n}}</span>\n                            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                        </button>\n                        <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n                            {{'cancel' | i18n}}\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n","import { Router } from '@angular/router';\n\nimport { PasswordHintRequest } from '../../models/request/passwordHintRequest';\n\nimport { ApiService } from '../../abstractions/api.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\n\nexport class HintComponent {\n    email: string = '';\n    formPromise: Promise<any>;\n\n    protected successRoute = 'login';\n    protected onSuccessfulSubmit: () => void;\n\n    constructor(protected router: Router, protected i18nService: I18nService,\n        protected apiService: ApiService, protected platformUtilsService: PlatformUtilsService) { }\n\n    async submit() {\n        if (this.email == null || this.email === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('emailRequired'));\n            return;\n        }\n        if (this.email.indexOf('@') === -1) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidEmail'));\n            return;\n        }\n\n        try {\n            this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n            await this.formPromise;\n            this.platformUtilsService.eventTrack('Requested Hint');\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('masterPassSent'));\n            if (this.onSuccessfulSubmit != null) {\n                this.onSuccessfulSubmit();\n            } else if (this.router != null) {\n                this.router.navigate([this.successRoute]);\n            }\n        } catch { }\n    }\n}\n","export class PasswordHintRequest {\n    email: string;\n\n    constructor(email: string) {\n        this.email = email;\n    }\n}\n","<form (ngSubmit)=\"submit()\" class=\"container\" ngNativeValidate>\n    <div class=\"row justify-content-md-center mt-5\">\n        <div class=\"col-5\">\n            <p class=\"text-center mb-4\">\n                <i class=\"fa fa-lock fa-4x text-muted\"></i>\n            </p>\n            <p class=\"lead text-center mx-4 mb-4\">{{'yourVaultIsLocked' | i18n}}</p>\n            <div class=\"card d-block\">\n                <div class=\"card-body\">\n                    <div class=\"form-group\">\n                        <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\n                        <div class=\"d-flex\">\n                            <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\"\n                                name=\"MasterPassword\" class=\"text-monospace form-control\" [(ngModel)]=\"masterPassword\"\n                                required appAutofocus appInputVerbatim>\n                            <button type=\"button\" class=\"ml-1 btn btn-link\" title=\"{{'toggleVisibility' | i18n}}\"\n                                (click)=\"togglePassword()\">\n                                <i class=\"fa fa-lg\"\n                                    [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i>\n                            </button>\n                        </div>\n                        <small class=\"text-muted form-text\">\n                            {{'loggedInAsEmailOn' | i18n : email : webVaultHostname}}\n                        </small>\n                    </div>\n                    <hr>\n                    <div class=\"d-flex\">\n                        <button type=\"submit\" class=\"btn btn-primary btn-block\">\n                            <i class=\"fa fa-unlock-alt\"></i>\n                            {{'unlock' | i18n}}\n                        </button>\n                        <button type=\"button\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\" (click)=\"logOut()\">\n                            {{'logOut' | i18n}}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n","import { OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { CryptoService } from '../../abstractions/crypto.service';\nimport { EnvironmentService } from '../../abstractions/environment.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { LockService } from '../../abstractions/lock.service';\nimport { MessagingService } from '../../abstractions/messaging.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\nimport { StateService } from '../../abstractions/state.service';\nimport { StorageService } from '../../abstractions/storage.service';\nimport { UserService } from '../../abstractions/user.service';\n\nimport { ConstantsService } from '../../services/constants.service';\n\nimport { CipherString } from '../../models/domain/cipherString';\nimport { SymmetricCryptoKey } from '../../models/domain/symmetricCryptoKey';\n\nimport { Utils } from '../../misc/utils';\n\nexport class LockComponent implements OnInit {\n    masterPassword: string = '';\n    pin: string = '';\n    showPassword: boolean = false;\n    email: string;\n    pinLock: boolean = false;\n    webVaultHostname: string = '';\n\n    protected successRoute: string = 'vault';\n    protected onSuccessfulSubmit: () => void;\n\n    private invalidPinAttempts = 0;\n    private pinSet: [boolean, boolean];\n\n    constructor(protected router: Router, protected i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService, protected messagingService: MessagingService,\n        protected userService: UserService, protected cryptoService: CryptoService,\n        protected storageService: StorageService, protected lockService: LockService,\n        protected environmentService: EnvironmentService, protected stateService: StateService) { }\n\n    async ngOnInit() {\n        this.pinSet = await this.lockService.isPinLockSet();\n        this.pinLock = (this.pinSet[0] && this.lockService.pinProtectedKey != null) || this.pinSet[1];\n        this.email = await this.userService.getEmail();\n        let vaultUrl = this.environmentService.getWebVaultUrl();\n        if (vaultUrl == null) {\n            vaultUrl = 'https://bitwarden.com';\n        }\n        this.webVaultHostname = Utils.getHostname(vaultUrl);\n    }\n\n    async submit() {\n        if (this.pinLock && (this.pin == null || this.pin === '')) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('pinRequired'));\n            return;\n        }\n        if (!this.pinLock && (this.masterPassword == null || this.masterPassword === '')) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const kdf = await this.userService.getKdf();\n        const kdfIterations = await this.userService.getKdfIterations();\n\n        if (this.pinLock) {\n            let failed = true;\n            try {\n                if (this.pinSet[0]) {\n                    const key = await this.cryptoService.makeKeyFromPin(this.pin, this.email, kdf, kdfIterations,\n                        this.lockService.pinProtectedKey);\n                    const encKey = await this.cryptoService.getEncKey(key);\n                    const protectedPin = await this.storageService.get<string>(ConstantsService.protectedPin);\n                    const decPin = await this.cryptoService.decryptToUtf8(new CipherString(protectedPin), encKey);\n                    failed = decPin !== this.pin;\n                    if (!failed) {\n                        await this.setKeyAndContinue(key);\n                    }\n                } else {\n                    const key = await this.cryptoService.makeKeyFromPin(this.pin, this.email, kdf, kdfIterations);\n                    failed = false;\n                    await this.setKeyAndContinue(key);\n                }\n            } catch {\n                failed = true;\n            }\n\n            if (failed) {\n                this.invalidPinAttempts++;\n                if (this.invalidPinAttempts >= 5) {\n                    this.messagingService.send('logout');\n                    return;\n                }\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('invalidPin'));\n            }\n        } else {\n            const key = await this.cryptoService.makeKey(this.masterPassword, this.email, kdf, kdfIterations);\n            const keyHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n            const storedKeyHash = await this.cryptoService.getKeyHash();\n\n            if (storedKeyHash != null && keyHash != null && storedKeyHash === keyHash) {\n                if (this.pinSet[0]) {\n                    const protectedPin = await this.storageService.get<string>(ConstantsService.protectedPin);\n                    const encKey = await this.cryptoService.getEncKey(key);\n                    const decPin = await this.cryptoService.decryptToUtf8(new CipherString(protectedPin), encKey);\n                    const pinKey = await this.cryptoService.makePinKey(decPin, this.email, kdf, kdfIterations);\n                    this.lockService.pinProtectedKey = await this.cryptoService.encrypt(key.key, pinKey);\n                }\n                this.setKeyAndContinue(key);\n            } else {\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('invalidMasterPassword'));\n            }\n        }\n    }\n\n    async logOut() {\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('logOutConfirmation'),\n            this.i18nService.t('logOut'), this.i18nService.t('logOut'), this.i18nService.t('cancel'));\n        if (confirmed) {\n            this.messagingService.send('logout');\n        }\n    }\n\n    togglePassword() {\n        this.platformUtilsService.eventTrack('Toggled Master Password on Unlock');\n        this.showPassword = !this.showPassword;\n        document.getElementById(this.pinLock ? 'pin' : 'masterPassword').focus();\n    }\n\n    private async setKeyAndContinue(key: SymmetricCryptoKey) {\n        await this.cryptoService.setKey(key);\n        this.doContinue();\n    }\n\n    private async doContinue() {\n        const disableFavicon = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\n        await this.stateService.save(ConstantsService.disableFaviconKey, !!disableFavicon);\n        this.messagingService.send('unlocked');\n        if (this.onSuccessfulSubmit != null) {\n            this.onSuccessfulSubmit();\n        } else if (this.router != null) {\n            this.router.navigate([this.successRoute]);\n        }\n    }\n}\n","<div class=\"mt-5 d-flex justify-content-center\">\n    <div>\n        <img src=\"images/logo-dark@2x.png\" class=\"mb-4 logo\" alt=\"Bitwarden\">\n        <p class=\"text-center\">\n            <i class=\"fa fa-spinner fa-spin fa-2x text-muted\" title=\"{{'loading' | i18n}}\"></i>\n        </p>\n    </div>\n</div>\n","export class VerifyEmailRequest {\n    userId: string;\n    token: string;\n\n    constructor(userId: string, token: string) {\n        this.userId = userId;\n        this.token = token;\n    }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n    <div>\n        <img src=\"images/logo-dark@2x.png\" class=\"mb-4 logo\" alt=\"Bitwarden\">\n        <p class=\"text-center\">\n            <i class=\"fa fa-spinner fa-spin fa-2x text-muted\" title=\"{{'loading' | i18n}}\"></i>\n        </p>\n    </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n    <div class=\"row justify-content-md-center mt-5\">\n        <div class=\"col-5\">\n            <p class=\"lead text-center mb-4\">{{'joinOrganization' | i18n}}</p>\n            <div class=\"card d-block\">\n                <div class=\"card-body\">\n                    <p class=\"text-center\">\n                        {{orgName}}\n                        <strong class=\"d-block mt-2\">{{email}}</strong>\n                    </p>\n                    <p>{{'joinOrganizationDesc' | i18n}}</p>\n                    <hr>\n                    <div class=\"d-flex\">\n                        <a routerLink=\"/\" [queryParams]=\"{email: email}\" class=\"btn btn-primary btn-block\">\n                            {{'logIn' | i18n}}\n                        </a>\n                        <a routerLink=\"/register\" [queryParams]=\"{email: email}\"\n                            class=\"btn btn-primary btn-block ml-2 mt-0\">\n                            {{'createAccount' | i18n}}\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","export class OrganizationUserAcceptRequest {\n    token: string;\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n    <div class=\"row justify-content-md-center mt-5\">\n        <div class=\"col-5\">\n            <p class=\"lead text-center mb-4\">{{'recoverAccountTwoStep' | i18n}}</p>\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <p>{{'recoverAccountTwoStepDesc' | i18n}}\n                        <a href=\"https://help.bitwarden.com/article/lost-two-step-device/\" target=\"_blank\"\n                            rel=\"noopener\">{{'learnMore' | i18n}}</a>\n                    </p>\n                    <div class=\"form-group\">\n                        <label for=\"email\">{{'emailAddress' | i18n}}</label>\n                        <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required\n                            appAutofocus inputmode=\"email\" appInputVerbatim=\"false\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\n                        <input id=\"masterPassword\" type=\"password\" name=\"MasterPassword\" class=\"form-control\"\n                            [(ngModel)]=\"masterPassword\" required appInputVerbatim>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"recoveryCode\">{{'recoveryCodeTitle' | i18n}}</label>\n                        <input id=\"recoveryCode\" class=\"text-monospace form-control\" type=\"text\" name=\"RecoveryCode\"\n                            [(ngModel)]=\"recoveryCode\" required appInputVerbatim>\n                    </div>\n                    <hr>\n                    <div class=\"d-flex\">\n                        <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\">\n                            <span>{{'submit' | i18n}}</span>\n                            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                        </button>\n                        <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n                            {{'cancel' | i18n}}\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class TwoFactorRecoveryRequest extends PasswordVerificationRequest {\n    recoveryCode: string;\n    email: string;\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n    <div class=\"row justify-content-md-center mt-5\">\n        <div class=\"col-5\">\n            <p class=\"lead text-center mb-4\">{{'deleteAccount' | i18n}}</p>\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <p>{{'deleteRecoverDesc' | i18n}}</p>\n                    <div class=\"form-group\">\n                        <label for=\"email\">{{'emailAddress' | i18n}}</label>\n                        <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required\n                            appAutofocus inputmode=\"email\" appInputVerbatim=\"false\">\n                    </div>\n                    <hr>\n                    <div class=\"d-flex\">\n                        <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\">\n                            <span>{{'submit' | i18n}}</span>\n                            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                        </button>\n                        <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n                            {{'cancel' | i18n}}\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n","export class DeleteRecoverRequest {\n    email: string;\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n    <div class=\"row justify-content-md-center mt-5\">\n        <div class=\"col-5\">\n            <p class=\"lead text-center mb-4\">{{'deleteAccount' | i18n}}</p>\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <app-callout type=\"warning\">{{'deleteAccountWarning' | i18n}}</app-callout>\n                    <p class=\"text-center\">\n                        <strong>{{email}}</strong>\n                    </p>\n                    <p>{{'deleteRecoverConfirmDesc' | i18n}}</p>\n                    <hr>\n                    <div class=\"d-flex\">\n                        <button type=\"submit\" class=\"btn btn-danger btn-block btn-submit\" [disabled]=\"form.loading\">\n                            <span>{{'deleteAccount' | i18n}}</span>\n                            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                        </button>\n                        <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n                            {{'cancel' | i18n}}\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n","export class VerifyDeleteRecoverRequest {\n    userId: string;\n    token: string;\n\n    constructor(userId: string, token: string) {\n        this.userId = userId;\n        this.token = token;\n    }\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","<div class=\"container page-content\">\n    <div class=\"row\">\n        <div class=\"col-3\">\n            <app-vault-groupings (onAllClicked)=\"clearGroupingFilters()\" (onFavoritesClicked)=\"filterFavorites()\"\n                (onCipherTypeClicked)=\"filterCipherType($event)\" (onFolderClicked)=\"filterFolder($event.id)\"\n                (onAddFolder)=\"addFolder()\" (onEditFolder)=\"editFolder($event.id)\"\n                (onCollectionClicked)=\"filterCollection($event.id)\" (onSearchTextChanged)=\"filterSearchText($event)\">\n            </app-vault-groupings>\n        </div>\n        <div class=\"col-6\">\n            <div class=\"page-header d-flex\">\n                <h1>\n                    {{'myVault' | i18n}}\n                    <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\">\n                        <i *ngIf=\"actionSpinner.loading\" class=\"fa fa-spinner fa-spin text-muted\"\n                            title=\"{{'loading' | i18n}}\"></i>\n                    </small>\n                </h1>\n                <div class=\"ml-auto d-flex\">\n                    <div class=\"dropdown mr-2\" appListDropdown>\n                        <button class=\"btn btn-sm btn-outline-secondary dropdown-toggle\" type=\"button\"\n                            id=\"bulkActionsButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            <i class=\"fa fa-cog\"></i>\n                        </button>\n                        <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"bulkMove()\">\n                                <i class=\"fa fa-fw fa-share\"></i>\n                                {{'moveSelected' | i18n}}\n                            </a>\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"bulkShare()\">\n                                <i class=\"fa fa-fw fa-share-alt\"></i>\n                                {{'shareSelected' | i18n}}\n                            </a>\n                            <a class=\"dropdown-item text-danger\" href=\"#\" (click)=\"bulkDelete()\">\n                                <i class=\"fa fa-fw fa-trash-o\"></i>\n                                {{'deleteSelected' | i18n}}\n                            </a>\n                            <div class=\"dropdown-divider\"></div>\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"selectAll(true)\">\n                                <i class=\"fa fa-fw fa-check-square-o\"></i>\n                                {{'selectAll' | i18n}}\n                            </a>\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"selectAll(false)\">\n                                <i class=\"fa fa-fw fa-minus-square-o\"></i>\n                                {{'unselectAll' | i18n}}\n                            </a>\n                        </div>\n                    </div>\n                    <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" (click)=\"addCipher()\">\n                        <i class=\"fa fa-plus fa-fw\"></i>{{'addItem' | i18n}}\n                    </button>\n                </div>\n            </div>\n            <app-vault-ciphers (onCipherClicked)=\"editCipher($event)\"\n                (onAttachmentsClicked)=\"editCipherAttachments($event)\" (onAddCipher)=\"addCipher()\"\n                (onShareClicked)=\"shareCipher($event)\" (onCollectionsClicked)=\"editCipherCollections($event)\">\n            </app-vault-ciphers>\n        </div>\n        <div class=\"col-3\">\n            <div class=\"card border-warning mb-4\" *ngIf=\"showUpdateKey\">\n                <div class=\"card-header bg-warning text-white\">\n                    <i class=\"fa fa-warning fa-fw\"></i> {{'updateKeyTitle' | i18n}}\n                </div>\n                <div class=\"card-body\">\n                    <p>{{'updateEncryptionKeyShortDesc' | i18n}}</p>\n                    <button class=\"btn btn-block btn-outline-secondary\" type=\"button\" (click)=\"updateKey()\">\n                        {{'updateEncryptionKey' | i18n}}\n                    </button>\n                </div>\n            </div>\n            <app-verify-email *ngIf=\"showVerifyEmail\" class=\"d-block mb-4\"></app-verify-email>\n            <div class=\"card border-warning mb-4\" *ngIf=\"showBrowserOutdated\">\n                <div class=\"card-header bg-warning text-white\">\n                    <i class=\"fa fa-warning fa-fw\"></i> {{'updateBrowser' | i18n}}\n                </div>\n                <div class=\"card-body\">\n                    <p>{{'updateBrowserDesc' | i18n}}</p>\n                    <a class=\"btn btn-block btn-outline-secondary\" target=\"_blank\"\n                        href=\"https://browser-update.org/update-browser.html\" rel=\"noopener\">\n                        {{'updateBrowser' | i18n}}\n                    </a>\n                </div>\n            </div>\n            <div class=\"card border-success mb-4\" *ngIf=\"showPremiumCallout\">\n                <div class=\"card-header bg-success text-white\">\n                    <i class=\"fa fa-star fa-fw\"></i> {{'goPremium' | i18n}}\n                </div>\n                <div class=\"card-body\">\n                    <p>{{'premiumUpgradeUnlockFeatures' | i18n}}</p>\n                    <a class=\"btn btn-block btn-outline-secondary\" routerLink=\"/settings/premium\">\n                        {{'goPremium' | i18n}}\n                    </a>\n                </div>\n            </div>\n            <div class=\"card\">\n                <div class=\"card-header d-flex\">\n                    {{'organizations' | i18n}}\n                    <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/what-is-an-organization/\"\n                        target=\"_blank\" rel=\"noopener\" title=\"{{'learnMore' | i18n}}\">\n                        <i class=\"fa fa-question-circle-o\"></i>\n                    </a>\n                </div>\n                <div class=\"card-body\">\n                    <app-organizations [vault]=\"true\"></app-organizations>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #folderAddEdit></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #share></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #bulkDeleteTemplate></ng-template>\n<ng-template #bulkMoveTemplate></ng-template>\n<ng-template #bulkShareTemplate></ng-template>\n<ng-template #updateKeyTemplate></ng-template>\n","<div class=\"card border-warning\">\n    <div class=\"card-header bg-warning text-white\">\n        <i class=\"fa fa-envelope-o fa-fw\"></i> {{'verifyEmail' | i18n}}\n    </div>\n    <div class=\"card-body\">\n        <p>{{'verifyEmailDesc' | i18n}}</p>\n        <button type=\"button\" class=\"btn btn-block btn-outline-secondary btn-submit\" #sendBtn\n            [appApiAction]=\"actionPromise\" [disabled]=\"sendBtn.loading\" (click)=\"send()\">\n            <i class=\"fa fa-spin fa-spinner\" title=\"{{'loading' | i18n}}\"></i>\n            <span>\n                {{'sendEmail' | i18n}}\n            </span>\n        </button>\n    </div>\n</div>\n","<div class=\"card vault-filters\">\n    <div class=\"card-header d-flex\">\n        {{'filters' | i18n}}\n        <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/searching-vault/\" target=\"_blank\" rel=\"noopener\"\n            title=\"{{'learnMore' | i18n}}\">\n            <i class=\"fa fa-question-circle-o\"></i>\n        </a>\n    </div>\n    <div class=\"card-body\">\n        <input type=\"search\" placeholder=\"{{searchPlaceholder || ('searchVault' | i18n)}}\" id=\"search\"\n            class=\"form-control\" [(ngModel)]=\"searchText\" (input)=\"searchTextChanged()\" appAutofocus>\n        <ul class=\"fa-ul card-ul\">\n            <li [ngClass]=\"{active: selectedAll}\">\n                <a href=\"#\" appStopClick (click)=\"selectAll()\">\n                    <i class=\"fa-li fa fa-fw fa-th\"></i>{{'allItems' | i18n}}\n                </a>\n            </li>\n            <li [ngClass]=\"{active: selectedFavorites}\" *ngIf=\"showFavorites\">\n                <a href=\"#\" appStopClick (click)=\"selectFavorites()\">\n                    <i class=\"fa-li fa fa-fw fa-star\"></i>{{'favorites' | i18n}}\n                </a>\n            </li>\n        </ul>\n        <h3>{{'types' | i18n}}</h3>\n        <ul class=\"fa-ul card-ul\">\n            <li [ngClass]=\"{active: selectedType === cipherType.Login}\">\n                <a href=\"#\" appStopClick (click)=\"selectType(cipherType.Login)\">\n                    <i class=\"fa-li fa fa-fw fa-globe\"></i>{{'typeLogin' | i18n}}\n                </a>\n            </li>\n            <li [ngClass]=\"{active: selectedType === cipherType.Card}\">\n                <a href=\"#\" appStopClick (click)=\"selectType(cipherType.Card)\">\n                    <i class=\"fa-li fa fa-fw fa-credit-card\"></i>{{'typeCard' | i18n}}\n                </a>\n            </li>\n            <li [ngClass]=\"{active: selectedType === cipherType.Identity}\">\n                <a href=\"#\" appStopClick (click)=\"selectType(cipherType.Identity)\">\n                    <i class=\"fa-li fa fa-fw fa-id-card-o\"></i>{{'typeIdentity' | i18n}}\n                </a>\n            </li>\n            <li [ngClass]=\"{active: selectedType === cipherType.SecureNote}\">\n                <a href=\"#\" appStopClick (click)=\"selectType(cipherType.SecureNote)\">\n                    <i class=\"fa-li fa fa-fw fa-sticky-note-o\"></i>{{'typeSecureNote' | i18n}}\n                </a>\n            </li>\n        </ul>\n        <p *ngIf=\"!loaded\" class=\"text-muted\">\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n        </p>\n        <ng-container *ngIf=\"loaded\">\n            <ng-container *ngIf=\"showFolders\">\n                <h3 class=\"d-flex\">\n                    {{'folders' | i18n}}\n                    <a href=\"#\" class=\"text-muted ml-auto\" appStopClick (click)=\"addFolder()\"\n                        title=\"{{'addFolder' | i18n}}\">\n                        <i class=\"fa fa-plus fa-fw\"></i>\n                    </a>\n                </h3>\n                <ul class=\"fa-ul card-ul carets\">\n                    <ng-template #recursiveFolders let-folders>\n                        <li *ngFor=\"let f of folders\"\n                            [ngClass]=\"{active: selectedFolder && f.node.id === selectedFolderId}\">\n                            <div class=\"d-flex\">\n                                <i class=\"fa-li fa\" title=\"{{'toggleCollapse' | i18n}}\"\n                                    [ngClass]=\"{'fa-caret-right': isCollapsed(f.node), 'fa-caret-down': !isCollapsed(f.node)}\"\n                                    (click)=\"collapse(f.node)\"></i>\n                                <a href=\"#\" appStopClick (click)=\"selectFolder(f.node)\">{{f.node.name}}</a>\n                                <a href=\"#\" class=\"text-muted ml-auto show-active\" appStopClick\n                                    (click)=\"editFolder(f.node)\" title=\"{{'editFolder' | i18n}}\" *ngIf=\"f.node.id\">\n                                    <i class=\"fa fa-pencil fa-fw\"></i>\n                                </a>\n                            </div>\n                            <ul class=\"fa-ul card-ul carets\" *ngIf=\"f.children.length && !isCollapsed(f.node)\">\n                                <ng-container *ngTemplateOutlet=\"recursiveFolders; context:{ $implicit: f.children }\">\n                                </ng-container>\n                            </ul>\n                        </li>\n                    </ng-template>\n                    <ng-container *ngTemplateOutlet=\"recursiveFolders; context:{ $implicit: nestedFolders }\">\n                    </ng-container>\n                </ul>\n            </ng-container>\n            <ng-container *ngIf=\"showCollections && collections && collections.length\">\n                <h3>{{'collections' | i18n}}</h3>\n                <ul class=\"fa-ul card-ul carets\">\n                    <ng-template #recursiveCollections let-collections>\n                        <li *ngFor=\"let c of collections\" [ngClass]=\"{active: c.node.id === selectedCollectionId}\">\n                            <i class=\"fa-li fa\" title=\"{{'toggleCollapse' | i18n}}\"\n                                [ngClass]=\"{'fa-caret-right': isCollapsed(c.node), 'fa-caret-down': !isCollapsed(c.node)}\"\n                                (click)=\"collapse(c.node)\"></i>\n                            <a href=\"#\" appStopClick (click)=\"selectCollection(c.node)\">{{c.node.name}}</a>\n                            <ul class=\"fa-ul card-ul carets\" *ngIf=\"c.children.length && !isCollapsed(c.node)\">\n                                <ng-container\n                                    *ngTemplateOutlet=\"recursiveCollections; context:{ $implicit: c.children }\">\n                                </ng-container>\n                            </ul>\n                        </li>\n                    </ng-template>\n                    <ng-container *ngTemplateOutlet=\"recursiveCollections; context:{ $implicit: nestedCollections }\">\n                    </ng-container>\n                </ul>\n            </ng-container>\n        </ng-container>\n    </div>\n</div>\n","import {\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { CipherType } from '../../enums/cipherType';\n\nimport { CollectionView } from '../../models/view/collectionView';\nimport { FolderView } from '../../models/view/folderView';\n\nimport { TreeNode } from '../../models/domain/treeNode';\n\nimport { CollectionService } from '../../abstractions/collection.service';\nimport { FolderService } from '../../abstractions/folder.service';\nimport { StorageService } from '../../abstractions/storage.service';\nimport { UserService } from '../../abstractions/user.service';\n\nimport { ConstantsService } from '../../services/constants.service';\n\nexport class GroupingsComponent {\n    @Input() showFolders = true;\n    @Input() showCollections = true;\n    @Input() showFavorites = true;\n\n    @Output() onAllClicked = new EventEmitter();\n    @Output() onFavoritesClicked = new EventEmitter();\n    @Output() onCipherTypeClicked = new EventEmitter<CipherType>();\n    @Output() onFolderClicked = new EventEmitter<FolderView>();\n    @Output() onAddFolder = new EventEmitter();\n    @Output() onEditFolder = new EventEmitter<FolderView>();\n    @Output() onCollectionClicked = new EventEmitter<CollectionView>();\n\n    folders: FolderView[];\n    nestedFolders: Array<TreeNode<FolderView>>;\n    collections: CollectionView[];\n    nestedCollections: Array<TreeNode<CollectionView>>;\n    loaded: boolean = false;\n    cipherType = CipherType;\n    selectedAll: boolean = false;\n    selectedFavorites: boolean = false;\n    selectedType: CipherType = null;\n    selectedFolder: boolean = false;\n    selectedFolderId: string = null;\n    selectedCollectionId: string = null;\n\n    private collapsedGroupings: Set<string>;\n    private collapsedGroupingsKey: string;\n\n    constructor(protected collectionService: CollectionService, protected folderService: FolderService,\n        protected storageService: StorageService, protected userService: UserService) { }\n\n    async load(setLoaded = true) {\n        const userId = await this.userService.getUserId();\n        this.collapsedGroupingsKey = ConstantsService.collapsedGroupingsKey + '_' + userId;\n        const collapsedGroupings = await this.storageService.get<string[]>(this.collapsedGroupingsKey);\n        if (collapsedGroupings == null) {\n            this.collapsedGroupings = new Set<string>();\n        } else {\n            this.collapsedGroupings = new Set(collapsedGroupings);\n        }\n\n        await this.loadFolders();\n        await this.loadCollections();\n\n        if (setLoaded) {\n            this.loaded = true;\n        }\n    }\n\n    async loadCollections(organizationId?: string) {\n        if (!this.showCollections) {\n            return;\n        }\n        const collections = await this.collectionService.getAllDecrypted();\n        if (organizationId != null) {\n            this.collections = collections.filter((c) => c.organizationId === organizationId);\n        } else {\n            this.collections = collections;\n        }\n        this.nestedCollections = await this.collectionService.getAllNested(this.collections);\n    }\n\n    async loadFolders() {\n        if (!this.showFolders) {\n            return;\n        }\n        this.folders = await this.folderService.getAllDecrypted();\n        this.nestedFolders = await this.folderService.getAllNested();\n    }\n\n    selectAll() {\n        this.clearSelections();\n        this.selectedAll = true;\n        this.onAllClicked.emit();\n    }\n\n    selectFavorites() {\n        this.clearSelections();\n        this.selectedFavorites = true;\n        this.onFavoritesClicked.emit();\n    }\n\n    selectType(type: CipherType) {\n        this.clearSelections();\n        this.selectedType = type;\n        this.onCipherTypeClicked.emit(type);\n    }\n\n    selectFolder(folder: FolderView) {\n        this.clearSelections();\n        this.selectedFolder = true;\n        this.selectedFolderId = folder.id;\n        this.onFolderClicked.emit(folder);\n    }\n\n    addFolder() {\n        this.onAddFolder.emit();\n    }\n\n    editFolder(folder: FolderView) {\n        this.onEditFolder.emit(folder);\n    }\n\n    selectCollection(collection: CollectionView) {\n        this.clearSelections();\n        this.selectedCollectionId = collection.id;\n        this.onCollectionClicked.emit(collection);\n    }\n\n    clearSelections() {\n        this.selectedAll = false;\n        this.selectedFavorites = false;\n        this.selectedType = null;\n        this.selectedFolder = false;\n        this.selectedFolderId = null;\n        this.selectedCollectionId = null;\n    }\n\n    collapse(grouping: FolderView | CollectionView, idPrefix = '') {\n        if (grouping.id == null) {\n            return;\n        }\n        const id = idPrefix + grouping.id;\n        if (this.isCollapsed(grouping, idPrefix)) {\n            this.collapsedGroupings.delete(id);\n        } else {\n            this.collapsedGroupings.add(id);\n        }\n        this.storageService.save(this.collapsedGroupingsKey, this.collapsedGroupings);\n    }\n\n    isCollapsed(grouping: FolderView | CollectionView, idPrefix = '') {\n        return this.collapsedGroupings.has(idPrefix + grouping.id);\n    }\n}\n","<ng-container *ngIf=\"(isPaging() ? pagedCiphers : ciphers) as filteredCiphers\">\n    <table class=\"table table-hover table-list table-ciphers\" *ngIf=\"filteredCiphers.length\" infiniteScroll\n        [infiniteScrollDistance]=\"1\" [infiniteScrollDisabled]=\"!isPaging()\" (scrolled)=\"loadMore()\">\n        <tbody>\n            <tr *ngFor=\"let c of filteredCiphers\">\n                <td (click)=\"checkCipher(c)\" class=\"table-list-checkbox\" *ngIf=\"!organization\">\n                    <input type=\"checkbox\" [(ngModel)]=\"c.checked\" appStopProp>\n                </td>\n                <td (click)=\"checkCipher(c)\" class=\"table-list-icon\">\n                    <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n                </td>\n                <td (click)=\"checkCipher(c)\" class=\"reduced-lh wrap\">\n                    <a href=\"#\" appStopClick appStopProp (click)=\"selectCipher(c)\"\n                        title=\"{{'editItem' | i18n}}\">{{c.name}}</a>\n                    <i class=\"fa fa-share-alt\" appStopProp *ngIf=\"!organization && c.organizationId\"\n                        title=\"{{'shared' | i18n}}\"></i>\n                    <ng-container *ngIf=\"c.hasAttachments\">\n                        <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\"></i>\n                        <i class=\"fa fa-exclamation-triangle text-warning\" appStopProp *ngIf=\"showFixOldAttachments(c)\"\n                            title=\"{{'attachmentsNeedFix' | i18n}}\"></i>\n                    </ng-container>\n                    <br>\n                    <small appStopProp>{{c.subTitle}}</small>\n                </td>\n                <td class=\"table-list-options\">\n                    <div class=\"dropdown\" appListDropdown>\n                        <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\"\n                            data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            <i class=\"fa fa-cog fa-lg\"></i>\n                        </button>\n                        <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n                            <ng-container *ngIf=\"c.type === cipherType.Login\">\n                                <a class=\"dropdown-item\" href=\"#\" appStopClick\n                                    (click)=\"copy(c, c.login.password, 'password', 'password')\">\n                                    <i class=\"fa fa-fw fa-clipboard\"></i>\n                                    {{'copyPassword' | i18n}}\n                                </a>\n                                <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"c.login.canLaunch\"\n                                    (click)=\"launch(c.login.launchUri)\">\n                                    <i class=\"fa fa-fw fa-share-square-o\"></i>\n                                    {{'launch' | i18n}}\n                                </a>\n                            </ng-container>\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"attachments(c)\">\n                                <i class=\"fa fa-fw fa-paperclip\"></i>\n                                {{'attachments' | i18n}}\n                            </a>\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"!organization && !c.organizationId\"\n                                (click)=\"share(c)\">\n                                <i class=\"fa fa-fw fa-share-alt\"></i>\n                                {{'share' | i18n}}\n                            </a>\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"c.organizationId\"\n                                (click)=\"collections(c)\">\n                                <i class=\"fa fa-fw fa-cubes\"></i>\n                                {{'collections' | i18n}}\n                            </a>\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"c.organizationId && accessEvents\"\n                                (click)=\"events(c)\">\n                                <i class=\"fa fa-fw fa-file-text-o\"></i>\n                                {{'eventLogs' | i18n}}\n                            </a>\n                            <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(c)\">\n                                <i class=\"fa fa-fw fa-trash-o\"></i>\n                                {{'delete' | i18n}}\n                            </a>\n                        </div>\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n    <div class=\"no-items\" *ngIf=\"!filteredCiphers.length\">\n        <i class=\"fa fa-spinner fa-spin text-muted\" *ngIf=\"!loaded\" title=\"{{'loading' | i18n}}\"></i>\n        <ng-container *ngIf=\"loaded\">\n            <p>{{'noItemsInList' | i18n}}</p>\n            <button (click)=\"addCipher()\" class=\"btn btn-outline-primary\" *ngIf=\"showAddNew\">\n                <i class=\"fa fa-plus fa-fw\"></i>{{'addItem' | i18n}}</button>\n        </ng-container>\n    </div>\n</ng-container>\n","import {\n    Directive,\n    ElementRef,\n    HostListener,\n    Input,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appFallbackSrc]',\n})\nexport class FallbackSrcDirective {\n    @Input('appFallbackSrc') appFallbackSrc: string;\n\n    constructor(private el: ElementRef) {\n    }\n\n    @HostListener('error') onError() {\n        this.el.nativeElement.src = this.appFallbackSrc;\n    }\n}\n","import {\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { SearchService } from '../../abstractions/search.service';\n\nimport { CipherView } from '../../models/view/cipherView';\n\nexport class CiphersComponent {\n    @Input() activeCipherId: string = null;\n    @Output() onCipherClicked = new EventEmitter<CipherView>();\n    @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n    @Output() onAddCipher = new EventEmitter();\n    @Output() onAddCipherOptions = new EventEmitter();\n\n    loaded: boolean = false;\n    ciphers: CipherView[] = [];\n    pagedCiphers: CipherView[] = [];\n    searchText: string;\n    searchPlaceholder: string = null;\n    filter: (cipher: CipherView) => boolean = null;\n\n    protected searchPending = false;\n    protected didScroll = false;\n    protected pageSize = 100;\n\n    private searchTimeout: any = null;\n    private pagedCiphersCount = 0;\n    private refreshing = false;\n\n    constructor(protected searchService: SearchService) { }\n\n    async load(filter: (cipher: CipherView) => boolean = null) {\n        await this.applyFilter(filter);\n        this.loaded = true;\n    }\n\n    loadMore() {\n        if (this.ciphers.length <= this.pageSize) {\n            return;\n        }\n        const pagedLength = this.pagedCiphers.length;\n        let pagedSize = this.pageSize;\n        if (this.refreshing && pagedLength === 0 && this.pagedCiphersCount > this.pageSize) {\n            pagedSize = this.pagedCiphersCount;\n        }\n        if (this.ciphers.length > pagedLength) {\n            this.pagedCiphers = this.pagedCiphers.concat(this.ciphers.slice(pagedLength, pagedLength + pagedSize));\n        }\n        this.pagedCiphersCount = this.pagedCiphers.length;\n        this.didScroll = this.pagedCiphers.length > this.pageSize;\n    }\n\n    async reload(filter: (cipher: CipherView) => boolean = null) {\n        this.loaded = false;\n        this.ciphers = [];\n        await this.load(filter);\n    }\n\n    async refresh() {\n        try {\n            this.refreshing = true;\n            await this.reload(this.filter);\n        } finally {\n            this.refreshing = false;\n        }\n    }\n\n    async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n        this.filter = filter;\n        await this.search(null);\n    }\n\n    async search(timeout: number = null) {\n        this.searchPending = false;\n        if (this.searchTimeout != null) {\n            clearTimeout(this.searchTimeout);\n        }\n        if (timeout == null) {\n            this.ciphers = await this.searchService.searchCiphers(this.searchText, this.filter);\n            await this.resetPaging();\n            return;\n        }\n        this.searchPending = true;\n        this.searchTimeout = setTimeout(async () => {\n            this.ciphers = await this.searchService.searchCiphers(this.searchText, this.filter);\n            await this.resetPaging();\n            this.searchPending = false;\n        }, timeout);\n    }\n\n    selectCipher(cipher: CipherView) {\n        this.onCipherClicked.emit(cipher);\n    }\n\n    rightClickCipher(cipher: CipherView) {\n        this.onCipherRightClicked.emit(cipher);\n    }\n\n    addCipher() {\n        this.onAddCipher.emit();\n    }\n\n    addCipherOptions() {\n        this.onAddCipherOptions.emit();\n    }\n\n    isSearching() {\n        return !this.searchPending && this.searchService.isSearchable(this.searchText);\n    }\n\n    isPaging() {\n        const searching = this.isSearching();\n        if (searching && this.didScroll) {\n            this.resetPaging();\n        }\n        return !searching && this.ciphers.length > this.pageSize;\n    }\n\n    async resetPaging() {\n        this.pagedCiphers = [];\n        this.loadMore();\n    }\n}\n","export class AttachmentRequest {\n    fileName: string;\n    key: string;\n}\n","import {\n    CdkDragDrop,\n    moveItemInArray,\n} from '@angular/cdk/drag-drop';\nimport {\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { CipherType } from '../../enums/cipherType';\nimport { EventType } from '../../enums/eventType';\nimport { FieldType } from '../../enums/fieldType';\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { SecureNoteType } from '../../enums/secureNoteType';\nimport { UriMatchType } from '../../enums/uriMatchType';\n\nimport { AuditService } from '../../abstractions/audit.service';\nimport { CipherService } from '../../abstractions/cipher.service';\nimport { CollectionService } from '../../abstractions/collection.service';\nimport { EventService } from '../../abstractions/event.service';\nimport { FolderService } from '../../abstractions/folder.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { MessagingService } from '../../abstractions/messaging.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\nimport { StateService } from '../../abstractions/state.service';\nimport { UserService } from '../../abstractions/user.service';\n\nimport { Cipher } from '../../models/domain/cipher';\n\nimport { CardView } from '../../models/view/cardView';\nimport { CipherView } from '../../models/view/cipherView';\nimport { CollectionView } from '../../models/view/collectionView';\nimport { FieldView } from '../../models/view/fieldView';\nimport { FolderView } from '../../models/view/folderView';\nimport { IdentityView } from '../../models/view/identityView';\nimport { LoginUriView } from '../../models/view/loginUriView';\nimport { LoginView } from '../../models/view/loginView';\nimport { SecureNoteView } from '../../models/view/secureNoteView';\n\nimport { Utils } from '../../misc/utils';\n\nexport class AddEditComponent implements OnInit {\n    @Input() folderId: string = null;\n    @Input() cipherId: string;\n    @Input() type: CipherType;\n    @Input() collectionIds: string[];\n    @Input() organizationId: string = null;\n    @Output() onSavedCipher = new EventEmitter<CipherView>();\n    @Output() onDeletedCipher = new EventEmitter<CipherView>();\n    @Output() onCancelled = new EventEmitter<CipherView>();\n    @Output() onEditAttachments = new EventEmitter<CipherView>();\n    @Output() onShareCipher = new EventEmitter<CipherView>();\n    @Output() onEditCollections = new EventEmitter<CipherView>();\n    @Output() onGeneratePassword = new EventEmitter();\n\n    editMode: boolean = false;\n    cipher: CipherView;\n    folders: FolderView[];\n    collections: CollectionView[] = [];\n    title: string;\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n    checkPasswordPromise: Promise<number>;\n    showPassword: boolean = false;\n    showCardCode: boolean = false;\n    cipherType = CipherType;\n    fieldType = FieldType;\n    addFieldType: FieldType = FieldType.Text;\n    typeOptions: any[];\n    cardBrandOptions: any[];\n    cardExpMonthOptions: any[];\n    identityTitleOptions: any[];\n    addFieldTypeOptions: any[];\n    uriMatchOptions: any[];\n    ownershipOptions: any[] = [];\n\n    protected writeableCollections: CollectionView[];\n    private previousCipherId: string;\n\n    constructor(protected cipherService: CipherService, protected folderService: FolderService,\n        protected i18nService: I18nService, protected platformUtilsService: PlatformUtilsService,\n        protected auditService: AuditService, protected stateService: StateService,\n        protected userService: UserService, protected collectionService: CollectionService,\n        protected messagingService: MessagingService, protected eventService: EventService) {\n        this.typeOptions = [\n            { name: i18nService.t('typeLogin'), value: CipherType.Login },\n            { name: i18nService.t('typeCard'), value: CipherType.Card },\n            { name: i18nService.t('typeIdentity'), value: CipherType.Identity },\n            { name: i18nService.t('typeSecureNote'), value: CipherType.SecureNote },\n        ];\n        this.cardBrandOptions = [\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\n            { name: 'Visa', value: 'Visa' },\n            { name: 'Mastercard', value: 'Mastercard' },\n            { name: 'American Express', value: 'Amex' },\n            { name: 'Discover', value: 'Discover' },\n            { name: 'Diners Club', value: 'Diners Club' },\n            { name: 'JCB', value: 'JCB' },\n            { name: 'Maestro', value: 'Maestro' },\n            { name: 'UnionPay', value: 'UnionPay' },\n            { name: i18nService.t('other'), value: 'Other' },\n        ];\n        this.cardExpMonthOptions = [\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\n            { name: '01 - ' + i18nService.t('january'), value: '1' },\n            { name: '02 - ' + i18nService.t('february'), value: '2' },\n            { name: '03 - ' + i18nService.t('march'), value: '3' },\n            { name: '04 - ' + i18nService.t('april'), value: '4' },\n            { name: '05 - ' + i18nService.t('may'), value: '5' },\n            { name: '06 - ' + i18nService.t('june'), value: '6' },\n            { name: '07 - ' + i18nService.t('july'), value: '7' },\n            { name: '08 - ' + i18nService.t('august'), value: '8' },\n            { name: '09 - ' + i18nService.t('september'), value: '9' },\n            { name: '10 - ' + i18nService.t('october'), value: '10' },\n            { name: '11 - ' + i18nService.t('november'), value: '11' },\n            { name: '12 - ' + i18nService.t('december'), value: '12' },\n        ];\n        this.identityTitleOptions = [\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\n            { name: i18nService.t('mr'), value: i18nService.t('mr') },\n            { name: i18nService.t('mrs'), value: i18nService.t('mrs') },\n            { name: i18nService.t('ms'), value: i18nService.t('ms') },\n            { name: i18nService.t('dr'), value: i18nService.t('dr') },\n        ];\n        this.addFieldTypeOptions = [\n            { name: i18nService.t('cfTypeText'), value: FieldType.Text },\n            { name: i18nService.t('cfTypeHidden'), value: FieldType.Hidden },\n            { name: i18nService.t('cfTypeBoolean'), value: FieldType.Boolean },\n        ];\n        this.uriMatchOptions = [\n            { name: i18nService.t('defaultMatchDetection'), value: null },\n            { name: i18nService.t('baseDomain'), value: UriMatchType.Domain },\n            { name: i18nService.t('host'), value: UriMatchType.Host },\n            { name: i18nService.t('startsWith'), value: UriMatchType.StartsWith },\n            { name: i18nService.t('regEx'), value: UriMatchType.RegularExpression },\n            { name: i18nService.t('exact'), value: UriMatchType.Exact },\n            { name: i18nService.t('never'), value: UriMatchType.Never },\n        ];\n    }\n\n    async ngOnInit() {\n        await this.init();\n    }\n\n    async init() {\n        const myEmail = await this.userService.getEmail();\n        this.ownershipOptions.push({ name: myEmail, value: null });\n        const orgs = await this.userService.getAllOrganizations();\n        orgs.sort(Utils.getSortFunction(this.i18nService, 'name')).forEach((o) => {\n            if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\n                this.ownershipOptions.push({ name: o.name, value: o.id });\n            }\n        });\n        this.writeableCollections = await this.loadCollections();\n    }\n\n    async load() {\n        this.editMode = this.cipherId != null;\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editItem');\n        } else {\n            this.title = this.i18nService.t('addItem');\n        }\n\n        const addEditCipherInfo: any = await this.stateService.get<any>('addEditCipherInfo');\n        if (addEditCipherInfo != null) {\n            this.cipher = addEditCipherInfo.cipher;\n            this.collectionIds = addEditCipherInfo.collectionIds;\n        }\n        await this.stateService.remove('addEditCipherInfo');\n\n        if (this.cipher == null) {\n            if (this.editMode) {\n                const cipher = await this.loadCipher();\n                this.cipher = await cipher.decrypt();\n            } else {\n                this.cipher = new CipherView();\n                this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\n                this.cipher.folderId = this.folderId;\n                this.cipher.type = this.type == null ? CipherType.Login : this.type;\n                this.cipher.login = new LoginView();\n                this.cipher.login.uris = [new LoginUriView()];\n                this.cipher.card = new CardView();\n                this.cipher.identity = new IdentityView();\n                this.cipher.secureNote = new SecureNoteView();\n                this.cipher.secureNote.type = SecureNoteType.Generic;\n            }\n        }\n\n        if (this.cipher != null && (!this.editMode || addEditCipherInfo != null)) {\n            await this.organizationChanged();\n            if (this.collectionIds != null && this.collectionIds.length > 0 && this.collections.length > 0) {\n                this.collections.forEach((c) => {\n                    if (this.collectionIds.indexOf(c.id) > -1) {\n                        (c as any).checked = true;\n                    }\n                });\n            }\n        }\n\n        this.folders = await this.folderService.getAllDecrypted();\n\n        if (this.editMode && this.previousCipherId !== this.cipherId) {\n            this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n        }\n        this.previousCipherId = this.cipherId;\n    }\n\n    async submit(): Promise<boolean> {\n        if (this.cipher.name == null || this.cipher.name === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nameRequired'));\n            return false;\n        }\n\n        if (!this.editMode && this.cipher.type === CipherType.Login &&\n            this.cipher.login.uris != null && this.cipher.login.uris.length === 1 &&\n            (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === '')) {\n            this.cipher.login.uris = null;\n        }\n\n        if (!this.editMode && this.cipher.organizationId != null) {\n            this.cipher.collectionIds = this.collections == null ? [] :\n                this.collections.filter((c) => (c as any).checked).map((c) => c.id);\n        }\n\n        const cipher = await this.encryptCipher();\n        try {\n            this.formPromise = this.saveCipher(cipher);\n            await this.formPromise;\n            this.cipher.id = cipher.id;\n            this.platformUtilsService.eventTrack(this.editMode ? 'Edited Cipher' : 'Added Cipher');\n            this.platformUtilsService.showToast('success', null,\n                this.i18nService.t(this.editMode ? 'editedItem' : 'addedItem'));\n            this.onSavedCipher.emit(this.cipher);\n            this.messagingService.send(this.editMode ? 'editedCipher' : 'addedCipher');\n            return true;\n        } catch { }\n\n        return false;\n    }\n\n    addUri() {\n        if (this.cipher.type !== CipherType.Login) {\n            return;\n        }\n\n        if (this.cipher.login.uris == null) {\n            this.cipher.login.uris = [];\n        }\n\n        this.cipher.login.uris.push(new LoginUriView());\n    }\n\n    removeUri(uri: LoginUriView) {\n        if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n            return;\n        }\n\n        const i = this.cipher.login.uris.indexOf(uri);\n        if (i > -1) {\n            this.cipher.login.uris.splice(i, 1);\n        }\n    }\n\n    addField() {\n        if (this.cipher.fields == null) {\n            this.cipher.fields = [];\n        }\n\n        const f = new FieldView();\n        f.type = this.addFieldType;\n        this.cipher.fields.push(f);\n    }\n\n    removeField(field: FieldView) {\n        const i = this.cipher.fields.indexOf(field);\n        if (i > -1) {\n            this.cipher.fields.splice(i, 1);\n        }\n    }\n\n    trackByFunction(index: number, item: any) {\n        return index;\n    }\n\n    cancel() {\n        this.onCancelled.emit(this.cipher);\n    }\n\n    attachments() {\n        this.onEditAttachments.emit(this.cipher);\n    }\n\n    share() {\n        this.onShareCipher.emit(this.cipher);\n    }\n\n    editCollections() {\n        this.onEditCollections.emit(this.cipher);\n    }\n\n    async delete(): Promise<boolean> {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteItemConfirmation'), this.i18nService.t('deleteItem'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.deleteCipher();\n            await this.deletePromise;\n            this.platformUtilsService.eventTrack('Deleted Cipher');\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('deletedItem'));\n            this.onDeletedCipher.emit(this.cipher);\n            this.messagingService.send('deletedCipher');\n        } catch { }\n\n        return true;\n    }\n\n    async generatePassword(): Promise<boolean> {\n        if (this.cipher.login != null && this.cipher.login.password != null && this.cipher.login.password.length) {\n            const confirmed = await this.platformUtilsService.showDialog(\n                this.i18nService.t('overwritePasswordConfirmation'), this.i18nService.t('overwritePassword'),\n                this.i18nService.t('yes'), this.i18nService.t('no'));\n            if (!confirmed) {\n                return false;\n            }\n        }\n\n        this.onGeneratePassword.emit();\n        return true;\n    }\n\n    togglePassword() {\n        this.platformUtilsService.eventTrack('Toggled Password on Edit');\n        this.showPassword = !this.showPassword;\n        document.getElementById('loginPassword').focus();\n        if (this.editMode && this.showPassword) {\n            this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n        }\n    }\n\n    toggleCardCode() {\n        this.platformUtilsService.eventTrack('Toggled CardCode on Edit');\n        this.showCardCode = !this.showCardCode;\n        document.getElementById('cardCode').focus();\n        if (this.editMode && this.showCardCode) {\n            this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n        }\n    }\n\n    toggleFieldValue(field: FieldView) {\n        const f = (field as any);\n        f.showValue = !f.showValue;\n        if (this.editMode && f.showValue) {\n            this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipherId);\n        }\n    }\n\n    toggleUriOptions(uri: LoginUriView) {\n        const u = (uri as any);\n        u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n    }\n\n    loginUriMatchChanged(uri: LoginUriView) {\n        const u = (uri as any);\n        u.showOptions = u.showOptions == null ? true : u.showOptions;\n    }\n\n    drop(event: CdkDragDrop<string[]>) {\n        moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\n    }\n\n    async organizationChanged() {\n        if (this.writeableCollections != null) {\n            this.writeableCollections.forEach((c) => (c as any).checked = false);\n        }\n        if (this.cipher.organizationId != null) {\n            this.collections = this.writeableCollections.filter((c) => c.organizationId === this.cipher.organizationId);\n            const org = await this.userService.getOrganization(this.cipher.organizationId);\n            if (org != null) {\n                this.cipher.organizationUseTotp = org.useTotp;\n            }\n        } else {\n            this.collections = [];\n        }\n    }\n\n    async checkPassword() {\n        if (this.checkPasswordPromise != null) {\n            return;\n        }\n\n        if (this.cipher.login == null || this.cipher.login.password == null || this.cipher.login.password === '') {\n            return;\n        }\n\n        this.platformUtilsService.eventTrack('Check Password');\n        this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n        const matches = await this.checkPasswordPromise;\n        this.checkPasswordPromise = null;\n\n        if (matches > 0) {\n            this.platformUtilsService.showToast('warning', null,\n                this.i18nService.t('passwordExposed', matches.toString()));\n        } else {\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('passwordSafe'));\n        }\n    }\n\n    protected async loadCollections() {\n        const allCollections = await this.collectionService.getAllDecrypted();\n        return allCollections.filter((c) => !c.readOnly);\n    }\n\n    protected loadCipher() {\n        return this.cipherService.get(this.cipherId);\n    }\n\n    protected encryptCipher() {\n        return this.cipherService.encrypt(this.cipher);\n    }\n\n    protected saveCipher(cipher: Cipher) {\n        return this.cipherService.saveWithServer(cipher);\n    }\n\n    protected deleteCipher() {\n        return this.cipherService.deleteWithServer(this.cipher.id);\n    }\n}\n","import {\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { CipherService } from '../../abstractions/cipher.service';\nimport { CryptoService } from '../../abstractions/crypto.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\nimport { UserService } from '../../abstractions/user.service';\n\nimport { Cipher } from '../../models/domain/cipher';\n\nimport { AttachmentView } from '../../models/view/attachmentView';\nimport { CipherView } from '../../models/view/cipherView';\n\nexport class AttachmentsComponent implements OnInit {\n    @Input() cipherId: string;\n    @Output() onUploadedAttachment = new EventEmitter();\n    @Output() onDeletedAttachment = new EventEmitter();\n    @Output() onReuploadedAttachment = new EventEmitter();\n\n    cipher: CipherView;\n    cipherDomain: Cipher;\n    hasUpdatedKey: boolean;\n    canAccessAttachments: boolean;\n    formPromise: Promise<any>;\n    deletePromises: { [id: string]: Promise<any>; } = {};\n    reuploadPromises: { [id: string]: Promise<any>; } = {};\n\n    constructor(protected cipherService: CipherService, protected i18nService: I18nService,\n        protected cryptoService: CryptoService, protected userService: UserService,\n        protected platformUtilsService: PlatformUtilsService, protected win: Window) { }\n\n    async ngOnInit() {\n        await this.init();\n    }\n\n    async submit() {\n        if (!this.hasUpdatedKey) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('updateKey'));\n            return;\n        }\n\n        const fileEl = document.getElementById('file') as HTMLInputElement;\n        const files = fileEl.files;\n        if (files == null || files.length === 0) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFile'));\n            return;\n        }\n\n        if (files[0].size > 104857600) { // 100 MB\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('maxFileSize'));\n            return;\n        }\n\n        try {\n            this.formPromise = this.saveCipherAttachment(files[0]);\n            this.cipherDomain = await this.formPromise;\n            this.cipher = await this.cipherDomain.decrypt();\n            this.platformUtilsService.eventTrack('Added Attachment');\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('attachmentSaved'));\n            this.onUploadedAttachment.emit();\n        } catch { }\n\n        // reset file input\n        // ref: https://stackoverflow.com/a/20552042\n        fileEl.type = '';\n        fileEl.type = 'file';\n        fileEl.value = '';\n    }\n\n    async delete(attachment: AttachmentView) {\n        if (this.deletePromises[attachment.id] != null) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteAttachmentConfirmation'), this.i18nService.t('deleteAttachment'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n            await this.deletePromises[attachment.id];\n            this.platformUtilsService.eventTrack('Deleted Attachment');\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('deletedAttachment'));\n            const i = this.cipher.attachments.indexOf(attachment);\n            if (i > -1) {\n                this.cipher.attachments.splice(i, 1);\n            }\n        } catch { }\n\n        this.deletePromises[attachment.id] = null;\n        this.onDeletedAttachment.emit();\n    }\n\n    async download(attachment: AttachmentView) {\n        const a = (attachment as any);\n        if (a.downloading) {\n            return;\n        }\n\n        if (!this.canAccessAttachments) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('premiumRequired'),\n                this.i18nService.t('premiumRequiredDesc'));\n            return;\n        }\n\n        a.downloading = true;\n        const response = await fetch(new Request(attachment.url, { cache: 'no-cache' }));\n        if (response.status !== 200) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n            a.downloading = false;\n            return;\n        }\n\n        try {\n            const buf = await response.arrayBuffer();\n            const key = attachment.key != null ? attachment.key :\n                await this.cryptoService.getOrgKey(this.cipher.organizationId);\n            const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n            this.platformUtilsService.saveFile(this.win, decBuf, null, attachment.fileName);\n        } catch (e) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n        }\n\n        a.downloading = false;\n    }\n\n    protected async init() {\n        this.cipherDomain = await this.loadCipher();\n        this.cipher = await this.cipherDomain.decrypt();\n\n        this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n        const canAccessPremium = await this.userService.canAccessPremium();\n        this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\n\n        if (!this.canAccessAttachments) {\n            const confirmed = await this.platformUtilsService.showDialog(\n                this.i18nService.t('premiumRequiredDesc'), this.i18nService.t('premiumRequired'),\n                this.i18nService.t('learnMore'), this.i18nService.t('cancel'));\n            if (confirmed) {\n                this.platformUtilsService.launchUri('https://vault.bitwarden.com/#/?premium=purchase');\n            }\n        } else if (!this.hasUpdatedKey) {\n            const confirmed = await this.platformUtilsService.showDialog(\n                this.i18nService.t('updateKey'), this.i18nService.t('featureUnavailable'),\n                this.i18nService.t('learnMore'), this.i18nService.t('cancel'), 'warning');\n            if (confirmed) {\n                this.platformUtilsService.launchUri('https://help.bitwarden.com/article/update-encryption-key/');\n            }\n        }\n    }\n\n    protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\n        const a = (attachment as any);\n        if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\n            return;\n        }\n\n        try {\n            this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\n                // 1. Download\n                a.downloading = true;\n                const response = await fetch(new Request(attachment.url, { cache: 'no-cache' }));\n                if (response.status !== 200) {\n                    this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n                    a.downloading = false;\n                    return;\n                }\n\n                try {\n                    // 2. Resave\n                    const buf = await response.arrayBuffer();\n                    const key = attachment.key != null ? attachment.key :\n                        await this.cryptoService.getOrgKey(this.cipher.organizationId);\n                    const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n                    this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\n                        this.cipherDomain, attachment.fileName, decBuf, admin);\n                    this.cipher = await this.cipherDomain.decrypt();\n\n                    // 3. Delete old\n                    this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n                    await this.deletePromises[attachment.id];\n                    const foundAttachment = this.cipher.attachments.filter((a2) => a2.id === attachment.id);\n                    if (foundAttachment.length > 0) {\n                        const i = this.cipher.attachments.indexOf(foundAttachment[0]);\n                        if (i > -1) {\n                            this.cipher.attachments.splice(i, 1);\n                        }\n                    }\n\n                    this.platformUtilsService.eventTrack('Reuploaded Attachment');\n                    this.platformUtilsService.showToast('success', null, this.i18nService.t('attachmentSaved'));\n                    this.onReuploadedAttachment.emit();\n                } catch (e) {\n                    this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n                }\n\n                a.downloading = false;\n            });\n            await this.reuploadPromises[attachment.id];\n        } catch { }\n    }\n\n    protected loadCipher() {\n        return this.cipherService.get(this.cipherId);\n    }\n\n    protected saveCipherAttachment(file: File) {\n        return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n    }\n\n    protected deleteCipherAttachment(attachmentId: string) {\n        return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n    }\n}\n","import {\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { CipherService } from '../../abstractions/cipher.service';\nimport { CollectionService } from '../../abstractions/collection.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\n\nimport { CipherView } from '../../models/view/cipherView';\nimport { CollectionView } from '../../models/view/collectionView';\n\nimport { Cipher } from '../../models/domain/cipher';\n\nexport class CollectionsComponent implements OnInit {\n    @Input() cipherId: string;\n    @Input() allowSelectNone = false;\n    @Output() onSavedCollections = new EventEmitter();\n\n    formPromise: Promise<any>;\n    cipher: CipherView;\n    collectionIds: string[];\n    collections: CollectionView[] = [];\n\n    protected cipherDomain: Cipher;\n\n    constructor(protected collectionService: CollectionService, protected platformUtilsService: PlatformUtilsService,\n        protected i18nService: I18nService, protected cipherService: CipherService) { }\n\n    async ngOnInit() {\n        await this.load();\n    }\n\n    async load() {\n        this.cipherDomain = await this.loadCipher();\n        this.collectionIds = this.loadCipherCollections();\n        this.cipher = await this.cipherDomain.decrypt();\n        this.collections = await this.loadCollections();\n\n        this.collections.forEach((c) => (c as any).checked = false);\n        if (this.collectionIds != null) {\n            this.collections.forEach((c) => {\n                (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\n            });\n        }\n    }\n\n    async submit() {\n        const selectedCollectionIds = this.collections\n            .filter((c) => !!(c as any).checked)\n            .map((c) => c.id);\n        if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectOneCollection'));\n            return;\n        }\n        this.cipherDomain.collectionIds = selectedCollectionIds;\n        try {\n            this.formPromise = this.saveCollections();\n            await this.formPromise;\n            this.onSavedCollections.emit();\n            this.platformUtilsService.eventTrack('Edited Cipher Collections');\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('editedItem'));\n        } catch { }\n    }\n\n    protected loadCipher() {\n        return this.cipherService.get(this.cipherId);\n    }\n\n    protected loadCipherCollections() {\n        return this.cipherDomain.collectionIds;\n    }\n\n    protected async loadCollections() {\n        const allCollections = await this.collectionService.getAllDecrypted();\n        return allCollections.filter((c) => !c.readOnly && c.organizationId === this.cipher.organizationId);\n    }\n\n    protected saveCollections() {\n        return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n    }\n}\n","import {\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { FolderService } from '../../abstractions/folder.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\n\nimport { FolderView } from '../../models/view/folderView';\n\nexport class FolderAddEditComponent implements OnInit {\n    @Input() folderId: string;\n    @Output() onSavedFolder = new EventEmitter<FolderView>();\n    @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n    editMode: boolean = false;\n    folder: FolderView = new FolderView();\n    title: string;\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n\n    constructor(protected folderService: FolderService, protected i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        await this.init();\n    }\n\n    async submit(): Promise<boolean> {\n        if (this.folder.name == null || this.folder.name === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nameRequired'));\n            return false;\n        }\n\n        try {\n            const folder = await this.folderService.encrypt(this.folder);\n            this.formPromise = this.folderService.saveWithServer(folder);\n            await this.formPromise;\n            this.platformUtilsService.eventTrack(this.editMode ? 'Edited Folder' : 'Added Folder');\n            this.platformUtilsService.showToast('success', null,\n                this.i18nService.t(this.editMode ? 'editedFolder' : 'addedFolder'));\n            this.onSavedFolder.emit(this.folder);\n            return true;\n        } catch { }\n\n        return false;\n    }\n\n    async delete(): Promise<boolean> {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteFolderConfirmation'), this.i18nService.t('deleteFolder'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.folderService.deleteWithServer(this.folder.id);\n            await this.deletePromise;\n            this.platformUtilsService.eventTrack('Deleted Folder');\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('deletedFolder'));\n            this.onDeletedFolder.emit(this.folder);\n        } catch { }\n\n        return true;\n    }\n\n    protected async init() {\n        this.editMode = this.folderId != null;\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editFolder');\n            const folder = await this.folderService.get(this.folderId);\n            this.folder = await folder.decrypt();\n        } else {\n            this.title = this.i18nService.t('addFolder');\n        }\n    }\n}\n","import {\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\n\nimport { CipherService } from '../../abstractions/cipher.service';\nimport { CollectionService } from '../../abstractions/collection.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\nimport { UserService } from '../../abstractions/user.service';\n\nimport { Organization } from '../../models/domain/organization';\nimport { CipherView } from '../../models/view/cipherView';\nimport { CollectionView } from '../../models/view/collectionView';\n\nimport { Utils } from '../../misc/utils';\n\nexport class ShareComponent implements OnInit {\n    @Input() cipherId: string;\n    @Input() organizationId: string;\n    @Output() onSharedCipher = new EventEmitter();\n\n    formPromise: Promise<any>;\n    cipher: CipherView;\n    collections: CollectionView[] = [];\n    organizations: Organization[] = [];\n\n    protected writeableCollections: CollectionView[] = [];\n\n    constructor(protected collectionService: CollectionService, protected platformUtilsService: PlatformUtilsService,\n        protected i18nService: I18nService, protected userService: UserService,\n        protected cipherService: CipherService) { }\n\n    async ngOnInit() {\n        await this.load();\n    }\n\n    async load() {\n        const allCollections = await this.collectionService.getAllDecrypted();\n        this.writeableCollections = allCollections.map((c) => c).filter((c) => !c.readOnly);\n        const orgs = await this.userService.getAllOrganizations();\n        this.organizations = orgs.sort(Utils.getSortFunction(this.i18nService, 'name'))\n            .filter((o) => o.enabled && o.status === OrganizationUserStatusType.Confirmed);\n\n        const cipherDomain = await this.cipherService.get(this.cipherId);\n        this.cipher = await cipherDomain.decrypt();\n        if (this.organizationId == null && this.organizations.length > 0) {\n            this.organizationId = this.organizations[0].id;\n        }\n        this.filterCollections();\n    }\n\n    filterCollections() {\n        this.writeableCollections.forEach((c) => (c as any).checked = false);\n        if (this.organizationId == null || this.writeableCollections.length === 0) {\n            this.collections = [];\n        } else {\n            this.collections = this.writeableCollections.filter((c) => c.organizationId === this.organizationId);\n        }\n    }\n\n    async submit(): Promise<boolean> {\n        const selectedCollectionIds = this.collections\n            .filter((c) => !!(c as any).checked)\n            .map((c) => c.id);\n        if (selectedCollectionIds.length === 0) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectOneCollection'));\n            return;\n        }\n\n        const cipherDomain = await this.cipherService.get(this.cipherId);\n        const cipherView = await cipherDomain.decrypt();\n\n        try {\n            this.formPromise = this.cipherService.shareWithServer(cipherView, this.organizationId,\n                selectedCollectionIds).then(async () => {\n                    this.onSharedCipher.emit();\n                    this.platformUtilsService.eventTrack('Shared Cipher');\n                    this.platformUtilsService.showToast('success', null, this.i18nService.t('sharedItem'));\n                });\n            await this.formPromise;\n            return true;\n        } catch { }\n        return false;\n    }\n\n    get canSave() {\n        if (this.collections != null) {\n            for (let i = 0; i < this.collections.length; i++) {\n                if ((this.collections[i] as any).checked) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n","<div class=\"container page-content\">\n    <div class=\"row\">\n        <div class=\"col-3\">\n            <div class=\"card\">\n                <div class=\"card-header\">{{'settings' | i18n}}</div>\n                <div class=\"list-group list-group-flush\">\n                    <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'myAccount' | i18n}}\n                    </a>\n                    <a routerLink=\"options\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'options' | i18n}}\n                    </a>\n                    <a routerLink=\"organizations\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'organizations' | i18n}}\n                    </a>\n                    <a routerLink=\"subscription\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"premium\">\n                        {{'premiumMembership' | i18n}}\n                    </a>\n                    <a routerLink=\"premium\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"!premium\">\n                        {{'goPremium' | i18n}}\n                    </a>\n                    <a routerLink=\"billing\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"!selfHosted\">\n                        {{'billing' | i18n}}\n                    </a>\n                    <a routerLink=\"two-factor\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'twoStepLogin' | i18n}}\n                    </a>\n                    <a routerLink=\"domain-rules\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'domainRules' | i18n}}\n                    </a>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-9\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>\n","<div class=\"page-header\">\n    <h1>{{'myAccount' | i18n}}</h1>\n</div>\n<app-profile></app-profile>\n<div class=\"secondary-header\">\n    <h1>{{'changeEmail' | i18n}}</h1>\n</div>\n<app-change-email></app-change-email>\n<div class=\"secondary-header\">\n    <h1>{{'changeMasterPassword' | i18n}}</h1>\n</div>\n<app-change-password></app-change-password>\n<div class=\"secondary-header\">\n    <h1>{{'encKeySettings' | i18n}}</h1>\n</div>\n<app-change-kdf></app-change-kdf>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n    <h1>{{'dangerZone' | i18n}}</h1>\n</div>\n<div class=\"card border-danger\">\n    <div class=\"card-body\">\n        <p>{{'dangerZoneDesc' | i18n}}</p>\n        <button type=\"button\" class=\"btn btn-outline-danger\"\n            (click)=\"deauthorizeSessions()\">{{'deauthorizeSessions' | i18n}}</button>\n        <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">{{'purgeVault' | i18n}}</button>\n        <button type=\"button\" class=\"btn btn-outline-danger\"\n            (click)=\"deleteAccount()\">{{'deleteAccount' | i18n}}</button>\n    </div>\n</div>\n<ng-template #deauthorizeSessionsTemplate></ng-template>\n<ng-template #purgeVaultTemplate></ng-template>\n<ng-template #deleteAccountTemplate></ng-template>\n","<div *ngIf=\"loading\">\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"></i>\n</div>\n<form *ngIf=\"profile && !loading\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"row\">\n        <div class=\"col-6\">\n            <div class=\"form-group\">\n                <label for=\"name\">{{'name' | i18n}}</label>\n                <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"profile.name\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"email\">{{'email' | i18n}}</label>\n                <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"profile.email\" readonly>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"masterPasswordHint\">{{'masterPassHintLabel' | i18n}}</label>\n                <input id=\"masterPasswordHint\" class=\"form-control\" type=\"text\" name=\"MasterPasswordHint\"\n                    [(ngModel)]=\"profile.masterPasswordHint\">\n            </div>\n        </div>\n        <div class=\"col-6\">\n            <div class=\"mb-3\">\n                <app-avatar data=\"{{profile.name || profile.email}}\" [email]=\"profile.email\" dynamic=\"true\" size=\"75\"\n                    fontSize=\"35\"></app-avatar>\n            </div>\n            <hr>\n            <p *ngIf=\"fingerprint\">\n                {{'yourAccountsFingerprint' | i18n}}:\n                <a href=\"https://help.bitwarden.com/article/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\"\n                    title=\"{{'learnMore' | i18n}}\">\n                    <i class=\"fa fa-question-circle-o\"></i></a><br>\n                <code>{{fingerprint}}</code>\n            </p>\n        </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n        <span>{{'save' | i18n}}</span>\n    </button>\n</form>\n","export class UpdateProfileRequest {\n    name: string;\n    masterPasswordHint: string;\n    culture = 'en-US'; // deprecated\n\n    constructor(name: string, masterPasswordHint: string) {\n        this.name = name;\n        this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"row\">\n        <div class=\"col-6\">\n            <div class=\"form-group\">\n                <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\n                <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\n                    [(ngModel)]=\"masterPassword\" required [readonly]=\"tokenSent\" appInputVerbatim>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"newEmail\">{{'newEmail' | i18n}}</label>\n                <input id=\"newEmail\" class=\"form-control\" type=\"text\" name=\"NewEmail\" [(ngModel)]=\"newEmail\" required\n                    [readonly]=\"tokenSent\" inputmode=\"email\" appInputVerbatim=\"false\">\n            </div>\n        </div>\n    </div>\n    <ng-container *ngIf=\"tokenSent\">\n        <hr>\n        <p>{{'changeEmailDesc' | i18n : newEmail}}</p>\n        <app-callout type=\"warning\">{{'loggedOutWarning' | i18n}}</app-callout>\n        <div class=\"row\">\n            <div class=\"col-6\">\n                <div class=\"form-group\">\n                    <label for=\"token\">{{'code' | i18n}}</label>\n                    <input id=\"token\" class=\"form-control\" type=\"text\" name=\"Token\" [(ngModel)]=\"token\" required\n                        appInputVerbatim>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n        <span *ngIf=\"!tokenSent\">{{'continue' | i18n}}</span>\n        <span *ngIf=\"tokenSent\">{{'changeEmail' | i18n}}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" *ngIf=\"tokenSent\" (click)=\"reset()\">\n        {{'cancel' | i18n}}\n    </button>\n</form>\n","import { EmailTokenRequest } from './emailTokenRequest';\n\nexport class EmailRequest extends EmailTokenRequest {\n    newMasterPasswordHash: string;\n    token: string;\n    key: string;\n}\n","<app-callout type=\"warning\">{{'loggedOutWarning' | i18n}}</app-callout>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n    <div class=\"row\">\n        <div class=\"col-6\">\n            <div class=\"form-group\">\n                <label for=\"currentMasterPassword\">{{'currentMasterPass' | i18n}}</label>\n                <input id=\"currentMasterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\n                    [(ngModel)]=\"currentMasterPassword\" required appInputVerbatim>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-6\">\n            <div class=\"form-group\">\n                <label for=\"newMasterPassword\">{{'newMasterPass' | i18n}}</label>\n                <input id=\"newMasterPassword\" type=\"password\" name=\"NewMasterPasswordHash\" class=\"form-control mb-1\"\n                    [(ngModel)]=\"newMasterPassword\" (input)=\"updatePasswordStrength()\" required appInputVerbatim\n                    autocomplete=\"new-password\">\n                <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\"></app-password-strength>\n            </div>\n        </div>\n        <div class=\"col-6\">\n            <div class=\"form-group\">\n                <label for=\"confirmNewMasterPassword\">{{'confirmNewMasterPass' | i18n}}</label>\n                <input id=\"confirmNewMasterPassword\" type=\"password\" name=\"ConfirmNewMasterPasswordHash\"\n                    class=\"form-control\" [(ngModel)]=\"confirmNewMasterPassword\" required appInputVerbatim\n                    autocomplete=\"new-password\">\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"form-check\">\n            <input class=\"form-check-input\" type=\"checkbox\" id=\"rotateEncKey\" name=\"RotateEncKey\"\n                [(ngModel)]=\"rotateEncKey\" (change)=\"rotateEncKeyClicked()\">\n            <label class=\"form-check-label\" for=\"rotateEncKey\">\n                {{'rotateAccountEncKey' | i18n}}\n            </label>\n            <a href=\"https://help.bitwarden.com/article/change-your-master-password/#rotating-your-accounts-encryption-key\"\n                target=\"_blank\" rel=\"noopener\" title=\"{{'learnMore' | i18n}}\">\n                <i class=\"fa fa-question-circle-o\"></i>\n            </a>\n        </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n        <span>{{'changeMasterPassword' | i18n}}</span>\n    </button>\n</form>\n","<app-callout type=\"warning\">{{'loggedOutWarning' | i18n}}</app-callout>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n    <div class=\"row\">\n        <div class=\"col-6\">\n            <div class=\"form-group\">\n                <label for=\"kdfMasterPassword\">{{'masterPass' | i18n}}</label>\n                <input id=\"kdfMasterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\n                    [(ngModel)]=\"masterPassword\" required appInputVerbatim>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-6\">\n            <div class=\"form-group mb-0\">\n                <label for=\"kdf\">{{'kdfAlgorithm' | i18n}}</label>\n                <a class=\"ml-auto\" href=\"https://en.wikipedia.org/wiki/Key_derivation_function\" target=\"_blank\"\n                    rel=\"noopener\" title=\"{{'learnMore' | i18n}}\">\n                    <i class=\"fa fa-question-circle-o\"></i>\n                </a>\n                <select id=\"kdf\" name=\"Kdf\" [(ngModel)]=\"kdf\" class=\"form-control\" required>\n                    <option *ngFor=\"let o of kdfOptions\" [ngValue]=\"o.value\">{{o.name}}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"col-6\">\n            <div class=\"form-group mb-0\">\n                <label for=\"kdfIterations\">{{'kdfIterations' | i18n}}</label>\n                <a class=\"ml-auto\" href=\"https://en.wikipedia.org/wiki/PBKDF2\" target=\"_blank\" rel=\"noopener\"\n                    title=\"{{'learnMore' | i18n}}\">\n                    <i class=\"fa fa-question-circle-o\"></i>\n                </a>\n                <input id=\"kdfIterations\" type=\"number\" min=\"5000\" max=\"2000000\" name=\"KdfIterations\"\n                    class=\"form-control\" [(ngModel)]=\"kdfIterations\" required>\n            </div>\n        </div>\n        <div class=\"col-12\">\n            <div class=\"form-group\">\n                <div class=\"small form-text text-muted\">\n                    <p>{{'kdfIterationsDesc' | i18n : (100000 | number)}}</p>\n                    <strong>{{'warning' | i18n}}</strong>: {{'kdfIterationsWarning' | i18n : (50000 | number)}}\n                </div>\n            </div>\n        </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n        <span>{{'changeKdf' | i18n}}</span>\n    </button>\n</form>\n","import { PasswordRequest } from './passwordRequest';\n\nimport { KdfType } from '../../enums/kdfType';\n\nexport class KdfRequest extends PasswordRequest {\n    kdf: KdfType;\n    kdfIterations: number;\n}\n","<div class=\"page-header\">\n    <h1>{{'options' | i18n}}</h1>\n</div>\n<p>{{'optionsDesc' | i18n}}</p>\n<form (ngSubmit)=\"submit()\" ngNativeValidate>\n    <div class=\"row\">\n        <div class=\"col-6\">\n            <div class=\"form-group\">\n                <label for=\"lockOption\">{{'lockOptions' | i18n}}</label>\n                <select id=\"lockOption\" name=\"LockOption\" [(ngModel)]=\"lockOption\" class=\"form-control\">\n                    <option *ngFor=\"let o of lockOptions\" [ngValue]=\"o.value\">{{o.name}}</option>\n                </select>\n                <small class=\"form-text text-muted\">{{'lockOptionsDesc' | i18n}}</small>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-6\">\n            <div class=\"form-group\">\n                <div class=\"d-flex\">\n                    <label for=\"locale\">{{'language' | i18n}}</label>\n                    <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/localization/\" target=\"_blank\"\n                        rel=\"noopener\" title=\"{{'learnMore' | i18n}}\">\n                        <i class=\"fa fa-question-circle-o\"></i>\n                    </a>\n                </div>\n                <select id=\"locale\" name=\"Locale\" [(ngModel)]=\"locale\" class=\"form-control\">\n                    <option *ngFor=\"let o of localeOptions\" [ngValue]=\"o.value\">{{o.name}}</option>\n                </select>\n                <small class=\"form-text text-muted\">{{'languageDesc' | i18n}}</small>\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"form-check\">\n            <input class=\"form-check-input\" type=\"checkbox\" id=\"disableIcons\" name=\"DisableIcons\"\n                [(ngModel)]=\"disableIcons\">\n            <label class=\"form-check-label\" for=\"disableIcons\">\n                {{'disableIcons' | i18n}}\n            </label>\n            <a href=\"https://help.bitwarden.com/article/website-icons/\" target=\"_blank\" rel=\"noopener\"\n                title=\"{{'learnMore' | i18n}}\">\n                <i class=\"fa fa-question-circle-o\"></i>\n            </a>\n        </div>\n        <small class=\"form-text text-muted\">{{'disableIconsDesc' | i18n}}</small>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"form-check\">\n            <input class=\"form-check-input\" type=\"checkbox\" id=\"enableGravatars\" name=\"enableGravatars\"\n                [(ngModel)]=\"enableGravatars\">\n            <label class=\"form-check-label\" for=\"enableGravatars\">\n                {{'enableGravatars' | i18n}}\n            </label>\n            <a href=\"https://gravatar.com/\" target=\"_blank\" rel=\"noopener\" title=\"{{'learnMore' | i18n}}\">\n                <i class=\"fa fa-question-circle-o\"></i>\n            </a>\n        </div>\n        <small class=\"form-text text-muted\">{{'enableGravatarsDesc' | i18n}}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">\n        {{'save' | i18n}}\n    </button>\n</form>\n","<div class=\"page-header\">\n    <h1>{{'domainRules' | i18n}}</h1>\n</div>\n<p>{{'domainRulesDesc' | i18n}}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <h2>{{'customEqDomains' | i18n}}</h2>\n    <p *ngIf=\"loading\">\n        <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"></i>\n    </p>\n    <ng-container *ngIf=\"!loading\">\n        <div class=\"form-group d-flex\" *ngFor=\"let d of custom; let i = index; trackBy: indexTrackBy\">\n            <div class=\"flex-fill\">\n                <label for=\"customDomain_{{i}}\" class=\"sr-only\">{{'customDomainX' | i18n : (i + 1)}}</label>\n                <textarea class=\"form-control\" name=\"CustomDomain[{{i}}]\" id=\"customDomain_{{i}}\"\n                    [(ngModel)]=\"custom[i]\" placeholder=\"{{'ex' | i18n}} google.com, gmail.com\" required></textarea>\n            </div>\n            <button type=\"button\" class=\"btn btn-link text-danger ml-2\" (click)=\"remove(i)\" title=\"{{'remove' | i18n}}\">\n                <i class=\"fa fa-minus-circle fa-lg\"></i>\n            </button>\n        </div>\n        <button type=\"button\" (click)=\"add()\" class=\"btn btn-outline-secondary btn-sm mb-2\">\n            <i class=\"fa fa-plus fa-fw\"></i> {{'newCustomDomain' | i18n}}\n        </button>\n        <small class=\"text-muted d-block mb-3\">{{'newCustomDomainDesc' | i18n}}</small>\n    </ng-container>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n        <span>{{'save' | i18n}}</span>\n    </button>\n    <h2 class=\"spaced-header\">{{'globalEqDomains' | i18n}}</h2>\n    <p *ngIf=\"loading\">\n        <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"></i>\n    </p>\n    <table class=\"table table-hover table-list\" *ngIf=\"!loading && global.length > 0\">\n        <tbody>\n            <tr *ngFor=\"let d of global\">\n                <td [ngClass]=\"{'table-list-strike': d.excluded}\">{{d.domains}}</td>\n                <td class=\"table-list-options\">\n                    <div class=\"dropdown\" appListDropdown>\n                        <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\n                            aria-haspopup=\"true\" aria-expanded=\"false\">\n                            <i class=\"fa fa-cog fa-lg\"></i>\n                        </button>\n                        <div class=\"dropdown-menu dropdown-menu-right\">\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"toggleExcluded(d)\"\n                                *ngIf=\"!d.excluded\">\n                                <i class=\"fa fa-fw fa-close\"></i>\n                                {{'exclude' | i18n}}\n                            </a>\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"toggleExcluded(d)\"\n                                *ngIf=\"d.excluded\">\n                                <i class=\"fa fa-fw fa-plus\"></i>\n                                {{'include' | i18n}}\n                            </a>\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"customize(d)\">\n                                <i class=\"fa fa-fw fa-scissors\"></i>\n                                {{'customize' | i18n}}\n                            </a>\n                        </div>\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n        <span>{{'save' | i18n}}</span>\n    </button>\n</form>\n","export class UpdateDomainsRequest {\n    equivalentDomains: string[][];\n    excludedGlobalEquivalentDomains: number[];\n}\n","<div class=\"page-header\">\n    <h1>{{'twoStepLogin' | i18n}}</h1>\n</div>\n<p *ngIf=\"!organizationId\">{{'twoStepLoginDesc' | i18n}}</p>\n<p *ngIf=\"organizationId\">{{'twoStepLoginOrganizationDesc' | i18n}}</p>\n<app-callout type=\"warning\" *ngIf=\"!organizationId\">\n    <p>{{'twoStepLoginRecoveryWarning' | i18n}}</p>\n    <button type=\"button\" class=\"btn btn-outline-secondary\"\n        (click)=\"recoveryCode()\">{{'viewRecoveryCode' | i18n}}</button>\n</app-callout>\n<h2 [ngClass]=\"{'mt-5':!organizationId}\">\n    {{'providers' | i18n}}\n    <small *ngIf=\"loading\">\n        <i class=\"fa fa-spinner fa-spin fa-fw text-muted\" title=\"{{'loading' | i18n}}\"></i>\n    </small>\n</h2>\n<ul class=\"list-group list-group-2fa\">\n    <li *ngFor=\"let p of providers\" class=\"list-group-item d-flex align-items-center\">\n        <div class=\"logo-2fa d-flex justify-content-center\">\n            <img [src]=\"'images/two-factor/' + p.type + '.png'\" alt=\"\">\n        </div>\n        <div class=\"mx-4\">\n            <h3 class=\"mb-0\">\n                {{p.name}}\n                <i class=\"fa fa-check text-success fa-fw\" *ngIf=\"p.enabled && canAccessPremium\"\n                    title=\"{{'enabled' | i18n}}\"></i>\n                <a href=\"#\" appStopClick class=\"badge badge-primary\" *ngIf=\"!canAccessPremium && p.premium\"\n                    (click)=\"premiumRequired()\">\n                    {{'premium' | i18n}}\n                </a>\n            </h3>\n            {{p.description}}\n        </div>\n        <div class=\"ml-auto\">\n            <button type=\"button\" class=\"btn btn-outline-secondary btn-sm\" [disabled]=\"!canAccessPremium && p.premium\"\n                (click)=\"manage(p.type)\">\n                {{'manage' | i18n}}\n            </button>\n        </div>\n    </li>\n</ul>\n\n<ng-template #authenticatorTemplate></ng-template>\n<ng-template #recoveryTemplate></ng-template>\n<ng-template #duoTemplate></ng-template>\n<ng-template #emailTemplate></ng-template>\n<ng-template #yubikeyTemplate></ng-template>\n<ng-template #u2fTemplate></ng-template>\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorAuthenticatorRequest extends PasswordVerificationRequest {\n    token: string;\n    key: string;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nimport { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nexport class TwoFactorProviderRequest extends PasswordVerificationRequest {\n    type: TwoFactorProviderType;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorDuoRequest extends PasswordVerificationRequest {\n    integrationKey: string;\n    secretKey: string;\n    host: string;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorEmailRequest extends PasswordVerificationRequest {\n    token: string;\n    email: string;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorU2fDeleteRequest extends PasswordVerificationRequest {\n    id: number;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorU2fRequest extends PasswordVerificationRequest {\n    deviceResponse: string;\n    name: string;\n    id: number;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorYubioOtpRequest extends PasswordVerificationRequest {\n    key1: string;\n    key2: string;\n    key3: string;\n    key4: string;\n    key5: string;\n    nfc: boolean;\n}\n","<div class=\"page-header\">\n    <h1>{{'goPremium' | i18n}}</h1>\n</div>\n<app-callout type=\"info\" *ngIf=\"canAccessPremium\" title=\"{{'youHavePremiumAccess' | i18n}}\" icon=\"fa-star\">\n    {{'alreadyPremiumFromOrg' | i18n}}\n</app-callout>\n<app-callout type=\"success\">\n    <p>{{'premiumUpgradeUnlockFeatures' | i18n}}</p>\n    <ul class=\"fa-ul\">\n        <li>\n            <i class=\"fa fa-check text-success fa-li\"></i>\n            {{'premiumSignUpStorage' | i18n}}\n        </li>\n        <li>\n            <i class=\"fa fa-check text-success fa-li\"></i>\n            {{'premiumSignUpTwoStep' | i18n}}\n        </li>\n        <li>\n            <i class=\"fa fa-check text-success fa-li\"></i>\n            {{'premiumSignUpReports' | i18n}}\n        </li>\n        <li>\n            <i class=\"fa fa-check text-success fa-li\"></i>\n            {{'premiumSignUpTotp' | i18n}}\n        </li>\n        <li>\n            <i class=\"fa fa-check text-success fa-li\"></i>\n            {{'premiumSignUpSupport' | i18n}}\n        </li>\n        <li>\n            <i class=\"fa fa-check text-success fa-li\"></i>\n            {{'premiumSignUpFuture' | i18n}}\n        </li>\n    </ul>\n    <p class=\"text-lg\" [ngClass]=\"{'mb-0':!selfHosted}\">{{'premiumPrice' | i18n : (premiumPrice | currency:'$')}}</p>\n    <a href=\"https://vault.bitwarden.com/#/settings/premium\" target=\"_blank\" rel=\"noopener\"\n        class=\"btn btn-outline-secondary\" *ngIf=\"selfHosted\">\n        {{'purchasePremium' | i18n}}\n    </a>\n</app-callout>\n<ng-container *ngIf=\"selfHosted\">\n    <p>{{'uploadLicenseFilePremium' | i18n}}</p>\n    <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n        <div class=\"form-group\">\n            <label for=\"file\">{{'licenseFile' | i18n}}</label>\n            <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required>\n            <small class=\"form-text text-muted\">{{'licenseFileDesc' | i18n : 'bitwarden_premium_license.json'}}</small>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n            <span>{{'submit' | i18n}}</span>\n        </button>\n    </form>\n</ng-container>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"!selfHosted\">\n    <h2 class=\"mt-5\">{{'addons' | i18n}}</h2>\n    <div class=\"row\">\n        <div class=\"form-group col-6\">\n            <label for=\"additionalStorage\">{{'additionalStorageGb' | i18n}}</label>\n            <input id=\"additionalStorage\" class=\"form-control\" type=\"number\" name=\"AdditionalStorageGb\"\n                [(ngModel)]=\"additionalStorage\" min=\"0\" max=\"99\" step=\"1\"\n                placeholder=\"{{'additionalStorageGbDesc' | i18n}}\">\n            <small\n                class=\"text-muted form-text\">{{'additionalStorageIntervalDesc' | i18n : '1 GB' : (storageGbPrice | currency:'$') : ('year' | i18n)}}</small>\n        </div>\n    </div>\n    <h2 class=\"spaced-header\">{{'summary' | i18n}}</h2>\n    {{'premiumMembership' | i18n}}: {{premiumPrice | currency:'$'}}\n    <br> {{'additionalStorageGb' | i18n}}: {{additionalStorage || 0}} GB &times; {{storageGbPrice | currency:'$'}} = {{additionalStorageTotal\n    | currency:'$'}}\n    <hr class=\"my-3\">\n    <div class=\"text-lg\">\n        <strong>{{'total' | i18n}}:</strong> {{total | currency:'USD $'}} /{{'year' | i18n}}\n    </div>\n    <small class=\"text-muted font-italic\">{{'paymentChargedAnnually' | i18n}}</small>\n    <h2 class=\"spaced-header mb-4\">{{'paymentInformation' | i18n}}</h2>\n    <app-payment [hideBank]=\"true\"></app-payment>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n        <span>{{'submit' | i18n}}</span>\n    </button>\n</form>\n","<div class=\"page-header d-flex\">\n    <h1>\n        {{'billing' | i18n}}\n    </h1>\n    <button (click)=\"load()\" class=\"btn btn-sm btn-outline-primary ml-auto\" *ngIf=\"firstLoaded\" [disabled]=\"loading\">\n        <i class=\"fa fa-refresh fa-fw\" [ngClass]=\"{'fa-spin': loading}\"></i>\n        {{'refresh' | i18n}}\n    </button>\n</div>\n<i class=\"fa fa-spinner fa-spin text-muted\" *ngIf=\"!firstLoaded && loading\" title=\"{{'loading' | i18n}}\"></i>\n<ng-container *ngIf=\"billing\">\n    <h2>{{(isCreditBalance ? 'accountCredit' : 'accountBalance') | i18n}}</h2>\n    <p class=\"text-lg\"><strong>{{creditOrBalance | currency:'$'}}</strong></p>\n    <p>{{'creditAppliedDesc' | i18n}}</p>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"addCredit()\" *ngIf=\"!showAddCredit\">\n        {{'addCredit' | i18n}}\n    </button>\n    <app-add-credit [organizationId]=\"organizationId\" (onAdded)=\"closeAddCredit(true)\"\n        (onCanceled)=\"closeAddCredit(false)\" *ngIf=\"showAddCredit\">\n    </app-add-credit>\n    <h2 class=\"spaced-header\">{{'paymentMethod' | i18n}}</h2>\n    <p *ngIf=\"!paymentSource\">{{'noPaymentMethod' | i18n}}</p>\n    <ng-container *ngIf=\"paymentSource\">\n        <app-callout type=\"warning\" title=\"{{'verifyBankAccount' | i18n}}\"\n            *ngIf=\"paymentSource.type === paymentMethodType.BankAccount && paymentSource.needsVerification\">\n            <p>{{'verifyBankAccountDesc' | i18n}} {{'verifyBankAccountFailureWarning' | i18n}}</p>\n            <form #verifyForm class=\"form-inline\" (ngSubmit)=\"verifyBank()\" [appApiAction]=\"verifyBankPromise\"\n                ngNativeValidate>\n                <label class=\"sr-only\" for=\"verifyAmount1\">{{'amount' | i18n : '1'}}</label>\n                <div class=\"input-group mr-2\">\n                    <div class=\"input-group-prepend\">\n                        <div class=\"input-group-text\">$0.</div>\n                    </div>\n                    <input type=\"number\" class=\"form-control\" id=\"verifyAmount1\" placeholder=\"xx\" name=\"Amount1\"\n                        [(ngModel)]=\"verifyAmount1\" min=\"1\" max=\"99\" step=\"1\" required>\n                </div>\n                <label class=\"sr-only\" for=\"verifyAmount2\">{{'amount' | i18n : '2'}}</label>\n                <div class=\"input-group mr-2\">\n                    <div class=\"input-group-prepend\">\n                        <div class=\"input-group-text\">$0.</div>\n                    </div>\n                    <input type=\"number\" class=\"form-control\" id=\"verifyAmount2\" placeholder=\"xx\" name=\"Amount2\"\n                        [(ngModel)]=\"verifyAmount2\" min=\"1\" max=\"99\" step=\"1\" required>\n                </div>\n                <button type=\"submit\" class=\"btn btn-outline-primary btn-submit\" [disabled]=\"verifyForm.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                    <span>{{'verifyBankAccount' | i18n}}</span>\n                </button>\n            </form>\n        </app-callout>\n        <p>\n            <i class=\"fa fa-fw\" [ngClass]=\"{'fa-credit-card': paymentSource.type === paymentMethodType.Card,\n                    'fa-university': paymentSource.type === paymentMethodType.BankAccount, \n                    'fa-paypal text-primary': paymentSource.type === paymentMethodType.PayPal}\"></i>\n            {{paymentSource.description}}\n        </p>\n    </ng-container>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"changePayment()\" *ngIf=\"!showAdjustPayment\">\n        {{(paymentSource ? 'changePaymentMethod' : 'addPaymentMethod') | i18n}}\n    </button>\n    <app-adjust-payment [currentType]=\"paymentSource != null ? paymentSource.type : null\"\n        [organizationId]=\"organizationId\" (onAdjusted)=\"closePayment(true)\" (onCanceled)=\"closePayment(false)\"\n        *ngIf=\"showAdjustPayment\">\n    </app-adjust-payment>\n    <h2 class=\"spaced-header\">{{'invoices' | i18n}}</h2>\n    <p *ngIf=\"!invoices || !invoices.length\">{{'noInvoices' | i18n}}</p>\n    <table class=\"table mb-2\" *ngIf=\"invoices && invoices.length\">\n        <tbody>\n            <tr *ngFor=\"let i of invoices\">\n                <td>{{i.date | date:'mediumDate'}}</td>\n                <td>\n                    <a href=\"{{i.pdfUrl}}\" target=\"_blank\" rel=\"noopener\" class=\"mr-2\"\n                        title=\"{{'downloadInvoice' | i18n}}\">\n                        <i class=\"fa fa-file-pdf-o\"></i></a>\n                    <a href=\"{{i.url}}\" target=\"_blank\" rel=\"noopener\" title=\"{{'viewInvoice' | i18n}}\">\n                        {{'invoiceNumber' | i18n : i.number}}</a>\n                </td>\n                <td>{{i.amount | currency:'$'}}</td>\n                <td>\n                    <span *ngIf=\"i.paid\">\n                        <i class=\"fa fa-check text-success\"></i>\n                        {{'paid' | i18n}}\n                    </span>\n                    <span *ngIf=\"!i.paid\">\n                        <i class=\"fa fa-exclamation-circle text-muted\"></i>\n                        {{'unpaid' | i18n}}\n                    </span>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n    <h2 class=\"spaced-header\">{{'transactions' | i18n}}</h2>\n    <p *ngIf=\"!transactions || !transactions.length\">{{'noTransactions' | i18n}}</p>\n    <table class=\"table mb-2\" *ngIf=\"transactions && transactions.length\">\n        <tbody>\n            <tr *ngFor=\"let t of transactions\">\n                <td>{{t.createdDate | date:'mediumDate'}}</td>\n                <td>\n                    <span *ngIf=\"t.type === transactionType.Charge || t.type === transactionType.Credit\">\n                        {{'chargeNoun' | i18n}}\n                    </span>\n                    <span *ngIf=\"t.type === transactionType.Refund\">{{'refundNoun' | i18n}}</span>\n                </td>\n                <td>\n                    <i class=\"fa fa-fw\" *ngIf=\"t.paymentMethodType\" [ngClass]=\"{\n                            'fa-credit-card': t.paymentMethodType === paymentMethodType.Card,\n                            'fa-university': t.paymentMethodType === paymentMethodType.BankAccount ||\n                                t.paymentMethodType === paymentMethodType.WireTransfer,\n                            'fa-bitcoin text-warning': t.paymentMethodType === paymentMethodType.BitPay,\n                            'fa-paypal text-primary': t.paymentMethodType === paymentMethodType.PayPal\n                        }\"></i>\n                    {{t.details}}\n                </td>\n                <td [ngClass]=\"{'text-strike': t.refunded}\" title=\"{{(t.refunded ? 'refunded' : '') | i18n}}\">\n                    {{t.amount | currency:'$'}}</td>\n            </tr>\n        </tbody>\n    </table>\n    <small class=\"text-muted\">* {{'chargesStatement' | i18n : 'BITWARDEN'}}</small>\n</ng-container>\n","export class BitPayInvoiceRequest {\n    userId: string;\n    organizationId: string;\n    credit: boolean;\n    amount: number;\n    returnUrl: string;\n    name: string;\n    email: string;\n}\n","import { PaymentMethodType } from '../../enums/paymentMethodType';\n\nexport class PaymentRequest {\n    paymentMethodType: PaymentMethodType;\n    paymentToken: string;\n}\n","export enum TransactionType {\n    Charge = 0,\n    Credit = 1,\n    PromotionalCredit = 2,\n    ReferralCredit = 3,\n    Refund = 4,\n}\n","export class VerifyBankRequest {\n    amount1: number;\n    amount2: number;\n}\n","<div class=\"page-header\">\n    <h1>\n        {{'premiumMembership' | i18n}}\n        <small>\n            <i class=\"fa fa-spinner fa-spin text-muted\" *ngIf=\"firstLoaded && loading\" title=\"{{'loading' | i18n}}\"></i>\n        </small>\n    </h1>\n</div>\n<i class=\"fa fa-spinner fa-spin text-muted\" *ngIf=\"!firstLoaded && loading\" title=\"{{'loading' | i18n}}\"></i>\n<ng-container *ngIf=\"sub\">\n    <app-callout type=\"warning\" title=\"{{'canceled' | i18n}}\" *ngIf=\"subscription && subscription.cancelled\">\n        {{'subscriptionCanceled' | i18n}}</app-callout>\n    <app-callout type=\"warning\" title=\"{{'pendingCancellation' | i18n}}\" *ngIf=\"subscriptionMarkedForCancel\">\n        <p>{{'subscriptionPendingCanceled' | i18n}}</p>\n        <button #reinstateBtn type=\"button\" class=\"btn btn-outline-secondary btn-submit\" (click)=\"reinstate()\"\n            [appApiAction]=\"reinstatePromise\" [disabled]=\"reinstateBtn.loading\">\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n            <span>{{'reinstateSubscription' | i18n}}</span>\n        </button>\n    </app-callout>\n    <dl *ngIf=\"selfHosted\">\n        <dt>{{'expiration' | i18n}}</dt>\n        <dd *ngIf=\"sub.expiration\">{{sub.expiration | date:'mediumDate'}}</dd>\n        <dd *ngIf=\"!sub.expiration\">{{'neverExpires' | i18n}}</dd>\n    </dl>\n    <div class=\"row\" *ngIf=\"!selfHosted\">\n        <div class=\"col-4\">\n            <dl>\n                <dt>{{'status' | i18n}}</dt>\n                <dd>\n                    <span class=\"text-capitalize\">{{(subscription && subscription.status) || '-'}}</span>\n                    <span class=\"badge badge-warning\"\n                        *ngIf=\"subscriptionMarkedForCancel\">{{'pendingCancellation' | i18n}}</span>\n                </dd>\n                <dt>{{'nextCharge' | i18n}}</dt>\n                <dd>{{nextInvoice ? ((nextInvoice.date | date: 'mediumDate') + ', ' + (nextInvoice.amount | currency:'$')) :\n                    '-'}}\n                </dd>\n            </dl>\n        </div>\n        <div class=\"col-8\" *ngIf=\"subscription\">\n            <strong class=\"d-block mb-1\">{{'details' | i18n}}</strong>\n            <table class=\"table\">\n                <tbody>\n                    <tr *ngFor=\"let i of subscription.items\">\n                        <td>\n                            {{i.name}} {{i.quantity > 1 ? '&times;' + i.quantity : ''}} @ {{i.amount | currency:'$'}}\n                        </td>\n                        <td>\n                            {{(i.quantity * i.amount) | currency:'$'}} /{{i.interval | i18n}}\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <ng-container *ngIf=\"selfHosted\">\n        <div>\n            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"updateLicense()\">\n                {{'updateLicense' | i18n}}\n            </button>\n            <a href=\"https://vault.bitwarden.com/#/settings/subscription\" target=\"_blank\" rel=\"noopener\"\n                class=\"btn btn-outline-secondary\">\n                {{'manageSubscription' | i18n}}\n            </a>\n        </div>\n        <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\">\n            <div class=\"card-body\">\n                <button type=\"button\" class=\"close\" attr.aria-label=\"{{'cancel' | i18n}}\" title=\"{{'cancel' | i18n}}\"\n                    (click)=\"closeUpdateLicense(false)\"><span aria-hidden=\"true\">&times;</span></button>\n                <h3 class=\"card-body-header\">{{'updateLicense' | i18n}}</h3>\n                <app-update-license (onUpdated)=\"closeUpdateLicense(true)\" (onCanceled)=\"closeUpdateLicense(false)\">\n                </app-update-license>\n            </div>\n        </div>\n    </ng-container>\n    <ng-container *ngIf=\"!selfHosted\">\n        <div class=\"d-flex\">\n            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"downloadLicense()\"\n                *ngIf=\"!subscription || !subscription.cancelled\">\n                {{'downloadLicense' | i18n}}\n            </button>\n            <button #cancelBtn type=\"button\" class=\"btn btn-outline-danger btn-submit ml-auto\" (click)=\"cancel()\"\n                [appApiAction]=\"cancelPromise\" [disabled]=\"cancelBtn.loading\"\n                *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n                <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                <span>{{'cancelSubscription' | i18n}}</span>\n            </button>\n        </div>\n        <h2 class=\"spaced-header\">{{'storage' | i18n}}</h2>\n        <p>{{'subscriptionStorage' | i18n : sub.maxStorageGb || 0 : sub.storageName || '0 MB'}}</p>\n        <div class=\"progress\">\n            <div class=\"progress-bar bg-success\" role=\"progressbar\" [ngStyle]=\"{width: storageProgressWidth + '%' }\"\n                [attr.aria-valuenow]=\"storagePercentage\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n                {{(storagePercentage / 100) | percent}}</div>\n        </div>\n        <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n            <div class=\"mt-3\">\n                <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\">\n                    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"adjustStorage(true)\">\n                        {{'addStorage' | i18n}}\n                    </button>\n                    <button type=\"button\" class=\"ml-1 btn btn-outline-secondary\" (click)=\"adjustStorage(false)\">\n                        {{'removeStorage' | i18n}}\n                    </button>\n                </div>\n                <app-adjust-storage [storageGbPrice]=\"4\" [add]=\"adjustStorageAdd\" (onAdjusted)=\"closeStorage(true)\"\n                    (onCanceled)=\"closeStorage(false)\" *ngIf=\"showAdjustStorage\"></app-adjust-storage>\n            </div>\n        </ng-container>\n    </ng-container>\n</ng-container>\n","export class StorageRequest {\n    storageGbAdjustment: number;\n}\n","<div class=\"page-header\">\n    <h1>{{'newOrganization' | i18n}}</h1>\n</div>\n<p>{{'newOrganizationDesc' | i18n}}</p>\n<app-organization-plans></app-organization-plans>\n","import { PaymentMethodType } from '../../enums/paymentMethodType';\nimport { PlanType } from '../../enums/planType';\n\nexport class OrganizationCreateRequest {\n    name: string;\n    businessName: string;\n    billingEmail: string;\n    planType: PlanType;\n    key: string;\n    paymentMethodType: PaymentMethodType;\n    paymentToken: string;\n    additionalSeats: number;\n    additionalStorageGb: number;\n    premiumAccessAddon: boolean;\n    collectionName: string;\n}\n","import { PlanType } from '../../enums/planType';\n\nexport class OrganizationUpgradeRequest {\n    businessName: string;\n    planType: PlanType;\n    additionalSeats: number;\n    additionalStorageGb: number;\n    premiumAccessAddon: boolean;\n}\n","<div class=\"container page-content\">\n    <div class=\"row\">\n        <div class=\"col-3\">\n            <div class=\"card mb-4\">\n                <div class=\"card-header\">{{'tools' | i18n}}</div>\n                <div class=\"list-group list-group-flush\">\n                    <a routerLink=\"generator\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'passwordGenerator' | i18n}}\n                    </a>\n                    <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'importData' | i18n}}\n                    </a>\n                    <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'exportVault' | i18n}}\n                    </a>\n                </div>\n            </div>\n            <div class=\"card\">\n                <div class=\"card-header d-flex\">\n                    {{'reports' | i18n}}\n                    <div class=\"ml-auto\">\n                        <a href=\"#\" appStopClick class=\"badge badge-primary\" *ngIf=\"!canAccessPremium\"\n                            (click)=\"premiumRequired()\">\n                            {{'premium' | i18n}}\n                        </a>\n                    </div>\n                </div>\n                <div class=\"list-group list-group-flush\">\n                    <a routerLink=\"exposed-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'exposedPasswordsReport' | i18n}}\n                    </a>\n                    <a routerLink=\"reused-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'reusedPasswordsReport' | i18n}}\n                    </a>\n                    <a routerLink=\"weak-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'weakPasswordsReport' | i18n}}\n                    </a>\n                    <a routerLink=\"unsecured-websites-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'unsecuredWebsitesReport' | i18n}}\n                    </a>\n                    <a routerLink=\"inactive-two-factor-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'inactive2faReport' | i18n}}\n                    </a>\n                    <a routerLink=\"breach-report\" class=\"list-group-item d-flex\" routerLinkActive=\"active\">\n                        {{'dataBreachReport' | i18n}}\n                        <div class=\"ml-auto\">\n                            <span class=\"badge badge-success\" *ngIf=\"!canAccessPremium\">\n                                {{'free' | i18n | uppercase}}\n                            </span>\n                        </div>\n                    </a>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-9\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>\n","<div class=\"page-header\">\n    <h1>{{'importData' | i18n}}</h1>\n</div>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"row\">\n        <div class=\"col-6\">\n            <div class=\"form-group\">\n                <label for=\"type\">1. {{'selectFormat' | i18n}}</label>\n                <select id=\"type\" name=\"Format\" [(ngModel)]=\"format\" class=\"form-control\" required>\n                    <option *ngFor=\"let o of featuredImportOptions\" [ngValue]=\"o.id\">{{o.name}}</option>\n                    <ng-container *ngIf=\"importOptions && importOptions.length\">\n                        <option value=\"-\" disabled></option>\n                        <option *ngFor=\"let o of importOptions\" [ngValue]=\"o.id\">{{o.name}}</option>\n                    </ng-container>\n                </select>\n            </div>\n        </div>\n    </div>\n    <app-callout type=\"info\" title=\"{{getFormatInstructionTitle()}}\" *ngIf=\"format\">\n        <ng-container *ngIf=\"format === 'bitwardencsv' || format === 'bitwardenjson'\">\n            See detailed instructions on our help site at\n            <a target=\"_blank\" rel=\"noopener\"\n                href=\"https://help.bitwarden.com/article/export-your-data/\">https://help.bitwarden.com/article/export-your-data/</a>\n        </ng-container>\n        <ng-container *ngIf=\"format === 'lastpasscsv'\">\n            See detailed instructions on our help site at\n            <a target=\"_blank\" rel=\"noopener\"\n                href=\"https://help.bitwarden.com/article/import-from-lastpass/\">https://help.bitwarden.com/article/import-from-lastpass/</a>\n        </ng-container>\n        <ng-container *ngIf=\"format === 'keepassxcsv'\">\n            Using the KeePassX desktop application, navigate to \"Database\" &rarr; \"Export to CSV file\" and save the CSV\n            file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'aviracsv'\">\n            In the Avira web vault, go to \"Settings\" &rarr; \"My Data\" &rarr; \"Export data\" and save the CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'blurcsv'\">\n            In the Blur web vault, click your username at the top and go to \"Settings\" &rarr; \"Export Data\", then click\n            \"Export CSV\"\n            for your \"Accounts\".\n        </ng-container>\n        <ng-container *ngIf=\"format === 'safeincloudxml'\">\n            Using the SaveInCloud desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"As XML\" and save the\n            XML file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'padlockcsv'\">\n            Using the Padlock desktop application, click the hamburger icon in the top left corner and navigate to\n            \"Settings\" &rarr;\n            \"Export\" button and save the file \"As CSV\".\n        </ng-container>\n        <ng-container *ngIf=\"format === 'keepass2xml'\">\n            Using the KeePass 2 desktop application, navigate to \"File\" &rarr; \"Export\" and select the \"KeePass XML\n            (2.x)\" option.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'upmcsv'\">\n            Using the Universal Password Manager desktop application, navigate to \"Database\" &rarr; \"Export\" and save\n            the CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'saferpasscsv'\">\n            Using the SaferPass browser extension, click the hamburger icon in the top left corner and navigate to\n            \"Settings\". Click\n            the \"Export accounts\" button to save the CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'meldiumcsv'\">\n            Using the Meldium web vault, navigate to \"Settings\". Locate the \"Export data\" function and click \"Show me my\n            data\" to save\n            the CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'keepercsv'\">\n            Log into the Keeper web vault (keepersecurity.com/vault). Navigate to \"Backup\" (top right) and find the\n            \"Export to .csv File\"\n            option. Click \"Export Now\" to save the CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'chromecsv' || format === 'operacsv' || format === 'vivaldicsv'\">\n            <span *ngIf=\"format !== 'chromecsv'\">\n                The process is exactly the same as importing from Google Chrome.\n            </span>\n            See detailed instructions on our help site at\n            <a target=\"_blank\" rel=\"noopener\"\n                href=\"https://help.bitwarden.com/article/import-from-chrome/\">https://help.bitwarden.com/article/import-from-chrome/</a>\n        </ng-container>\n        <ng-container *ngIf=\"format === 'firefoxcsv'\">\n            Use the\n            <a target=\"_blank\" rel=\"noopener\"\n                href=\"https://github.com/kspearrin/ff-password-exporter/blob/master/README.md#ff-password-exporter\">FF\n                Password Exporter</a> application to export your passwords to a CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === '1password1pif' || format === '1passwordwincsv'\">\n            See detailed instructions on our help site at\n            <a target=\"_blank\" rel=\"noopener\"\n                href=\"https://help.bitwarden.com/article/import-from-1password/\">https://help.bitwarden.com/article/import-from-1password/</a>.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'passworddragonxml'\">\n            Using the Password Dragon desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"To XML\". In the\n            dialog that pops\n            up select \"All Rows\" and check all fields. Click the \"Export\" button and save the XML file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'enpasscsv'\">\n            Using the Enpass desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"As CSV\". Select \"OK\" to the\n            warning alert\n            and save the CSV file. Note that the importer only supports files exported while Enpass is set to the\n            English\n            language, so adjust your settings accordingly.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'enpassjson'\">\n            Using the Enpass 6 desktop application, click the menu button and navigate to \"File\" &rarr; \"Export\".\n            Select the \".json\" file format option and save the JSON file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'pwsafexml'\">\n            Using the Password Safe desktop application, navigate to \"File\" &rarr; \"Export To\" &rarr; \"XML format...\"\n            and save the XML\n            file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'dashlanejson'\">\n            Using the Dashlane desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"Unsecured archive\n            (readable) in JSON format\"\n            and save the JSON file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'msecurecsv'\">\n            Using the mSecure desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"CSV File...\" and save the\n            CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'stickypasswordxml'\">\n            Using the Sticky Password desktop application, navigate to \"Menu\" (top right) &rarr; \"Export\" &rarr; \"Export\n            all\". Select\n            the unencrypted format XML option and save the XML file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'truekeycsv'\">\n            Using the True Key desktop application, click the gear icon (top right) and then navigate to \"App Settings\".\n            Click the \"Export\"\n            button, enter your password and save the CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'clipperzhtml'\">\n            Log into the Clipperz web application (clipperz.is/app). Click the hamburger menu icon in the top right to\n            expand the navigation\n            bar. Navigate to \"Data\" &rarr; \"Export\". Click the \"download HTML+JSON\" button to save the HTML file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'roboformcsv'\">\n            Using the RoboForm Editor desktop application, navigate to \"RoboForm\" (top left) &rarr; \"Options\" &rarr;\n            \"Account &amp; Data\"\n            and click the \"Export\" button. Select all of your data, change the \"Format\" to \"CSV file\" and then click the\n            \"Export\" button to save the CSV file. Note: RoboForm only allows you to export Logins. Other items will not\n            be\n            exported.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'passboltcsv'\">\n            Log into the Passbolt web vault and navigate to the \"Passwords\" listing. Select all of the passwords you\n            would like to export\n            and click the \"Export\" button at the top of the listing. Choose the \"csv (lastpass)\" export format and click\n            the \"Export\" button.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'ascendocsv'\">\n            Using the Ascendo DataVault desktop application, navigate to \"Tools\" &rarr; \"Export\". In the dialog that\n            pops up, select\n            the \"All Items (DVX, CSV)\" option. Click the \"Ok\" button to save the CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'passwordbossjson'\">\n            Using the Password Boss desktop application, navigate to \"File\" &rarr; \"Export data\" &rarr; \"Password Boss\n            JSON - not encrypted\"\n            and save the JSON file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'zohovaultcsv'\">\n            Log into the Zoho web vault (vault.zoho.com). Navigate to \"Tools\" &rarr; \"Export Secrets\". Select \"All\n            Secrets\" and click\n            the \"Zoho Vault Format CSV\" button. Highlight and copy the data from the textarea. Open a text editor like\n            Notepad\n            and paste the data. Save the data from the text editor as\n            <code>zoho_export.csv</code>.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'splashidcsv'\">\n            Using the SplashID Safe desktop application, click on the SplashID blue lock logo in the top right corner.\n            Navigate to \"Export\"\n            &rarr; \"Export as CSV\" and save the CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'passkeepcsv'\">\n            Using the PassKeep mobile app, navigate to \"Backup/Restore\". Locate the \"CSV Backup/Restore\" section and\n            click \"Backup to\n            CSV\" to save the CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'gnomejson'\">\n            Make sure you have python-keyring and python-gnomekeyring installed. Save the\n            <a target=\"_blank\" rel=\"noopener\" href=\"https://bit.ly/2GpOMTg\">GNOME Keyring Import/Export</a> python\n            script to your desktop as\n            <code>pw_helper.py</code>. Open terminal and run\n            <code>chmod +rx Desktop/pw_helper.py</code> and then\n            <code>python Desktop/pw_helper.py export Desktop/my_passwords.json</code>. Then upload the resulting\n            <code>my_passwords.json</code> file here to Bitwarden.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'passwordagentcsv'\">\n            Using the Password Agent desktop application navigate to \"File\" &rarr; \"Export\", select the \"Fields to\n            export\" button and\n            check all of the fields, change the \"Output format\" to \"CSV\", and then click the \"Start\" button to save the\n            CSV\n            file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'passpackcsv'\">\n            Log into the Passpack website vault and navigate to \"Settings\" &rarr; \"Export\", then click the \"Download\"\n            button to save\n            the CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'passmanjson'\">\n            Open your Passman vault and click on \"Settings\" in the bottom left corner. In the \"Settings\" window switch\n            to the\n            \"Export credentials\" tab and choose \"JSON\" as the export type. Enter your vault's passphrase and click the\n            \"Export\"\n            button to save the JSON file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'avastcsv'\">\n            Open the Avast Passwords desktop application and navigate to \"Settings\" &rarr; \"Import/export data\". Select\n            the\n            \"Export\" button for the \"Export to CSV file\" option to save the CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'fsecurefsk'\">\n            Open the F-Secure KEY desktop application and navigate to \"Settings\" &rarr; \"Export Passwords\". Select the\n            \"Export\" button, enter your master password, and save the FSK file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'kasperskytxt'\">\n            Open the Kaspersky Password Manager desktop application and navigate to \"Settings\" &rarr; \"Import/Export\".\n            Locate\n            the \"Export to text file\" section and select the \"Export\" button to save the TXT file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'remembearcsv'\">\n            Open the RememBear desktop application and navigate to \"Settings\" &rarr; \"Account\" &rarr; \"Export\".\n            Enter your master password and select the \"Export Anyway\" button to save the CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'passwordwallettxt'\">\n            Open the PasswordWallet desktop application and navigate to \"File\" &rarr; \"Export\" &rarr;\n            \"Visible entries to text file\". Enter your password and select the \"Ok\" button to save the TXT file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'mykicsv'\">\n            Open the Myki desktop browser extension and navigate to \"Advanced\" &rarr; \"Export Accounts\" and then scan\n            the QR code with your mobile device. Various CSV files will then be saved to your computer's\n            downloads folder.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'securesafecsv'\">\n            Export your SecureSafe password safe to a CSV file with a comma delimiter.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'logmeoncecsv'\">\n            Open the LogMeOnce browser extension, then navigate to \"Open Menu\" &rarr; \"Export To\" and\n            select \"CSV File\" to save the CSV file.\n        </ng-container>\n    </app-callout>\n    <div class=\"row\">\n        <div class=\"col-6\">\n            <div class=\"form-group\">\n                <label for=\"file\">2. {{'selectImportFile' | i18n}}</label>\n                <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\">\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"fileContents\">{{'orCopyPasteFileContents' | i18n}}</label>\n        <textarea id=\"fileContents\" class=\"form-control\" name=\"FileContents\" [(ngModel)]=\"fileContents\"></textarea>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n        <span>{{'importData' | i18n}}</span>\n    </button>\n</form>\n","<form #form (ngSubmit)=\"submit()\" ngNativeValidate [appApiAction]=\"formPromise\">\n    <div class=\"page-header\">\n        <h1>{{'exportVault' | i18n}}</h1>\n    </div>\n    <p>{{'exportMasterPassword' | i18n}}</p>\n    <app-callout type=\"warning\">{{'exportWarningDesc' | i18n}}</app-callout>\n    <div class=\"row\">\n        <div class=\"form-group col-6\">\n            <label for=\"format\">{{'fileFormat' | i18n}}</label>\n            <select class=\"form-control\" id=\"format\" name=\"Format\" [(ngModel)]=\"format\">\n                <option value=\"json\">.json</option>\n                <option value=\"csv\">.csv</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"form-group col-6\">\n            <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\n            <input id=\"masterPassword\" type=\"password\" name=\"MasterPassword\" class=\"form-control\"\n                [(ngModel)]=\"masterPassword\" required appInputVerbatim>\n        </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n        <span>{{'exportVault' | i18n}}</span>\n    </button>\n</form>\n","import {\n    EventEmitter,\n    Output,\n} from '@angular/core';\n\nimport { CryptoService } from '../../abstractions/crypto.service';\nimport { EventService } from '../../abstractions/event.service';\nimport { ExportService } from '../../abstractions/export.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\nimport { EventType } from '../../enums/eventType';\n\nexport class ExportComponent {\n    @Output() onSaved = new EventEmitter();\n\n    formPromise: Promise<string>;\n    masterPassword: string;\n    format: 'json' | 'csv' = 'json';\n    showPassword = false;\n\n    constructor(protected cryptoService: CryptoService, protected i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService, protected exportService: ExportService,\n        protected eventService: EventService, protected win: Window) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidMasterPassword'));\n            return;\n        }\n\n        const keyHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        const storedKeyHash = await this.cryptoService.getKeyHash();\n        if (storedKeyHash != null && keyHash != null && storedKeyHash === keyHash) {\n            try {\n                this.formPromise = this.getExportData();\n                const data = await this.formPromise;\n                this.platformUtilsService.eventTrack('Exported Data');\n                this.downloadFile(data);\n                this.saved();\n                await this.collectEvent();\n            } catch { }\n        } else {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidMasterPassword'));\n        }\n    }\n\n    togglePassword() {\n        this.platformUtilsService.eventTrack('Toggled Master Password on Export');\n        this.showPassword = !this.showPassword;\n        document.getElementById('masterPassword').focus();\n    }\n\n    protected saved() {\n        this.onSaved.emit();\n    }\n\n    protected getExportData() {\n        return this.exportService.getExport(this.format);\n    }\n\n    protected getFileName(prefix?: string) {\n        return this.exportService.getFileName(prefix, this.format);\n    }\n\n    protected async collectEvent(): Promise<any> {\n        await this.eventService.collect(EventType.User_ClientExportedVault);\n    }\n\n    private downloadFile(csv: string): void {\n        const fileName = this.getFileName();\n        this.platformUtilsService.saveFile(this.win, csv, { type: 'text/plain' }, fileName);\n    }\n}\n","<div class=\"page-header\">\n    <h1>{{'passwordGenerator' | i18n}}</h1>\n</div>\n<div class=\"card card-password bg-light my-4\">\n    <div class=\"card-body\">\n        <div class=\"password-wrapper\" [innerHTML]=\"password | colorPassword\" appSelectCopy></div>\n    </div>\n</div>\n<div class=\"form-group\">\n    <div class=\"form-check form-check-inline\">\n        <input id=\"generate-password\" name=\"type\" value=\"password\" class=\"form-check-input\" type=\"radio\"\n            (change)=\"saveOptions()\" [(ngModel)]=\"options.type\">\n        <label for=\"generate-password\" class=\"form-check-label\">{{'password' | i18n}}</label>\n    </div>\n    <div class=\"form-check form-check-inline\">\n        <input id=\"generate-passphrase\" name=\"type\" value=\"passphrase\" class=\"form-check-input\" type=\"radio\"\n            (change)=\"saveOptions()\" [(ngModel)]=\"options.type\">\n        <label for=\"generate-passphrase\" class=\"form-check-label\">{{'passphrase' | i18n}}</label>\n    </div>\n</div>\n<ng-container *ngIf=\"options.type === 'passphrase'\">\n    <div class=\"row\">\n        <div class=\"form-group col-4\">\n            <label for=\"num-words\">{{'numWords' | i18n}}</label>\n            <input id=\"num-words\" class=\"form-control\" type=\"number\" min=\"3\" max=\"20\" [(ngModel)]=\"options.numWords\"\n                (blur)=\"saveOptions()\">\n        </div>\n        <div class=\"form-group col-4\">\n            <label for=\"word-separator\">{{'wordSeparator' | i18n}}</label>\n            <input id=\"word-separator\" class=\"form-control\" type=\"text\" maxlength=\"1\"\n                [(ngModel)]=\"options.wordSeparator\" (blur)=\"saveOptions()\">\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"form-check\">\n            <input id=\"capitalize\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\"\n                [(ngModel)]=\"options.capitalize\">\n            <label for=\"capitalize\" class=\"form-check-label\">{{'capitalize' | i18n}}</label>\n        </div>\n        <div class=\"form-check\">\n            <input id=\"include-number\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\"\n                [(ngModel)]=\"options.includeNumber\">\n            <label for=\"include-number\" class=\"form-check-label\">{{'includeNumber' | i18n}}</label>\n        </div>\n    </div>\n</ng-container>\n<ng-container *ngIf=\"options.type === 'password'\">\n    <div class=\"row\">\n        <div class=\"form-group col-4\">\n            <label for=\"length\">{{'length' | i18n}}</label>\n            <input id=\"length\" class=\"form-control\" type=\"number\" min=\"5\" max=\"128\" [(ngModel)]=\"options.length\"\n                (blur)=\"saveOptions()\" (change)=\"lengthChanged()\">\n        </div>\n        <div class=\"form-group col-4\">\n            <label for=\"min-number\">{{'minNumbers' | i18n}}</label>\n            <input id=\"min-number\" class=\"form-control\" type=\"number\" min=\"0\" max=\"9\" (input)=\"saveOptions()\"\n                [(ngModel)]=\"options.minNumber\">\n        </div>\n        <div class=\"form-group col-4\">\n            <label for=\"min-special\">{{'minSpecial' | i18n}}</label>\n            <input id=\"min-special\" class=\"form-control\" type=\"number\" min=\"0\" max=\"9\" (input)=\"saveOptions()\"\n                [(ngModel)]=\"options.minSpecial\">\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"form-check\">\n            <input id=\"uppercase\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\"\n                [(ngModel)]=\"options.uppercase\">\n            <label for=\"uppercase\" class=\"form-check-label\">A-Z</label>\n        </div>\n        <div class=\"form-check\">\n            <input id=\"lowercase\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\"\n                [(ngModel)]=\"options.lowercase\">\n            <label for=\"lowercase\" class=\"form-check-label\">a-z</label>\n        </div>\n        <div class=\"form-check\">\n            <input id=\"numbers\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\"\n                [(ngModel)]=\"options.number\">\n            <label for=\"numbers\" class=\"form-check-label\">0-9</label>\n        </div>\n        <div class=\"form-check\">\n            <input id=\"special\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\"\n                [(ngModel)]=\"options.special\">\n            <label for=\"special\" class=\"form-check-label\">!@#$%^&amp;*</label>\n        </div>\n        <div class=\"form-check\">\n            <input id=\"ambiguous\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\"\n                [(ngModel)]=\"avoidAmbiguous\">\n            <label for=\"ambiguous\" class=\"form-check-label\">{{'ambiguous' | i18n}}</label>\n        </div>\n    </div>\n</ng-container>\n<div class=\"d-flex\">\n    <div>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"regenerate()\">\n            {{'regeneratePassword' | i18n}}\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\">\n            {{'copyPassword' | i18n}}\n        </button>\n    </div>\n    <div class=\"ml-auto\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"history()\"\n            title=\"{{'passwordHistory' | i18n}}\">\n            <i class=\"fa fa-clock-o fa-lg\"></i>\n        </button>\n    </div>\n</div>\n<ng-template #historyTemplate></ng-template>\n","import {\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PasswordGenerationService } from '../../abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\n\nexport class PasswordGeneratorComponent implements OnInit {\n    @Input() showSelect: boolean = false;\n    @Output() onSelected = new EventEmitter<string>();\n\n    options: any = {};\n    password: string = '-';\n    showOptions = false;\n    avoidAmbiguous = false;\n\n    constructor(protected passwordGenerationService: PasswordGenerationService,\n        protected platformUtilsService: PlatformUtilsService, protected i18nService: I18nService,\n        private win: Window) { }\n\n    async ngOnInit() {\n        this.options = await this.passwordGenerationService.getOptions();\n        this.avoidAmbiguous = !this.options.ambiguous;\n        this.options.type = this.options.type === 'passphrase' ? 'passphrase' : 'password';\n        this.password = await this.passwordGenerationService.generatePassword(this.options);\n        this.platformUtilsService.eventTrack('Generated Password');\n        await this.passwordGenerationService.addHistory(this.password);\n    }\n\n    async sliderChanged() {\n        this.saveOptions(false);\n        await this.passwordGenerationService.addHistory(this.password);\n        this.platformUtilsService.eventTrack('Regenerated Password');\n    }\n\n    async sliderInput() {\n        this.normalizeOptions();\n        this.password = await this.passwordGenerationService.generatePassword(this.options);\n    }\n\n    async saveOptions(regenerate: boolean = true) {\n        this.normalizeOptions();\n        await this.passwordGenerationService.saveOptions(this.options);\n\n        if (regenerate) {\n            await this.regenerate();\n        }\n    }\n\n    async regenerate() {\n        this.password = await this.passwordGenerationService.generatePassword(this.options);\n        await this.passwordGenerationService.addHistory(this.password);\n        this.platformUtilsService.eventTrack('Regenerated Password');\n    }\n\n    copy() {\n        this.platformUtilsService.eventTrack('Copied Generated Password');\n        const copyOptions = this.win != null ? { window: this.win } : null;\n        this.platformUtilsService.copyToClipboard(this.password, copyOptions);\n        this.platformUtilsService.showToast('info', null,\n            this.i18nService.t('valueCopied', this.i18nService.t('password')));\n    }\n\n    select() {\n        this.platformUtilsService.eventTrack('Selected Generated Password');\n        this.onSelected.emit(this.password);\n    }\n\n    toggleOptions() {\n        this.showOptions = !this.showOptions;\n    }\n\n    private normalizeOptions() {\n        this.options.minLowercase = 0;\n        this.options.minUppercase = 0;\n        this.options.ambiguous = !this.avoidAmbiguous;\n\n        if (!this.options.uppercase && !this.options.lowercase && !this.options.number && !this.options.special) {\n            this.options.lowercase = true;\n            if (this.win != null) {\n                const lowercase = this.win.document.querySelector('#lowercase') as HTMLInputElement;\n                if (lowercase) {\n                    lowercase.checked = true;\n                }\n            }\n        }\n\n        if (!this.options.length || this.options.length < 5) {\n            this.options.length = 5;\n        } else if (this.options.length > 128) {\n            this.options.length = 128;\n        }\n\n        if (!this.options.minNumber) {\n            this.options.minNumber = 0;\n        } else if (this.options.minNumber > this.options.length) {\n            this.options.minNumber = this.options.length;\n        } else if (this.options.minNumber > 9) {\n            this.options.minNumber = 9;\n        }\n\n        if (!this.options.minSpecial) {\n            this.options.minSpecial = 0;\n        } else if (this.options.minSpecial > this.options.length) {\n            this.options.minSpecial = this.options.length;\n        } else if (this.options.minSpecial > 9) {\n            this.options.minSpecial = 9;\n        }\n\n        if (this.options.minSpecial + this.options.minNumber > this.options.length) {\n            this.options.minSpecial = this.options.length - this.options.minNumber;\n        }\n\n        if (this.options.numWords == null || this.options.length < 3) {\n            this.options.numWords = 3;\n        } else if (this.options.numWords > 20) {\n            this.options.numWords = 20;\n        }\n\n        if (this.options.wordSeparator != null && this.options.wordSeparator.length > 1) {\n            this.options.wordSeparator = this.options.wordSeparator[0];\n        }\n    }\n}\n","import { OnInit } from '@angular/core';\n\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PasswordGenerationService } from '../../abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\n\nimport { GeneratedPasswordHistory } from '../../models/domain/generatedPasswordHistory';\n\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n    history: GeneratedPasswordHistory[] = [];\n\n    constructor(protected passwordGenerationService: PasswordGenerationService,\n        protected platformUtilsService: PlatformUtilsService, protected i18nService: I18nService,\n        private win: Window) { }\n\n    async ngOnInit() {\n        this.history = await this.passwordGenerationService.getHistory();\n    }\n\n    clear() {\n        this.history = [];\n        this.passwordGenerationService.clear();\n    }\n\n    copy(password: string) {\n        this.platformUtilsService.eventTrack('Copied Historical Password');\n        const copyOptions = this.win != null ? { window: this.win } : null;\n        this.platformUtilsService.copyToClipboard(password, copyOptions);\n        this.platformUtilsService.showToast('info', null,\n            this.i18nService.t('valueCopied', this.i18nService.t('password')));\n    }\n}\n","<div class=\"page-header\">\n    <h1>{{'dataBreachReport' | i18n}}</h1>\n</div>\n<p>{{'breachDesc' | i18n}}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"row\">\n        <div class=\"form-group col-6\">\n            <label for=\"username\">{{'username' | i18n}}</label>\n            <input id=\"username\" type=\"text\" name=\"Username\" class=\"form-control\" [(ngModel)]=\"username\" required>\n            <small class=\"form-text text-muted\">{{'breachCheckUsernameEmail' | i18n}}</small>\n        </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n        <span>{{'checkBreaches' | i18n}}</span>\n    </button>\n</form>\n<div class=\"mt-4\" *ngIf=\"!form.loading && checkedUsername\">\n    <p *ngIf=\"error\">{{'reportError' | i18n}}...</p>\n    <ng-container *ngIf=\"!error\">\n        <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!breachedAccounts.length\">\n            {{'breachUsernameNotFound' | i18n : checkedUsername}}\n        </app-callout>\n        <app-callout type=\"danger\" title=\"{{'breachFound' | i18n}}\" *ngIf=\"breachedAccounts.length\">\n            {{'breachUsernameFound' | i18n : checkedUsername : breachedAccounts.length}}\n        </app-callout>\n        <ul class=\"list-group list-group-breach\" *ngIf=\"breachedAccounts.length\">\n            <li *ngFor=\"let a of breachedAccounts\" class=\"list-group-item min-height-fix\">\n                <div class=\"row\">\n                    <div class=\"col-2 text-center\">\n                        <img [src]=\"a.logoPath\" alt=\"\" class=\"img-fluid\">\n                    </div>\n                    <div class=\"col-7\">\n                        <h3 class=\"text-lg\">{{a.title}}</h3>\n                        <p [innerHTML]=\"a.description\"></p>\n                        <p class=\"mb-1\">{{'compromisedData' | i18n}}:</p>\n                        <ul>\n                            <li *ngFor=\"let d of a.dataClasses\">{{d}}</li>\n                        </ul>\n                    </div>\n                    <div class=\"col-3\">\n                        <dl>\n                            <dt>{{'website' | i18n}}</dt>\n                            <dd>{{a.domain}}</dd>\n                            <dt>{{'affectedUsers' | i18n}}</dt>\n                            <dd>{{a.pwnCount | number}}</dd>\n                            <dt>{{'breachOccurred' | i18n}}</dt>\n                            <dd>{{a.breachDate | date: 'mediumDate'}}</dd>\n                            <dt>{{'breachReported' | i18n}}</dt>\n                            <dd>{{a.addedDate | date: 'mediumDate'}}</dd>\n                        </dl>\n                    </div>\n                </div>\n            </li>\n        </ul>\n    </ng-container>\n</div>\n","<div class=\"page-header\">\n    <h1>\n        {{'reusedPasswordsReport' | i18n}}\n        <small *ngIf=\"hasLoaded && loading\">\n            <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"></i>\n        </small>\n    </h1>\n</div>\n<p>{{'reusedPasswordsReportDesc' | i18n}}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"></i>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n    <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\">\n        {{'noReusedPasswords' | i18n}}\n    </app-callout>\n    <ng-container *ngIf=\"ciphers.length\">\n        <app-callout type=\"danger\" title=\"{{'reusedPasswordsFound' | i18n}}\">\n            {{'reusedPasswordsFoundDesc' | i18n : (ciphers.length | number)}}\n        </app-callout>\n        <table class=\"table table-hover table-list table-ciphers\">\n            <tbody>\n                <tr *ngFor=\"let c of ciphers\">\n                    <td class=\"table-list-icon\">\n                        <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n                    </td>\n                    <td class=\"reduced-lh wrap\">\n                        <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a>\n                        <i class=\"fa fa-share-alt\" *ngIf=\"!organization && c.organizationId\"\n                            title=\"{{'shared' | i18n}}\"></i>\n                        <i class=\"fa fa-paperclip\" title=\"{{'attachments' | i18n}}\" *ngIf=\"c.hasAttachments\"></i>\n                        <br>\n                        <small>{{c.subTitle}}</small>\n                    </td>\n                    <td class=\"text-right\">\n                        <span class=\"badge badge-warning\">\n                            {{'reusedXTimes' | i18n : passwordUseMap.get(c.login.password)}}\n                        </span>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","<div class=\"page-header\">\n    <h1>\n        {{'unsecuredWebsitesReport' | i18n}}\n        <small *ngIf=\"hasLoaded && loading\">\n            <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"></i>\n        </small>\n    </h1>\n</div>\n<p>{{'unsecuredWebsitesReportDesc' | i18n}}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"></i>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n    <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\">\n        {{'noUnsecuredWebsites' | i18n}}\n    </app-callout>\n    <ng-container *ngIf=\"ciphers.length\">\n        <app-callout type=\"danger\" title=\"{{'unsecuredWebsitesFound' | i18n}}\">\n            {{'unsecuredWebsitesFoundDesc' | i18n : (ciphers.length | number)}}\n        </app-callout>\n        <table class=\"table table-hover table-list table-ciphers\">\n            <tbody>\n                <tr *ngFor=\"let c of ciphers\">\n                    <td class=\"table-list-icon\">\n                        <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n                    </td>\n                    <td class=\"reduced-lh wrap\">\n                        <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a>\n                        <i class=\"fa fa-share-alt\" *ngIf=\"!organization && c.organizationId\"\n                            title=\"{{'shared' | i18n}}\"></i>\n                        <i class=\"fa fa-paperclip\" title=\"{{'attachments' | i18n}}\" *ngIf=\"c.hasAttachments\"></i>\n                        <br>\n                        <small>{{c.subTitle}}</small>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","<div class=\"page-header\">\n    <h1>\n        {{'weakPasswordsReport' | i18n}}\n        <small *ngIf=\"hasLoaded && loading\">\n            <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"></i>\n        </small>\n    </h1>\n</div>\n<p>{{'weakPasswordsReportDesc' | i18n}}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"></i>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n    <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\">\n        {{'noWeakPasswords' | i18n}}\n    </app-callout>\n    <ng-container *ngIf=\"ciphers.length\">\n        <app-callout type=\"danger\" title=\"{{'weakPasswordsFound' | i18n}}\">\n            {{'weakPasswordsFoundDesc' | i18n : (ciphers.length | number)}}\n        </app-callout>\n        <table class=\"table table-hover table-list table-ciphers\">\n            <tbody>\n                <tr *ngFor=\"let c of ciphers\">\n                    <td class=\"table-list-icon\">\n                        <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n                    </td>\n                    <td class=\"reduced-lh wrap\">\n                        <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a>\n                        <i class=\"fa fa-share-alt\" *ngIf=\"!organization && c.organizationId\"\n                            title=\"{{'shared' | i18n}}\"></i>\n                        <i class=\"fa fa-paperclip\" title=\"{{'attachments' | i18n}}\" *ngIf=\"c.hasAttachments\"></i>\n                        <br>\n                        <small>{{c.subTitle}}</small>\n                    </td>\n                    <td class=\"text-right\">\n                        <span class=\"badge badge-{{passwordStrengthMap.get(c.id)[1]}}\">\n                            {{passwordStrengthMap.get(c.id)[0] | i18n}}\n                        </span>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","<div class=\"page-header\">\n    <h1>{{'exposedPasswordsReport' | i18n}}</h1>\n</div>\n<p>{{'exposedPasswordsReportDesc' | i18n}}</p>\n<button type=\"button\" class=\"btn btn-primary btn-submit\" [disabled]=\"loading\" (click)=\"load()\">\n    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n    <span>{{'checkExposedPasswords' | i18n}}</span>\n</button>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n    <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\">\n        {{'noExposedPasswords' | i18n}}\n    </app-callout>\n    <ng-container *ngIf=\"ciphers.length\">\n        <app-callout type=\"danger\" title=\"{{'exposedPasswordsFound' | i18n}}\">\n            {{'exposedPasswordsFoundDesc' | i18n : (ciphers.length | number)}}\n        </app-callout>\n        <table class=\"table table-hover table-list table-ciphers\">\n            <tbody>\n                <tr *ngFor=\"let c of ciphers\">\n                    <td class=\"table-list-icon\">\n                        <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n                    </td>\n                    <td class=\"reduced-lh wrap\">\n                        <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a>\n                        <i class=\"fa fa-share-alt\" *ngIf=\"!organization && c.organizationId\"\n                            title=\"{{'shared' | i18n}}\"></i>\n                        <i class=\"fa fa-paperclip\" title=\"{{'attachments' | i18n}}\" *ngIf=\"c.hasAttachments\"></i>\n                        <br>\n                        <small>{{c.subTitle}}</small>\n                    </td>\n                    <td class=\"text-right\">\n                        <span class=\"badge badge-warning\">\n                            {{'exposedXTimes' | i18n : (exposedPasswordMap.get(c.id) | number)}}\n                        </span>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","<div class=\"page-header\">\n    <h1>\n        {{'inactive2faReport' | i18n}}\n        <small *ngIf=\"hasLoaded && loading\">\n            <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"></i>\n        </small>\n    </h1>\n</div>\n<p>{{'inactive2faReportDesc' | i18n}}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"></i>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n    <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\">\n        {{'noInactive2fa' | i18n}}\n    </app-callout>\n    <ng-container *ngIf=\"ciphers.length\">\n        <app-callout type=\"danger\" title=\"{{'inactive2faFound' | i18n}}\">\n            {{'inactive2faFoundDesc' | i18n : (ciphers.length | number)}}\n        </app-callout>\n        <table class=\"table table-hover table-list table-ciphers\">\n            <tbody>\n                <tr *ngFor=\"let c of ciphers\">\n                    <td class=\"table-list-icon\">\n                        <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n                    </td>\n                    <td class=\"reduced-lh wrap\">\n                        <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a>\n                        <i class=\"fa fa-share-alt\" *ngIf=\"!organization && c.organizationId\"\n                            title=\"{{'shared' | i18n}}\"></i>\n                        <i class=\"fa fa-paperclip\" title=\"{{'attachments' | i18n}}\" *ngIf=\"c.hasAttachments\"></i>\n                        <br>\n                        <small>{{c.subTitle}}</small>\n                    </td>\n                    <td class=\"text-right\">\n                        <a class=\"badge badge-primary\" href=\"{{cipherDocs.get(c.id)}}\" target=\"_blank\" rel=\"noopener\"\n                            *ngIf=\"cipherDocs.has(c.id)\">\n                            {{'instructions' | i18n}}</a>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","<app-navbar></app-navbar>\n<div class=\"org-nav\" *ngIf=\"organization\">\n    <div class=\"container d-flex flex-column\">\n        <div class=\"my-auto d-flex align-items-center pl-1\">\n            <app-avatar [data]=\"organization.name\" size=\"45\" [circle]=\"true\"></app-avatar>\n            <div class=\"org-name ml-3\">\n                <span>{{organization.name}}</span>\n                <small class=\"text-muted\">{{'organization' | i18n}}</small>\n            </div>\n            <div class=\"ml-auto card border-danger text-danger bg-transparent\" *ngIf=\"!organization.enabled\">\n                <div class=\"card-body py-2\">\n                    <i class=\"fa fa-exclamation-triangle\"></i>\n                    {{'organizationIsDisabled' | i18n}}\n                </div>\n            </div>\n        </div>\n        <ul class=\"nav nav-tabs\" *ngIf=\"organization.isManager\">\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"vault\" routerLinkActive=\"active\">\n                    <i class=\"fa fa-lock\"></i>\n                    {{'vault' | i18n}}\n                </a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"manage\" routerLinkActive=\"active\">\n                    <i class=\"fa fa-sliders\"></i>\n                    {{'manage' | i18n}}\n                </a>\n            </li>\n            <li class=\"nav-item\" *ngIf=\"organization.isAdmin\">\n                <a class=\"nav-link\" routerLink=\"tools\" routerLinkActive=\"active\">\n                    <i class=\"fa fa-wrench\"></i>\n                    {{'tools' | i18n}}\n                </a>\n            </li>\n            <li class=\"nav-item\" *ngIf=\"organization.isOwner\">\n                <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\">\n                    <i class=\"fa fa-cogs\"></i>\n                    {{'settings' | i18n}}\n                </a>\n            </li>\n        </ul>\n    </div>\n</div>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","<div class=\"container page-content\">\n    <div class=\"row\">\n        <div class=\"col-3\">\n            <app-org-vault-groupings [showFolders]=\"false\" [showFavorites]=\"false\"\n                (onAllClicked)=\"clearGroupingFilters()\" (onCipherTypeClicked)=\"filterCipherType($event)\"\n                (onCollectionClicked)=\"filterCollection($event.id)\" (onSearchTextChanged)=\"filterSearchText($event)\">\n            </app-org-vault-groupings>\n        </div>\n        <div class=\"col-9\">\n            <div class=\"page-header d-flex\">\n                <h1>\n                    {{'vault' | i18n}}\n                    <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\">\n                        <i *ngIf=\"actionSpinner.loading\" class=\"fa fa-spinner fa-spin text-muted\"\n                            title=\"{{'loading' | i18n}}\"></i>\n                    </small>\n                </h1>\n                <button type=\"button\" class=\"btn btn-outline-primary btn-sm ml-auto\" (click)=\"addCipher()\">\n                    <i class=\"fa fa-plus fa-fw\"></i>{{'addItem' | i18n}}\n                </button>\n            </div>\n            <app-org-vault-ciphers (onCipherClicked)=\"editCipher($event)\"\n                (onAttachmentsClicked)=\"editCipherAttachments($event)\" (onAddCipher)=\"addCipher()\"\n                (onCollectionsClicked)=\"editCipherCollections($event)\" (onEventsClicked)=\"viewEvents($event)\">\n            </app-org-vault-ciphers>\n        </div>\n    </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #eventsTemplate></ng-template>\n","<div class=\"container page-content\">\n    <div class=\"row\">\n        <div class=\"col-3\">\n            <div class=\"card mb-4\">\n                <div class=\"card-header\">{{'tools' | i18n}}</div>\n                <div class=\"list-group list-group-flush\">\n                    <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'importData' | i18n}}\n                    </a>\n                    <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'exportVault' | i18n}}\n                    </a>\n                </div>\n            </div>\n            <div class=\"card\">\n                <div class=\"card-header d-flex\">\n                    {{'reports' | i18n}}\n                    <div class=\"ml-auto\">\n                        <a href=\"#\" appStopClick class=\"badge badge-primary\" *ngIf=\"!accessReports\"\n                            (click)=\"upgradeOrganization()\">\n                            {{'upgrade' | i18n}}\n                        </a>\n                    </div>\n                </div>\n                <div class=\"list-group list-group-flush\">\n                    <a routerLink=\"exposed-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'exposedPasswordsReport' | i18n}}\n                    </a>\n                    <a routerLink=\"reused-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'reusedPasswordsReport' | i18n}}\n                    </a>\n                    <a routerLink=\"weak-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'weakPasswordsReport' | i18n}}\n                    </a>\n                    <a routerLink=\"unsecured-websites-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'unsecuredWebsitesReport' | i18n}}\n                    </a>\n                    <a routerLink=\"inactive-two-factor-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'inactive2faReport' | i18n}}\n                    </a>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-9\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>\n","<div class=\"container page-content\">\n    <div class=\"row\">\n        <div class=\"col-3\">\n            <div class=\"card\" *ngIf=\"organization\">\n                <div class=\"card-header\">{{'manage' | i18n}}</div>\n                <div class=\"list-group list-group-flush\">\n                    <a routerLink=\"people\" class=\"list-group-item\" routerLinkActive=\"active\"\n                        *ngIf=\"organization.isAdmin\">\n                        {{'people' | i18n}}\n                    </a>\n                    <a routerLink=\"collections\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'collections' | i18n}}\n                    </a>\n                    <a routerLink=\"groups\" class=\"list-group-item\" routerLinkActive=\"active\"\n                        *ngIf=\"organization.isAdmin && accessGroups\">\n                        {{'groups' | i18n}}\n                    </a>\n                    <a routerLink=\"events\" class=\"list-group-item\" routerLinkActive=\"active\"\n                        *ngIf=\"organization.isAdmin && accessEvents\">\n                        {{'eventLogs' | i18n}}\n                    </a>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-9\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>\n","<div class=\"page-header d-flex\">\n    <h1>{{'collections' | i18n}}</h1>\n    <div class=\"ml-auto d-flex\">\n        <div>\n            <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label>\n            <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\" placeholder=\"{{'search' | i18n}}\"\n                [(ngModel)]=\"searchText\">\n        </div>\n        <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"add()\">\n            <i class=\"fa fa-plus fa-fw\"></i>\n            {{'newCollection' | i18n}}\n        </button>\n    </div>\n</div>\n<i class=\"fa fa-spinner fa-spin text-muted\" *ngIf=\"loading\"></i>\n<ng-container *ngIf=\"!loading && (collections | search:searchText:'name':'id') as searchedCollections\">\n    <p *ngIf=\"!searchedCollections.length\">{{'noCollectionsInList' | i18n}}</p>\n    <table class=\"table table-hover table-list\" *ngIf=\"searchedCollections.length\">\n        <tbody>\n            <tr *ngFor=\"let c of searchedCollections\">\n                <td>\n                    <a href=\"#\" appStopClick (click)=\"edit(c)\">{{c.name}}</a>\n                </td>\n                <td class=\"table-list-options\">\n                    <div class=\"dropdown\" appListDropdown>\n                        <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\n                            aria-haspopup=\"true\" aria-expanded=\"false\">\n                            <i class=\"fa fa-cog fa-lg\"></i>\n                        </button>\n                        <div class=\"dropdown-menu dropdown-menu-right\">\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"users(c)\">\n                                <i class=\"fa fa-fw fa-users\"></i>\n                                {{'users' | i18n}}\n                            </a>\n                            <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(c)\">\n                                <i class=\"fa fa-fw fa-trash-o\"></i>\n                                {{'delete' | i18n}}\n                            </a>\n                        </div>\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #usersTemplate></ng-template>\n","<div class=\"page-header d-flex\">\n    <h1>{{'eventLogs' | i18n}}</h1>\n    <div class=\"ml-auto d-flex\">\n        <div class=\"form-inline\">\n            <label class=\"sr-only\" for=\"start\">{{'startDate' | i18n}}</label>\n            <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"start\"\n                placeholder=\"{{'startDate' | i18n}}\" [(ngModel)]=\"start\" placeholder=\"YYYY-MM-DDTHH:MM\">\n            <span class=\"mx-2\">-</span>\n            <label class=\"sr-only\" for=\"end\">{{'endDate' | i18n}}</label>\n            <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"end\"\n                placeholder=\"{{'endDate' | i18n}}\" [(ngModel)]=\"end\" placeholder=\"YYYY-MM-DDTHH:MM\">\n        </div>\n        <button #refreshBtn [appApiAction]=\"refreshPromise\" type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\"\n            (click)=\"loadEvents(true)\" [disabled]=\"loaded && refreshBtn.loading\">\n            <i class=\"fa fa-refresh fa-fw\" [ngClass]=\"{'fa-spin': loaded && refreshBtn.loading}\"></i>\n            {{'refresh' | i18n}}\n        </button>\n    </div>\n</div>\n<i class=\"fa fa-spinner fa-spin text-muted\" *ngIf=\"!loaded\" title=\"{{'loading' | i18n}}\"></i>\n<ng-container *ngIf=\"loaded\">\n    <p *ngIf=\"!events || !events.length\">{{'noEventsInList' | i18n}}</p>\n    <table class=\"table table-hover\" *ngIf=\"events && events.length\">\n        <thead>\n            <tr>\n                <th class=\"border-top-0\" width=\"210\">{{'timestamp' | i18n}}</th>\n                <th class=\"border-top-0\" width=\"40\">\n                    <span class=\"sr-only\">{{'device' | i18n}}</span>\n                </th>\n                <th class=\"border-top-0\" width=\"150\">{{'user' | i18n}}</th>\n                <th class=\"border-top-0\">{{'event' | i18n}}</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let e of events\">\n                <td>{{e.date | date:'medium'}}</td>\n                <td>\n                    <i class=\"text-muted fa fa-lg {{e.appIcon}}\" title=\"{{e.appName}}, {{e.ip}}\"></i>\n                </td>\n                <td>\n                    <span title=\"{{e.userEmail}}\">{{e.userName}}</span>\n                </td>\n                <td [innerHTML]=\"e.message\"></td>\n            </tr>\n        </tbody>\n    </table>\n    <button #moreBtn [appApiAction]=\"morePromise\" type=\"button\" class=\"btn btn-block btn-link btn-submit\"\n        (click)=\"loadEvents(false)\" [disabled]=\"loaded && moreBtn.loading\" *ngIf=\"continuationToken\">\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n        <span>{{'loadMore' | i18n}}</span>\n    </button>\n</ng-container>\n","<div class=\"page-header d-flex\">\n    <h1>{{'groups' | i18n}}</h1>\n    <div class=\"ml-auto d-flex\">\n        <div>\n            <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label>\n            <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\" placeholder=\"{{'search' | i18n}}\"\n                [(ngModel)]=\"searchText\">\n        </div>\n        <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"add()\">\n            <i class=\"fa fa-plus fa-fw\"></i>\n            {{'newGroup' | i18n}}\n        </button>\n    </div>\n</div>\n<i class=\"fa fa-spinner fa-spin text-muted\" *ngIf=\"loading\" title=\"{{'loading' | i18n}}\"></i>\n<ng-container *ngIf=\"!loading && (groups | search:searchText:'name':'id') as searchedGroups\">\n    <p *ngIf=\"!searchedGroups.length\">{{'noGroupsInList' | i18n}}</p>\n    <table class=\"table table-hover table-list\" *ngIf=\"searchedGroups.length\">\n        <tbody>\n            <tr *ngFor=\"let g of searchedGroups\">\n                <td>\n                    <a href=\"#\" appStopClick (click)=\"edit(g)\">{{g.name}}</a>\n                </td>\n                <td class=\"table-list-options\">\n                    <div class=\"dropdown\" appListDropdown>\n                        <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\n                            aria-haspopup=\"true\" aria-expanded=\"false\">\n                            <i class=\"fa fa-cog fa-lg\"></i>\n                        </button>\n                        <div class=\"dropdown-menu dropdown-menu-right\">\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"users(g)\">\n                                <i class=\"fa fa-fw fa-users\"></i>\n                                {{'users' | i18n}}\n                            </a>\n                            <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(g)\">\n                                <i class=\"fa fa-fw fa-trash-o\"></i>\n                                {{'delete' | i18n}}\n                            </a>\n                        </div>\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #usersTemplate></ng-template>\n","import { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\n\nexport class GroupRequest {\n    name: string;\n    accessAll: boolean;\n    externalId: string;\n    collections: SelectionReadOnlyRequest[] = [];\n}\n","<div class=\"page-header d-flex\">\n    <h1>{{'people' | i18n}}</h1>\n    <div class=\"ml-auto d-flex\">\n        <div class=\"btn-group btn-group-sm\" role=\"group\">\n            <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: status == null}\"\n                (click)=\"filter(null)\">\n                {{'all' | i18n}}\n            </button>\n            <button type=\"button\" class=\"btn btn-outline-secondary\"\n                [ngClass]=\"{active: status == organizationUserStatusType.Invited}\"\n                (click)=\"filter(organizationUserStatusType.Invited)\">\n                {{'invited' | i18n}}\n                <span class=\"badge badge-pill badge-info\" *ngIf=\"invitedCount\">{{invitedCount}}</span>\n            </button>\n            <button type=\"button\" class=\"btn btn-outline-secondary\"\n                [ngClass]=\"{active: status == organizationUserStatusType.Accepted}\"\n                (click)=\"filter(organizationUserStatusType.Accepted)\">\n                {{'accepted' | i18n}}\n                <span class=\"badge badge-pill badge-warning\" *ngIf=\"acceptedCount\">{{acceptedCount}}</span>\n            </button>\n        </div>\n        <div class=\"ml-3\">\n            <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label>\n            <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\" placeholder=\"{{'search' | i18n}}\"\n                [(ngModel)]=\"searchText\">\n        </div>\n        <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\">\n            <i class=\"fa fa-plus fa-fw\"></i>\n            {{'inviteUser' | i18n}}\n        </button>\n    </div>\n</div>\n<i class=\"fa fa-spinner fa-spin text-muted\" *ngIf=\"loading\" title=\"{{'loading' | i18n}}\"></i>\n<ng-container *ngIf=\"!loading && (users | search:searchText:'name':'email':'id') as searchedUsers\">\n    <p *ngIf=\"!searchedUsers.length\">{{'noUsersInList' | i18n}}</p>\n    <ng-container *ngIf=\"searchedUsers.length\">\n        <app-callout type=\"info\" title=\"{{'confirmUsers' | i18n}}\" icon=\"fa-check-circle\" *ngIf=\"showConfirmUsers\">\n            {{'usersNeedConfirmed' | i18n}}\n        </app-callout>\n        <table class=\"table table-hover table-list\">\n            <tbody>\n                <tr *ngFor=\"let u of searchedUsers\">\n                    <td width=\"30\">\n                        <app-avatar [data]=\"u.name || u.email\" [email]=\"u.email\" size=\"25\" [circle]=\"true\"\n                            [fontSize]=\"14\"></app-avatar>\n                    </td>\n                    <td>\n                        <a href=\"#\" appStopClick (click)=\"edit(u)\">{{u.email}}</a>\n                        <span class=\"badge badge-secondary\"\n                            *ngIf=\"u.status === organizationUserStatusType.Invited\">{{'invited' | i18n}}</span>\n                        <span class=\"badge badge-warning\"\n                            *ngIf=\"u.status === organizationUserStatusType.Accepted\">{{'accepted' | i18n}}</span>\n                        <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{u.name}}</small>\n                    </td>\n                    <td>\n                        <i class=\"fa fa-lock\" *ngIf=\"u.twoFactorEnabled\" title=\"{{'userUsingTwoStep' | i18n}}\"></i>\n                    </td>\n                    <td>\n                        <span *ngIf=\"u.type === organizationUserType.Owner\">{{'owner' | i18n}}</span>\n                        <span *ngIf=\"u.type === organizationUserType.Admin\">{{'admin' | i18n}}</span>\n                        <span *ngIf=\"u.type === organizationUserType.Manager\">{{'manager' | i18n}}</span>\n                        <span *ngIf=\"u.type === organizationUserType.User\">{{'user' | i18n}}</span>\n                    </td>\n                    <td class=\"table-list-options\">\n                        <div class=\"dropdown\" appListDropdown>\n                            <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\"\n                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                <i class=\"fa fa-cog fa-lg\"></i>\n                            </button>\n                            <div class=\"dropdown-menu dropdown-menu-right\">\n                                <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"reinvite(u)\"\n                                    *ngIf=\"u.status === organizationUserStatusType.Invited\">\n                                    <i class=\"fa fa-fw fa-envelope-o\"></i>\n                                    {{'resendInvitation' | i18n}}\n                                </a>\n                                <a class=\"dropdown-item text-success\" href=\"#\" appStopClick (click)=\"confirm(u)\"\n                                    *ngIf=\"u.status === organizationUserStatusType.Accepted\">\n                                    <i class=\"fa fa-fw fa-check\"></i>\n                                    {{'confirm' | i18n}}\n                                </a>\n                                <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"groups(u)\" *ngIf=\"accessGroups\">\n                                    <i class=\"fa fa-fw fa-sitemap\"></i>\n                                    {{'groups' | i18n}}\n                                </a>\n                                <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"events(u)\"\n                                    *ngIf=\"accessEvents && u.status === organizationUserStatusType.Confirmed\">\n                                    <i class=\"fa fa-fw fa-file-text-o\"></i>\n                                    {{'eventLogs' | i18n}}\n                                </a>\n                                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\">\n                                    <i class=\"fa fa-fw fa-remove\"></i>\n                                    {{'remove' | i18n}}\n                                </a>\n                            </div>\n                        </div>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </ng-container>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #groupsTemplate></ng-template>\n<ng-template #eventsTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n","import { OrganizationUserType } from '../../enums/organizationUserType';\n\nimport { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\n\nexport class OrganizationUserInviteRequest {\n    emails: string[] = [];\n    type: OrganizationUserType;\n    accessAll: boolean;\n    collections: SelectionReadOnlyRequest[] = [];\n}\n","import { OrganizationUserType } from '../../enums/organizationUserType';\n\nimport { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\n\nexport class OrganizationUserUpdateRequest {\n    type: OrganizationUserType;\n    accessAll: boolean;\n    collections: SelectionReadOnlyRequest[] = [];\n}\n","export class OrganizationUserUpdateGroupsRequest {\n    groupIds: string[] = [];\n}\n","<div class=\"container page-content\">\n    <div class=\"row\">\n        <div class=\"col-3\">\n            <div class=\"card\">\n                <div class=\"card-header\">{{'settings' | i18n}}</div>\n                <div class=\"list-group list-group-flush\">\n                    <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'myOrganization' | i18n}}\n                    </a>\n                    <a routerLink=\"subscription\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'subscription' | i18n}}\n                    </a>\n                    <a routerLink=\"billing\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"!selfHosted\">\n                        {{'billing' | i18n}}\n                    </a>\n                    <a routerLink=\"two-factor\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"access2fa\">\n                        {{'twoStepLogin' | i18n}}\n                    </a>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-9\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>\n","<div class=\"page-header\">\n    <h1>{{'myOrganization' | i18n}}</h1>\n</div>\n<div *ngIf=\"loading\">\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"></i>\n</div>\n<form *ngIf=\"org && !loading\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"row\">\n        <div class=\"col-6\">\n            <div class=\"form-group\">\n                <label for=\"name\">{{'organizationName' | i18n}}</label>\n                <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"org.name\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"billingEmail\">{{'billingEmail' | i18n}}</label>\n                <input id=\"billingEmail\" class=\"form-control\" type=\"text\" name=\"BillingEmail\"\n                    [(ngModel)]=\"org.billingEmail\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"businessName\">{{'businessName' | i18n}}</label>\n                <input id=\"businessName\" class=\"form-control\" type=\"text\" name=\"BusinessName\"\n                    [(ngModel)]=\"org.businessName\">\n            </div>\n        </div>\n        <div class=\"col-6\">\n            <app-avatar data=\"{{org.name}}\" dynamic=\"true\" size=\"75\" fontSize=\"35\"></app-avatar>\n        </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n        <span>{{'save' | i18n}}</span>\n    </button>\n</form>\n<ng-container *ngIf=\"canUseApi\">\n    <div class=\"secondary-header border-0 mb-0\">\n        <h1>{{'apiKey' | i18n}}</h1>\n    </div>\n    <p>\n        {{'apiKeyDesc' | i18n}}\n        <a href=\"https://docs.bitwarden.com\" target=\"_blank\" rel=\"noopener\">\n            {{'learnMore' | i18n}}\n        </a>\n    </p>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"viewApiKey()\">{{'viewApiKey' | i18n}}</button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"rotateApiKey()\">{{'rotateApiKey' | i18n}}</button>\n</ng-container>\n<div class=\"secondary-header border-0 mb-0\">\n    <h1>{{'taxInformation' | i18n}}</h1>\n</div>\n<p>{{'taxInformationDesc' | i18n}}</p>\n<a href=\"https://bitwarden.com/contact/\" target=\"_blank\" rel=\"noopener\" class=\"btn btn-outline-secondary\">\n    {{'contactSupport' | i18n}}\n</a>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n    <h1>{{'dangerZone' | i18n}}</h1>\n</div>\n<div class=\"card border-danger\">\n    <div class=\"card-body\">\n        <p>{{'dangerZoneDesc' | i18n}}</p>\n        <button type=\"button\" class=\"btn btn-outline-danger\"\n            (click)=\"deleteOrganization()\">{{'deleteOrganization' | i18n}}</button>\n        <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">{{'purgeVault' | i18n}}</button>\n    </div>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n<ng-template #purgeOrganizationTemplate></ng-template>\n<ng-template #apiKeyTemplate></ng-template>\n<ng-template #rotateApiKeyTemplate></ng-template>\n","export class OrganizationUpdateRequest {\n    name: string;\n    businessName: string;\n    billingEmail: string;\n}\n","<div class=\"page-header\">\n    <h1>\n        {{'subscription' | i18n}}\n        <small>\n            <i class=\"fa fa-spinner fa-spin text-muted\" *ngIf=\"firstLoaded && loading\" title=\"{{'loading' | i18n}}\"></i>\n        </small>\n    </h1>\n</div>\n<i class=\"fa fa-spinner fa-spin text-muted\" *ngIf=\"!firstLoaded && loading\" title=\"{{'loading' | i18n}}\"></i>\n<ng-container *ngIf=\"sub\">\n    <app-callout type=\"warning\" title=\"{{'canceled' | i18n}}\" *ngIf=\"subscription && subscription.cancelled\">\n        {{'subscriptionCanceled' | i18n}}</app-callout>\n    <app-callout type=\"warning\" title=\"{{'pendingCancellation' | i18n}}\" *ngIf=\"subscriptionMarkedForCancel\">\n        <p>{{'subscriptionPendingCanceled' | i18n}}</p>\n        <button #reinstateBtn type=\"button\" class=\"btn btn-outline-secondary btn-submit\" (click)=\"reinstate()\"\n            [appApiAction]=\"reinstatePromise\" [disabled]=\"reinstateBtn.loading\">\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n            <span>{{'reinstateSubscription' | i18n}}</span>\n        </button>\n    </app-callout>\n    <dl *ngIf=\"selfHosted\">\n        <dt>{{'billingPlan' | i18n}}</dt>\n        <dd>{{sub.plan}}</dd>\n        <dt>{{'expiration' | i18n}}</dt>\n        <dd *ngIf=\"sub.expiration\">\n            {{sub.expiration | date:'mediumDate'}}\n            <span *ngIf=\"isExpired\" class=\"text-danger ml-2\">\n                <i class=\"fa fa-exclamation-triangle\"></i>\n                {{'licenseIsExpired' | i18n}}\n            </span>\n        </dd>\n        <dd *ngIf=\"!sub.expiration\">{{'neverExpires' | i18n}}</dd>\n    </dl>\n    <div class=\"row\" *ngIf=\"!selfHosted\">\n        <div class=\"col-4\">\n            <dl>\n                <dt>{{'billingPlan' | i18n}}</dt>\n                <dd>{{sub.plan}}</dd>\n                <ng-container *ngIf=\"subscription\">\n                    <dt>{{'status' | i18n}}</dt>\n                    <dd>\n                        <span class=\"text-capitalize\">{{subscription.status || '-'}}</span>\n                        <span class=\"badge badge-warning\"\n                            *ngIf=\"subscriptionMarkedForCancel\">{{'pendingCancellation' | i18n}}</span>\n                    </dd>\n                    <dt>{{'nextCharge' | i18n}}</dt>\n                    <dd>{{nextInvoice ? ((nextInvoice.date | date: 'mediumDate') + ', ' + (nextInvoice.amount | currency:'$'))\n                        : '-'}}\n                    </dd>\n                </ng-container>\n            </dl>\n        </div>\n        <div class=\"col-8\" *ngIf=\"subscription\">\n            <strong class=\"d-block mb-1\">{{'details' | i18n}}</strong>\n            <table class=\"table\">\n                <tbody>\n                    <tr *ngFor=\"let i of subscription.items\">\n                        <td>\n                            {{i.name}} {{i.quantity > 1 ? '&times;' + i.quantity : ''}} @ {{i.amount | currency:'$'}}\n                        </td>\n                        <td>\n                            {{(i.quantity * i.amount) | currency:'$'}} /{{i.interval | i18n}}\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <ng-container *ngIf=\"selfHosted\">\n        <div>\n            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"updateLicense()\">\n                {{'updateLicense' | i18n}}\n            </button>\n            <a href=\"https://vault.bitwarden.com\" target=\"_blank\" rel=\"noopener\" class=\"btn btn-outline-secondary\">\n                {{'manageSubscription' | i18n}}\n            </a>\n        </div>\n        <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\">\n            <div class=\"card-body\">\n                <button type=\"button\" class=\"close\" attr.aria-label=\"{{'cancel' | i18n}}\" title=\"{{'cancel' | i18n}}\"\n                    (click)=\"closeUpdateLicense(false)\"><span aria-hidden=\"true\">&times;</span></button>\n                <h3 class=\"card-body-header\">{{'updateLicense' | i18n}}</h3>\n                <app-update-license [organizationId]=\"organizationId\" (onUpdated)=\"closeUpdateLicense(true)\"\n                    (onCanceled)=\"closeUpdateLicense(false)\"></app-update-license>\n            </div>\n        </div>\n    </ng-container>\n    <ng-container *ngIf=\"!selfHosted\">\n        <div class=\"d-flex\">\n            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"changePlan()\" *ngIf=\"!showChangePlan\">\n                {{'changeBillingPlan' | i18n}}\n            </button>\n            <button type=\"button\" class=\"btn btn-outline-secondary ml-1\" (click)=\"downloadLicense()\"\n                *ngIf=\"canDownloadLicense\" [disabled]=\"showDownloadLicense\">\n                {{'downloadLicense' | i18n}}\n            </button>\n            <button #cancelBtn type=\"button\" class=\"btn btn-outline-danger btn-submit ml-auto\" (click)=\"cancel()\"\n                [appApiAction]=\"cancelPromise\" [disabled]=\"cancelBtn.loading\"\n                *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n                <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                <span>{{'cancelSubscription' | i18n}}</span>\n            </button>\n        </div>\n        <app-change-plan [organizationId]=\"organizationId\" (onChanged)=\"closeChangePlan(true)\"\n            (onCanceled)=\"closeChangePlan(false)\" *ngIf=\"showChangePlan\"></app-change-plan>\n        <div class=\"mt-3\" *ngIf=\"showDownloadLicense\">\n            <app-download-license [organizationId]=\"organizationId\" (onDownloaded)=\"closeDownloadLicense()\"\n                (onCanceled)=\"closeDownloadLicense()\"></app-download-license>\n        </div>\n        <h2 class=\"spaced-header\">{{'userSeats' | i18n}}</h2>\n        <p>{{'subscriptionUserSeats' | i18n : sub.seats}}</p>\n        <ng-container *ngIf=\"subscription && canAdjustSeats && !subscription.cancelled && !subscriptionMarkedForCancel\">\n            <div class=\"mt-3\">\n                <div class=\"d-flex\" *ngIf=\"!showAdjustSeats\">\n                    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"adjustSeats(true)\">\n                        {{'addSeats' | i18n}}\n                    </button>\n                    <button type=\"button\" class=\"btn btn-outline-secondary ml-1\" (click)=\"adjustSeats(false)\">\n                        {{'removeSeats' | i18n}}\n                    </button>\n                </div>\n                <app-adjust-seats [seatPrice]=\"seatPrice\" [add]=\"adjustSeatsAdd\" [organizationId]=\"organizationId\"\n                    [interval]=\"billingInterval\" (onAdjusted)=\"closeSeats(true)\" (onCanceled)=\"closeSeats(false)\"\n                    *ngIf=\"showAdjustSeats\"></app-adjust-seats>\n            </div>\n        </ng-container>\n        <h2 class=\"spaced-header\">{{'storage' | i18n}}</h2>\n        <p>{{'subscriptionStorage' | i18n : sub.maxStorageGb || 0 : sub.storageName || '0 MB'}}</p>\n        <div class=\"progress\">\n            <div class=\"progress-bar bg-success\" role=\"progressbar\" [ngStyle]=\"{width: storageProgressWidth + '%' }\"\n                [attr.aria-valuenow]=\"storagePercentage\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n                {{(storagePercentage / 100) | percent}}</div>\n        </div>\n        <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n            <div class=\"mt-3\">\n                <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\">\n                    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"adjustStorage(true)\">\n                        {{'addStorage' | i18n}}\n                    </button>\n                    <button type=\"button\" class=\"btn btn-outline-secondary ml-1\" (click)=\"adjustStorage(false)\">\n                        {{'removeStorage' | i18n}}\n                    </button>\n                </div>\n                <app-adjust-storage [storageGbPrice]=\"storageGbPrice\" [add]=\"adjustStorageAdd\"\n                    [organizationId]=\"organizationId\" [interval]=\"billingInterval\" (onAdjusted)=\"closeStorage(true)\"\n                    (onCanceled)=\"closeStorage(false)\" *ngIf=\"showAdjustStorage\"></app-adjust-storage>\n            </div>\n        </ng-container>\n    </ng-container>\n</ng-container>\n","<div class=\"card card-org-plans\">\n    <div class=\"card-body\">\n        <button type=\"button\" class=\"close\" attr.aria-label=\"{{'cancel' | i18n}}\" title=\"{{'cancel' | i18n}}\"\n            (click)=\"cancel()\"><span aria-hidden=\"true\">&times;</span></button>\n        <h2 class=\"card-body-header\">{{'changeBillingPlan' | i18n}}</h2>\n        <p class=\"mb-0\">{{'changeBillingPlanUpgrade' | i18n}}</p>\n        <app-organization-plans [showFree]=\"false\" [showCancel]=\"true\" plan=\"families\" [organizationId]=\"organizationId\"\n            (onCanceled)=\"cancel()\">\n        </app-organization-plans>\n    </div>\n</div>\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"card-body\">\n        <button type=\"button\" class=\"close\" attr.aria-label=\"{{'cancel' | i18n}}\" title=\"{{'cancel' | i18n}}\"\n            (click)=\"cancel()\"><span aria-hidden=\"true\">&times;</span></button>\n        <h3 class=\"card-body-header\">{{'downloadLicense' | i18n}}</h3>\n        <div class=\"row\">\n            <div class=\"form-group col-6\">\n                <div class=\"d-flex\">\n                    <label for=\"installationId\">{{'enterInstallationId' | i18n}}</label>\n                    <a class=\"ml-auto\" target=\"_blank\" rel=\"noopener\" title=\"{{'learnMore' | i18n}}\"\n                        href=\"https://help.bitwarden.com/article/licensing-on-premise/#organization-account-sharing\">\n                        <i class=\"fa fa-question-circle-o\"></i>\n                    </a>\n                </div>\n                <input id=\"installationId\" class=\"form-control\" type=\"text\" name=\"InstallationId\"\n                    [(ngModel)]=\"installationId\" required>\n            </div>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n            <span>{{'submit' | i18n}}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n            {{'cancel' | i18n}}\n        </button>\n    </div>\n</form>\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"card-body\">\n        <button type=\"button\" class=\"close\" attr.aria-label=\"{{'cancel' | i18n}}\" title=\"{{'cancel' | i18n}}\"\n            (click)=\"cancel()\"><span aria-hidden=\"true\">&times;</span></button>\n        <h3 class=\"card-body-header\">{{(add ? 'addSeats' : 'removeSeats') | i18n}}</h3>\n        <div class=\"row\">\n            <div class=\"form-group col-6\">\n                <label for=\"seatAdjustment\">{{(add ? 'seatsToAdd' : 'seatsToRemove') | i18n}}</label>\n                <input id=\"seatAdjustment\" class=\"form-control\" type=\"number\" name=\"SeatAdjustment\"\n                    [(ngModel)]=\"seatAdjustment\" min=\"0\" step=\"1\" required>\n            </div>\n        </div>\n        <div *ngIf=\"add\" class=\"mb-3\">\n            <strong>{{'total' | i18n}}:</strong> {{seatAdjustment || 0}} &times; {{seatPrice | currency:'$'}} = {{adjustedSeatTotal\n            | currency:'$'}} /{{interval | i18n}}\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n            <span>{{'submit' | i18n}}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n            {{'cancel' | i18n}}\n        </button>\n        <small class=\"d-block text-muted mt-3\">\n            {{(add ? 'seatsAddNote' : 'seatsRemoveNote') | i18n}}\n        </small>\n    </div>\n</form>\n<app-payment [showMethods]=\"false\"></app-payment>\n","export class SeatRequest {\n    seatAdjustment: number;\n}\n","<div class=\"modal fade\">\n    <div class=\"modal-dialog modal-lg\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate\n            autocomplete=\"off\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\">{{title}}</h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" attr.aria-label=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\" *ngIf=\"cipher\">\n                <div class=\"row\" *ngIf=\"!editMode\">\n                    <div class=\"col-6 form-group\">\n                        <label for=\"type\">{{'whatTypeOfItem' | i18n}}</label>\n                        <select id=\"type\" name=\"Type\" [(ngModel)]=\"cipher.type\" class=\"form-control\">\n                            <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{o.name}}</option>\n                        </select>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-6 form-group\">\n                        <label for=\"name\">{{'name' | i18n}}</label>\n                        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"cipher.name\"\n                            required>\n                    </div>\n                    <div class=\"col-6 form-group\" *ngIf=\"!organization\">\n                        <label for=\"folder\">{{'folder' | i18n}}</label>\n                        <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"cipher.folderId\" class=\"form-control\">\n                            <option *ngFor=\"let f of folders\" [ngValue]=\"f.id\">{{f.name}}</option>\n                        </select>\n                    </div>\n                </div>\n                <!-- Login -->\n                <ng-container *ngIf=\"cipher.type === cipherType.Login\">\n                    <div class=\"row\">\n                        <div class=\"col-6 form-group\">\n                            <label for=\"loginUsername\">{{'username' | i18n}}</label>\n                            <div class=\"input-group\">\n                                <input id=\"loginUsername\" class=\"form-control\" type=\"text\" name=\"Login.Username\"\n                                    [(ngModel)]=\"cipher.login.username\" appInputVerbatim>\n                                <div class=\"input-group-append\">\n                                    <button type=\"button\" class=\"btn btn-outline-secondary\"\n                                        title=\"{{'copyUsername' | i18n}}\"\n                                        (click)=\"copy(cipher.login.username, 'username', 'Username')\" tabindex=\"-1\">\n                                        <i class=\"fa fa-lg fa-clipboard\"></i>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-6 form-group\">\n                            <div class=\"d-flex\">\n                                <label for=\"loginPassword\">{{'password' | i18n}}</label>\n                                <div class=\"ml-auto d-flex\">\n                                    <a href=\"#\" class=\"d-block mr-2\" appStopClick title=\"{{'generatePassword' | i18n}}\"\n                                        (click)=\"generatePassword()\">\n                                        <i class=\"fa fa-lg fa-fw fa-refresh\"></i>\n                                    </a>\n                                    <a href=\"#\" class=\"d-block\" #checkPasswordBtn appStopClick\n                                        title=\"{{'checkPassword' | i18n}}\" (click)=\"checkPassword()\"\n                                        [appApiAction]=\"checkPasswordPromise\">\n                                        <i class=\"fa fa-lg fa-fw fa-check-circle\"\n                                            [hidden]=\"checkPasswordBtn.loading\"></i>\n                                        <i class=\"fa fa-lg fa-fw fa-spinner fa-spin\"\n                                            [hidden]=\"!checkPasswordBtn.loading\" title=\"{{'loading' | i18n}}\"></i>\n                                    </a>\n                                </div>\n                            </div>\n                            <div class=\"input-group\">\n                                <input id=\"loginPassword\" class=\"form-control text-monospace\"\n                                    type=\"{{showPassword ? 'text' : 'password'}}\" name=\"Login.Password\"\n                                    [(ngModel)]=\"cipher.login.password\" appInputVerbatim autocomplete=\"new-password\">\n                                <div class=\"input-group-append\">\n                                    <button type=\"button\" class=\"btn btn-outline-secondary\"\n                                        title=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword()\" tabindex=\"-1\">\n                                        <i class=\"fa fa-lg\"\n                                            [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i>\n                                    </button>\n                                    <button type=\"button\" class=\"btn btn-outline-secondary\"\n                                        title=\"{{'copyPassword' | i18n}}\"\n                                        (click)=\"copy(cipher.login.password, 'password', 'Password')\" tabindex=\"-1\">\n                                        <i class=\"fa fa-lg fa-clipboard\"></i>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6 form-group\">\n                            <label for=\"loginTotp\">{{'authenticatorKeyTotp' | i18n}}</label>\n                            <input id=\"loginTotp\" type=\"text\" name=\"Login.Totp\" class=\"form-control text-monospace\"\n                                [(ngModel)]=\"cipher.login.totp\" appInputVerbatim>\n                        </div>\n                        <div class=\"col-6 form-group totp d-flex align-items-end\" [ngClass]=\"{'low': totpLow}\">\n                            <div *ngIf=\"!cipher.login.totp || !totpCode\">\n                                <img src=\"images/totp-countdown.png\" title=\"{{'verificationCodeTotp' | i18n}}\"\n                                    class=\"ml-2\">\n                                <a href=\"#\" appStopClick class=\"badge badge-primary ml-3\" (click)=\"premiumRequired()\"\n                                    *ngIf=\"!organization && !cipher.organizationId && !canAccessPremium\">\n                                    {{'premium' | i18n}}\n                                </a>\n                                <a href=\"#\" appStopClick class=\"badge badge-primary ml-3\"\n                                    (click)=\"upgradeOrganization()\"\n                                    *ngIf=\"(organization && !organization.useTotp) || (!organization && !canAccessPremium && cipher.organizationId && !cipher.organizationUseTotp)\">\n                                    {{'upgrade' | i18n}}\n                                </a>\n                            </div>\n                            <div *ngIf=\"cipher.login.totp && totpCode\" class=\"d-flex align-items-center\">\n                                <span class=\"totp-countdown mr-3 ml-2\">\n                                    <span class=\"totp-sec\">{{totpSec}}</span>\n                                    <svg>\n                                        <g>\n                                            <circle class=\"totp-circle inner\" r=\"12.6\" cy=\"16\" cx=\"16\"\n                                                [ngStyle]=\"{'stroke-dashoffset.px': totpDash}\"></circle>\n                                            <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle>\n                                        </g>\n                                    </svg>\n                                </span>\n                                <span class=\"totp-code mr-2\"\n                                    title=\"{{'verificationCodeTotp' | i18n}}\">{{totpCodeFormatted}}</span>\n                                <button type=\"button\" class=\"btn btn-link\" title=\"{{'copyVerificationCode' | i18n}}\"\n                                    (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\">\n                                    <i class=\"fa fa-clipboard\"></i>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"cipher.login.hasUris\">\n                        <div class=\"row\" *ngFor=\"let u of cipher.login.uris; let i = index; trackBy:trackByFunction\">\n                            <div class=\"col-7 form-group\">\n                                <label for=\"loginUri{{i}}\">{{'uriPosition' | i18n : (i + 1)}}</label>\n                                <div class=\"input-group\">\n                                    <input class=\"form-control\" id=\"loginUri{{i}}\" type=\"text\"\n                                        name=\"Login.Uris[{{i}}].Uri\" [(ngModel)]=\"u.uri\"\n                                        placeholder=\"{{'ex' | i18n}} https://google.com\" appInputVerbatim>\n                                    <div class=\"input-group-append\">\n                                        <button type=\"button\" class=\"btn btn-outline-secondary\"\n                                            title=\"{{'launch' | i18n}}\" (click)=\"launch(u)\" [disabled]=\"!u.canLaunch\"\n                                            tabindex=\"-1\">\n                                            <i class=\"fa fa-lg fa-share\"></i>\n                                        </button>\n                                        <button type=\"button\" class=\"btn btn-outline-secondary\"\n                                            title=\"{{'copyUri' | i18n}}\" (click)=\"copy(u.uri, 'uri', 'URI')\"\n                                            tabindex=\"-1\">\n                                            <i class=\"fa fa-lg fa-clipboard\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-5 form-group\">\n                                <div class=\"d-flex\">\n                                    <label for=\"loginUriMatch{{i}}\">\n                                        {{'matchDetection' | i18n}}\n                                    </label>\n                                    <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/uri-match-detection/\"\n                                        target=\"_blank\" rel=\"noopener\" title=\"{{'learnMore' | i18n}}\">\n                                        <i class=\"fa fa-question-circle-o\"></i>\n                                    </a>\n                                </div>\n                                <div class=\"d-flex\">\n                                    <select class=\"form-control\" id=\"loginUriMatch{{i}}\" name=\"Login.Uris[{{i}}].Match\"\n                                        [(ngModel)]=\"u.match\" (change)=\"loginUriMatchChanged(u)\">\n                                        <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">{{o.name}}\n                                        </option>\n                                    </select>\n                                    <button type=\"button\" class=\"btn btn-link text-danger ml-2\" (click)=\"removeUri(u)\"\n                                        title=\"{{'remove' | i18n}}\">\n                                        <i class=\"fa fa-minus-circle fa-lg\"></i>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-container>\n                    <a href=\"#\" appStopClick (click)=\"addUri()\" class=\"d-inline-block mb-3\">\n                        <i class=\"fa fa-plus-circle fa-fw\"></i> {{'newUri' | i18n}}\n                    </a>\n                </ng-container>\n                <!-- Card -->\n                <ng-container *ngIf=\"cipher.type === cipherType.Card\">\n                    <div class=\"row\">\n                        <div class=\"col-6 form-group\">\n                            <label for=\"cardCardholderName\">{{'cardholderName' | i18n}}</label>\n                            <input id=\"cardCardholderName\" class=\"form-control\" type=\"text\"\n                                name=\"Card.CardCardholderName\" [(ngModel)]=\"cipher.card.cardholderName\">\n                        </div>\n                        <div class=\"col-6 form-group\">\n                            <label for=\"cardBrand\">{{'brand' | i18n}}</label>\n                            <select id=\"cardBrand\" class=\"form-control\" name=\"Card.Brand\"\n                                [(ngModel)]=\"cipher.card.brand\">\n                                <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">{{o.name}}</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6 form-group\">\n                            <label for=\"cardNumber\">{{'number' | i18n}}</label>\n                            <div class=\"input-group\">\n                                <input id=\"cardNumber\" class=\"form-control\" type=\"text\" name=\"Card.Number\"\n                                    [(ngModel)]=\"cipher.card.number\" appInputVerbatim>\n                                <div class=\"input-group-append\">\n                                    <button type=\"button\" class=\"btn btn-outline-secondary\"\n                                        title=\"{{'copyNumber' | i18n}}\"\n                                        (click)=\"copy(cipher.card.number, 'number', 'Number')\" tabindex=\"-1\">\n                                        <i class=\"fa fa-lg fa-clipboard\"></i>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col form-group\">\n                            <label for=\"cardExpMonth\">{{'expirationMonth' | i18n}}</label>\n                            <select id=\"cardExpMonth\" class=\"form-control\" name=\"Card.ExpMonth\"\n                                [(ngModel)]=\"cipher.card.expMonth\">\n                                <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">{{o.name}}</option>\n                            </select>\n                        </div>\n                        <div class=\"col form-group\">\n                            <label for=\"cardExpYear\">{{'expirationYear' | i18n}}</label>\n                            <input id=\"cardExpYear\" class=\"form-control\" type=\"text\" name=\"Card.ExpYear\"\n                                [(ngModel)]=\"cipher.card.expYear\" placeholder=\"{{'ex' | i18n}} 2019\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6 form-group\">\n                            <label for=\"cardCode\">{{'securityCode' | i18n}}</label>\n                            <div class=\"input-group\">\n                                <input id=\"cardCode\" class=\"form-control text-monospace\"\n                                    type=\"{{showCardCode ? 'text' : 'password'}}\" name=\"Card.Code\"\n                                    [(ngModel)]=\"cipher.card.code\" appInputVerbatim autocomplete=\"new-password\">\n                                <div class=\"input-group-append\">\n                                    <button type=\"button\" class=\"btn btn-outline-secondary\"\n                                        title=\"{{'toggleVisibility' | i18n}}\" (click)=\"toggleCardCode()\" tabindex=\"-1\">\n                                        <i class=\"fa fa-lg\"\n                                            [ngClass]=\"{'fa-eye': !showCardCode, 'fa-eye-slash': showCardCode}\"></i>\n                                    </button>\n                                    <button type=\"button\" class=\"btn btn-outline-secondary\"\n                                        title=\"{{'securityCode' | i18n}}\"\n                                        (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\" tabindex=\"-1\">\n                                        <i class=\"fa fa-lg fa-clipboard\"></i>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <!-- Identity -->\n                <ng-container *ngIf=\"cipher.type === cipherType.Identity\">\n                    <div class=\"row\">\n                        <div class=\"col-4 form-group\">\n                            <label for=\"idTitle\">{{'title' | i18n}}</label>\n                            <select id=\"idTitle\" class=\"form-control\" name=\"Identity.Title\"\n                                [(ngModel)]=\"cipher.identity.title\">\n                                <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">{{o.name}}</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-4 form-group\">\n                            <label for=\"idFirstName\">{{'firstName' | i18n}}</label>\n                            <input id=\"idFirstName\" class=\"form-control\" type=\"text\" name=\"Identity.FirstName\"\n                                [(ngModel)]=\"cipher.identity.firstName\">\n                        </div>\n                        <div class=\"col-4 form-group\">\n                            <label for=\"idMiddleName\">{{'middleName' | i18n}}</label>\n                            <input id=\"idMiddleName\" class=\"form-control\" type=\"text\" name=\"Identity.MiddleName\"\n                                [(ngModel)]=\"cipher.identity.middleName\">\n                        </div>\n                        <div class=\"col-4 form-group\">\n                            <label for=\"idLastName\">{{'lastName' | i18n}}</label>\n                            <input id=\"idLastName\" class=\"form-control\" type=\"text\" name=\"Identity.LastName\"\n                                [(ngModel)]=\"cipher.identity.lastName\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-4 form-group\">\n                            <label for=\"idUsername\">{{'username' | i18n}}</label>\n                            <input id=\"idUsername\" class=\"form-control\" type=\"text\" name=\"Identity.Username\"\n                                [(ngModel)]=\"cipher.identity.username\" appInputVerbatim>\n                        </div>\n                        <div class=\"col-4 form-group\">\n                            <label for=\"idCompany\">{{'company' | i18n}}</label>\n                            <input id=\"idCompany\" class=\"form-control\" type=\"text\" name=\"Identity.Company\"\n                                [(ngModel)]=\"cipher.identity.company\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-4 form-group\">\n                            <label for=\"idSsn\">{{'ssn' | i18n}}</label>\n                            <input id=\"idSsn\" class=\"form-control\" type=\"text\" name=\"Identity.SSN\"\n                                [(ngModel)]=\"cipher.identity.ssn\" appInputVerbatim>\n                        </div>\n                        <div class=\"col-4 form-group\">\n                            <label for=\"idPassportNumber\">{{'passportNumber' | i18n}}</label>\n                            <input id=\"idPassportNumber\" class=\"form-control\" type=\"text\" name=\"Identity.PassportNumber\"\n                                [(ngModel)]=\"cipher.identity.passportNumber\" appInputVerbatim>\n                        </div>\n                        <div class=\"col-4 form-group\">\n                            <label for=\"idLicenseNumber\">{{'licenseNumber' | i18n}}</label>\n                            <input id=\"idLicenseNumber\" class=\"form-control\" type=\"text\" name=\"Identity.LicenseNumber\"\n                                [(ngModel)]=\"cipher.identity.licenseNumber\" appInputVerbatim>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6 form-group\">\n                            <label for=\"idEmail\">{{'email' | i18n}}</label>\n                            <input id=\"idEmail\" class=\"form-control\" type=\"text\" name=\"Identity.Email\"\n                                [(ngModel)]=\"cipher.identity.email\" appInputVerbatim>\n                        </div>\n                        <div class=\"col-6 form-group\">\n                            <label for=\"idPhone\">{{'phone' | i18n}}</label>\n                            <input id=\"idPhone\" class=\"form-control\" type=\"text\" name=\"Identity.Phone\"\n                                [(ngModel)]=\"cipher.identity.phone\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6 form-group\">\n                            <label for=\"idAddress1\">{{'address1' | i18n}}</label>\n                            <input id=\"idAddress1\" class=\"form-control\" type=\"text\" name=\"Identity.Address1\"\n                                [(ngModel)]=\"cipher.identity.address1\">\n                        </div>\n                        <div class=\"col-6 form-group\">\n                            <label for=\"idAddress2\">{{'address2' | i18n}}</label>\n                            <input id=\"idAddress2\" class=\"form-control\" type=\"text\" name=\"Identity.Address2\"\n                                [(ngModel)]=\"cipher.identity.address2\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6 form-group\">\n                            <label for=\"idAddress3\">{{'address3' | i18n}}</label>\n                            <input id=\"idAddress3\" class=\"form-control\" type=\"text\" name=\"Identity.Address3\"\n                                [(ngModel)]=\"cipher.identity.address3\">\n                        </div>\n                        <div class=\"col-6 form-group\">\n                            <label for=\"idCity\">{{'cityTown' | i18n}}</label>\n                            <input id=\"idCity\" class=\"form-control\" type=\"text\" name=\"Identity.City\"\n                                [(ngModel)]=\"cipher.identity.city\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6 form-group\">\n                            <label for=\"idState\">{{'stateProvince' | i18n}}</label>\n                            <input id=\"idState\" class=\"form-control\" type=\"text\" name=\"Identity.State\"\n                                [(ngModel)]=\"cipher.identity.state\">\n                        </div>\n                        <div class=\"col-6 form-group\">\n                            <label for=\"idPostalCode\">{{'zipPostalCode' | i18n}}</label>\n                            <input id=\"idPostalCode\" class=\"form-control\" type=\"text\" name=\"Identity.PostalCode\"\n                                [(ngModel)]=\"cipher.identity.postalCode\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6 form-group\">\n                            <label for=\"idCountry\">{{'country' | i18n}}</label>\n                            <input id=\"idCountry\" class=\"form-control\" type=\"text\" name=\"Identity.Country\"\n                                [(ngModel)]=\"cipher.identity.country\">\n                        </div>\n                    </div>\n                </ng-container>\n                <div class=\"form-group\">\n                    <label for=\"notes\">{{'notes' | i18n}}</label>\n                    <textarea id=\"notes\" name=\"Notes\" rows=\"6\" [(ngModel)]=\"cipher.notes\"\n                        class=\"form-control\"></textarea>\n                </div>\n                <h3 class=\"mt-4\">{{'customFields' | i18n}}</h3>\n                <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\">\n                    <div class=\"row\" cdkDrag *ngFor=\"let f of cipher.fields; let i = index; trackBy:trackByFunction\">\n                        <div class=\"col-5 form-group\">\n                            <div class=\"d-flex\">\n                                <label for=\"fieldName{{i}}\">{{'name' | i18n}}</label>\n                                <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/custom-fields/\"\n                                    target=\"_blank\" rel=\"noopener\" title=\"{{'learnMore' | i18n}}\">\n                                    <i class=\"fa fa-question-circle-o\"></i>\n                                </a>\n                            </div>\n                            <input id=\"fieldName{{i}}\" type=\"text\" name=\"Field.Name{{i}}\" [(ngModel)]=\"f.name\"\n                                class=\"form-control\" appInputVerbatim>\n                        </div>\n                        <div class=\"col-7 form-group\">\n                            <label for=\"fieldValue{{i}}\">{{'value' | i18n}}</label>\n                            <div class=\"d-flex align-items-center\">\n                                <div class=\"input-group\" *ngIf=\"f.type === fieldType.Text\">\n                                    <input id=\"fieldValue{{i}}\" class=\"form-control\" type=\"text\" name=\"Field.Value{{i}}\"\n                                        [(ngModel)]=\"f.value\" appInputVerbatim>\n                                    <div class=\"input-group-append\">\n                                        <button type=\"button\" class=\"btn btn-outline-secondary\"\n                                            title=\"{{'copyValue' | i18n}}\" (click)=\"copy(f.value, 'value', 'Field')\"\n                                            tabindex=\"-1\">\n                                            <i class=\"fa fa-lg fa-clipboard\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                                <div class=\"input-group\" *ngIf=\"f.type === fieldType.Hidden\">\n                                    <input id=\"fieldValue{{i}}\" type=\"{{f.showValue ? 'text' : 'password'}}\"\n                                        name=\"Field.Value{{i}}\" [(ngModel)]=\"f.value\"\n                                        class=\"form-control text-monospace\" appInputVerbatim\n                                        autocomplete=\"new-password\">\n                                    <div class=\"input-group-append\">\n                                        <button type=\"button\" class=\"btn btn-outline-secondary\"\n                                            title=\"{{'toggleVisibility' | i18n}}\" (click)=\"toggleFieldValue(f)\"\n                                            tabindex=\"-1\">\n                                            <i class=\"fa fa-lg\"\n                                                [ngClass]=\"{'fa-eye': !f.showValue, 'fa-eye-slash': f.showValue}\">\n                                            </i>\n                                        </button>\n                                        <button type=\"button\" class=\"btn btn-outline-secondary\"\n                                            title=\"{{'copyValue' | i18n}}\"\n                                            (click)=\"copy(f.value, 'value', f.type === fieldType.Hidden ? 'H_Field' : 'Field')\"\n                                            tabindex=\"-1\">\n                                            <i class=\"fa fa-lg fa-clipboard\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                                <div class=\"flex-fill\">\n                                    <input id=\"fieldValue{{i}}\" name=\"Field.Value{{i}}\" type=\"checkbox\"\n                                        [(ngModel)]=\"f.value\" *ngIf=\"f.type === fieldType.Boolean\" appTrueFalseValue\n                                        trueValue=\"true\" falseValue=\"false\">\n                                </div>\n                                <button type=\"button\" class=\"btn btn-link text-danger ml-2\" (click)=\"removeField(f)\"\n                                    title=\"{{'remove' | i18n}}\">\n                                    <i class=\"fa fa-minus-circle fa-lg\"></i>\n                                </button>\n                                <button type=\"button\" class=\"btn btn-link text-muted cursor-move\"\n                                    title=\"{{'dragToSort' | i18n}}\">\n                                    <i class=\"fa fa-bars fa-lg\"></i>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <a href=\"#\" appStopClick (click)=\"addField()\" class=\"d-inline-block mb-2\">\n                    <i class=\"fa fa-plus-circle fa-fw\"></i> {{'newCustomField' | i18n}}\n                </a>\n                <div class=\"row\">\n                    <div class=\"col-5\">\n                        <label for=\"addFieldType\" class=\"sr-only\">{{'type' | i18n}}</label>\n                        <select id=\"addFieldType\" class=\"form-control\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\">\n                            <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{o.name}}</option>\n                        </select>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"!editMode && !organization && ownershipOptions && ownershipOptions.length > 1\">\n                    <h3 class=\"mt-4\">{{'ownership' | i18n}}</h3>\n                    <div class=\"row\">\n                        <div class=\"col-5\">\n                            <label for=\"organizationId\">{{'whoOwnsThisItem' | i18n}}</label>\n                            <select id=\"organizationId\" class=\"form-control\" name=\"OrganizationId\"\n                                [(ngModel)]=\"cipher.organizationId\" (change)=\"organizationChanged()\">\n                                <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{o.name}}</option>\n                            </select>\n                        </div>\n                    </div>\n                </ng-container>\n                <ng-container *ngIf=\"!editMode && cipher.organizationId\">\n                    <h3 class=\"mt-4\">{{'collections' | i18n}}</h3>\n                    <div *ngIf=\"!collections || !collections.length\">\n                        {{'noCollectionsInList' | i18n}}\n                    </div>\n                    <ng-container *ngIf=\"collections && collections.length\">\n                        <div class=\"form-check\" *ngFor=\"let c of collections; let i = index\">\n                            <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"c.checked\"\n                                id=\"collection-{{i}}\" name=\"Collection[{{i}}].Checked\">\n                            <label class=\"form-check-label\" for=\"collection-{{i}}\">{{c.name}}</label>\n                        </div>\n                    </ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"editMode\">\n                    <div class=\"small text-muted mt-4\">\n                        <div>\n                            <b class=\"font-weight-semibold\">{{'dateUpdated' | i18n}}:</b>\n                            {{cipher.revisionDate | date:'medium'}}\n                        </div>\n                        <div *ngIf=\"showRevisionDate\">\n                            <b class=\"font-weight-semibold\">{{'datePasswordUpdated' | i18n}}:</b>\n                            {{cipher.passwordRevisionDisplayDate | date:'medium'}}\n                        </div>\n                        <div *ngIf=\"hasPasswordHistory\">\n                            <b class=\"font-weight-semibold\">{{'passwordHistory' | i18n}}:</b>\n                            <a href=\"#\" appStopClick (click)=\"viewHistory()\" title=\"{{'view' | i18n}}\">\n                                {{cipher.passwordHistory.length}}\n                            </a>\n                        </div>\n                        <div class=\"ml-3\" *ngIf=\"viewingPasswordHistory\">\n                            <div *ngFor=\"let ph of cipher.passwordHistory\">\n                                {{ph.lastUsedDate | date:'short'}} -\n                                <span class=\"text-monospace ml-2\">{{ph.password}}</span>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                    <span>{{'save' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n                    {{'cancel' | i18n}}\n                </button>\n                <div class=\"ml-auto\" *ngIf=\"cipher\">\n                    <button *ngIf=\"!organization\" type=\"button\" (click)=\"toggleFavorite()\" class=\"btn btn-link\"\n                        title=\"{{(cipher.favorite ? 'unfavorite' : 'favorite') | i18n}}\">\n                        <i class=\"fa fa-lg\" [ngClass]=\"{'fa-star': cipher.favorite, 'fa-star-o': !cipher.favorite}\"></i>\n                    </button>\n                    <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\"\n                        title=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\"\n                        [appApiAction]=\"deletePromise\">\n                        <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\"></i>\n                        <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\"\n                            title=\"{{'loading' | i18n}}\"></i>\n                    </button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n","<div class=\"modal fade\">\n    <div class=\"modal-dialog\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\">\n                    {{'attachments' | i18n}}\n                    <small *ngIf=\"cipher\">{{cipher.name}}</small>\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" attr.aria-label=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <table class=\"table table-hover table-list\" *ngIf=\"cipher && cipher.hasAttachments\">\n                    <tbody>\n                        <tr *ngFor=\"let a of cipher.attachments\">\n                            <td class=\"table-list-icon\">\n                                <i class=\"fa fa-fw fa-lg fa-file-o\" *ngIf=\"!a.downloading\"></i>\n                                <i class=\"fa fa-spinner fa-lg fa-fw fa-spin\" *ngIf=\"a.downloading\"></i>\n                            </td>\n                            <td>\n                                <div class=\"d-flex\">\n                                    <a href=\"#\" appStopClick (click)=\"download(a)\">{{a.fileName}}</a>\n                                    <div *ngIf=\"showFixOldAttachments(a)\" class=\"ml-2\">\n                                        <a href=\"https://help.bitwarden.com/article/attachments/#fixing-old-attachments\"\n                                            target=\"_blank\" rel=\"noopener\">\n                                            <i class=\"fa fa-exclamation-triangle text-warning\"\n                                                title=\"{{'attachmentFixDesc' | i18n}}\"></i></a>\n                                        <button type=\"button\" class=\"btn btn-outline-primary btn-sm m-0 py-0 px-2\"\n                                            (click)=\"reupload(a)\" #reuploadBtn [appApiAction]=\"reuploadPromises[a.id]\"\n                                            [disabled]=\"reuploadBtn.loading\">{{'fix' | i18n}}</button>\n                                    </div>\n                                </div>\n                                <small>{{a.sizeName}}</small>\n                            </td>\n                            <td class=\"table-list-options\">\n                                <button class=\"btn btn-outline-danger\" type=\"button\" appStopClick\n                                    title=\"{{'delete' | i18n}}\" (click)=\"delete(a)\" #deleteBtn\n                                    [appApiAction]=\"deletePromises[a.id]\" [disabled]=\"deleteBtn.loading\">\n                                    <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\"></i>\n                                    <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\"\n                                        title=\"{{'loading' | i18n}}\"></i>\n                                </button>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n                <h3>{{'newAttachment' | i18n}}</h3>\n                <label for=\"file\" class=\"sr-only\">{{'file' | i18n}}</label>\n                <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required>\n                <small class=\"form-text text-muted\">{{'maxFileSize' | i18n}}</small>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                    <span>{{'save' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\" title=\"{{'close' | i18n}}\">{{'close'\n                    | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","<div class=\"modal fade\">\n    <div class=\"modal-dialog modal-sm\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\">\n                    {{'deleteSelected' | i18n}}\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" attr.aria-label=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                {{'deleteSelectedItemsDesc' | i18n: cipherIds.length}}\n            </div>\n            <div class=\"modal-footer\">\n                <button appAutoFocus type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                    <span>{{'delete' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"\n                    title=\"{{'cancel' | i18n}}\">{{'cancel' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","<div class=\"modal fade\">\n    <div class=\"modal-dialog modal-sm\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\">\n                    {{'moveSelected' | i18n}}\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" attr.aria-label=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <p>{{'moveSelectedItemsDesc' | i18n: cipherIds.length}}</p>\n                <div class=\"form-group\">\n                    <label for=\"folder\">{{'folder' | i18n}}</label>\n                    <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"folderId\" class=\"form-control\">\n                        <option *ngFor=\"let f of folders\" [ngValue]=\"f.id\">{{f.name}}</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                    <span>{{'save' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"\n                    title=\"{{'cancel' | i18n}}\">{{'cancel' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","<div class=\"modal fade\">\n    <div class=\"modal-dialog\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\">\n                    {{'shareSelected' | i18n}}\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" attr.aria-label=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <p>{{'shareManyDesc' | i18n}}</p>\n                <p>{{'shareSelectedItemsCountDesc' | i18n: this.ciphers.length : shareableCiphers.length : nonShareableCount}}\n                </p>\n                <div class=\"form-group\">\n                    <label for=\"organization\">{{'organization' | i18n}}</label>\n                    <select id=\"organization\" name=\"OrganizationId\" [(ngModel)]=\"organizationId\" class=\"form-control\"\n                        (change)=\"filterCollections()\">\n                        <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{o.name}}</option>\n                    </select>\n                </div>\n                <div class=\"d-flex\">\n                    <h3>{{'collections' | i18n}}</h3>\n                    <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n                        <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n                            {{'selectAll' | i18n}}\n                        </button>\n                        <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n                            {{'unselectAll' | i18n}}\n                        </button>\n                    </div>\n                </div>\n                <div *ngIf=\"!collections || !collections.length\">\n                    {{'noCollectionsInList' | i18n}}\n                </div>\n                <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n                    <tbody>\n                        <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n                            <td class=\"table-list-checkbox\">\n                                <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\"\n                                    appStopProp>\n                            </td>\n                            <td>\n                                {{c.name}}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit manual\" [disabled]=\"form.loading || !canSave\"\n                    [ngClass]=\"{loading:form.loading}\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                    <span>{{'save' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"\n                    title=\"{{'cancel' | i18n}}\">{{'cancel' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","<div class=\"modal fade\">\n    <div class=\"modal-dialog\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\">\n                    {{'collections' | i18n}}\n                    <small *ngIf=\"cipher\">{{cipher.name}}</small>\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" attr.aria-label=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <p>{{'collectionsDesc' | i18n}}</p>\n                <div class=\"d-flex\">\n                    <h3>{{'collections' | i18n}}</h3>\n                    <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n                        <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n                            {{'selectAll' | i18n}}\n                        </button>\n                        <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n                            {{'unselectAll' | i18n}}\n                        </button>\n                    </div>\n                </div>\n                <div *ngIf=\"!collections || !collections.length\">\n                    {{'noCollectionsInList' | i18n}}\n                </div>\n                <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n                    <tbody>\n                        <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n                            <td class=\"table-list-checkbox\">\n                                <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\"\n                                    appStopProp>\n                            </td>\n                            <td>\n                                {{c.name}}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                    <span>{{'save' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","<div class=\"modal fade\">\n    <div class=\"modal-dialog\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\">{{'deauthorizeSessions' | i18n}}</h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" attr.aria-label=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <p>{{'deauthorizeSessionsDesc' | i18n}}</p>\n                <app-callout type=\"warning\">{{'deauthorizeSessionsWarning' | i18n}}</app-callout>\n                <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\n                <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\n                    [(ngModel)]=\"masterPassword\" required appAutoFocus appInputVerbatim>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                    <span>{{'deauthorizeSessions' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","<div class=\"modal fade\">\n    <div class=\"modal-dialog\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\">{{'deleteAccount' | i18n}}</h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" attr.aria-label=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <p>{{'deleteAccountDesc' | i18n}}</p>\n                <app-callout type=\"warning\">{{'deleteAccountWarning' | i18n}}</app-callout>\n                <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\n                <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\n                    [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                    <span>{{'deleteAccount' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","<div class=\"modal fade\">\n    <div class=\"modal-dialog\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\">{{'deleteOrganization' | i18n}}</h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" attr.aria-label=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <p>{{'deleteOrganizationDesc' | i18n}}</p>\n                <app-callout type=\"warning\">{{'deleteOrganizationWarning' | i18n}}</app-callout>\n                <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\n                <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\n                    [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                    <span>{{'deleteOrganization' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","<div class=\"modal fade\">\n    <div class=\"modal-dialog modal-sm\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\">{{title}}</h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" attr.aria-label=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <label for=\"name\">{{'name' | i18n}}</label>\n                <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"folder.name\" required>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                    <span>{{'save' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"\n                    title=\"{{'cancel' | i18n}}\">{{'cancel' | i18n}}</button>\n                <div class=\"ml-auto\">\n                    <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\"\n                        title=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\"\n                        [appApiAction]=\"deletePromise\">\n                        <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\"></i>\n                        <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\"\n                            title=\"{{'loading' | i18n}}\"></i>\n                    </button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n","<ng-template #container></ng-template>","<div class=\"modal fade\">\n    <div class=\"modal-dialog\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\">{{'apiKey' | i18n}}</h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" attr.aria-label=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <p>{{'apiKeyDesc' | i18n}}</p>\n                <ng-container *ngIf=\"!clientSecret\">\n                    <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\n                    <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\n                        [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim>\n                </ng-container>\n                <app-callout type=\"warning\" *ngIf=\"clientSecret\">{{'apiKeyWarning' | i18n}}</app-callout>\n                <app-callout type=\"info\" title=\"{{'oauth2ClientCredentials' | i18n}}\" icon=\"fa-key\"\n                    *ngIf=\"clientSecret\">\n                    <p class=\"mb-1\">\n                        <strong>client_id:</strong><br>\n                        <code>{{clientId}}</code>\n                    </p>\n                    <p class=\"mb-1\">\n                        <strong>client_secret:</strong><br>\n                        <code>{{clientSecret}}</code>\n                    </p>\n                    <p class=\"mb-1\">\n                        <strong>scope:</strong><br>\n                        <code>{{scope}}</code>\n                    </p>\n                    <p class=\"mb-0\">\n                        <strong>grant_type:</strong><br>\n                        <code>client_credentials</code>\n                    </p>\n                </app-callout>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"\n                    *ngIf=\"!clientSecret\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                    <span>{{'viewApiKey' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","<div class=\"modal fade\">\n    <div class=\"modal-dialog\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\">{{title}}</h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" attr.aria-label=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\" *ngIf=\"loading\">\n                <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"></i>\n            </div>\n            <div class=\"modal-body\" *ngIf=\"!loading\">\n                <div class=\"form-group\">\n                    <label for=\"name\">{{'name' | i18n}}</label>\n                    <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"externalId\">{{'externalId' | i18n}}</label>\n                    <input id=\"externalId\" class=\"form-control\" type=\"text\" name=\"ExternalId\" [(ngModel)]=\"externalId\">\n                    <small class=\"form-text text-muted\">{{'externalIdDesc' | i18n}}</small>\n                </div>\n                <ng-container *ngIf=\"accessGroups\">\n                    <h3 class=\"mt-4 d-flex mb-0\">\n                        {{'groupAccess' | i18n}}\n                        <div class=\"ml-auto\" *ngIf=\"groups && groups.length\">\n                            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n                                {{'selectAll' | i18n}}\n                            </button>\n                            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n                                {{'unselectAll' | i18n}}\n                            </button>\n                        </div>\n                    </h3>\n                    <div *ngIf=\"!groups || !groups.length\">\n                        {{'noGroupsInList' | i18n}}\n                    </div>\n                    <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\">\n                        <thead>\n                            <tr>\n                                <th>&nbsp;</th>\n                                <th>{{'name' | i18n}}</th>\n                                <th width=\"100\" class=\"text-center\">{{'readOnly' | i18n}}</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let g of groups; let i = index\">\n                                <td class=\"table-list-checkbox\" (click)=\"check(g)\">\n                                    <input type=\"checkbox\" [(ngModel)]=\"g.checked\" name=\"Groups[{{i}}].Checked\"\n                                        [disabled]=\"g.accessAll\" appStopProp>\n                                </td>\n                                <td (click)=\"check(g)\">\n                                    {{g.name}}\n                                    <i class=\"fa fa-th text-muted fa-fw\" *ngIf=\"g.accessAll\"\n                                        title=\"This group can access all items\"></i>\n                                </td>\n                                <td class=\"text-center\">\n                                    <input type=\"checkbox\" [(ngModel)]=\"g.readOnly\" name=\"Groups[{{i}}].ReadOnly\"\n                                        [disabled]=\"!g.checked || g.accessAll\">\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </ng-container>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                    <span>{{'save' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\n                <div class=\"ml-auto\">\n                    <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\"\n                        title=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\"\n                        [appApiAction]=\"deletePromise\">\n                        <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\"></i>\n                        <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\"\n                            title=\"{{'loading' | i18n}}\"></i>\n                    </button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n","<div class=\"modal fade\">\n    <div class=\"modal-dialog modal-lg\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\">\n                    {{'eventLogs' | i18n}}\n                    <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small>\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" attr.aria-label=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\" *ngIf=\"!loaded\">\n                <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"></i>\n            </div>\n            <div class=\"modal-body\" *ngIf=\"loaded\">\n                <div class=\"d-flex\">\n                    <div class=\"form-inline\">\n                        <label class=\"sr-only\" for=\"start\">{{'startDate' | i18n}}</label>\n                        <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"start\"\n                            placeholder=\"{{'startDate' | i18n}}\" [(ngModel)]=\"start\" placeholder=\"YYYY-MM-DDTHH:MM\">\n                        <span class=\"mx-2\">-</span>\n                        <label class=\"sr-only\" for=\"end\">{{'endDate' | i18n}}</label>\n                        <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"end\"\n                            placeholder=\"{{'endDate' | i18n}}\" [(ngModel)]=\"end\" placeholder=\"YYYY-MM-DDTHH:MM\">\n                    </div>\n                    <button #refreshBtn [appApiAction]=\"refreshPromise\" type=\"button\"\n                        class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"loadEvents(true)\"\n                        [disabled]=\"loaded && refreshBtn.loading\">\n                        <i class=\"fa fa-refresh fa-fw\" [ngClass]=\"{'fa-spin': loaded && refreshBtn.loading}\"></i>\n                        {{'refresh' | i18n}}\n                    </button>\n                </div>\n                <hr>\n                <div *ngIf=\"!events || !events.length\">\n                    {{'noEventsInList' | i18n}}\n                </div>\n                <table class=\"table table-hover mb-0\" *ngIf=\"events && events.length\">\n                    <thead>\n                        <tr>\n                            <th class=\"border-top-0\" width=\"210\">{{'timestamp' | i18n}}</th>\n                            <th class=\"border-top-0\" width=\"40\">\n                                <span class=\"sr-only\">{{'device' | i18n}}</span>\n                            </th>\n                            <th class=\"border-top-0\" width=\"150\" *ngIf=\"showUser\">{{'user' | i18n}}</th>\n                            <th class=\"border-top-0\">{{'event' | i18n}}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let e of events\">\n                            <td>{{e.date | date:'medium'}}</td>\n                            <td>\n                                <i class=\"text-muted fa fa-lg {{e.appIcon}}\" title=\"{{e.appName}}, {{e.ip}}\"></i>\n                            </td>\n                            <td *ngIf=\"showUser\">\n                                <span title=\"{{e.userEmail}}\">{{e.userName}}</span>\n                            </td>\n                            <td [innerHTML]=\"e.message\"></td>\n                        </tr>\n                    </tbody>\n                </table>\n                <button #moreBtn [appApiAction]=\"morePromise\" type=\"button\" class=\"btn btn-block btn-link btn-submit\"\n                    (click)=\"loadEvents(false)\" [disabled]=\"loaded && moreBtn.loading\" *ngIf=\"continuationToken\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                    <span>{{'loadMore' | i18n}}</span>\n                </button>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\n            </div>\n        </div>\n    </div>\n</div>\n","<div class=\"modal fade\">\n    <div class=\"modal-dialog modal-lg\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\">\n                    {{'userAccess' | i18n}}\n                    <small>{{entityName}}</small>\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" attr.aria-label=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\" *ngIf=\"loading || !users\">\n                <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"></i>\n            </div>\n            <div class=\"modal-body\"\n                *ngIf=\"!loading && users && (users | search:searchText:'name':'email':'id') as searchedUsers\">\n                <div class=\"d-flex\">\n                    <div class=\"mr-3\">\n                        <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label>\n                        <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\"\n                            placeholder=\"{{'search' | i18n}}\" name=\"SearchText\" [(ngModel)]=\"searchText\">\n                    </div>\n                    <div class=\"btn-group btn-group-sm\" role=\"group\">\n                        <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: !showSelected}\"\n                            (click)=\"filterSelected(false)\">\n                            {{'all' | i18n}}\n                        </button>\n                        <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: showSelected}\"\n                            (click)=\"filterSelected(true)\">\n                            {{'selected' | i18n}}\n                            <span class=\"badge badge-pill badge-info\" *ngIf=\"selectedCount\">{{selectedCount}}</span>\n                        </button>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"!searchedUsers.length\">\n                    <hr>\n                    {{'noUsersInList' | i18n}}\n                </ng-container>\n                <ng-container *ngIf=\"searchedUsers.length\">\n                    <table class=\"table table-hover table-list mb-0\">\n                        <thead>\n                            <tr>\n                                <th>&nbsp;</th>\n                                <th>&nbsp;</th>\n                                <th>{{'name' | i18n}}</th>\n                                <th *ngIf=\"entity === 'collection'\">&nbsp;</th>\n                                <th>{{'userType' | i18n}}</th>\n                                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">{{'readOnly' |\n                                    i18n}}</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let u of searchedUsers\">\n                                <td class=\"table-list-checkbox\" (click)=\"check(u)\">\n                                    <input type=\"checkbox\" [(ngModel)]=\"u.checked\" name=\"{{u.id.substr(0,8)}}_Checked\"\n                                        [disabled]=\"entity === 'collection' && u.accessAll\"\n                                        (change)=\"selectedChanged(u)\" appStopProp>\n                                </td>\n                                <td width=\"30\" (click)=\"check(u)\">\n                                    <app-avatar [data]=\"u.name || u.email\" [email]=\"u.email\" size=\"25\" [circle]=\"true\"\n                                        [fontSize]=\"14\"></app-avatar>\n                                </td>\n                                <td>\n                                    {{u.email}}\n                                    <span class=\"badge badge-secondary\"\n                                        *ngIf=\"u.status === organizationUserStatusType.Invited\">{{'invited'\n                                        | i18n}}</span>\n                                    <span class=\"badge badge-warning\"\n                                        *ngIf=\"u.status === organizationUserStatusType.Accepted\">{{'accepted'\n                                        | i18n}}</span>\n                                    <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{u.name}}</small>\n                                </td>\n                                <td *ngIf=\"entity === 'collection'\">\n                                    <i class=\"fa fa-th\" *ngIf=\"u.accessAll\" title=\"{{'userAccessAllItems' | i18n}}\"></i>\n                                </td>\n                                <td>\n                                    <span *ngIf=\"u.type === organizationUserType.Owner\">{{'owner' | i18n}}</span>\n                                    <span *ngIf=\"u.type === organizationUserType.Admin\">{{'admin' | i18n}}</span>\n                                    <span *ngIf=\"u.type === organizationUserType.Manager\">{{'manager' | i18n}}</span>\n                                    <span *ngIf=\"u.type === organizationUserType.User\">{{'user' | i18n}}</span>\n                                </td>\n                                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                                    <input type=\"checkbox\" [(ngModel)]=\"u.readOnly\" name=\"{{u.id.substr(0,8)}}_ReadOnly\"\n                                        [disabled]=\"u.accessAll || !u.checked\">\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </ng-container>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                    <span>{{'save' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","<div class=\"modal fade\">\n    <div class=\"modal-dialog\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\">{{title}}</h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" attr.aria-label=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\" *ngIf=\"loading\">\n                <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"></i>\n            </div>\n            <div class=\"modal-body\" *ngIf=\"!loading\">\n                <div class=\"form-group\">\n                    <label for=\"name\">{{'name' | i18n}}</label>\n                    <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"externalId\">{{'externalId' | i18n}}</label>\n                    <input id=\"externalId\" class=\"form-control\" type=\"text\" name=\"ExternalId\" [(ngModel)]=\"externalId\">\n                    <small class=\"form-text text-muted\">{{'externalIdDesc' | i18n}}</small>\n                </div>\n                <h3 class=\"mt-4 d-flex\">\n                    <div class=\"mb-2\">\n                        {{'accessControl' | i18n}}\n                    </div>\n                    <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\">\n                        <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n                            {{'selectAll' | i18n}}\n                        </button>\n                        <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n                            {{'unselectAll' | i18n}}\n                        </button>\n                    </div>\n                </h3>\n                <div class=\"form-group\" [ngClass]=\"{'mb-0': access !== 'selected'}\">\n                    <div class=\"form-check\">\n                        <input class=\"form-check-input\" type=\"radio\" name=\"access\" id=\"accessAll\" value=\"all\"\n                            [(ngModel)]=\"access\">\n                        <label class=\"form-check-label\" for=\"accessAll\">\n                            {{'groupAccessAllItems' | i18n}}\n                        </label>\n                    </div>\n                    <div class=\"form-check\">\n                        <input class=\"form-check-input\" type=\"radio\" name=\"access\" id=\"accessSelected\" value=\"selected\"\n                            [(ngModel)]=\"access\">\n                        <label class=\"form-check-label\" for=\"accessSelected\">\n                            {{'groupAccessSelectedCollections' | i18n}}\n                        </label>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"access === 'selected'\">\n                    <div *ngIf=\"!collections || !collections.length\">\n                        {{'noCollectionsInList' | i18n}}\n                    </div>\n                    <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n                        <thead>\n                            <tr>\n                                <th>&nbsp;</th>\n                                <th>{{'name' | i18n}}</th>\n                                <th width=\"100\" class=\"text-center\">{{'readOnly' | i18n}}</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let c of collections; let i = index\">\n                                <td class=\"table-list-checkbox\" (click)=\"check(c)\">\n                                    <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\"\n                                        appStopProp>\n                                </td>\n                                <td (click)=\"check(c)\">\n                                    {{c.name}}\n                                </td>\n                                <td class=\"text-center\">\n                                    <input type=\"checkbox\" [(ngModel)]=\"c.readOnly\" name=\"Collection[{{i}}].ReadOnly\"\n                                        [disabled]=\"!c.checked\">\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </ng-container>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                    <span>{{'save' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\n                <div class=\"ml-auto\">\n                    <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\"\n                        title=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\"\n                        [appApiAction]=\"deletePromise\">\n                        <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\"></i>\n                        <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\"\n                            title=\"{{'loading' | i18n}}\"></i>\n                    </button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n","<div class=\"modal fade\">\n    <div class=\"modal-dialog\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\">{{'rotateApiKey' | i18n}}</h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" attr.aria-label=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <p>{{'apiKeyRotateDesc' | i18n}}</p>\n                <ng-container *ngIf=\"!clientSecret\">\n                    <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\n                    <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\n                        [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim>\n                </ng-container>\n                <app-callout type=\"warning\" *ngIf=\"clientSecret\">{{'apiKeyWarning' | i18n}}</app-callout>\n                <app-callout type=\"info\" title=\"{{'oauth2ClientCredentials' | i18n}}\" icon=\"fa-key\"\n                    *ngIf=\"clientSecret\">\n                    <p class=\"mb-1\">\n                        <strong>client_id:</strong><br>\n                        <code>{{clientId}}</code>\n                    </p>\n                    <p class=\"mb-1\">\n                        <strong>client_secret:</strong><br>\n                        <code>{{clientSecret}}</code>\n                    </p>\n                    <p class=\"mb-1\">\n                        <strong>scope:</strong><br>\n                        <code>{{scope}}</code>\n                    </p>\n                    <p class=\"mb-0\">\n                        <strong>grant_type:</strong><br>\n                        <code>client_credentials</code>\n                    </p>\n                </app-callout>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"\n                    *ngIf=\"!clientSecret\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                    <span>{{'rotateApiKey' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","<div class=\"modal fade\">\n    <div class=\"modal-dialog\" [ngClass]=\"{'modal-lg': !editMode}\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\">\n                    {{title}}\n                    <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small>\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" attr.aria-label=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\" *ngIf=\"loading\">\n                <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"></i>\n            </div>\n            <div class=\"modal-body\" *ngIf=\"!loading\">\n                <ng-container *ngIf=\"!editMode\">\n                    <p>{{'inviteUserDesc' | i18n}}</p>\n                    <div class=\"form-group mb-4\">\n                        <label for=\"emails\">{{'email' | i18n}}</label>\n                        <input id=\"emails\" class=\"form-control\" type=\"text\" name=\"Emails\" [(ngModel)]=\"emails\" required>\n                        <small class=\"text-muted\">{{'inviteMultipleEmailDesc' | i18n : '20'}}</small>\n                    </div>\n                </ng-container>\n                <h3>{{'userType' | i18n}}</h3>\n                <div class=\"form-check mt-2 form-check-block\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeUser\"\n                        [value]=\"organizationUserType.User\" [(ngModel)]=\"type\">\n                    <label class=\"form-check-label\" for=\"userTypeUser\">\n                        {{'user' | i18n}}\n                        <small>{{'userDesc' | i18n}}</small>\n                    </label>\n                </div>\n                <div class=\"form-check mt-2 form-check-block\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeManager\"\n                        [value]=\"organizationUserType.Manager\" [(ngModel)]=\"type\">\n                    <label class=\"form-check-label\" for=\"userTypeManager\">\n                        {{'manager' | i18n}}\n                        <small>{{'managerDesc' | i18n}}</small>\n                    </label>\n                </div>\n                <div class=\"form-check mt-2 form-check-block\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeAdmin\"\n                        [value]=\"organizationUserType.Admin\" [(ngModel)]=\"type\">\n                    <label class=\"form-check-label\" for=\"userTypeAdmin\">\n                        {{'admin' | i18n}}\n                        <small>{{'adminDesc' | i18n}}</small>\n                    </label>\n                </div>\n                <div class=\"form-check mt-2 form-check-block\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeOwner\"\n                        [value]=\"organizationUserType.Owner\" [(ngModel)]=\"type\">\n                    <label class=\"form-check-label\" for=\"userTypeOwner\">\n                        {{'owner' | i18n}}\n                        <small>{{'ownerDesc' | i18n}}</small>\n                    </label>\n                </div>\n                <h3 class=\"mt-4 d-flex\">\n                    <div class=\"mb-2\">\n                        {{'accessControl' | i18n}}\n                    </div>\n                    <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\">\n                        <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n                            {{'selectAll' | i18n}}\n                        </button>\n                        <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n                            {{'unselectAll' | i18n}}\n                        </button>\n                    </div>\n                </h3>\n                <div class=\"form-group\" [ngClass]=\"{'mb-0': access !== 'selected'}\">\n                    <div class=\"form-check\">\n                        <input class=\"form-check-input\" type=\"radio\" name=\"access\" id=\"accessAll\" value=\"all\"\n                            [(ngModel)]=\"access\">\n                        <label class=\"form-check-label\" for=\"accessAll\">\n                            {{'userAccessAllItems' | i18n}}\n                        </label>\n                    </div>\n                    <div class=\"form-check\">\n                        <input class=\"form-check-input\" type=\"radio\" name=\"access\" id=\"accessSelected\" value=\"selected\"\n                            [(ngModel)]=\"access\">\n                        <label class=\"form-check-label\" for=\"accessSelected\">\n                            {{'userAccessSelectedCollections' | i18n}}\n                        </label>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"access === 'selected'\">\n                    <div *ngIf=\"!collections || !collections.length\">\n                        {{'noCollectionsInList' | i18n}}\n                    </div>\n                    <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n                        <thead>\n                            <tr>\n                                <th>&nbsp;</th>\n                                <th>{{'name' | i18n}}</th>\n                                <th width=\"100\" class=\"text-center\">{{'readOnly' | i18n}}</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let c of collections; let i = index\">\n                                <td class=\"table-list-checkbox\" (click)=\"check(c)\">\n                                    <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\"\n                                        appStopProp>\n                                </td>\n                                <td (click)=\"check(c)\">\n                                    {{c.name}}\n                                </td>\n                                <td class=\"text-center\">\n                                    <input type=\"checkbox\" [(ngModel)]=\"c.readOnly\" name=\"Collection[{{i}}].ReadOnly\"\n                                        [disabled]=\"!c.checked\">\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </ng-container>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                    <span>{{'save' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\n                <div class=\"ml-auto\">\n                    <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\"\n                        title=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\"\n                        [appApiAction]=\"deletePromise\">\n                        <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\"></i>\n                        <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\"\n                            title=\"{{'loading' | i18n}}\"></i>\n                    </button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n","<div class=\"modal fade\">\n    <div class=\"modal-dialog\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\">\n                    {{'confirmUser' | i18n}}\n                    <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small>\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" attr.aria-label=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <p>\n                    {{'fingerprintEnsureIntegrityVerify' | i18n}}\n                    <a href=\"https://help.bitwarden.com/article/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n                        {{'learnMore' | i18n}}</a>\n                </p>\n                <p><code>{{fingerprint}}</code></p>\n                <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"dontAskAgain\" name=\"DontAskAgain\"\n                        [(ngModel)]=\"dontAskAgain\">\n                    <label class=\"form-check-label\" for=\"dontAskAgain\">\n                        {{'dontAskFingerprintAgain' | i18n}}\n                    </label>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                    <span>{{'confirm' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","<div class=\"modal fade\">\n    <div class=\"modal-dialog\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\">\n                    {{'groupAccess' | i18n}}\n                    <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small>\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" attr.aria-label=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\" *ngIf=\"loading\">\n                <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"></i>\n            </div>\n            <div class=\"modal-body\" *ngIf=\"!loading\">\n                <p>{{'groupAccessUserDesc' | i18n}}</p>\n                <div *ngIf=\"!groups || !groups.length\">\n                    {{'noGroupsInList' | i18n}}\n                </div>\n                <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\">\n                    <tbody>\n                        <tr *ngFor=\"let g of groups; let i = index\">\n                            <td class=\"table-list-checkbox\" (click)=\"check(g)\">\n                                <input type=\"checkbox\" [(ngModel)]=\"g.checked\" name=\"Groups[{{i}}].Checked\" appStopProp>\n                            </td>\n                            <td (click)=\"check(g)\">\n                                {{g.name}}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                    <span>{{'save' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","<div class=\"modal fade\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\">{{'passwordHistory' | i18n}}</h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" attr.aria-label=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <ul class=\"list-group list-group-flush\" *ngIf=\"history.length\">\n                <li class=\"list-group-item d-flex\" *ngFor=\"let h of history\">\n                    <div class=\"password-row\">\n                        <div class=\"text-monospace password-wrapper\" [innerHTML]=\"h.password | colorPassword\"\n                            appSelectCopy></div>\n                        <small class=\"text-muted\">{{h.date | date:'medium'}}</small>\n                    </div>\n                    <div class=\"ml-auto\">\n                        <button class=\"btn btn-link\" title=\"{{'copyPassword' | i18n}}\" (click)=\"copy(h.password)\">\n                            <i class=\"fa fa-lg fa-clipboard\"></i>\n                        </button>\n                    </div>\n                </li>\n            </ul>\n            <div class=\"modal-body\" *ngIf=\"!history.length\">\n                {{'noPasswordsInList' | i18n}}\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\" title=\"{{'close' | i18n}}\">\n                    {{'close' | i18n}}\n                </button>\n                <div class=\"ml-auto\">\n                    <button type=\"button\" (click)=\"clear()\" class=\"btn btn-outline-danger\" title=\"{{'clear' | i18n}}\">\n                        <i class=\"fa fa-trash-o fa-lg fa-fw\"></i>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","<div class=\"modal fade\">\n    <div class=\"modal-dialog\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\">{{'purgeVault' | i18n}}</h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" attr.aria-label=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <p>{{(organizationId ? 'purgeOrgVaultDesc' : 'purgeVaultDesc') | i18n}}</p>\n                <app-callout type=\"warning\">{{'purgeVaultWarning' | i18n}}</app-callout>\n                <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\n                <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\n                    [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                    <span>{{'purgeVault' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","<div class=\"modal fade\">\n    <div class=\"modal-dialog\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\">\n                    {{'share' | i18n}}\n                    <small *ngIf=\"cipher\">{{cipher.name}}</small>\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" attr.aria-label=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\" *ngIf=\"!organizations || !organizations.length\">\n                {{'noOrganizationsList' | i18n}}\n            </div>\n            <div class=\"modal-body\" *ngIf=\"organizations && organizations.length\">\n                <p>{{'shareDesc' | i18n}}</p>\n                <div class=\"form-group\">\n                    <label for=\"organization\">{{'organization' | i18n}}</label>\n                    <select id=\"organization\" name=\"OrganizationId\" [(ngModel)]=\"organizationId\" class=\"form-control\"\n                        (change)=\"filterCollections()\">\n                        <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{o.name}}</option>\n                    </select>\n                </div>\n                <div class=\"d-flex\">\n                    <h3>{{'collections' | i18n}}</h3>\n                    <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n                        <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n                            {{'selectAll' | i18n}}\n                        </button>\n                        <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n                            {{'unselectAll' | i18n}}\n                        </button>\n                    </div>\n                </div>\n                <div *ngIf=\"!collections || !collections.length\">\n                    {{'noCollectionsInList' | i18n}}\n                </div>\n                <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n                    <tbody>\n                        <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n                            <td class=\"table-list-checkbox\">\n                                <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\"\n                                    appStopProp>\n                            </td>\n                            <td>\n                                {{c.name}}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit manual\" [disabled]=\"form.loading || !canSave\"\n                    [ngClass]=\"{loading:form.loading}\" *ngIf=\"organizations && organizations.length\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                    <span>{{'save' | i18n}}</span>\n                </button>\n                <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-primary\"\n                    *ngIf=\"!organizations || !organizations.length\">\n                    {{'newOrganization' | i18n}}\n                </a>\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\"\n                    title=\"{{'cancel' | i18n}}\">{{'cancel' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","<div class=\"modal fade\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\">\n                    {{'twoStepLogin' | i18n}}\n                    <small>{{'authenticatorAppTitle' | i18n}}</small>\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" attr.aria-label=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\"\n                *ngIf=\"!authed\">\n            </app-two-factor-verify>\n            <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\">\n                <div class=\"modal-body\">\n                    <ng-container *ngIf=\"!enabled\">\n                        <img src=\"images/0.png\" class=\"float-right\" alt=\"\">\n                        <p>{{'twoStepAuthenticatorDesc' | i18n}}</p>\n                        <p>\n                            <strong>1. {{'twoStepAuthenticatorDownloadApp' | i18n}}</strong>\n                        </p>\n                    </ng-container>\n                    <ng-container *ngIf=\"enabled\">\n                        <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\">\n                            <p>{{'twoStepLoginProviderEnabled' | i18n}}</p>\n                            {{'twoStepAuthenticatorReaddDesc' | i18n}}\n                        </app-callout>\n                        <img src=\"images/0.png\" class=\"float-right\" alt=\"\">\n                        <p>{{'twoStepAuthenticatorNeedApp' | i18n}}</p>\n                    </ng-container>\n                    <ul class=\"fa-ul\">\n                        <li>\n                            <i class=\"fa-li fa fa-apple\"></i>{{'iosDevices' | i18n}}:\n                            <a href=\"https://itunes.apple.com/us/app/authy/id494168017?mt=8\" target=\"_blank\"\n                                rel=\"noopener\">Authy</a>\n                        </li>\n                        <li>\n                            <i class=\"fa-li fa fa-android\"></i>{{'androidDevices' | i18n}}:\n                            <a href=\"https://play.google.com/store/apps/details?id=com.authy.authy\" target=\"_blank\"\n                                rel=\"noopener\">Authy</a>\n                        </li>\n                        <li>\n                            <i class=\"fa-li fa fa-windows\"></i>{{'windowsDevices' | i18n}}:\n                            <a href=\"https://www.microsoft.com/p/authenticator/9wzdncrfj3rj\" target=\"_blank\"\n                                rel=\"noopener\">Microsoft Authenticator</a>\n                        </li>\n                    </ul>\n                    <p>{{'twoStepAuthenticatorAppsRecommended' | i18n}}</p>\n                    <p *ngIf=\"!enabled\">\n                        <strong>2. {{'twoStepAuthenticatorScanCode' | i18n}}</strong>\n                    </p>\n                    <hr *ngIf=\"enabled\">\n                    <p class=\"text-center\" [ngClass]=\"{'mb-0': enabled}\">\n                        <canvas id=\"qr\"></canvas><br>\n                        <code title=\"{{'key' | i18n}}\">{{key}}</code>\n                    </p>\n                    <ng-container *ngIf=\"!enabled\">\n                        <label for=\"token\">3. {{'twoStepAuthenticatorEnterCode' | i18n}}</label>\n                        <input id=\"token\" type=\"text\" name=\"Token\" class=\"form-control\" [(ngModel)]=\"token\" required\n                            appInputVerbatim>\n                    </ng-container>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                        <span *ngIf=\"!enabled\">{{'enable' | i18n}}</span>\n                        <span *ngIf=\"enabled\">{{'disable' | i18n}}</span>\n                    </button>\n                    <button type=\"button\" class=\"btn btn-outline-secondary\"\n                        data-dismiss=\"modal\">{{'close' | i18n}}</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","<div class=\"modal fade\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\">\n                    {{'twoStepLogin' | i18n}}\n                    <small>Duo</small>\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" attr.aria-label=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\"\n                *ngIf=\"!authed\">\n            </app-two-factor-verify>\n            <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\"\n                autocomplete=\"off\">\n                <div class=\"modal-body\">\n                    <ng-container *ngIf=\"enabled\">\n                        <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\">\n                            {{'twoStepLoginProviderEnabled' | i18n}}\n                        </app-callout>\n                        <img src=\"images/2.png\" class=\"float-right ml-3\" alt=\"\">\n                        <strong>{{'twoFactorDuoIntegrationKey' | i18n}}:</strong> {{ikey}}\n                        <br>\n                        <strong>{{'twoFactorDuoSecretKey' | i18n}}:</strong> {{skey}}\n                        <br>\n                        <strong>{{'twoFactorDuoApiHostname' | i18n}}:</strong> {{host}}\n                    </ng-container>\n                    <ng-container *ngIf=\"!enabled\">\n                        <img src=\"images/2.png\" class=\"float-right ml-3\" alt=\"\">\n                        <p>{{'twoFactorDuoDesc' | i18n}}</p>\n                        <div class=\"form-group\">\n                            <label for=\"ikey\">{{'twoFactorDuoIntegrationKey' | i18n}}</label>\n                            <input id=\"ikey\" type=\"text\" name=\"IntegrationKey\" class=\"form-control\" [(ngModel)]=\"ikey\"\n                                required appInputVerbatim>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"skey\">{{'twoFactorDuoSecretKey' | i18n}}</label>\n                            <input id=\"skey\" type=\"password\" name=\"SecretKey\" class=\"form-control\" [(ngModel)]=\"skey\"\n                                required appInputVerbatim autocomplete=\"new-password\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"host\">{{'twoFactorDuoApiHostname' | i18n}}</label>\n                            <input id=\"host\" type=\"text\" name=\"Host\" class=\"form-control\" [(ngModel)]=\"host\"\n                                placeholder=\"{{'ex' | i18n}} api-xxxxxxxx.duosecurity.com\" required appInputVerbatim>\n                        </div>\n                    </ng-container>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                        <span *ngIf=\"!enabled\">{{'enable' | i18n}}</span>\n                        <span *ngIf=\"enabled\">{{'disable' | i18n}}</span>\n                    </button>\n                    <button type=\"button\" class=\"btn btn-outline-secondary\"\n                        data-dismiss=\"modal\">{{'close' | i18n}}</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","<div class=\"modal fade\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\">\n                    {{'twoStepLogin' | i18n}}\n                    <small>{{'emailTitle' | i18n}}</small>\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" attr.aria-label=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\"\n                *ngIf=\"!authed\">\n            </app-two-factor-verify>\n            <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\">\n                <div class=\"modal-body\">\n                    <ng-container *ngIf=\"enabled\">\n                        <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\">\n                            {{'twoStepLoginProviderEnabled' | i18n}}\n                        </app-callout>\n                        <strong>{{'email' | i18n}}:</strong> {{email}}\n                    </ng-container>\n                    <ng-container *ngIf=\"!enabled\">\n                        <p class=\"d-flex\">\n                            <span class=\"mr-3\">{{'twoFactorEmailDesc' | i18n}}</span>\n                            <img src=\"images/1.png\" class=\"float-right ml-auto\" alt=\"\">\n                        </p>\n                        <div class=\"form-group\">\n                            <label for=\"email\">1. {{'twoFactorEmailEnterEmail' | i18n}}</label>\n                            <input id=\"email\" type=\"text\" name=\"Email\" class=\"form-control\" [(ngModel)]=\"email\" required\n                                inputmode=\"email\" appInputVerbatim=\"false\">\n                        </div>\n                        <div class=\"mb-3 d-flex\">\n                            <button #sendBtn type=\"button\"\n                                class=\"btn btn-outline-primary btn-sm btn-submit align-self-start\" (click)=\"sendEmail()\"\n                                [appApiAction]=\"emailPromise\" [disabled]=\"sendBtn.loading\">\n                                <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                                <span>{{'sendEmail' | i18n}}</span>\n                            </button>\n                            <span class=\"text-success ml-3\" *ngIf=\"sentEmail\">\n                                {{'verificationCodeEmailSent' | i18n : sentEmail}}\n                            </span>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"token\">2. {{'twoFactorEmailEnterCode' | i18n}}</label>\n                            <input id=\"token\" type=\"text\" name=\"Token\" class=\"form-control\" [(ngModel)]=\"token\" required\n                                appInputVerbatim>\n                        </div>\n                    </ng-container>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                        <span *ngIf=\"!enabled\">{{'enable' | i18n}}</span>\n                        <span *ngIf=\"enabled\">{{'disable' | i18n}}</span>\n                    </button>\n                    <button type=\"button\" class=\"btn btn-outline-secondary\"\n                        data-dismiss=\"modal\">{{'close' | i18n}}</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","<div class=\"modal fade\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\">{{'twoStepOptions' | i18n}}</h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" attr.aria-label=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"list-group list-group-flush\">\n                <a href=\"#\" appStopClick *ngFor=\"let p of providers\" (click)=\"choose(p)\"\n                    class=\"list-group-item list-group-item-action\">\n                    <img [src]=\"'images/two-factor/' + p.type + '.png'\" alt=\"\" class=\"pull-right\">\n                    <h3>{{p.name}}</h3>\n                    {{p.description}}\n                </a>\n                <a href=\"#\" appStopClick class=\"list-group-item list-group-item-action\" (click)=\"recover()\">\n                    <h3>{{'recoveryCodeTitle' | i18n}}</h3>\n                    {{'recoveryCodeDesc' | i18n}}\n                </a>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\n            </div>\n        </div>\n    </div>\n</div>\n","<div class=\"modal fade\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\">\n                    {{'twoStepLogin' | i18n}}\n                    <small>{{'recoveryCodeTitle' | i18n}}</small>\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" attr.aria-label=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\"\n                *ngIf=\"!authed\">\n            </app-two-factor-verify>\n            <ng-container *ngIf=\"authed\">\n                <div class=\"modal-body text-center\">\n                    <ng-container *ngIf=\"code\">\n                        <p>{{'twoFactorRecoveryYourCode' | i18n}}:</p>\n                        <code class=\"text-lg\">{{code}}</code>\n                    </ng-container>\n                    <ng-container *ngIf=\"!code\">\n                        {{'twoFactorRecoveryNoCode' | i18n}}\n                    </ng-container>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"print()\"\n                        *ngIf=\"code\">{{'printCode' | i18n}}</button>\n                    <button type=\"button\" class=\"btn btn-outline-secondary\"\n                        data-dismiss=\"modal\">{{'close' | i18n}}</button>\n                </div>\n            </ng-container>\n        </div>\n    </div>\n</div>\n","<div class=\"modal fade\">\n    <div class=\"modal-dialog modal-lg\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\">\n                    {{'twoStepLogin' | i18n}}\n                    <small>FIDO U2F</small>\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" attr.aria-label=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\"\n                *ngIf=\"!authed\">\n            </app-two-factor-verify>\n            <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\">\n                <div class=\"modal-body\">\n                    <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\" *ngIf=\"enabled\">\n                        {{'twoStepLoginProviderEnabled' | i18n}}\n                    </app-callout>\n                    <app-callout type=\"warning\">\n                        <p>{{'twoFactorU2fWarning' | i18n}}</p>\n                        <ul class=\"mb-0\">\n                            <li>{{'twoFactorU2fSupportWeb' | i18n}}</li>\n                        </ul>\n                    </app-callout>\n                    <img src=\"images/4.png\" class=\"float-right ml-5\" alt=\"\">\n                    <ul class=\"fa-ul\">\n                        <li *ngFor=\"let k of keys; let i = index\" #removeKeyBtn [appApiAction]=\"k.removePromise\">\n                            <i class=\"fa-li fa fa-key\"></i>\n                            <strong *ngIf=\"!k.configured || !k.name\">{{'u2fkeyX' | i18n : i + 1}}</strong>\n                            <strong *ngIf=\"k.configured && k.name\">{{k.name}}</strong>\n                            <i class=\"fa fa-fw\"\n                                [ngClass]=\"{'fa-check text-success': !k.compromised, 'fa-exclamation-triangle text-warning': k.compromised}\"\n                                *ngIf=\"k.configured && !removeKeyBtn.loading\"\n                                title=\"{{(k.compromised ? 'keyCompromised' : 'enabled') | i18n}}\"></i>\n                            <ng-container *ngIf=\"keysConfiguredCount > 1 && k.configured\">\n                                <i class=\"fa fa-spin fa-spinner text-muted fa-fw\" title=\"{{'loading' | i18n}}\"\n                                    *ngIf=\"removeKeyBtn.loading\"></i>\n                                -\n                                <a href=\"#\" appStopClick (click)=\"remove(k)\">{{'remove' | i18n}}</a>\n                            </ng-container>\n                        </li>\n                    </ul>\n                    <hr>\n                    <p>{{'twoFactorU2fAdd' | i18n}}:</p>\n                    <ol>\n                        <li>{{'twoFactorU2fGiveName' | i18n}}</li>\n                        <li>{{'twoFactorU2fPlugInReadKey' | i18n}}</li>\n                        <li>{{'twoFactorU2fTouchButton' | i18n}}</li>\n                        <li>{{'twoFactorU2fSaveForm' | i18n}}</li>\n                    </ol>\n                    <div class=\"row\">\n                        <div class=\"form-group col-6\">\n                            <label for=\"name\">{{'name' | i18n}}</label>\n                            <input id=\"name\" type=\"text\" name=\"Name\" class=\"form-control\" [(ngModel)]=\"name\"\n                                [disabled]=\"!keyIdAvailable\">\n                        </div>\n                    </div>\n                    <button type=\"button\" (click)=\"readKey()\" class=\"btn btn-outline-secondary mr-2\"\n                        [disabled]=\"readKeyBtn.loading || u2fListening || !keyIdAvailable\" #readKeyBtn\n                        [appApiAction]=\"challengePromise\">\n                        {{'readKey' | i18n}}\n                    </button>\n                    <ng-container *ngIf=\"readKeyBtn.loading\">\n                        <i class=\"fa fa-spinner fa-spin text-muted\"></i>\n                    </ng-container>\n                    <ng-container *ngIf=\"!readKeyBtn.loading\">\n                        <ng-container *ngIf=\"u2fListening\">\n                            <i class=\"fa fa-spinner fa-spin text-muted\"></i>\n                            {{'twoFactorU2fWaiting' | i18n}}...\n                        </ng-container>\n                        <ng-container *ngIf=\"u2fResponse\">\n                            <i class=\"fa fa-check-circle text-success\"></i>\n                            {{'twoFactorU2fClickSave' | i18n}}\n                        </ng-container>\n                        <ng-container *ngIf=\"u2fError\">\n                            <i class=\"fa fa-warning text-danger\"></i>\n                            {{'twoFactorU2fProblemReadingTryAgain' | i18n}}\n                        </ng-container>\n                    </ng-container>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"form.loading || !u2fResponse\">\n                        <i class=\"fa fa-spinner fa-spin\" *ngIf=\"form.loading\" title=\"{{'loading' | i18n}}\"></i>\n                        <span *ngIf=\"!form.loading\">{{'save' | i18n}}</span>\n                    </button>\n                    <button #disableBtn type=\"button\" class=\"btn btn-outline-secondary btn-submit\"\n                        [appApiAction]=\"disablePromise\" [disabled]=\"disableBtn.loading\" (click)=\"disable()\"\n                        *ngIf=\"enabled\">\n                        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                        <span>{{'disableAllKeys' | i18n}}</span>\n                    </button>\n                    <button type=\"button\" class=\"btn btn-outline-secondary\"\n                        data-dismiss=\"modal\">{{'close' | i18n}}</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","<div class=\"modal fade\">\n    <div class=\"modal-dialog modal-lg\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\">\n                    {{'twoStepLogin' | i18n}}\n                    <small>YubiKey</small>\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" attr.aria-label=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\"\n                *ngIf=\"!authed\">\n            </app-two-factor-verify>\n            <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\"\n                autocomplete=\"off\">\n                <div class=\"modal-body\">\n                    <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\" *ngIf=\"enabled\">\n                        {{'twoStepLoginProviderEnabled' | i18n}}\n                    </app-callout>\n                    <app-callout type=\"warning\">\n                        <p>{{'twoFactorYubikeyWarning' | i18n}}</p>\n                        <ul class=\"mb-0\">\n                            <li>{{'twoFactorYubikeySupportUsb' | i18n}}</li>\n                            <li>{{'twoFactorYubikeySupportMobile' | i18n}}</li>\n                        </ul>\n                    </app-callout>\n                    <img src=\"images/3.png\" class=\"float-right\" alt=\"\">\n                    <p>{{'twoFactorYubikeyAdd' | i18n}}:</p>\n                    <ol>\n                        <li>{{'twoFactorYubikeyPlugIn' | i18n}}</li>\n                        <li>{{'twoFactorYubikeySelectKey' | i18n}}</li>\n                        <li>{{'twoFactorYubikeyTouchButton' | i18n}}</li>\n                        <li>{{'twoFactorYubikeySaveForm' | i18n}}</li>\n                    </ol>\n                    <hr>\n                    <div class=\"row\">\n                        <div class=\"form-group col-6\" *ngFor=\"let k of keys; let i = index\">\n                            <label for=\"key{{i + 1}}\">{{'yubikeyX' | i18n : i + 1}}</label>\n                            <input id=\"key{{i + 1}}\" type=\"password\" name=\"Key{{i + 1}}\" class=\"form-control\"\n                                [(ngModel)]=\"k.key\" *ngIf=\"!k.existingKey\" appInputVerbatim autocomplete=\"new-password\">\n                            <div class=\"d-flex\" *ngIf=\"k.existingKey\">\n                                <span class=\"mr-2\">{{k.existingKey}}</span>\n                                <button type=\"button\" class=\"btn btn-link text-danger ml-auto\" (click)=\"remove(k)\"\n                                    title=\"{{'remove' | i18n}}\">\n                                    <i class=\"fa fa-minus-circle fa-lg\"></i>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    <strong class=\"d-block mb-2\">{{'nfcSupport' | i18n}}</strong>\n                    <div class=\"form-check\">\n                        <input type=\"checkbox\" class=\"form-check-input\" id=\"nfc\" name=\"Nfc\" [(ngModel)]=\"nfc\">\n                        <label class=\"form-check-label\" for=\"nfc\">{{'twoFactorYubikeySupportsNfc' | i18n}}</label>\n                    </div>\n                    <small class=\"form-text text-muted\">{{'twoFactorYubikeySupportsNfcDesc' | i18n}}</small>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                        <span>{{'save' | i18n}}</span>\n                    </button>\n                    <button #disableBtn type=\"button\" class=\"btn btn-outline-secondary btn-submit\"\n                        [appApiAction]=\"disablePromise\" [disabled]=\"disableBtn.loading\" (click)=\"disable()\"\n                        *ngIf=\"enabled\">\n                        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                        <span>{{'disableAllKeys' | i18n}}</span>\n                    </button>\n                    <button type=\"button\" class=\"btn btn-outline-secondary\"\n                        data-dismiss=\"modal\">{{'close' | i18n}}</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","<div class=\"modal fade\">\n    <div class=\"modal-dialog\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\">{{'updateEncryptionKey' | i18n}}</h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" attr.aria-label=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <p>{{'updateEncryptionKeyShortDesc' | i18n}} {{'updateEncryptionKeyDesc' | i18n}}\n                    <a href=\"https://help.bitwarden.com/article/update-encryption-key/\" target=\"_blank\"\n                        rel=\"noopener\">{{'learnMore' | i18n}}</a>\n                </p>\n                <app-callout type=\"warning\">{{'updateEncryptionKeyWarning' | i18n}}</app-callout>\n                <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\n                <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\n                    [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"></i>\n                    <span>{{'updateEncryptionKey' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","<toaster-container [toasterconfig]=\"toasterConfig\"></toaster-container>\n<router-outlet></router-outlet>\n","import {\n    APP_INITIALIZER,\n    LOCALE_ID,\n    NgModule,\n} from '@angular/core';\n\nimport { ToasterModule } from 'angular2-toaster';\n\nimport { BroadcasterMessagingService } from '../../services/broadcasterMessaging.service';\nimport { HtmlStorageService } from '../../services/htmlStorage.service';\nimport { I18nService } from '../../services/i18n.service';\nimport { MemoryStorageService } from '../../services/memoryStorage.service';\nimport { WebPlatformUtilsService } from '../../services/webPlatformUtils.service';\n\nimport { EventService } from './event.service';\nimport { OrganizationGuardService } from './organization-guard.service';\nimport { OrganizationTypeGuardService } from './organization-type-guard.service';\nimport { RouterService } from './router.service';\nimport { UnauthGuardService } from './unauth-guard.service';\n\nimport { AuthGuardService } from 'jslib/angular/services/auth-guard.service';\nimport { BroadcasterService } from 'jslib/angular/services/broadcaster.service';\nimport { ValidationService } from 'jslib/angular/services/validation.service';\n\nimport { Analytics } from 'jslib/misc/analytics';\n\nimport { ApiService } from 'jslib/services/api.service';\nimport { AppIdService } from 'jslib/services/appId.service';\nimport { AuditService } from 'jslib/services/audit.service';\nimport { AuthService } from 'jslib/services/auth.service';\nimport { CipherService } from 'jslib/services/cipher.service';\nimport { CollectionService } from 'jslib/services/collection.service';\nimport { ConstantsService } from 'jslib/services/constants.service';\nimport { ContainerService } from 'jslib/services/container.service';\nimport { CryptoService } from 'jslib/services/crypto.service';\nimport { EnvironmentService } from 'jslib/services/environment.service';\nimport { EventService as EventLoggingService } from 'jslib/services/event.service';\nimport { ExportService } from 'jslib/services/export.service';\nimport { FolderService } from 'jslib/services/folder.service';\nimport { ImportService } from 'jslib/services/import.service';\nimport { LockService } from 'jslib/services/lock.service';\nimport { NotificationsService } from 'jslib/services/notifications.service';\nimport { PasswordGenerationService } from 'jslib/services/passwordGeneration.service';\nimport { SearchService } from 'jslib/services/search.service';\nimport { SettingsService } from 'jslib/services/settings.service';\nimport { StateService } from 'jslib/services/state.service';\nimport { SyncService } from 'jslib/services/sync.service';\nimport { TokenService } from 'jslib/services/token.service';\nimport { TotpService } from 'jslib/services/totp.service';\nimport { UserService } from 'jslib/services/user.service';\nimport { WebCryptoFunctionService } from 'jslib/services/webCryptoFunction.service';\n\nimport { ApiService as ApiServiceAbstraction } from 'jslib/abstractions/api.service';\nimport { AppIdService as AppIdServiceAbstraction } from 'jslib/abstractions/appId.service';\nimport { AuditService as AuditServiceAbstraction } from 'jslib/abstractions/audit.service';\nimport { AuthService as AuthServiceAbstraction } from 'jslib/abstractions/auth.service';\nimport { CipherService as CipherServiceAbstraction } from 'jslib/abstractions/cipher.service';\nimport { CollectionService as CollectionServiceAbstraction } from 'jslib/abstractions/collection.service';\nimport { CryptoService as CryptoServiceAbstraction } from 'jslib/abstractions/crypto.service';\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from 'jslib/abstractions/cryptoFunction.service';\nimport { EnvironmentService as EnvironmentServiceAbstraction } from 'jslib/abstractions/environment.service';\nimport { EventService as EventLoggingServiceAbstraction } from 'jslib/abstractions/event.service';\nimport { ExportService as ExportServiceAbstraction } from 'jslib/abstractions/export.service';\nimport { FolderService as FolderServiceAbstraction } from 'jslib/abstractions/folder.service';\nimport { I18nService as I18nServiceAbstraction } from 'jslib/abstractions/i18n.service';\nimport { ImportService as ImportServiceAbstraction } from 'jslib/abstractions/import.service';\nimport { LockService as LockServiceAbstraction } from 'jslib/abstractions/lock.service';\nimport { LogService as LogServiceAbstraction } from 'jslib/abstractions/log.service';\nimport { MessagingService as MessagingServiceAbstraction } from 'jslib/abstractions/messaging.service';\nimport { NotificationsService as NotificationsServiceAbstraction } from 'jslib/abstractions/notifications.service';\nimport {\n    PasswordGenerationService as PasswordGenerationServiceAbstraction,\n} from 'jslib/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from 'jslib/abstractions/platformUtils.service';\nimport { SearchService as SearchServiceAbstraction } from 'jslib/abstractions/search.service';\nimport { SettingsService as SettingsServiceAbstraction } from 'jslib/abstractions/settings.service';\nimport { StateService as StateServiceAbstraction } from 'jslib/abstractions/state.service';\nimport { StorageService as StorageServiceAbstraction } from 'jslib/abstractions/storage.service';\nimport { SyncService as SyncServiceAbstraction } from 'jslib/abstractions/sync.service';\nimport { TokenService as TokenServiceAbstraction } from 'jslib/abstractions/token.service';\nimport { TotpService as TotpServiceAbstraction } from 'jslib/abstractions/totp.service';\nimport { UserService as UserServiceAbstraction } from 'jslib/abstractions/user.service';\n\nconst i18nService = new I18nService(window.navigator.language, 'locales');\nconst stateService = new StateService();\nconst broadcasterService = new BroadcasterService();\nconst messagingService = new BroadcasterMessagingService(broadcasterService);\nconst platformUtilsService = new WebPlatformUtilsService(i18nService, messagingService);\nconst storageService: StorageServiceAbstraction = new HtmlStorageService(platformUtilsService);\nconst secureStorageService: StorageServiceAbstraction = new MemoryStorageService();\nconst cryptoFunctionService: CryptoFunctionServiceAbstraction = new WebCryptoFunctionService(window,\n    platformUtilsService);\nconst cryptoService = new CryptoService(storageService,\n    platformUtilsService.isDev() ? storageService : secureStorageService, cryptoFunctionService);\nconst tokenService = new TokenService(storageService);\nconst appIdService = new AppIdService(storageService);\nconst apiService = new ApiService(tokenService, platformUtilsService,\n    async (expired: boolean) => messagingService.send('logout', { expired: expired }));\nconst userService = new UserService(tokenService, storageService);\nconst settingsService = new SettingsService(userService, storageService);\nexport let searchService: SearchService = null;\nconst cipherService = new CipherService(cryptoService, userService, settingsService,\n    apiService, storageService, i18nService, () => searchService);\nconst folderService = new FolderService(cryptoService, userService, apiService, storageService,\n    i18nService, cipherService);\nconst collectionService = new CollectionService(cryptoService, userService, storageService, i18nService);\nsearchService = new SearchService(cipherService, platformUtilsService);\nconst lockService = new LockService(cipherService, folderService, collectionService,\n    cryptoService, platformUtilsService, storageService, messagingService, searchService, userService, null);\nconst syncService = new SyncService(userService, apiService, settingsService,\n    folderService, cipherService, cryptoService, collectionService, storageService, messagingService,\n    async (expired: boolean) => messagingService.send('logout', { expired: expired }));\nconst passwordGenerationService = new PasswordGenerationService(cryptoService, storageService);\nconst totpService = new TotpService(storageService, cryptoFunctionService);\nconst containerService = new ContainerService(cryptoService);\nconst authService = new AuthService(cryptoService, apiService,\n    userService, tokenService, appIdService, i18nService, platformUtilsService, messagingService);\nconst exportService = new ExportService(folderService, cipherService, apiService);\nconst importService = new ImportService(cipherService, folderService, apiService, i18nService, collectionService);\nconst notificationsService = new NotificationsService(userService, syncService, appIdService,\n    apiService, lockService, async () => messagingService.send('logout', { expired: true }));\nconst environmentService = new EnvironmentService(apiService, storageService, notificationsService);\nconst auditService = new AuditService(cryptoFunctionService, apiService);\nconst eventLoggingService = new EventLoggingService(storageService, apiService, userService, cipherService);\n\nconst analytics = new Analytics(window, () => platformUtilsService.isDev() || platformUtilsService.isSelfHost() || true,\n    platformUtilsService, storageService, appIdService);\ncontainerService.attachToWindow(window);\n\nexport function initFactory(): Function {\n    return async () => {\n        await (storageService as HtmlStorageService).init();\n        const isDev = false;\n        environmentService.baseUrl = window.location.origin;\n        environmentService.notificationsUrl = window.location.origin + '/notifications';\n        apiService.setUrls({\n            base: isDev ? null : window.location.origin,\n            api: isDev ? 'http://localhost:4000' : null,\n            identity: isDev ? 'http://localhost:33656' : null,\n            events: isDev ? 'http://localhost:46273' : null,\n\n            // Uncomment these (and comment out the above) if you want to target production\n            // servers for local development.\n\n            // base: null,\n            // api: 'https://api.bitwarden.com',\n            // identity: 'https://identity.bitwarden.com',\n            // events: 'https://events.bitwarden.com',\n        });\n        setTimeout(() => notificationsService.init(environmentService), 3000);\n\n        lockService.init(true);\n        const locale = await storageService.get<string>(ConstantsService.localeKey);\n        await i18nService.init(locale);\n        eventLoggingService.init(true);\n        authService.init();\n        const htmlEl = window.document.documentElement;\n        htmlEl.classList.add('locale_' + i18nService.translationLocale);\n        let theme = await storageService.get<string>(ConstantsService.themeKey);\n        if (theme == null) {\n            theme = 'light';\n        }\n        htmlEl.classList.add('theme_' + theme);\n        stateService.save(ConstantsService.disableFaviconKey,\n            await storageService.get<boolean>(ConstantsService.disableFaviconKey));\n        stateService.save('enableGravatars', await storageService.get<boolean>('enableGravatars'));\n    };\n}\n\n@NgModule({\n    imports: [\n        ToasterModule,\n    ],\n    declarations: [],\n    providers: [\n        ValidationService,\n        AuthGuardService,\n        OrganizationGuardService,\n        OrganizationTypeGuardService,\n        UnauthGuardService,\n        RouterService,\n        EventService,\n        { provide: AuditServiceAbstraction, useValue: auditService },\n        { provide: AuthServiceAbstraction, useValue: authService },\n        { provide: CipherServiceAbstraction, useValue: cipherService },\n        { provide: FolderServiceAbstraction, useValue: folderService },\n        { provide: CollectionServiceAbstraction, useValue: collectionService },\n        { provide: EnvironmentServiceAbstraction, useValue: environmentService },\n        { provide: TotpServiceAbstraction, useValue: totpService },\n        { provide: TokenServiceAbstraction, useValue: tokenService },\n        { provide: I18nServiceAbstraction, useValue: i18nService },\n        { provide: CryptoServiceAbstraction, useValue: cryptoService },\n        { provide: PlatformUtilsServiceAbstraction, useValue: platformUtilsService },\n        { provide: PasswordGenerationServiceAbstraction, useValue: passwordGenerationService },\n        { provide: ApiServiceAbstraction, useValue: apiService },\n        { provide: SyncServiceAbstraction, useValue: syncService },\n        { provide: UserServiceAbstraction, useValue: userService },\n        { provide: MessagingServiceAbstraction, useValue: messagingService },\n        { provide: BroadcasterService, useValue: broadcasterService },\n        { provide: SettingsServiceAbstraction, useValue: settingsService },\n        { provide: LockServiceAbstraction, useValue: lockService },\n        { provide: StorageServiceAbstraction, useValue: storageService },\n        { provide: StateServiceAbstraction, useValue: stateService },\n        { provide: ExportServiceAbstraction, useValue: exportService },\n        { provide: SearchServiceAbstraction, useValue: searchService },\n        { provide: ImportServiceAbstraction, useValue: importService },\n        { provide: NotificationsServiceAbstraction, useValue: notificationsService },\n        { provide: CryptoFunctionServiceAbstraction, useValue: cryptoFunctionService },\n        { provide: EventLoggingServiceAbstraction, useValue: eventLoggingService },\n        {\n            provide: APP_INITIALIZER,\n            useFactory: initFactory,\n            deps: [],\n            multi: true,\n        },\n        {\n            provide: LOCALE_ID,\n            useFactory: () => i18nService.translationLocale,\n            deps: [],\n        },\n    ],\n})\nexport class ServicesModule {\n}\n","import { MessagingService } from 'jslib/abstractions/messaging.service';\n\nimport { BroadcasterService } from 'jslib/angular/services/broadcaster.service';\n\nexport class BroadcasterMessagingService implements MessagingService {\n    constructor(private broadcasterService: BroadcasterService) { }\n\n    send(subscriber: string, arg: any = {}) {\n        const message = Object.assign({}, { command: subscriber }, arg);\n        this.broadcasterService.send(message);\n    }\n}\n","import { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { StorageService } from 'jslib/abstractions/storage.service';\nimport { ConstantsService } from 'jslib/services';\n\nexport class HtmlStorageService implements StorageService {\n    private localStorageKeys = new Set(['appId', 'anonymousAppId', 'rememberedEmail', 'passwordGenerationOptions',\n        ConstantsService.disableFaviconKey, ConstantsService.lockOptionKey, 'rememberEmail', 'enableGravatars',\n        ConstantsService.localeKey, ConstantsService.lockOptionKey, ConstantsService.autoConfirmFingerprints]);\n    private localStorageStartsWithKeys = ['twoFactorToken_', ConstantsService.collapsedGroupingsKey + '_'];\n\n    constructor(private platformUtilsService: PlatformUtilsService) { }\n\n    async init() {\n        const lockOption = await this.get<number>(ConstantsService.lockOptionKey);\n        if (lockOption == null && !this.platformUtilsService.isDev()) {\n            await this.save(ConstantsService.lockOptionKey, 15);\n        }\n    }\n\n    get<T>(key: string): Promise<T> {\n        let json: string = null;\n        if (this.isLocalStorage(key)) {\n            json = window.localStorage.getItem(key);\n        } else {\n            json = window.sessionStorage.getItem(key);\n        }\n        if (json != null) {\n            const obj = JSON.parse(json);\n            return Promise.resolve(obj as T);\n        }\n        return Promise.resolve(null);\n    }\n\n    save(key: string, obj: any): Promise<any> {\n        if (obj == null) {\n            return this.remove(key);\n        }\n\n        const json = JSON.stringify(obj);\n        if (this.isLocalStorage(key)) {\n            window.localStorage.setItem(key, json);\n        } else {\n            window.sessionStorage.setItem(key, json);\n        }\n        return Promise.resolve();\n    }\n\n    remove(key: string): Promise<any> {\n        if (this.isLocalStorage(key)) {\n            window.localStorage.removeItem(key);\n        } else {\n            window.sessionStorage.removeItem(key);\n        }\n        return Promise.resolve();\n    }\n\n    private isLocalStorage(key: string): boolean {\n        if (this.localStorageKeys.has(key)) {\n            return true;\n        }\n        for (const swKey of this.localStorageStartsWithKeys) {\n            if (key.startsWith(swKey)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","export { ApiService } from './api.service';\nexport { AppIdService } from './appId.service';\nexport { AuditService } from './audit.service';\nexport { AuthService } from './auth.service';\nexport { CipherService } from './cipher.service';\nexport { CollectionService } from './collection.service';\nexport { ConstantsService } from './constants.service';\nexport { ContainerService } from './container.service';\nexport { CryptoService } from './crypto.service';\nexport { EnvironmentService } from './environment.service';\nexport { FolderService } from './folder.service';\nexport { I18nService } from './i18n.service';\nexport { LockService } from './lock.service';\nexport { PasswordGenerationService } from './passwordGeneration.service';\nexport { SettingsService } from './settings.service';\nexport { StateService } from './state.service';\nexport { SyncService } from './sync.service';\nexport { TokenService } from './token.service';\nexport { TotpService } from './totp.service';\nexport { UserService } from './user.service';\n","import { BaseResponse } from './baseResponse';\n\nexport class ApiKeyResponse extends BaseResponse {\n    apiKey: string;\n\n    constructor(response: any) {\n        super(response);\n        this.apiKey = this.getResponseProperty('ApiKey');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { PaymentMethodType } from '../../enums/paymentMethodType';\nimport { TransactionType } from '../../enums/transactionType';\n\nexport class BillingResponse extends BaseResponse {\n    balance: number;\n    paymentSource: BillingSourceResponse;\n    invoices: BillingInvoiceResponse[] = [];\n    transactions: BillingTransactionResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        this.balance = this.getResponseProperty('Balance');\n        const paymentSource = this.getResponseProperty('PaymentSource');\n        const transactions = this.getResponseProperty('Transactions');\n        const invoices = this.getResponseProperty('Invoices');\n        this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n        if (transactions != null) {\n            this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n        }\n        if (invoices != null) {\n            this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n        }\n    }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n    type: PaymentMethodType;\n    cardBrand: string;\n    description: string;\n    needsVerification: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.type = this.getResponseProperty('Type');\n        this.cardBrand = this.getResponseProperty('CardBrand');\n        this.description = this.getResponseProperty('Description');\n        this.needsVerification = this.getResponseProperty('NeedsVerification');\n    }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n    url: string;\n    pdfUrl: string;\n    number: string;\n    paid: boolean;\n    date: string;\n    amount: number;\n\n    constructor(response: any) {\n        super(response);\n        this.url = this.getResponseProperty('Url');\n        this.pdfUrl = this.getResponseProperty('PdfUrl');\n        this.number = this.getResponseProperty('Number');\n        this.paid = this.getResponseProperty('Paid');\n        this.date = this.getResponseProperty('Date');\n        this.amount = this.getResponseProperty('Amount');\n    }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n    createdDate: string;\n    amount: number;\n    refunded: boolean;\n    partiallyRefunded: boolean;\n    refundedAmount: number;\n    type: TransactionType;\n    paymentMethodType: PaymentMethodType;\n    details: string;\n\n    constructor(response: any) {\n        super(response);\n        this.createdDate = this.getResponseProperty('CreatedDate');\n        this.amount = this.getResponseProperty('Amount');\n        this.refunded = this.getResponseProperty('Refunded');\n        this.partiallyRefunded = this.getResponseProperty('PartiallyRefunded');\n        this.refundedAmount = this.getResponseProperty('RefundedAmount');\n        this.type = this.getResponseProperty('Type');\n        this.paymentMethodType = this.getResponseProperty('PaymentMethodType');\n        this.details = this.getResponseProperty('Details');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class BreachAccountResponse extends BaseResponse {\n    addedDate: string;\n    breachDate: string;\n    dataClasses: string[];\n    description: string;\n    domain: string;\n    isActive: boolean;\n    isVerified: boolean;\n    logoPath: string;\n    modifiedDate: string;\n    name: string;\n    pwnCount: number;\n    title: string;\n\n    constructor(response: any) {\n        super(response);\n        this.addedDate = this.getResponseProperty('AddedDate');\n        this.breachDate = this.getResponseProperty('BreachDate');\n        this.dataClasses = this.getResponseProperty('DataClasses');\n        this.description = this.getResponseProperty('Description');\n        this.domain = this.getResponseProperty('Domain');\n        this.isActive = this.getResponseProperty('IsActive');\n        this.isVerified = this.getResponseProperty('IsVerified');\n        this.logoPath = this.getResponseProperty('LogoPath');\n        this.modifiedDate = this.getResponseProperty('ModifiedDate');\n        this.name = this.getResponseProperty('Name');\n        this.pwnCount = this.getResponseProperty('PwnCount');\n        this.title = this.getResponseProperty('Title');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class AttachmentResponse extends BaseResponse {\n    id: string;\n    url: string;\n    fileName: string;\n    key: string;\n    size: string;\n    sizeName: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.url = this.getResponseProperty('Url');\n        this.fileName = this.getResponseProperty('FileName');\n        this.key = this.getResponseProperty('Key');\n        this.size = this.getResponseProperty('Size');\n        this.sizeName = this.getResponseProperty('SizeName');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class PasswordHistoryResponse extends BaseResponse {\n    password: string;\n    lastUsedDate: string;\n\n    constructor(response: any) {\n        super(response);\n        this.password = this.getResponseProperty('Password');\n        this.lastUsedDate = this.getResponseProperty('LastUsedDate');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class GlobalDomainResponse extends BaseResponse {\n    type: number;\n    domains: string[];\n    excluded: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.type = this.getResponseProperty('Type');\n        this.domains = this.getResponseProperty('Domains');\n        this.excluded = this.getResponseProperty('Excluded');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class ErrorResponse extends BaseResponse {\n    message: string;\n    validationErrors: { [key: string]: string[]; };\n    statusCode: number;\n\n    constructor(response: any, status: number, identityResponse?: boolean) {\n        super(response);\n        let errorModel = null;\n        if (response != null) {\n            const responseErrorModel = this.getResponseProperty('ErrorModel');\n            if (responseErrorModel && identityResponse) {\n                errorModel = responseErrorModel;\n            } else {\n                errorModel = response;\n            }\n        }\n\n        if (errorModel) {\n            this.message = this.getResponseProperty('Message', errorModel);\n            this.validationErrors = this.getResponseProperty('ValidationErrors', errorModel);\n        } else {\n            if (status === 429) {\n                this.message = 'Rate limit exceeded. Try again later.';\n            }\n        }\n        this.statusCode = status;\n    }\n\n    getSingleMessage(): string {\n        if (this.validationErrors == null) {\n            return this.message;\n        }\n        for (const key in this.validationErrors) {\n            if (!this.validationErrors.hasOwnProperty(key)) {\n                continue;\n            }\n            if (this.validationErrors[key].length) {\n                return this.validationErrors[key][0];\n            }\n        }\n        return this.message;\n    }\n\n    getAllMessages(): string[] {\n        const messages: string[] = [];\n        if (this.validationErrors == null) {\n            return messages;\n        }\n        for (const key in this.validationErrors) {\n            if (!this.validationErrors.hasOwnProperty(key)) {\n                continue;\n            }\n            this.validationErrors[key].forEach((item: string) => {\n                let prefix = '';\n                if (key.indexOf('[') > -1 && key.indexOf(']') > -1) {\n                    const lastSep = key.lastIndexOf('.');\n                    prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + ': ';\n                }\n                messages.push(prefix + item);\n            });\n        }\n        return messages;\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { DeviceType } from '../../enums/deviceType';\nimport { EventType } from '../../enums/eventType';\n\nexport class EventResponse extends BaseResponse {\n    type: EventType;\n    userId: string;\n    organizationId: string;\n    cipherId: string;\n    collectionId: string;\n    groupId: string;\n    organizationUserId: string;\n    actingUserId: string;\n    date: string;\n    deviceType: DeviceType;\n    ipAddress: string;\n\n    constructor(response: any) {\n        super(response);\n        this.type = this.getResponseProperty('Type');\n        this.userId = this.getResponseProperty('UserId');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.cipherId = this.getResponseProperty('CipherId');\n        this.collectionId = this.getResponseProperty('CollectionId');\n        this.groupId = this.getResponseProperty('GroupId');\n        this.organizationUserId = this.getResponseProperty('OrganizationUserId');\n        this.actingUserId = this.getResponseProperty('ActingUserId');\n        this.date = this.getResponseProperty('Date');\n        this.deviceType = this.getResponseProperty('DeviceType');\n        this.ipAddress = this.getResponseProperty('IpAddress');\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { SelectionReadOnlyResponse } from './selectionReadOnlyResponse';\n\nexport class GroupResponse extends BaseResponse {\n    id: string;\n    organizationId: string;\n    name: string;\n    accessAll: boolean;\n    externalId: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.name = this.getResponseProperty('Name');\n        this.accessAll = this.getResponseProperty('AccessAll');\n        this.externalId = this.getResponseProperty('ExternalId');\n    }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n    collections: SelectionReadOnlyResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        const collections = this.getResponseProperty('Collections');\n        if (collections != null) {\n            this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class IdentityTokenResponse extends BaseResponse {\n    accessToken: string;\n    expiresIn: number;\n    refreshToken: string;\n    tokenType: string;\n\n    privateKey: string;\n    key: string;\n    twoFactorToken: string;\n\n    constructor(response: any) {\n        super(response);\n        this.accessToken = response.access_token;\n        this.expiresIn = response.expires_in;\n        this.refreshToken = response.refresh_token;\n        this.tokenType = response.token_type;\n\n        this.privateKey = this.getResponseProperty('PrivateKey');\n        this.key = this.getResponseProperty('Key');\n        this.twoFactorToken = this.getResponseProperty('TwoFactorToken');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n    twoFactorProviders: TwoFactorProviderType[];\n    twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string; }>();\n\n    constructor(response: any) {\n        super(response);\n        this.twoFactorProviders = this.getResponseProperty('TwoFactorProviders');\n        const twoFactorProviders2 = this.getResponseProperty('TwoFactorProviders2');\n        if (twoFactorProviders2 != null) {\n            for (const prop in twoFactorProviders2) {\n                if (twoFactorProviders2.hasOwnProperty(prop)) {\n                    this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n                }\n            }\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class ListResponse<T> extends BaseResponse {\n    data: T[];\n    continuationToken: string;\n\n    constructor(response: any, t: new (dataResponse: any) => T) {\n        super(response);\n        const data = this.getResponseProperty('Data');\n        this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n        this.continuationToken = this.getResponseProperty('ContinuationToken');\n    }\n}\n","import { OrganizationResponse } from './organizationResponse';\nimport {\n    BillingSubscriptionResponse,\n    BillingSubscriptionUpcomingInvoiceResponse,\n} from './subscriptionResponse';\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n    storageName: string;\n    storageGb: number;\n    subscription: BillingSubscriptionResponse;\n    upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n    expiration: string;\n\n    constructor(response: any) {\n        super(response);\n        this.storageName = this.getResponseProperty('StorageName');\n        this.storageGb = this.getResponseProperty('StorageGb');\n        const subscription = this.getResponseProperty('Subscription');\n        this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n        const upcomingInvoice = this.getResponseProperty('UpcomingInvoice');\n        this.upcomingInvoice = upcomingInvoice == null ? null :\n            new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n        this.expiration = this.getResponseProperty('Expiration');\n    }\n}\n","import { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\n\nimport { BaseResponse } from './baseResponse';\nimport { SelectionReadOnlyResponse } from './selectionReadOnlyResponse';\n\nexport class OrganizationUserResponse extends BaseResponse {\n    id: string;\n    userId: string;\n    type: OrganizationUserType;\n    status: OrganizationUserStatusType;\n    accessAll: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.userId = this.getResponseProperty('UserId');\n        this.type = this.getResponseProperty('Type');\n        this.status = this.getResponseProperty('Status');\n        this.accessAll = this.getResponseProperty('AccessAll');\n    }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n    name: string;\n    email: string;\n    twoFactorEnabled: string;\n\n    constructor(response: any) {\n        super(response);\n        this.name = this.getResponseProperty('Name');\n        this.email = this.getResponseProperty('Email');\n        this.twoFactorEnabled = this.getResponseProperty('TwoFactorEnabled');\n    }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n    collections: SelectionReadOnlyResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        const collections = this.getResponseProperty('Collections');\n        if (collections != null) {\n            this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { ProfileResponse } from './profileResponse';\n\nexport class PaymentResponse extends BaseResponse {\n    userProfile: ProfileResponse;\n    paymentIntentClientSecret: string;\n    success: boolean;\n\n    constructor(response: any) {\n        super(response);\n        const userProfile = this.getResponseProperty('UserProfile');\n        if (userProfile != null) {\n            this.userProfile = new ProfileResponse(userProfile);\n        }\n        this.paymentIntentClientSecret = this.getResponseProperty('PaymentIntentClientSecret');\n        this.success = this.getResponseProperty('Success');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n    id: string;\n    name: string;\n    useGroups: boolean;\n    useDirectory: boolean;\n    useEvents: boolean;\n    useTotp: boolean;\n    use2fa: boolean;\n    useApi: boolean;\n    selfHost: boolean;\n    usersGetPremium: boolean;\n    seats: number;\n    maxCollections: number;\n    maxStorageGb?: number;\n    key: string;\n    status: OrganizationUserStatusType;\n    type: OrganizationUserType;\n    enabled: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.name = this.getResponseProperty('Name');\n        this.useGroups = this.getResponseProperty('UseGroups');\n        this.useDirectory = this.getResponseProperty('UseDirectory');\n        this.useEvents = this.getResponseProperty('UseEvents');\n        this.useTotp = this.getResponseProperty('UseTotp');\n        this.use2fa = this.getResponseProperty('Use2fa');\n        this.useApi = this.getResponseProperty('UseApi');\n        this.selfHost = this.getResponseProperty('SelfHost');\n        this.usersGetPremium = this.getResponseProperty('UsersGetPremium');\n        this.seats = this.getResponseProperty('Seats');\n        this.maxCollections = this.getResponseProperty('MaxCollections');\n        this.maxStorageGb = this.getResponseProperty('MaxStorageGb');\n        this.key = this.getResponseProperty('Key');\n        this.status = this.getResponseProperty('Status');\n        this.type = this.getResponseProperty('Type');\n        this.enabled = this.getResponseProperty('Enabled');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { KdfType } from '../../enums/kdfType';\n\nexport class PreloginResponse extends BaseResponse {\n    kdf: KdfType;\n    kdfIterations: number;\n\n    constructor(response: any) {\n        super(response);\n        this.kdf = this.getResponseProperty('Kdf');\n        this.kdfIterations = this.getResponseProperty('KdfIterations');\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { CipherResponse } from './cipherResponse';\nimport { CollectionDetailsResponse } from './collectionResponse';\nimport { DomainsResponse } from './domainsResponse';\nimport { FolderResponse } from './folderResponse';\nimport { ProfileResponse } from './profileResponse';\n\nexport class SyncResponse extends BaseResponse {\n    profile?: ProfileResponse;\n    folders: FolderResponse[] = [];\n    collections: CollectionDetailsResponse[] = [];\n    ciphers: CipherResponse[] = [];\n    domains?: DomainsResponse;\n\n    constructor(response: any) {\n        super(response);\n\n        const profile = this.getResponseProperty('Profile');\n        if (profile != null) {\n            this.profile = new ProfileResponse(profile);\n        }\n\n        const folders = this.getResponseProperty('Folders');\n        if (folders != null) {\n            this.folders = folders.map((f: any) => new FolderResponse(f));\n        }\n\n        const collections = this.getResponseProperty('Collections');\n        if (collections != null) {\n            this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n        }\n\n        const ciphers = this.getResponseProperty('Ciphers');\n        if (ciphers != null) {\n            this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n        }\n\n        const domains = this.getResponseProperty('Domains');\n        if (domains != null) {\n            this.domains = new DomainsResponse(domains);\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n    enabled: boolean;\n    key: string;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.key = this.getResponseProperty('Key');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n    enabled: boolean;\n    host: string;\n    secretKey: string;\n    integrationKey: string;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.host = this.getResponseProperty('Host');\n        this.secretKey = this.getResponseProperty('SecretKey');\n        this.integrationKey = this.getResponseProperty('IntegrationKey');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n    enabled: boolean;\n    email: string;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.email = this.getResponseProperty('Email');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n    enabled: boolean;\n    type: TwoFactorProviderType;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.type = this.getResponseProperty('Type');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n    code: string;\n\n    constructor(response: any) {\n        super(response);\n        this.code = this.getResponseProperty('Code');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorU2fResponse extends BaseResponse {\n    enabled: boolean;\n    keys: KeyResponse[];\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        const keys = this.getResponseProperty('Keys');\n        this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n    }\n}\n\nexport class KeyResponse extends BaseResponse {\n    name: string;\n    id: number;\n    compromised: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.name = this.getResponseProperty('Name');\n        this.id = this.getResponseProperty('Id');\n        this.compromised = this.getResponseProperty('Compromised');\n    }\n}\n\nexport class ChallengeResponse extends BaseResponse {\n    userId: string;\n    appId: string;\n    challenge: string;\n    version: string;\n\n    constructor(response: any) {\n        super(response);\n        this.userId = this.getResponseProperty('UserId');\n        this.appId = this.getResponseProperty('AppId');\n        this.challenge = this.getResponseProperty('Challenge');\n        this.version = this.getResponseProperty('Version');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n    enabled: boolean;\n    key1: string;\n    key2: string;\n    key3: string;\n    key4: string;\n    key5: string;\n    nfc: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.key1 = this.getResponseProperty('Key1');\n        this.key2 = this.getResponseProperty('Key2');\n        this.key3 = this.getResponseProperty('Key3');\n        this.key4 = this.getResponseProperty('Key4');\n        this.key5 = this.getResponseProperty('Key5');\n        this.nfc = this.getResponseProperty('Nfc');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class UserKeyResponse extends BaseResponse {\n    userId: string;\n    publicKey: string;\n\n    constructor(response: any) {\n        super(response);\n        this.userId = this.getResponseProperty('UserId');\n        this.publicKey = this.getResponseProperty('PublicKey');\n    }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n    return <T>(target: any, propertyKey: string | symbol,\n        descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>) => {\n        const originalMethod: () => Promise<T> = descriptor.value;\n        const allThrottles = new Map<any, Map<string, Array<() => void>>>();\n\n        const getThrottles = (obj: any) => {\n            let throttles = allThrottles.get(obj);\n            if (throttles != null) {\n                return throttles;\n            }\n            throttles = new Map<string, Array<() => void>>();\n            allThrottles.set(obj, throttles);\n            return throttles;\n        };\n\n        return {\n            value: function(...args: any[]) {\n                const throttles = getThrottles(this);\n                const argsThrottleKey = throttleKey(args);\n                let queue = throttles.get(argsThrottleKey);\n                if (queue == null) {\n                    queue = [];\n                    throttles.set(argsThrottleKey, queue);\n                }\n\n                return new Promise<T>((resolve, reject) => {\n                    const exec = () => {\n                        const onFinally = () => {\n                            queue.splice(queue.indexOf(exec), 1);\n                            if (queue.length >= limit) {\n                                queue[limit - 1]();\n                            } else if (queue.length === 0) {\n                                throttles.delete(argsThrottleKey);\n                                if (throttles.size === 0) {\n                                    allThrottles.delete(this);\n                                }\n                            }\n                        };\n                        originalMethod.apply(this, args).then((val: any) => {\n                            onFinally();\n                            return val;\n                        }).catch((err: any) => {\n                            onFinally();\n                            throw err;\n                        }).then(resolve, reject);\n                    };\n                    queue.push(exec);\n                    if (queue.length <= limit) {\n                        exec();\n                    }\n                });\n            },\n        };\n    };\n}\n","export class CipherBulkDeleteRequest {\n    ids: string[];\n\n    constructor(ids: string[]) {\n        this.ids = ids == null ? [] : ids;\n    }\n}\n","export class CipherBulkMoveRequest {\n    ids: string[];\n    folderId: string;\n\n    constructor(ids: string[], folderId: string) {\n        this.ids = ids == null ? [] : ids;\n        this.folderId = folderId;\n    }\n}\n","import { CipherWithIdRequest } from './cipherWithIdRequest';\n\nimport { Cipher } from '../domain/cipher';\n\nexport class CipherBulkShareRequest {\n    ciphers: CipherWithIdRequest[];\n    collectionIds: string[];\n\n    constructor(ciphers: Cipher[], collectionIds: string[]) {\n        if (ciphers != null) {\n            this.ciphers = [];\n            ciphers.forEach((c) => {\n                this.ciphers.push(new CipherWithIdRequest(c));\n            });\n        }\n        this.collectionIds = collectionIds;\n    }\n}\n","import { CipherRequest } from './cipherRequest';\n\nimport { Cipher } from '../domain/cipher';\n\nexport class CipherShareRequest {\n    cipher: CipherRequest;\n    collectionIds: string[];\n\n    constructor(cipher: Cipher) {\n        this.cipher = new CipherRequest(cipher);\n        this.collectionIds = cipher.collectionIds;\n    }\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n    parent: T;\n    node: T;\n    children: Array<TreeNode<T>> = [];\n\n    constructor(node: T, name: string, parent: T) {\n        this.parent = parent;\n        this.node = node;\n        this.node.name = name;\n    }\n}\n\nexport interface ITreeNodeObject {\n    id: string;\n    name: string;\n}\n","import { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class EncryptedObject {\n    iv: ArrayBuffer;\n    data: ArrayBuffer;\n    mac: ArrayBuffer;\n    key: SymmetricCryptoKey;\n}\n","export class EnvironmentUrls {\n    base: string;\n    api: string;\n    identity: string;\n    events: string;\n}\n","import { FolderData } from '../data/folderData';\n\nimport { FolderView } from '../view/folderView';\n\nimport { CipherString } from './cipherString';\nimport Domain from './domainBase';\n\nexport class Folder extends Domain {\n    id: string;\n    name: CipherString;\n    revisionDate: Date;\n\n    constructor(obj?: FolderData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            id: null,\n            name: null,\n        }, alreadyEncrypted, ['id']);\n\n        this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    }\n\n    decrypt(): Promise<FolderView> {\n        return this.decryptObj(new FolderView(this), {\n            name: null,\n        }, null);\n    }\n}\n","export class GeneratedPasswordHistory {\n    password: string;\n    date: number;\n\n    constructor(password: string, date: number) {\n        this.password = password;\n        this.date = date;\n    }\n}\n","import { ProfileOrganizationResponse } from '../response/profileOrganizationResponse';\n\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\n\nexport class OrganizationData {\n    id: string;\n    name: string;\n    status: OrganizationUserStatusType;\n    type: OrganizationUserType;\n    enabled: boolean;\n    useGroups: boolean;\n    useDirectory: boolean;\n    useEvents: boolean;\n    useTotp: boolean;\n    use2fa: boolean;\n    useApi: boolean;\n    selfHost: boolean;\n    usersGetPremium: boolean;\n    seats: number;\n    maxCollections: number;\n    maxStorageGb?: number;\n\n    constructor(response: ProfileOrganizationResponse) {\n        this.id = response.id;\n        this.name = response.name;\n        this.status = response.status;\n        this.type = response.type;\n        this.enabled = response.enabled;\n        this.useGroups = response.useGroups;\n        this.useDirectory = response.useDirectory;\n        this.useEvents = response.useEvents;\n        this.useTotp = response.useTotp;\n        this.use2fa = response.use2fa;\n        this.useApi = response.useApi;\n        this.selfHost = response.selfHost;\n        this.usersGetPremium = response.usersGetPremium;\n        this.seats = response.seats;\n        this.maxCollections = response.maxCollections;\n        this.maxStorageGb = response.maxStorageGb;\n    }\n}\n","import { OrganizationData } from '../data/organizationData';\n\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\n\nexport class Organization {\n    id: string;\n    name: string;\n    status: OrganizationUserStatusType;\n    type: OrganizationUserType;\n    enabled: boolean;\n    useGroups: boolean;\n    useDirectory: boolean;\n    useEvents: boolean;\n    useTotp: boolean;\n    use2fa: boolean;\n    useApi: boolean;\n    selfHost: boolean;\n    usersGetPremium: boolean;\n    seats: number;\n    maxCollections: number;\n    maxStorageGb?: number;\n\n    constructor(obj?: OrganizationData) {\n        if (obj == null) {\n            return;\n        }\n\n        this.id = obj.id;\n        this.name = obj.name;\n        this.status = obj.status;\n        this.type = obj.type;\n        this.enabled = obj.enabled;\n        this.useGroups = obj.useGroups;\n        this.useDirectory = obj.useDirectory;\n        this.useEvents = obj.useEvents;\n        this.useTotp = obj.useTotp;\n        this.use2fa = obj.use2fa;\n        this.useApi = obj.useApi;\n        this.selfHost = obj.selfHost;\n        this.usersGetPremium = obj.usersGetPremium;\n        this.seats = obj.seats;\n        this.maxCollections = obj.maxCollections;\n        this.maxStorageGb = obj.maxStorageGb;\n    }\n\n    get canAccess() {\n        if (this.type === OrganizationUserType.Owner) {\n            return true;\n        }\n        return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n    }\n\n    get isManager() {\n        return this.type === OrganizationUserType.Manager || this.type === OrganizationUserType.Owner ||\n            this.type === OrganizationUserType.Admin;\n    }\n\n    get isAdmin() {\n        return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n    }\n\n    get isOwner() {\n        return this.type === OrganizationUserType.Owner;\n    }\n}\n","import { I18nService as BaseI18nService } from 'jslib/services/i18n.service';\n\nexport class I18nService extends BaseI18nService {\n    constructor(systemLanguage: string, localesDirectory: string) {\n        super(systemLanguage || 'en-US', localesDirectory, async (formattedLocale: string) => {\n            const filePath = this.localesDirectory + '/' + formattedLocale + '/messages.json?cache=' +\n                process.env.CACHE_TAG;\n            const localesResult = await fetch(filePath);\n            const locales = await localesResult.json();\n            return locales;\n        });\n\n        this.supportedTranslationLocales = [\n            'en', 'ca', 'cs', 'da', 'de', 'en-GB', 'es', 'et', 'fr', 'he', 'it', 'ja', 'ko', 'nb', 'nl', 'pl',\n            'pt-PT', 'pt-BR', 'ru', 'sk', 'sv', 'uk', 'zh-CN', 'zh-TW',\n        ];\n    }\n}\n","import { StorageService } from 'jslib/abstractions/storage.service';\n\nexport class MemoryStorageService implements StorageService {\n    private store = new Map<string, any>();\n\n    get<T>(key: string): Promise<T> {\n        if (this.store.has(key)) {\n            const obj = this.store.get(key);\n            return Promise.resolve(obj as T);\n        }\n        return Promise.resolve(null);\n    }\n\n    save(key: string, obj: any): Promise<any> {\n        if (obj == null) {\n            return this.remove(key);\n        }\n        this.store.set(key, obj);\n        return Promise.resolve();\n    }\n\n    remove(key: string): Promise<any> {\n        this.store.delete(key);\n        return Promise.resolve();\n    }\n}\n","import * as _swal from 'sweetalert';\nimport { SweetAlert } from 'sweetalert/typings/core';\n\nimport { DeviceType } from 'jslib/enums/deviceType';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { Utils } from 'jslib/misc/utils';\n\n// Hack due to Angular 5.2 bug\nconst swal: SweetAlert = _swal as any;\n\nexport class WebPlatformUtilsService implements PlatformUtilsService {\n    identityClientId: string = 'web';\n\n    private browserCache: DeviceType = null;\n\n    constructor(private i18nService: I18nService, private messagingService: MessagingService) { }\n\n    getDevice(): DeviceType {\n        if (this.browserCache != null) {\n            return this.browserCache;\n        }\n\n        if (navigator.userAgent.indexOf(' Firefox/') !== -1 || navigator.userAgent.indexOf(' Gecko/') !== -1) {\n            this.browserCache = DeviceType.FirefoxBrowser;\n        } else if (navigator.userAgent.indexOf(' OPR/') >= 0) {\n            this.browserCache = DeviceType.OperaBrowser;\n        } else if (navigator.userAgent.indexOf(' Edge/') !== -1) {\n            this.browserCache = DeviceType.EdgeBrowser;\n        } else if (navigator.userAgent.indexOf(' Vivaldi/') !== -1) {\n            this.browserCache = DeviceType.VivaldiBrowser;\n        } else if (navigator.userAgent.indexOf(' Safari/') !== -1 && navigator.userAgent.indexOf('Chrome') === -1) {\n            this.browserCache = DeviceType.SafariBrowser;\n        } else if ((window as any).chrome && navigator.userAgent.indexOf(' Chrome/') !== -1) {\n            this.browserCache = DeviceType.ChromeBrowser;\n        } else if (navigator.userAgent.indexOf(' Trident/') !== -1) {\n            this.browserCache = DeviceType.IEBrowser;\n        } else {\n            this.browserCache = DeviceType.UnknownBrowser;\n        }\n\n        return this.browserCache;\n    }\n\n    getDeviceString(): string {\n        const device = DeviceType[this.getDevice()].toLowerCase();\n        return device.replace('browser', '');\n    }\n\n    isFirefox(): boolean {\n        return this.getDevice() === DeviceType.FirefoxBrowser;\n    }\n\n    isChrome(): boolean {\n        return this.getDevice() === DeviceType.ChromeBrowser;\n    }\n\n    isEdge(): boolean {\n        return this.getDevice() === DeviceType.EdgeBrowser;\n    }\n\n    isOpera(): boolean {\n        return this.getDevice() === DeviceType.OperaBrowser;\n    }\n\n    isVivaldi(): boolean {\n        return this.getDevice() === DeviceType.VivaldiBrowser;\n    }\n\n    isSafari(): boolean {\n        return this.getDevice() === DeviceType.SafariBrowser;\n    }\n\n    isIE(): boolean {\n        return this.getDevice() === DeviceType.IEBrowser;\n    }\n\n    isMacAppStore(): boolean {\n        return false;\n    }\n\n    analyticsId(): string {\n        return 'UA-81915606-3';\n    }\n\n    isViewOpen(): Promise<boolean> {\n        return Promise.resolve(false);\n    }\n\n    lockTimeout(): number {\n        return null;\n    }\n\n    launchUri(uri: string, options?: any): void {\n        const a = document.createElement('a');\n        a.href = uri;\n        a.target = '_blank';\n        a.rel = 'noreferrer noopener';\n        a.classList.add('d-none');\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n    }\n\n    saveFile(win: Window, blobData: any, blobOptions: any, fileName: string): void {\n        let blob: Blob = null;\n        let type: string = null;\n        const fileNameLower = fileName.toLowerCase();\n        let doDownload = true;\n        if (fileNameLower.endsWith('.pdf')) {\n            type = 'application/pdf';\n            doDownload = false;\n        } else if (fileNameLower.endsWith('.xlsx')) {\n            type = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\n        } else if (fileNameLower.endsWith('.docx')) {\n            type = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';\n        } else if (fileNameLower.endsWith('.pptx')) {\n            type = 'application/vnd.openxmlformats-officedocument.presentationml.presentation';\n        } else if (fileNameLower.endsWith('.csv')) {\n            type = 'text/csv';\n        } else if (fileNameLower.endsWith('.png')) {\n            type = 'image/png';\n        } else if (fileNameLower.endsWith('.jpg') || fileNameLower.endsWith('.jpeg')) {\n            type = 'image/jpeg';\n        } else if (fileNameLower.endsWith('.gif')) {\n            type = 'image/gif';\n        }\n        if (type != null) {\n            blobOptions = blobOptions || {};\n            if (blobOptions.type == null) {\n                blobOptions.type = type;\n            }\n        }\n        if (blobOptions != null && !this.isIE()) {\n            blob = new Blob([blobData], blobOptions);\n        } else {\n            blob = new Blob([blobData]);\n        }\n        if (navigator.msSaveOrOpenBlob) {\n            navigator.msSaveBlob(blob, fileName);\n        } else {\n            const a = win.document.createElement('a');\n            if (doDownload) {\n                a.download = fileName;\n            } else {\n                a.target = '_blank';\n            }\n            a.href = win.URL.createObjectURL(blob);\n            a.style.position = 'fixed';\n            win.document.body.appendChild(a);\n            a.click();\n            win.document.body.removeChild(a);\n        }\n    }\n\n    getApplicationVersion(): string {\n        return process.env.APPLICATION_VERSION || '-';\n    }\n\n    supportsU2f(win: Window): boolean {\n        if (win != null && (win as any).u2f != null) {\n            return true;\n        }\n        return this.isChrome() || ((this.isOpera() || this.isVivaldi()) && !Utils.isMobileBrowser);\n    }\n\n    supportsDuo(): boolean {\n        return true;\n    }\n\n    showToast(type: 'error' | 'success' | 'warning' | 'info', title: string, text: string | string[],\n        options?: any): void {\n        this.messagingService.send('showToast', {\n            text: text,\n            title: title,\n            type: type,\n            options: options,\n        });\n    }\n\n    async showDialog(text: string, title?: string, confirmText?: string, cancelText?: string, type?: string) {\n        const buttons = [confirmText == null ? this.i18nService.t('ok') : confirmText];\n        if (cancelText != null) {\n            buttons.unshift(cancelText);\n        }\n\n        const contentDiv = document.createElement('div');\n        if (type != null) {\n            const icon = document.createElement('i');\n            icon.classList.add('swal-custom-icon');\n            switch (type) {\n                case 'success':\n                    icon.classList.add('fa', 'fa-check', 'text-success');\n                    break;\n                case 'warning':\n                    icon.classList.add('fa', 'fa-warning', 'text-warning');\n                    break;\n                case 'error':\n                    icon.classList.add('fa', 'fa-bolt', 'text-danger');\n                    break;\n                case 'info':\n                    icon.classList.add('fa', 'fa-info-circle', 'text-info');\n                    break;\n                default:\n                    break;\n            }\n            if (icon.classList.contains('fa')) {\n                contentDiv.appendChild(icon);\n            }\n        }\n\n        if (title != null) {\n            const titleDiv = document.createElement('div');\n            titleDiv.classList.add('swal-title');\n            titleDiv.appendChild(document.createTextNode(title));\n            contentDiv.appendChild(titleDiv);\n        }\n\n        if (text != null) {\n            const textDiv = document.createElement('div');\n            textDiv.classList.add('swal-text');\n            textDiv.appendChild(document.createTextNode(text));\n            contentDiv.appendChild(textDiv);\n        }\n\n        const confirmed = buttons.length > 1 ? await swal({\n            content: { element: contentDiv },\n            buttons: buttons,\n        }) : await (swal as any)({\n            content: { element: contentDiv },\n            button: buttons[0],\n        });\n        return confirmed;\n    }\n\n    eventTrack(action: string, label?: string, options?: any) {\n        this.messagingService.send('analyticsEventTrack', {\n            action: action,\n            label: label,\n            options: options,\n        });\n    }\n\n    isDev(): boolean {\n        return process.env.ENV === 'development';\n    }\n\n    isSelfHost(): boolean {\n        return process.env.SELF_HOST.toString() === 'true';\n    }\n\n    copyToClipboard(text: string, options?: any): void {\n        let win = window;\n        let doc = window.document;\n        if (options && (options.window || options.win)) {\n            win = options.window || options.win;\n            doc = win.document;\n        } else if (options && options.doc) {\n            doc = options.doc;\n        }\n        if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n            // IE specific code path to prevent textarea being shown while dialog is visible.\n            (win as any).clipboardData.setData('Text', text);\n        } else if (doc.queryCommandSupported && doc.queryCommandSupported('copy')) {\n            const textarea = doc.createElement('textarea');\n            textarea.textContent = text;\n            // Prevent scrolling to bottom of page in MS Edge.\n            textarea.style.position = 'fixed';\n            let copyEl = doc.body;\n            // For some reason copy command won't work in Firefox when modal is open if appending to body\n            if (this.isFirefox() && doc.body.classList.contains('modal-open')) {\n                copyEl = doc.body.querySelector<HTMLElement>('.modal');\n            }\n            copyEl.appendChild(textarea);\n            textarea.select();\n            try {\n                // Security exception may be thrown by some browsers.\n                doc.execCommand('copy');\n            } catch (e) {\n                // tslint:disable-next-line\n                console.warn('Copy to clipboard failed.', e);\n            } finally {\n                copyEl.removeChild(textarea);\n            }\n        }\n    }\n\n    readFromClipboard(options?: any): Promise<string> {\n        throw new Error('Cannot read from clipboard on web.');\n    }\n}\n","import { AppIdService } from '../abstractions/appId.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\nimport { StorageService } from '../abstractions/storage.service';\n\nimport { ConstantsService } from '../services/constants.service';\n\nimport { DeviceType } from '../enums/deviceType';\n\nconst GaObj = 'ga';\n\nexport const AnalyticsIds = {\n    [DeviceType.ChromeExtension]: 'UA-81915606-6',\n    [DeviceType.FirefoxExtension]: 'UA-81915606-7',\n    [DeviceType.OperaExtension]: 'UA-81915606-8',\n    [DeviceType.EdgeExtension]: 'UA-81915606-9',\n    [DeviceType.VivaldiExtension]: 'UA-81915606-15',\n    [DeviceType.SafariExtension]: 'UA-81915606-16',\n    [DeviceType.WindowsDesktop]: 'UA-81915606-17',\n    [DeviceType.LinuxDesktop]: 'UA-81915606-19',\n    [DeviceType.MacOsDesktop]: 'UA-81915606-18',\n};\n\nexport class Analytics {\n    private gaTrackingId: string = null;\n    private defaultDisabled = false;\n    private appVersion: string;\n\n    constructor(win: Window, private gaFilter?: () => boolean,\n        private platformUtilsService?: PlatformUtilsService, private storageService?: StorageService,\n        private appIdService?: AppIdService, private dependencyResolver?: () => any) {\n        if (dependencyResolver != null) {\n            const deps = dependencyResolver();\n            if (platformUtilsService == null && deps.platformUtilsService) {\n                this.platformUtilsService = deps.platformUtilsService as PlatformUtilsService;\n            }\n            if (storageService == null && deps.storageService) {\n                this.storageService = deps.storageService as StorageService;\n            }\n            if (appIdService == null && deps.appIdService) {\n                this.appIdService = deps.appIdService as AppIdService;\n            }\n        }\n\n        this.appVersion = this.platformUtilsService.getApplicationVersion();\n        this.defaultDisabled = this.platformUtilsService.getDevice() === DeviceType.FirefoxExtension ||\n            this.platformUtilsService.isMacAppStore();\n        this.gaTrackingId = this.platformUtilsService.analyticsId();\n\n        (win as any).GoogleAnalyticsObject = GaObj;\n        (win as any)[GaObj] = async (action: string, param1: any, param2?: any) => {\n            await this.ga(action, param1, param2);\n        };\n    }\n\n    async ga(action: string, param1: any, param2?: any) {\n        return;\n\n        if (this.gaFilter != null && this.gaFilter()) {\n            return;\n        }\n\n        const disabled = await this.storageService.get<boolean>(ConstantsService.disableGaKey);\n        if ((this.defaultDisabled && disabled == null) || disabled != null && disabled) {\n            return;\n        }\n\n        if (action !== 'send' || !param1) {\n            return;\n        }\n\n        const gaAnonAppId = await this.appIdService.getAnonymousAppId();\n        const version = encodeURIComponent(this.appVersion);\n        let message = 'v=1&tid=' + this.gaTrackingId + '&cid=' + gaAnonAppId + '&cd1=' + version;\n\n        if (param1 === 'pageview' && param2) {\n            message += this.gaTrackPageView(param2);\n        } else if (typeof param1 === 'object' && param1.hitType === 'pageview') {\n            message += this.gaTrackPageView(param1.page);\n        } else if (param1 === 'event' && param2) {\n            message += this.gaTrackEvent(param2);\n        } else if (typeof param1 === 'object' && param1.hitType === 'event') {\n            message += this.gaTrackEvent(param1);\n        }\n\n        const request = new XMLHttpRequest();\n        request.open('POST', 'https://www.google-analytics.com/collect', true);\n        request.send(message);\n    }\n\n    private gaTrackEvent(options: any) {\n        return '&t=event&ec=' + (options.eventCategory ? encodeURIComponent(options.eventCategory) : 'Event') +\n            '&ea=' + encodeURIComponent(options.eventAction) +\n            (options.eventLabel ? '&el=' + encodeURIComponent(options.eventLabel) : '') +\n            (options.eventValue ? '&ev=' + encodeURIComponent(options.eventValue) : '') +\n            (options.page ? '&dp=' + this.cleanPagePath(options.page) : '');\n    }\n\n    private gaTrackPageView(pagePath: string) {\n        return '&t=pageview&dp=' + this.cleanPagePath(pagePath);\n    }\n\n    private cleanPagePath(pagePath: string) {\n        const paramIndex = pagePath.indexOf('?');\n        if (paramIndex > -1) {\n            pagePath = pagePath.substring(0, paramIndex);\n        }\n        if (pagePath.indexOf('!/') === 0 || pagePath.indexOf('#/') === 0) {\n            pagePath = pagePath.substring(1);\n        }\n        const pathParts = pagePath.split('/');\n        const newPathParts: string[] = [];\n        pathParts.forEach((p) => {\n            if (p.match(/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i)) {\n                newPathParts.push('__guid__');\n            } else {\n                newPathParts.push(p);\n            }\n        });\n        return encodeURIComponent(newPathParts.join('/'));\n    }\n}\n","import { EventType } from '../enums/eventType';\n\nimport { EventData } from '../models/data/eventData';\n\nimport { EventRequest } from '../models/request/eventRequest';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { EventService as EventServiceAbstraction } from '../abstractions/event.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { ConstantsService } from './constants.service';\n\nexport class EventService implements EventServiceAbstraction {\n    private inited = false;\n\n    constructor(private storageService: StorageService, private apiService: ApiService,\n        private userService: UserService, private cipherService: CipherService) { }\n\n    init(checkOnInterval: boolean) {\n        if (this.inited) {\n            return;\n        }\n\n        this.inited = true;\n        if (checkOnInterval) {\n            this.uploadEvents();\n            setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n        }\n    }\n\n    async collect(eventType: EventType, cipherId: string = null, uploadImmediately = false): Promise<any> {\n        const authed = await this.userService.isAuthenticated();\n        if (!authed) {\n            return;\n        }\n        const organizations = await this.userService.getAllOrganizations();\n        if (organizations == null) {\n            return;\n        }\n        const orgIds = new Set<string>(organizations.filter((o) => o.useEvents).map((o) => o.id));\n        if (orgIds.size === 0) {\n            return;\n        }\n        if (cipherId != null) {\n            const cipher = await this.cipherService.get(cipherId);\n            if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n                return;\n            }\n        }\n        let eventCollection = await this.storageService.get<EventData[]>(ConstantsService.eventCollectionKey);\n        if (eventCollection == null) {\n            eventCollection = [];\n        }\n        const event = new EventData();\n        event.type = eventType;\n        event.cipherId = cipherId;\n        event.date = new Date().toISOString();\n        eventCollection.push(event);\n        await this.storageService.save(ConstantsService.eventCollectionKey, eventCollection);\n        if (uploadImmediately) {\n            await this.uploadEvents();\n        }\n    }\n\n    async uploadEvents(): Promise<any> {\n        const authed = await this.userService.isAuthenticated();\n        if (!authed) {\n            return;\n        }\n        const eventCollection = await this.storageService.get<EventData[]>(ConstantsService.eventCollectionKey);\n        if (eventCollection == null || eventCollection.length === 0) {\n            return;\n        }\n        const request = eventCollection.map((e) => {\n            const req = new EventRequest();\n            req.type = e.type;\n            req.cipherId = e.cipherId;\n            req.date = e.date;\n            return req;\n        });\n        try {\n            await this.apiService.postEventsCollect(request);\n            this.clearEvents();\n        } catch { }\n    }\n\n    async clearEvents(): Promise<any> {\n        await this.storageService.remove(ConstantsService.eventCollectionKey);\n    }\n}\n","import { EventType } from '../../enums/eventType';\n\nexport class EventData {\n    type: EventType;\n    cipherId: string;\n    date: string;\n}\n","import { EventType } from '../../enums/eventType';\n\nexport class EventRequest {\n    type: EventType;\n    cipherId: string;\n    date: string;\n}\n","import * as papa from 'papaparse';\n\nimport { CipherType } from '../enums/cipherType';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { ExportService as ExportServiceAbstraction } from '../abstractions/export.service';\nimport { FolderService } from '../abstractions/folder.service';\n\nimport { CipherView } from '../models/view/cipherView';\nimport { CollectionView } from '../models/view/collectionView';\nimport { FolderView } from '../models/view/folderView';\n\nimport { Cipher } from '../models/domain/cipher';\nimport { Collection } from '../models/domain/collection';\n\nimport { CipherData } from '../models/data/cipherData';\nimport { CollectionData } from '../models/data/collectionData';\nimport { CollectionDetailsResponse } from '../models/response/collectionResponse';\n\nimport { CipherWithIds as CipherExport } from '../models/export/cipherWithIds';\nimport { CollectionWithId as CollectionExport } from '../models/export/collectionWithId';\nimport { FolderWithId as FolderExport } from '../models/export/folderWithId';\n\nexport class ExportService implements ExportServiceAbstraction {\n    constructor(private folderService: FolderService, private cipherService: CipherService,\n        private apiService: ApiService) { }\n\n    async getExport(format: 'csv' | 'json' = 'csv'): Promise<string> {\n        let decFolders: FolderView[] = [];\n        let decCiphers: CipherView[] = [];\n        const promises = [];\n\n        promises.push(this.folderService.getAllDecrypted().then((folders) => {\n            decFolders = folders;\n        }));\n\n        promises.push(this.cipherService.getAllDecrypted().then((ciphers) => {\n            decCiphers = ciphers;\n        }));\n\n        await Promise.all(promises);\n\n        if (format === 'csv') {\n            const foldersMap = new Map<string, FolderView>();\n            decFolders.forEach((f) => {\n                foldersMap.set(f.id, f);\n            });\n\n            const exportCiphers: any[] = [];\n            decCiphers.forEach((c) => {\n                // only export logins and secure notes\n                if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n                    return;\n                }\n                if (c.organizationId != null) {\n                    return;\n                }\n\n                const cipher: any = {};\n                cipher.folder = c.folderId != null && foldersMap.has(c.folderId) ?\n                    foldersMap.get(c.folderId).name : null;\n                cipher.favorite = c.favorite ? 1 : null;\n                this.buildCommonCipher(cipher, c);\n                exportCiphers.push(cipher);\n            });\n\n            return papa.unparse(exportCiphers);\n        } else {\n            const jsonDoc: any = {\n                folders: [],\n                items: [],\n            };\n\n            decFolders.forEach((f) => {\n                if (f.id == null) {\n                    return;\n                }\n                const folder = new FolderExport();\n                folder.build(f);\n                jsonDoc.folders.push(folder);\n            });\n\n            decCiphers.forEach((c) => {\n                if (c.organizationId != null) {\n                    return;\n                }\n                const cipher = new CipherExport();\n                cipher.build(c);\n                cipher.collectionIds = null;\n                jsonDoc.items.push(cipher);\n            });\n\n            return JSON.stringify(jsonDoc, null, '  ');\n        }\n    }\n\n    async getOrganizationExport(organizationId: string, format: 'csv' | 'json' = 'csv'): Promise<string> {\n        const decCollections: CollectionView[] = [];\n        const decCiphers: CipherView[] = [];\n        const promises = [];\n\n        promises.push(this.apiService.getCollections(organizationId).then((collections) => {\n            const collectionPromises: any = [];\n            if (collections != null && collections.data != null && collections.data.length > 0) {\n                collections.data.forEach((c) => {\n                    const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n                    collectionPromises.push(collection.decrypt().then((decCol) => {\n                        decCollections.push(decCol);\n                    }));\n                });\n            }\n            return Promise.all(collectionPromises);\n        }));\n\n        promises.push(this.apiService.getCiphersOrganization(organizationId).then((ciphers) => {\n            const cipherPromises: any = [];\n            if (ciphers != null && ciphers.data != null && ciphers.data.length > 0) {\n                ciphers.data.forEach((c) => {\n                    const cipher = new Cipher(new CipherData(c));\n                    cipherPromises.push(cipher.decrypt().then((decCipher) => {\n                        decCiphers.push(decCipher);\n                    }));\n                });\n            }\n            return Promise.all(cipherPromises);\n        }));\n\n        await Promise.all(promises);\n\n        if (format === 'csv') {\n            const collectionsMap = new Map<string, CollectionView>();\n            decCollections.forEach((c) => {\n                collectionsMap.set(c.id, c);\n            });\n\n            const exportCiphers: any[] = [];\n            decCiphers.forEach((c) => {\n                // only export logins and secure notes\n                if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n                    return;\n                }\n\n                const cipher: any = {};\n                cipher.collections = [];\n                if (c.collectionIds != null) {\n                    cipher.collections = c.collectionIds.filter((id) => collectionsMap.has(id))\n                        .map((id) => collectionsMap.get(id).name);\n                }\n                this.buildCommonCipher(cipher, c);\n                exportCiphers.push(cipher);\n            });\n\n            return papa.unparse(exportCiphers);\n        } else {\n            const jsonDoc: any = {\n                collections: [],\n                items: [],\n            };\n\n            decCollections.forEach((c) => {\n                const collection = new CollectionExport();\n                collection.build(c);\n                jsonDoc.collections.push(collection);\n            });\n\n            decCiphers.forEach((c) => {\n                const cipher = new CipherExport();\n                cipher.build(c);\n                jsonDoc.items.push(cipher);\n            });\n            return JSON.stringify(jsonDoc, null, '  ');\n        }\n    }\n\n    getFileName(prefix: string = null, extension: string = 'csv'): string {\n        const now = new Date();\n        const dateString =\n            now.getFullYear() + '' + this.padNumber(now.getMonth() + 1, 2) + '' + this.padNumber(now.getDate(), 2) +\n            this.padNumber(now.getHours(), 2) + '' + this.padNumber(now.getMinutes(), 2) +\n            this.padNumber(now.getSeconds(), 2);\n\n        return 'bitwarden' + (prefix ? ('_' + prefix) : '') + '_export_' + dateString + '.' + extension;\n    }\n\n    private padNumber(num: number, width: number, padCharacter: string = '0'): string {\n        const numString = num.toString();\n        return numString.length >= width ? numString :\n            new Array(width - numString.length + 1).join(padCharacter) + numString;\n    }\n\n    private buildCommonCipher(cipher: any, c: CipherView) {\n        cipher.type = null;\n        cipher.name = c.name;\n        cipher.notes = c.notes;\n        cipher.fields = null;\n        // Login props\n        cipher.login_uri = null;\n        cipher.login_username = null;\n        cipher.login_password = null;\n        cipher.login_totp = null;\n\n        if (c.fields) {\n            c.fields.forEach((f: any) => {\n                if (!cipher.fields) {\n                    cipher.fields = '';\n                } else {\n                    cipher.fields += '\\n';\n                }\n\n                cipher.fields += ((f.name || '') + ': ' + f.value);\n            });\n        }\n\n        switch (c.type) {\n            case CipherType.Login:\n                cipher.type = 'login';\n                cipher.login_username = c.login.username;\n                cipher.login_password = c.login.password;\n                cipher.login_totp = c.login.totp;\n\n                if (c.login.uris) {\n                    cipher.login_uri = [];\n                    c.login.uris.forEach((u) => {\n                        cipher.login_uri.push(u.uri);\n                    });\n                }\n                break;\n            case CipherType.SecureNote:\n                cipher.type = 'note';\n                break;\n            default:\n                return;\n        }\n\n        return cipher;\n    }\n}\n","import { CipherType } from '../../enums/cipherType';\n\nimport { CipherView } from '../view/cipherView';\n\nimport { Card } from './card';\nimport { Field } from './field';\nimport { Identity } from './identity';\nimport { Login } from './login';\nimport { SecureNote } from './secureNote';\n\nexport class Cipher {\n    static template(): Cipher {\n        const req = new Cipher();\n        req.organizationId = null;\n        req.folderId = null;\n        req.type = CipherType.Login;\n        req.name = 'Item name';\n        req.notes = 'Some notes about this item.';\n        req.favorite = false;\n        req.fields = [];\n        req.login = null;\n        req.secureNote = null;\n        req.card = null;\n        req.identity = null;\n        return req;\n    }\n\n    static toView(req: Cipher, view = new CipherView()) {\n        view.type = req.type;\n        view.folderId = req.folderId;\n        if (view.organizationId == null) {\n            view.organizationId = req.organizationId;\n        }\n        view.name = req.name;\n        view.notes = req.notes;\n        view.favorite = req.favorite;\n\n        if (req.fields != null) {\n            view.fields = req.fields.map((f) => Field.toView(f));\n        }\n\n        switch (req.type) {\n            case CipherType.Login:\n                view.login = Login.toView(req.login);\n                break;\n            case CipherType.SecureNote:\n                view.secureNote = SecureNote.toView(req.secureNote);\n                break;\n            case CipherType.Card:\n                view.card = Card.toView(req.card);\n                break;\n            case CipherType.Identity:\n                view.identity = Identity.toView(req.identity);\n                break;\n        }\n\n        return view;\n    }\n\n    type: CipherType;\n    folderId: string;\n    organizationId: string;\n    name: string;\n    notes: string;\n    favorite: boolean;\n    fields: Field[];\n    login: Login;\n    secureNote: SecureNote;\n    card: Card;\n    identity: Identity;\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: CipherView) {\n        this.organizationId = o.organizationId;\n        this.folderId = o.folderId;\n        this.type = o.type;\n        this.name = o.name;\n        this.notes = o.notes;\n        this.favorite = o.favorite;\n\n        if (o.fields != null) {\n            this.fields = o.fields.map((f) => new Field(f));\n        }\n\n        switch (o.type) {\n            case CipherType.Login:\n                this.login = new Login(o.login);\n                break;\n            case CipherType.SecureNote:\n                this.secureNote = new SecureNote(o.secureNote);\n                break;\n            case CipherType.Card:\n                this.card = new Card(o.card);\n                break;\n            case CipherType.Identity:\n                this.identity = new Identity(o.identity);\n                break;\n        }\n    }\n}\n","import { CardView } from '../view/cardView';\n\nexport class Card {\n    static template(): Card {\n        const req = new Card();\n        req.cardholderName = 'John Doe';\n        req.brand = 'visa';\n        req.number = '4242424242424242';\n        req.expMonth = '04';\n        req.expYear = '2023';\n        req.code = '123';\n        return req;\n    }\n\n    static toView(req: Card, view = new CardView()) {\n        view.cardholderName = req.cardholderName;\n        view.brand = req.brand;\n        view.number = req.number;\n        view.expMonth = req.expMonth;\n        view.expYear = req.expYear;\n        view.code = req.code;\n        return view;\n    }\n\n    cardholderName: string;\n    brand: string;\n    number: string;\n    expMonth: string;\n    expYear: string;\n    code: string;\n\n    constructor(o?: CardView) {\n        if (o == null) {\n            return;\n        }\n\n        this.cardholderName = o.cardholderName;\n        this.brand = o.brand;\n        this.number = o.number;\n        this.expMonth = o.expMonth;\n        this.expYear = o.expYear;\n        this.code = o.code;\n    }\n}\n","import { FieldType } from '../../enums/fieldType';\n\nimport { FieldView } from '../view/fieldView';\n\nexport class Field {\n    static template(): Field {\n        const req = new Field();\n        req.name = 'Field name';\n        req.value = 'Some value';\n        req.type = FieldType.Text;\n        return req;\n    }\n\n    static toView(req: Field, view = new FieldView()) {\n        view.type = req.type;\n        view.value = req.value;\n        view.name = req.name;\n        return view;\n    }\n\n    name: string;\n    value: string;\n    type: FieldType;\n\n    constructor(o?: FieldView) {\n        if (o == null) {\n            return;\n        }\n\n        this.name = o.name;\n        this.value = o.value;\n        this.type = o.type;\n    }\n}\n","import { IdentityView } from '../view/identityView';\n\nexport class Identity {\n    static template(): Identity {\n        const req = new Identity();\n        req.title = 'Mr';\n        req.firstName = 'John';\n        req.middleName = 'William';\n        req.lastName = 'Doe';\n        req.address1 = '123 Any St';\n        req.address2 = 'Apt #123';\n        req.address3 = null;\n        req.city = 'New York';\n        req.state = 'NY';\n        req.postalCode = '10001';\n        req.country = 'US';\n        req.company = 'Acme Inc.';\n        req.email = 'john@company.com';\n        req.phone = '5555551234';\n        req.ssn = '000-123-4567';\n        req.username = 'jdoe';\n        req.passportNumber = 'US-123456789';\n        req.licenseNumber = 'D123-12-123-12333';\n        return req;\n    }\n\n    static toView(req: Identity, view = new IdentityView()) {\n        view.title = req.title;\n        view.firstName = req.firstName;\n        view.middleName = req.middleName;\n        view.lastName = req.lastName;\n        view.address1 = req.address1;\n        view.address2 = req.address2;\n        view.address3 = req.address3;\n        view.city = req.city;\n        view.state = req.state;\n        view.postalCode = req.postalCode;\n        view.country = req.country;\n        view.company = req.company;\n        view.email = req.email;\n        view.phone = req.phone;\n        view.ssn = req.ssn;\n        view.username = req.username;\n        view.passportNumber = req.passportNumber;\n        view.licenseNumber = req.licenseNumber;\n        return view;\n    }\n\n    title: string;\n    firstName: string;\n    middleName: string;\n    lastName: string;\n    address1: string;\n    address2: string;\n    address3: string;\n    city: string;\n    state: string;\n    postalCode: string;\n    country: string;\n    company: string;\n    email: string;\n    phone: string;\n    ssn: string;\n    username: string;\n    passportNumber: string;\n    licenseNumber: string;\n\n    constructor(o?: IdentityView) {\n        if (o == null) {\n            return;\n        }\n\n        this.title = o.title;\n        this.firstName = o.firstName;\n        this.middleName = o.middleName;\n        this.lastName = o.lastName;\n        this.address1 = o.address1;\n        this.address2 = o.address2;\n        this.address3 = o.address3;\n        this.city = o.city;\n        this.state = o.state;\n        this.postalCode = o.postalCode;\n        this.country = o.country;\n        this.company = o.company;\n        this.email = o.email;\n        this.phone = o.phone;\n        this.ssn = o.ssn;\n        this.username = o.username;\n        this.passportNumber = o.passportNumber;\n        this.licenseNumber = o.licenseNumber;\n    }\n}\n","import { LoginUri } from './loginUri';\n\nimport { LoginView } from '../view/loginView';\n\nexport class Login {\n    static template(): Login {\n        const req = new Login();\n        req.uris = [];\n        req.username = 'jdoe';\n        req.password = 'myp@ssword123';\n        req.totp = 'JBSWY3DPEHPK3PXP';\n        return req;\n    }\n\n    static toView(req: Login, view = new LoginView()) {\n        if (req.uris != null) {\n            view.uris = req.uris.map((u) => LoginUri.toView(u));\n        }\n        view.username = req.username;\n        view.password = req.password;\n        view.totp = req.totp;\n        return view;\n    }\n\n    uris: LoginUri[];\n    username: string;\n    password: string;\n    totp: string;\n\n    constructor(o?: LoginView) {\n        if (o == null) {\n            return;\n        }\n\n        if (o.uris != null) {\n            this.uris = o.uris.map((u) => new LoginUri(u));\n        }\n\n        this.username = o.username;\n        this.password = o.password;\n        this.totp = o.totp;\n    }\n}\n","import { UriMatchType } from '../../enums/uriMatchType';\n\nimport { LoginUriView } from '../view/loginUriView';\n\nexport class LoginUri {\n    static template(): LoginUri {\n        const req = new LoginUri();\n        req.uri = 'https://google.com';\n        req.match = null;\n        return req;\n    }\n\n    static toView(req: LoginUri, view = new LoginUriView()) {\n        view.uri = req.uri;\n        view.match = req.match;\n        return view;\n    }\n\n    uri: string;\n    match: UriMatchType = null;\n\n    constructor(o?: LoginUriView) {\n        if (o == null) {\n            return;\n        }\n\n        this.uri = o.uri;\n        this.match = o.match;\n    }\n}\n","import { SecureNoteType } from '../../enums/secureNoteType';\n\nimport { SecureNoteView } from '../view/secureNoteView';\n\nexport class SecureNote {\n    static template(): SecureNote {\n        const req = new SecureNote();\n        req.type = SecureNoteType.Generic;\n        return req;\n    }\n\n    static toView(req: SecureNote, view = new SecureNoteView()) {\n        view.type = req.type;\n        return view;\n    }\n\n    type: SecureNoteType;\n\n    constructor(o?: SecureNoteView) {\n        if (o == null) {\n            return;\n        }\n\n        this.type = o.type;\n    }\n}\n","import { CollectionView } from '../view/collectionView';\n\nexport class Collection {\n    static template(): Collection {\n        const req = new Collection();\n        req.organizationId = '00000000-0000-0000-0000-000000000000';\n        req.name = 'Collection name';\n        req.externalId = null;\n        return req;\n    }\n\n    static toView(req: Collection, view = new CollectionView()) {\n        view.name = req.name;\n        view.externalId = req.externalId;\n        if (view.organizationId == null) {\n            view.organizationId = req.organizationId;\n        }\n        return view;\n    }\n\n    organizationId: string;\n    name: string;\n    externalId: string;\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: CollectionView) {\n        this.organizationId = o.organizationId;\n        this.name = o.name;\n        this.externalId = o.externalId;\n    }\n}\n","import { FolderView } from '../view/folderView';\n\nexport class Folder {\n    static template(): Folder {\n        const req = new Folder();\n        req.name = 'Folder name';\n        return req;\n    }\n\n    static toView(req: Folder, view = new FolderView()) {\n        view.name = req.name;\n        return view;\n    }\n\n    name: string;\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: FolderView) {\n        this.name = o.name;\n    }\n}\n","import { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { CollectionService } from '../abstractions/collection.service';\nimport { FolderService } from '../abstractions/folder.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport {\n    ImportOption,\n    ImportService as ImportServiceAbstraction,\n} from '../abstractions/import.service';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherType } from '../enums/cipherType';\n\nimport { Utils } from '../misc/utils';\n\nimport { CipherRequest } from '../models/request/cipherRequest';\nimport { CollectionRequest } from '../models/request/collectionRequest';\nimport { FolderRequest } from '../models/request/folderRequest';\nimport { ImportCiphersRequest } from '../models/request/importCiphersRequest';\nimport { ImportOrganizationCiphersRequest } from '../models/request/importOrganizationCiphersRequest';\nimport { KvpRequest } from '../models/request/kvpRequest';\n\nimport { CipherView } from '../models/view/cipherView';\n\nimport { AscendoCsvImporter } from '../importers/ascendoCsvImporter';\nimport { AvastCsvImporter } from '../importers/avastCsvImporter';\nimport { AviraCsvImporter } from '../importers/aviraCsvImporter';\nimport { BitwardenCsvImporter } from '../importers/bitwardenCsvImporter';\nimport { BitwardenJsonImporter } from '../importers/bitwardenJsonImporter';\nimport { BlurCsvImporter } from '../importers/blurCsvImporter';\nimport { ChromeCsvImporter } from '../importers/chromeCsvImporter';\nimport { ClipperzHtmlImporter } from '../importers/clipperzHtmlImporter';\nimport { DashlaneJsonImporter } from '../importers/dashlaneJsonImporter';\nimport { EnpassCsvImporter } from '../importers/enpassCsvImporter';\nimport { EnpassJsonImporter } from '../importers/enpassJsonImporter';\nimport { FirefoxCsvImporter } from '../importers/firefoxCsvImporter';\nimport { FSecureFskImporter } from '../importers/fsecureFskImporter';\nimport { GnomeJsonImporter } from '../importers/gnomeJsonImporter';\nimport { Importer } from '../importers/importer';\nimport { KasperskyTxtImporter } from '../importers/kasperskyTxtImporter';\nimport { KeePass2XmlImporter } from '../importers/keepass2XmlImporter';\nimport { KeePassXCsvImporter } from '../importers/keepassxCsvImporter';\nimport { KeeperCsvImporter } from '../importers/keeperCsvImporter';\nimport { LastPassCsvImporter } from '../importers/lastpassCsvImporter';\nimport { LogMeOnceCsvImporter } from '../importers/logMeOnceCsvImporter';\nimport { MeldiumCsvImporter } from '../importers/meldiumCsvImporter';\nimport { MSecureCsvImporter } from '../importers/msecureCsvImporter';\nimport { MykiCsvImporter } from '../importers/mykiCsvImporter';\nimport { OnePassword1PifImporter } from '../importers/onepassword1PifImporter';\nimport { OnePasswordWinCsvImporter } from '../importers/onepasswordWinCsvImporter';\nimport { PadlockCsvImporter } from '../importers/padlockCsvImporter';\nimport { PassKeepCsvImporter } from '../importers/passkeepCsvImporter';\nimport { PassmanJsonImporter } from '../importers/passmanJsonImporter';\nimport { PasspackCsvImporter } from '../importers/passpackCsvImporter';\nimport { PasswordAgentCsvImporter } from '../importers/passwordAgentCsvImporter';\nimport { PasswordBossJsonImporter } from '../importers/passwordBossJsonImporter';\nimport { PasswordDragonXmlImporter } from '../importers/passwordDragonXmlImporter';\nimport { PasswordSafeXmlImporter } from '../importers/passwordSafeXmlImporter';\nimport { PasswordWalletTxtImporter } from '../importers/passwordWalletTxtImporter';\nimport { RememBearCsvImporter } from '../importers/rememBearCsvImporter';\nimport { RoboFormCsvImporter } from '../importers/roboformCsvImporter';\nimport { SafeInCloudXmlImporter } from '../importers/safeInCloudXmlImporter';\nimport { SaferPassCsvImporter } from '../importers/saferpassCsvImport';\nimport { SecureSafeCsvImporter } from '../importers/secureSafeCsvImporter';\nimport { SplashIdCsvImporter } from '../importers/splashIdCsvImporter';\nimport { StickyPasswordXmlImporter } from '../importers/stickyPasswordXmlImporter';\nimport { TrueKeyCsvImporter } from '../importers/truekeyCsvImporter';\nimport { UpmCsvImporter } from '../importers/upmCsvImporter';\nimport { ZohoVaultCsvImporter } from '../importers/zohoVaultCsvImporter';\n\nexport class ImportService implements ImportServiceAbstraction {\n    featuredImportOptions = [\n        { id: 'bitwardenjson', name: 'Bitwarden (json)' },\n        { id: 'bitwardencsv', name: 'Bitwarden (csv)' },\n        { id: 'lastpasscsv', name: 'LastPass (csv)' },\n        { id: 'chromecsv', name: 'Chrome (csv)' },\n        { id: 'firefoxcsv', name: 'Firefox (csv)' },\n        { id: 'keepass2xml', name: 'KeePass 2 (xml)' },\n        { id: '1password1pif', name: '1Password (1pif)' },\n        { id: 'dashlanejson', name: 'Dashlane (json)' },\n    ];\n\n    regularImportOptions: ImportOption[] = [\n        { id: 'keepassxcsv', name: 'KeePassX (csv)' },\n        { id: '1passwordwincsv', name: '1Password 6 and 7 Windows (csv)' },\n        { id: 'roboformcsv', name: 'RoboForm (csv)' },\n        { id: 'keepercsv', name: 'Keeper (csv)' },\n        { id: 'enpasscsv', name: 'Enpass (csv)' },\n        { id: 'enpassjson', name: 'Enpass (json)' },\n        { id: 'safeincloudxml', name: 'SafeInCloud (xml)' },\n        { id: 'pwsafexml', name: 'Password Safe (xml)' },\n        { id: 'stickypasswordxml', name: 'Sticky Password (xml)' },\n        { id: 'msecurecsv', name: 'mSecure (csv)' },\n        { id: 'truekeycsv', name: 'True Key (csv)' },\n        { id: 'passwordbossjson', name: 'Password Boss (json)' },\n        { id: 'zohovaultcsv', name: 'Zoho Vault (csv)' },\n        { id: 'splashidcsv', name: 'SplashID (csv)' },\n        { id: 'passworddragonxml', name: 'Password Dragon (xml)' },\n        { id: 'padlockcsv', name: 'Padlock (csv)' },\n        { id: 'passboltcsv', name: 'Passbolt (csv)' },\n        { id: 'clipperzhtml', name: 'Clipperz (html)' },\n        { id: 'aviracsv', name: 'Avira (csv)' },\n        { id: 'saferpasscsv', name: 'SaferPass (csv)' },\n        { id: 'upmcsv', name: 'Universal Password Manager (csv)' },\n        { id: 'ascendocsv', name: 'Ascendo DataVault (csv)' },\n        { id: 'meldiumcsv', name: 'Meldium (csv)' },\n        { id: 'passkeepcsv', name: 'PassKeep (csv)' },\n        { id: 'operacsv', name: 'Opera (csv)' },\n        { id: 'vivaldicsv', name: 'Vivaldi (csv)' },\n        { id: 'gnomejson', name: 'GNOME Passwords and Keys/Seahorse (json)' },\n        { id: 'blurcsv', name: 'Blur (csv)' },\n        { id: 'passwordagentcsv', name: 'Password Agent (csv)' },\n        { id: 'passpackcsv', name: 'Passpack (csv)' },\n        { id: 'passmanjson', name: 'Passman (json)' },\n        { id: 'avastcsv', name: 'Avast Passwords (csv)' },\n        { id: 'fsecurefsk', name: 'F-Secure KEY (fsk)' },\n        { id: 'kasperskytxt', name: 'Kaspersky Password Manager (txt)' },\n        { id: 'remembearcsv', name: 'RememBear (csv)' },\n        { id: 'passwordwallettxt', name: 'PasswordWallet (txt)' },\n        { id: 'mykicsv', name: 'Myki (csv)' },\n        { id: 'securesafecsv', name: 'SecureSafe (csv)' },\n        { id: 'logmeoncecsv', name: 'LogMeOnce (csv)' },\n    ];\n\n    constructor(private cipherService: CipherService, private folderService: FolderService,\n        private apiService: ApiService, private i18nService: I18nService,\n        private collectionService: CollectionService) { }\n\n    getImportOptions(): ImportOption[] {\n        return this.featuredImportOptions.concat(this.regularImportOptions);\n    }\n\n    async import(importer: Importer, fileContents: string, organizationId: string = null): Promise<Error> {\n        const importResult = await importer.parse(fileContents);\n        if (importResult.success) {\n            if (importResult.folders.length === 0 && importResult.ciphers.length === 0) {\n                return new Error(this.i18nService.t('importNothingError'));\n            } else if (importResult.ciphers.length > 0) {\n                const halfway = Math.floor(importResult.ciphers.length / 2);\n                const last = importResult.ciphers.length - 1;\n\n                if (this.badData(importResult.ciphers[0]) &&\n                    this.badData(importResult.ciphers[halfway]) &&\n                    this.badData(importResult.ciphers[last])) {\n                    return new Error(this.i18nService.t('importFormatError'));\n                }\n            }\n            await this.postImport(importResult, organizationId);\n            return null;\n        } else {\n            return new Error(this.i18nService.t('importFormatError'));\n        }\n    }\n\n    getImporter(format: string, organization = false): Importer {\n        const importer = this.getImporterInstance(format);\n        if (importer == null) {\n            return null;\n        }\n        importer.organization = organization;\n        return importer;\n    }\n\n    private getImporterInstance(format: string) {\n        if (format == null || format === '') {\n            return null;\n        }\n\n        switch (format) {\n            case 'bitwardencsv':\n                return new BitwardenCsvImporter();\n            case 'bitwardenjson':\n                return new BitwardenJsonImporter();\n            case 'lastpasscsv':\n            case 'passboltcsv':\n                return new LastPassCsvImporter();\n            case 'keepassxcsv':\n                return new KeePassXCsvImporter();\n            case 'aviracsv':\n                return new AviraCsvImporter();\n            case 'blurcsv':\n                return new BlurCsvImporter();\n            case 'safeincloudxml':\n                return new SafeInCloudXmlImporter();\n            case 'padlockcsv':\n                return new PadlockCsvImporter();\n            case 'keepass2xml':\n                return new KeePass2XmlImporter();\n            case 'chromecsv':\n            case 'operacsv':\n            case 'vivaldicsv':\n                return new ChromeCsvImporter();\n            case 'firefoxcsv':\n                return new FirefoxCsvImporter();\n            case 'upmcsv':\n                return new UpmCsvImporter();\n            case 'saferpasscsv':\n                return new SaferPassCsvImporter();\n            case 'meldiumcsv':\n                return new MeldiumCsvImporter();\n            case '1password1pif':\n                return new OnePassword1PifImporter();\n            case '1passwordwincsv':\n                return new OnePasswordWinCsvImporter();\n            case 'keepercsv':\n                return new KeeperCsvImporter();\n            case 'passworddragonxml':\n                return new PasswordDragonXmlImporter();\n            case 'enpasscsv':\n                return new EnpassCsvImporter();\n            case 'enpassjson':\n                return new EnpassJsonImporter();\n            case 'pwsafexml':\n                return new PasswordSafeXmlImporter();\n            case 'dashlanejson':\n                return new DashlaneJsonImporter();\n            case 'msecurecsv':\n                return new MSecureCsvImporter();\n            case 'stickypasswordxml':\n                return new StickyPasswordXmlImporter();\n            case 'truekeycsv':\n                return new TrueKeyCsvImporter();\n            case 'clipperzhtml':\n                return new ClipperzHtmlImporter();\n            case 'roboformcsv':\n                return new RoboFormCsvImporter();\n            case 'ascendocsv':\n                return new AscendoCsvImporter();\n            case 'passwordbossjson':\n                return new PasswordBossJsonImporter();\n            case 'zohovaultcsv':\n                return new ZohoVaultCsvImporter();\n            case 'splashidcsv':\n                return new SplashIdCsvImporter();\n            case 'passkeepcsv':\n                return new PassKeepCsvImporter();\n            case 'gnomejson':\n                return new GnomeJsonImporter();\n            case 'passwordagentcsv':\n                return new PasswordAgentCsvImporter();\n            case 'passpackcsv':\n                return new PasspackCsvImporter();\n            case 'passmanjson':\n                return new PassmanJsonImporter();\n            case 'avastcsv':\n                return new AvastCsvImporter();\n            case 'fsecurefsk':\n                return new FSecureFskImporter();\n            case 'kasperskytxt':\n                return new KasperskyTxtImporter();\n            case 'remembearcsv':\n                return new RememBearCsvImporter();\n            case 'passwordwallettxt':\n                return new PasswordWalletTxtImporter();\n            case 'mykicsv':\n                return new MykiCsvImporter();\n            case 'securesafecsv':\n                return new SecureSafeCsvImporter();\n            case 'logmeoncecsv':\n                return new LogMeOnceCsvImporter();\n            default:\n                return null;\n        }\n    }\n\n    private async postImport(importResult: ImportResult, organizationId: string = null) {\n        if (organizationId == null) {\n            const request = new ImportCiphersRequest();\n            for (let i = 0; i < importResult.ciphers.length; i++) {\n                const c = await this.cipherService.encrypt(importResult.ciphers[i]);\n                request.ciphers.push(new CipherRequest(c));\n            }\n            if (importResult.folders != null) {\n                for (let i = 0; i < importResult.folders.length; i++) {\n                    const f = await this.folderService.encrypt(importResult.folders[i]);\n                    request.folders.push(new FolderRequest(f));\n                }\n            }\n            if (importResult.folderRelationships != null) {\n                importResult.folderRelationships.forEach((r) =>\n                    request.folderRelationships.push(new KvpRequest(r[0], r[1])));\n            }\n            return await this.apiService.postImportCiphers(request);\n        } else {\n            const request = new ImportOrganizationCiphersRequest();\n            for (let i = 0; i < importResult.ciphers.length; i++) {\n                importResult.ciphers[i].organizationId = organizationId;\n                const c = await this.cipherService.encrypt(importResult.ciphers[i]);\n                request.ciphers.push(new CipherRequest(c));\n            }\n            if (importResult.collections != null) {\n                for (let i = 0; i < importResult.collections.length; i++) {\n                    importResult.collections[i].organizationId = organizationId;\n                    const c = await this.collectionService.encrypt(importResult.collections[i]);\n                    request.collections.push(new CollectionRequest(c));\n                }\n            }\n            if (importResult.collectionRelationships != null) {\n                importResult.collectionRelationships.forEach((r) =>\n                    request.collectionRelationships.push(new KvpRequest(r[0], r[1])));\n            }\n            return await this.apiService.postImportOrganizationCiphers(organizationId, request);\n        }\n    }\n\n    private badData(c: CipherView) {\n        return (c.name == null || c.name === '--') &&\n            (c.type === CipherType.Login && c.login != null && Utils.isNullOrWhitespace(c.login.password));\n    }\n}\n","import { CipherRequest } from './cipherRequest';\nimport { FolderRequest } from './folderRequest';\nimport { KvpRequest } from './kvpRequest';\n\nexport class ImportCiphersRequest {\n    ciphers: CipherRequest[] = [];\n    folders: FolderRequest[] = [];\n    folderRelationships: Array<KvpRequest<number, number>> = [];\n}\n","import { CipherRequest } from './cipherRequest';\nimport { CollectionRequest } from './collectionRequest';\nimport { KvpRequest } from './kvpRequest';\n\nexport class ImportOrganizationCiphersRequest {\n    ciphers: CipherRequest[] = [];\n    collections: CollectionRequest[] = [];\n    collectionRelationships: Array<KvpRequest<number, number>> = [];\n}\n","export class KvpRequest<TK, TV> {\n    key: TK;\n    value: TV;\n\n    constructor(key: TK, value: TV) {\n        this.key = key;\n        this.value = value;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class AscendoCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (value.length < 2) {\n                return;\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value[value.length - 1]);\n            cipher.name = this.getValueOrDefault(value[0], '--');\n\n            if (value.length > 2 && (value.length % 2) === 0) {\n                for (let i = 0; i < value.length - 2; i += 2) {\n                    const val: string = value[i + 2];\n                    const field: string = value[i + 1];\n                    if (this.isNullOrWhitespace(val) || this.isNullOrWhitespace(field)) {\n                        continue;\n                    }\n\n                    const fieldLower = field.toLowerCase();\n                    if (cipher.login.password == null && this.passwordFieldNames.indexOf(fieldLower) > -1) {\n                        cipher.login.password = this.getValueOrDefault(val);\n                    } else if (cipher.login.username == null &&\n                        this.usernameFieldNames.indexOf(fieldLower) > -1) {\n                        cipher.login.username = this.getValueOrDefault(val);\n                    } else if ((cipher.login.uris == null || cipher.login.uris.length === 0) &&\n                        this.uriFieldNames.indexOf(fieldLower) > -1) {\n                        cipher.login.uris = this.makeUriArray(val);\n                    } else {\n                        this.processKvp(cipher, field, val);\n                    }\n                }\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class AvastCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name);\n            cipher.login.uris = this.makeUriArray(value.web);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.username = this.getValueOrDefault(value.login);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class AviraCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name,\n                this.getValueOrDefault(this.nameFromUrl(value.website), '--'));\n            cipher.login.uris = this.makeUriArray(value.website);\n            cipher.login.password = this.getValueOrDefault(value.password);\n\n            if (this.isNullOrWhitespace(value.username) && !this.isNullOrWhitespace(value.secondary_username)) {\n                cipher.login.username = value.secondary_username;\n            } else {\n                cipher.login.username = this.getValueOrDefault(value.username);\n                cipher.notes = this.getValueOrDefault(value.secondary_username);\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherView } from '../models/view/cipherView';\nimport { CollectionView } from '../models/view/collectionView';\nimport { FieldView } from '../models/view/fieldView';\nimport { FolderView } from '../models/view/folderView';\nimport { LoginView } from '../models/view/loginView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nexport class BitwardenCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (this.organization && !this.isNullOrWhitespace(value.collections)) {\n                const collections = (value.collections as string).split(',');\n                collections.forEach((col) => {\n                    let addCollection = true;\n                    let collectionIndex = result.collections.length;\n\n                    for (let i = 0; i < result.collections.length; i++) {\n                        if (result.collections[i].name === col) {\n                            addCollection = false;\n                            collectionIndex = i;\n                            break;\n                        }\n                    }\n\n                    if (addCollection) {\n                        const collection = new CollectionView();\n                        collection.name = col;\n                        result.collections.push(collection);\n                    }\n\n                    result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n                });\n            } else if (!this.organization) {\n                this.processFolder(result, value.folder);\n            }\n\n            const cipher = new CipherView();\n            cipher.favorite = !this.organization && this.getValueOrDefault(value.favorite, '0') !== '0' ? true : false;\n            cipher.type = CipherType.Login;\n            cipher.notes = this.getValueOrDefault(value.notes);\n            cipher.name = this.getValueOrDefault(value.name, '--');\n\n            if (!this.isNullOrWhitespace(value.fields)) {\n                const fields = this.splitNewLine(value.fields);\n                for (let i = 0; i < fields.length; i++) {\n                    if (this.isNullOrWhitespace(fields[i])) {\n                        continue;\n                    }\n\n                    const delimPosition = fields[i].lastIndexOf(': ');\n                    if (delimPosition === -1) {\n                        continue;\n                    }\n\n                    if (cipher.fields == null) {\n                        cipher.fields = [];\n                    }\n\n                    const field = new FieldView();\n                    field.name = fields[i].substr(0, delimPosition);\n                    field.value = null;\n                    field.type = FieldType.Text;\n                    if (fields[i].length > (delimPosition + 2)) {\n                        field.value = fields[i].substr(delimPosition + 2);\n                    }\n                    cipher.fields.push(field);\n                }\n            }\n\n            const valueType = value.type != null ? value.type.toLowerCase() : null;\n            switch (valueType) {\n                case 'note':\n                    cipher.type = CipherType.SecureNote;\n                    cipher.secureNote = new SecureNoteView();\n                    cipher.secureNote.type = SecureNoteType.Generic;\n                    break;\n                default:\n                    cipher.type = CipherType.Login;\n                    cipher.login = new LoginView();\n                    cipher.login.totp = this.getValueOrDefault(value.login_totp || value.totp);\n                    cipher.login.username = this.getValueOrDefault(value.login_username || value.username);\n                    cipher.login.password = this.getValueOrDefault(value.login_password || value.password);\n                    const uris = this.parseSingleRowCsv(value.login_uri || value.uri);\n                    cipher.login.uris = this.makeUriArray(uris);\n                    break;\n            }\n\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherWithIds } from '../models/export/cipherWithIds';\nimport { CollectionWithId } from '../models/export/collectionWithId';\nimport { FolderWithId } from '../models/export/folderWithId';\n\nexport class BitwardenJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || results.items == null || results.items.length === 0) {\n            result.success = false;\n            return result;\n        }\n\n        const groupingsMap = new Map<string, number>();\n        if (this.organization && results.collections != null) {\n            results.collections.forEach((c: CollectionWithId) => {\n                const collection = CollectionWithId.toView(c);\n                if (collection != null) {\n                    collection.id = null;\n                    collection.organizationId = null;\n                    groupingsMap.set(c.id, result.collections.length);\n                    result.collections.push(collection);\n                }\n            });\n        } else if (!this.organization && results.folders != null) {\n            results.folders.forEach((f: FolderWithId) => {\n                const folder = FolderWithId.toView(f);\n                if (folder != null) {\n                    folder.id = null;\n                    groupingsMap.set(f.id, result.folders.length);\n                    result.folders.push(folder);\n                }\n            });\n        }\n\n        results.items.forEach((c: CipherWithIds) => {\n            const cipher = CipherWithIds.toView(c);\n            // reset ids incase they were set for some reason\n            cipher.id = null;\n            cipher.folderId = null;\n            cipher.organizationId = null;\n            cipher.collectionIds = null;\n\n            // make sure password history is limited\n            if (cipher.passwordHistory != null && cipher.passwordHistory.length > 5) {\n                cipher.passwordHistory = cipher.passwordHistory.slice(0, 5);\n            }\n\n            if (!this.organization && c.folderId != null && groupingsMap.has(c.folderId)) {\n                result.folderRelationships.push([result.ciphers.length, groupingsMap.get(c.folderId)]);\n            } else if (this.organization && c.collectionIds != null) {\n                c.collectionIds.forEach((cId) => {\n                    if (groupingsMap.has(cId)) {\n                        result.collectionRelationships.push([result.ciphers.length, groupingsMap.get(cId)]);\n                    }\n                });\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class BlurCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (value.label === 'null') {\n                value.label = null;\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.label,\n                this.getValueOrDefault(this.nameFromUrl(value.domain), '--'));\n            cipher.login.uris = this.makeUriArray(value.domain);\n            cipher.login.password = this.getValueOrDefault(value.password);\n\n            if (this.isNullOrWhitespace(value.email) && !this.isNullOrWhitespace(value.username)) {\n                cipher.login.username = value.username;\n            } else {\n                cipher.login.username = this.getValueOrDefault(value.email);\n                cipher.notes = this.getValueOrDefault(value.username);\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class ChromeCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            cipher.login.username = this.getValueOrDefault(value.username);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(value.url);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class ClipperzHtmlImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return result;\n        }\n\n        const textarea = doc.querySelector('textarea');\n        if (textarea == null || this.isNullOrWhitespace(textarea.textContent)) {\n            result.errorMessage = 'Missing textarea.';\n            result.success = false;\n            return result;\n        }\n\n        const entries = JSON.parse(textarea.textContent);\n        entries.forEach((entry: any) => {\n            const cipher = this.initLoginCipher();\n            if (!this.isNullOrWhitespace(entry.label)) {\n                cipher.name = entry.label.split(' ')[0];\n            }\n            if (entry.data != null && !this.isNullOrWhitespace(entry.data.notes)) {\n                cipher.notes = entry.data.notes.split('\\\\n').join('\\n');\n            }\n\n            if (entry.currentVersion != null && entry.currentVersion.fields != null) {\n                for (const property in entry.currentVersion.fields) {\n                    if (!entry.currentVersion.fields.hasOwnProperty(property)) {\n                        continue;\n                    }\n\n                    const field = entry.currentVersion.fields[property];\n                    const actionType = field.actionType != null ? field.actionType.toLowerCase() : null;\n                    switch (actionType) {\n                        case 'password':\n                            cipher.login.password = this.getValueOrDefault(field.value);\n                            break;\n                        case 'email':\n                        case 'username':\n                        case 'user':\n                        case 'name':\n                            cipher.login.username = this.getValueOrDefault(field.value);\n                            break;\n                        case 'url':\n                            cipher.login.uris = this.makeUriArray(field.value);\n                            break;\n                        default:\n                            const labelLower = field.label != null ? field.label.toLowerCase() : null;\n                            if (cipher.login.password == null && this.passwordFieldNames.indexOf(labelLower) > -1) {\n                                cipher.login.password = this.getValueOrDefault(field.value);\n                            } else if (cipher.login.username == null &&\n                                this.usernameFieldNames.indexOf(labelLower) > -1) {\n                                cipher.login.username = this.getValueOrDefault(field.value);\n                            } else if ((cipher.login.uris == null || cipher.login.uris.length === 0) &&\n                                this.uriFieldNames.indexOf(labelLower) > -1) {\n                                cipher.login.uris = this.makeUriArray(field.value);\n                            } else {\n                                this.processKvp(cipher, field.label, field.value);\n                            }\n                            break;\n                    }\n                }\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { CipherView } from '../models/view/cipherView';\nimport { IdentityView } from '../models/view/identityView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nconst HandledResults = new Set(['ADDRESS', 'AUTHENTIFIANT', 'BANKSTATEMENT', 'IDCARD', 'IDENTITY',\n    'PAYMENTMEANS_CREDITCARD', 'PAYMENTMEAN_PAYPAL', 'EMAIL']);\n\nexport class DashlaneJsonImporter extends BaseImporter implements Importer {\n    private result: ImportResult;\n\n    parse(data: string): ImportResult {\n        this.result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || results.length === 0) {\n            this.result.success = false;\n            return this.result;\n        }\n\n        if (results.ADDRESS != null) {\n            this.processAddress(results.ADDRESS);\n        }\n        if (results.AUTHENTIFIANT != null) {\n            this.processAuth(results.AUTHENTIFIANT);\n        }\n        if (results.BANKSTATEMENT != null) {\n            this.processNote(results.BANKSTATEMENT, 'BankAccountName');\n        }\n        if (results.IDCARD != null) {\n            this.processNote(results.IDCARD, 'Fullname');\n        }\n        if (results.PAYMENTMEANS_CREDITCARD != null) {\n            this.processCard(results.PAYMENTMEANS_CREDITCARD);\n        }\n        if (results.IDENTITY != null) {\n            this.processIdentity(results.IDENTITY);\n        }\n\n        for (const key in results) {\n            if (results.hasOwnProperty(key) && !HandledResults.has(key)) {\n                this.processNote(results[key], null, 'Generic Note');\n            }\n        }\n\n        this.result.success = true;\n        return this.result;\n    }\n\n    private processAuth(results: any[]) {\n        results.forEach((credential: any) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(credential.title);\n\n            cipher.login.username = this.getValueOrDefault(credential.login,\n                this.getValueOrDefault(credential.secondaryLogin));\n            if (this.isNullOrWhitespace(cipher.login.username)) {\n                cipher.login.username = this.getValueOrDefault(credential.email);\n            } else if (!this.isNullOrWhitespace(credential.email)) {\n                cipher.notes = ('Email: ' + credential.email + '\\n');\n            }\n\n            cipher.login.password = this.getValueOrDefault(credential.password);\n            cipher.login.uris = this.makeUriArray(credential.domain);\n            cipher.notes += this.getValueOrDefault(credential.note, '');\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n    }\n\n    private processIdentity(results: any[]) {\n        results.forEach((obj: any) => {\n            const cipher = new CipherView();\n            cipher.identity = new IdentityView();\n            cipher.type = CipherType.Identity;\n            cipher.name = this.getValueOrDefault(obj.fullName, '');\n            const nameParts = cipher.name.split(' ');\n            if (nameParts.length > 0) {\n                cipher.identity.firstName = this.getValueOrDefault(nameParts[0]);\n            }\n            if (nameParts.length === 2) {\n                cipher.identity.lastName = this.getValueOrDefault(nameParts[1]);\n            } else if (nameParts.length === 3) {\n                cipher.identity.middleName = this.getValueOrDefault(nameParts[1]);\n                cipher.identity.lastName = this.getValueOrDefault(nameParts[2]);\n            }\n            cipher.identity.username = this.getValueOrDefault(obj.pseudo);\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n    }\n\n    private processAddress(results: any[]) {\n        results.forEach((obj: any) => {\n            const cipher = new CipherView();\n            cipher.identity = new IdentityView();\n            cipher.type = CipherType.Identity;\n            cipher.name = this.getValueOrDefault(obj.addressName);\n            cipher.identity.address1 = this.getValueOrDefault(obj.addressFull);\n            cipher.identity.city = this.getValueOrDefault(obj.city);\n            cipher.identity.state = this.getValueOrDefault(obj.state);\n            cipher.identity.postalCode = this.getValueOrDefault(obj.zipcode);\n            cipher.identity.country = this.getValueOrDefault(obj.country);\n            if (cipher.identity.country != null) {\n                cipher.identity.country = cipher.identity.country.toUpperCase();\n            }\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n    }\n\n    private processCard(results: any[]) {\n        results.forEach((obj: any) => {\n            const cipher = new CipherView();\n            cipher.card = new CardView();\n            cipher.type = CipherType.Card;\n            cipher.name = this.getValueOrDefault(obj.bank);\n            cipher.card.number = this.getValueOrDefault(obj.cardNumber);\n            cipher.card.brand = this.getCardBrand(cipher.card.number);\n            cipher.card.cardholderName = this.getValueOrDefault(obj.owner);\n            if (!this.isNullOrWhitespace(cipher.card.brand)) {\n                if (this.isNullOrWhitespace(cipher.name)) {\n                    cipher.name = cipher.card.brand;\n                } else {\n                    cipher.name += (' - ' + cipher.card.brand);\n                }\n            }\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n    }\n\n    private processNote(results: any[], nameProperty: string, name: string = null) {\n        results.forEach((obj: any) => {\n            const cipher = new CipherView();\n            cipher.secureNote = new SecureNoteView();\n            cipher.type = CipherType.SecureNote;\n            cipher.secureNote.type = SecureNoteType.Generic;\n            if (name != null) {\n                cipher.name = name;\n            } else {\n                cipher.name = this.getValueOrDefault(obj[nameProperty]);\n            }\n            for (const key in obj) {\n                if (obj.hasOwnProperty(key) && key !== nameProperty) {\n                    this.processKvp(cipher, key, obj[key].toString());\n                }\n            }\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nimport { CardView } from '../models/view/cardView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nexport class EnpassCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        let firstRow = true;\n        results.forEach((value) => {\n            if (value.length < 2 || (firstRow && (value[0] === 'Title' || value[0] === 'title'))) {\n                firstRow = false;\n                return;\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value[value.length - 1]);\n            cipher.name = this.getValueOrDefault(value[0], '--');\n\n            if (value.length === 2 || (!this.containsField(value, 'username') &&\n                !this.containsField(value, 'password') && !this.containsField(value, 'email') &&\n                !this.containsField(value, 'url'))) {\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote = new SecureNoteView();\n                cipher.secureNote.type = SecureNoteType.Generic;\n            }\n\n            if (this.containsField(value, 'cardholder') && this.containsField(value, 'number') &&\n                this.containsField(value, 'expiry date')) {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n            }\n\n            if (value.length > 2 && (value.length % 2) === 0) {\n                for (let i = 0; i < value.length - 2; i += 2) {\n                    const fieldValue: string = value[i + 2];\n                    if (this.isNullOrWhitespace(fieldValue)) {\n                        continue;\n                    }\n\n                    const fieldName: string = value[i + 1];\n                    const fieldNameLower = fieldName.toLowerCase();\n\n                    if (cipher.type === CipherType.Login) {\n                        if (fieldNameLower === 'url' && (cipher.login.uris == null || cipher.login.uris.length === 0)) {\n                            cipher.login.uris = this.makeUriArray(fieldValue);\n                            continue;\n                        } else if ((fieldNameLower === 'username' || fieldNameLower === 'email') &&\n                            this.isNullOrWhitespace(cipher.login.username)) {\n                            cipher.login.username = fieldValue;\n                            continue;\n                        } else if (fieldNameLower === 'password' && this.isNullOrWhitespace(cipher.login.password)) {\n                            cipher.login.password = fieldValue;\n                            continue;\n                        } else if (fieldNameLower === 'totp' && this.isNullOrWhitespace(cipher.login.totp)) {\n                            cipher.login.totp = fieldValue;\n                            continue;\n                        }\n                    } else if (cipher.type === CipherType.Card) {\n                        if (fieldNameLower === 'cardholder' && this.isNullOrWhitespace(cipher.card.cardholderName)) {\n                            cipher.card.cardholderName = fieldValue;\n                            continue;\n                        } else if (fieldNameLower === 'number' && this.isNullOrWhitespace(cipher.card.number)) {\n                            cipher.card.number = fieldValue;\n                            cipher.card.brand = this.getCardBrand(fieldValue);\n                            continue;\n                        } else if (fieldNameLower === 'cvc' && this.isNullOrWhitespace(cipher.card.code)) {\n                            cipher.card.code = fieldValue;\n                            continue;\n                        } else if (fieldNameLower === 'expiry date' && this.isNullOrWhitespace(cipher.card.expMonth) &&\n                            this.isNullOrWhitespace(cipher.card.expYear)) {\n                            if (this.setCardExpiration(cipher, fieldValue)) {\n                                continue;\n                            }\n                        } else if (fieldNameLower === 'type') {\n                            // Skip since brand was determined from number above\n                            continue;\n                        }\n                    }\n\n                    this.processKvp(cipher, fieldName, fieldValue);\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n\n    private containsField(fields: any[], name: string) {\n        if (fields == null || name == null) {\n            return false;\n        }\n        return fields.filter((f) => !this.isNullOrWhitespace(f) &&\n            f.toLowerCase() === name.toLowerCase()).length > 0;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { CipherView } from '../models/view/cipherView';\n\nimport { CipherType } from '../enums/cipherType';\n\nexport class EnpassJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || results.items == null || results.items.length === 0) {\n            result.success = false;\n            return result;\n        }\n\n        results.items.forEach((item: any) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(item.title);\n            cipher.favorite = item.favorite > 0;\n\n            if (item.template_type != null && item.fields != null && item.fields.length > 0) {\n                if (item.template_type.indexOf('login.') === 0 || item.template_type.indexOf('password.') === 0) {\n                    this.processLogin(cipher, item.fields);\n                } else if (item.template_type.indexOf('creditcard.') === 0) {\n                    this.processCard(cipher, item.fields);\n                } else if (item.template_type.indexOf('identity.') < 0 &&\n                    item.fields.some((f: any) => f.type === 'password' && !this.isNullOrWhitespace(f.value))) {\n                    this.processLogin(cipher, item.fields);\n                } else {\n                    this.processNote(cipher, item.fields);\n                }\n            }\n\n            cipher.notes += ('\\n' + this.getValueOrDefault(item.note, ''));\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n\n    private processLogin(cipher: CipherView, fields: any[]) {\n        const urls: string[] = [];\n        fields.forEach((field: any) => {\n            if (this.isNullOrWhitespace(field.value) || field.type === 'section') {\n                return;\n            }\n\n            if ((field.type === 'username' || field.type === 'email') &&\n                this.isNullOrWhitespace(cipher.login.username)) {\n                cipher.login.username = field.value;\n            } else if (field.type === 'password' && this.isNullOrWhitespace(cipher.login.password)) {\n                cipher.login.password = field.value;\n            } else if (field.type === 'totp' && this.isNullOrWhitespace(cipher.login.totp)) {\n                cipher.login.totp = field.value;\n            } else if (field.type === 'url') {\n                urls.push(field.value);\n            } else {\n                this.processKvp(cipher, field.label, field.value);\n            }\n        });\n        cipher.login.uris = this.makeUriArray(urls);\n    }\n\n    private processCard(cipher: CipherView, fields: any[]) {\n        cipher.card = new CardView();\n        cipher.type = CipherType.Card;\n        fields.forEach((field: any) => {\n            if (this.isNullOrWhitespace(field.value) || field.type === 'section' || field.type === 'ccType') {\n                return;\n            }\n\n            if (field.type === 'ccName' && this.isNullOrWhitespace(cipher.card.cardholderName)) {\n                cipher.card.cardholderName = field.value;\n            } else if (field.type === 'ccNumber' && this.isNullOrWhitespace(cipher.card.number)) {\n                cipher.card.number = field.value;\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n            } else if (field.type === 'ccCvc' && this.isNullOrWhitespace(cipher.card.code)) {\n                cipher.card.code = field.value;\n            } else if (field.type === 'ccExpiry' && this.isNullOrWhitespace(cipher.card.expYear)) {\n                if (!this.setCardExpiration(cipher, field.value)) {\n                    this.processKvp(cipher, field.label, field.value);\n                }\n            } else {\n                this.processKvp(cipher, field.label, field.value);\n            }\n        });\n    }\n\n    private processNote(cipher: CipherView, fields: any[]) {\n        fields.forEach((field: any) => {\n            if (this.isNullOrWhitespace(field.value) || field.type === 'section') {\n                return;\n            }\n            this.processKvp(cipher, field.label, field.value);\n        });\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class FirefoxCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(this.nameFromUrl(value.hostname), '--');\n            cipher.login.username = this.getValueOrDefault(value.username);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(value.hostname);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\n\nimport { CipherType } from '../enums/cipherType';\n\nexport class FSecureFskImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || results.data == null) {\n            result.success = false;\n            return result;\n        }\n\n        for (const key in results.data) {\n            if (!results.data.hasOwnProperty(key)) {\n                continue;\n            }\n\n            const value = results.data[key];\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.service);\n            cipher.notes = this.getValueOrDefault(value.notes);\n\n            if (value.style === 'website') {\n                cipher.login.username = this.getValueOrDefault(value.username);\n                cipher.login.password = this.getValueOrDefault(value.password);\n                cipher.login.uris = this.makeUriArray(value.url);\n            } else if (value.style === 'creditcard') {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n                cipher.card.cardholderName = this.getValueOrDefault(value.username);\n                cipher.card.number = this.getValueOrDefault(value.creditNumber);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                cipher.card.code = this.getValueOrDefault(value.creditCvv);\n                if (!this.isNullOrWhitespace(value.creditExpiry)) {\n                    if (!this.setCardExpiration(cipher, value.creditExpiry)) {\n                        this.processKvp(cipher, 'Expiration', value.creditExpiry);\n                    }\n                }\n                if (!this.isNullOrWhitespace(value.password)) {\n                    this.processKvp(cipher, 'PIN', value.password);\n                }\n            } else {\n                continue;\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class GnomeJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || Object.keys(results).length === 0) {\n            result.success = false;\n            return result;\n        }\n\n        for (const keyRing in results) {\n            if (!results.hasOwnProperty(keyRing) || this.isNullOrWhitespace(keyRing) ||\n                results[keyRing].length === 0) {\n                continue;\n            }\n\n            results[keyRing].forEach((value: any) => {\n                if (this.isNullOrWhitespace(value.display_name) || value.display_name.indexOf('http') !== 0) {\n                    return;\n                }\n\n                this.processFolder(result, keyRing);\n                const cipher = this.initLoginCipher();\n                cipher.name = value.display_name.replace('http://', '').replace('https://', '');\n                if (cipher.name.length > 30) {\n                    cipher.name = cipher.name.substring(0, 30);\n                }\n                cipher.login.password = this.getValueOrDefault(value.secret);\n                cipher.login.uris = this.makeUriArray(value.display_name);\n\n                if (value.attributes != null) {\n                    cipher.login.username = value.attributes != null ?\n                        this.getValueOrDefault(value.attributes.username_value) : null;\n                    for (const attr in value.attributes) {\n                        if (!value.attributes.hasOwnProperty(attr) || attr === 'username_value' ||\n                            attr === 'xdg:schema') {\n                            continue;\n                        }\n                        this.processKvp(cipher, attr, value.attributes[attr]);\n                    }\n                }\n\n                this.convertToNoteIfNeeded(cipher);\n                this.cleanupCipher(cipher);\n                result.ciphers.push(cipher);\n            });\n        }\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nconst NotesHeader = 'Notes\\n\\n';\nconst ApplicationsHeader = 'Applications\\n\\n';\nconst WebsitesHeader = 'Websites\\n\\n';\nconst Delimiter = '\\n---\\n';\n\nexport class KasperskyTxtImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n\n        let notesData: string;\n        let applicationsData: string;\n        let websitesData: string;\n        let workingData = this.splitNewLine(data).join('\\n');\n\n        if (workingData.indexOf(NotesHeader) !== -1) {\n            const parts = workingData.split(NotesHeader);\n            if (parts.length > 1) {\n                workingData = parts[0];\n                notesData = parts[1];\n            }\n        }\n        if (workingData.indexOf(ApplicationsHeader) !== -1) {\n            const parts = workingData.split(ApplicationsHeader);\n            if (parts.length > 1) {\n                workingData = parts[0];\n                applicationsData = parts[1];\n            }\n        }\n        if (workingData.indexOf(WebsitesHeader) === 0) {\n            const parts = workingData.split(WebsitesHeader);\n            if (parts.length > 1) {\n                workingData = parts[0];\n                websitesData = parts[1];\n            }\n        }\n\n        const notes = this.parseDataCategory(notesData);\n        const applications = this.parseDataCategory(applicationsData);\n        const websites = this.parseDataCategory(websitesData);\n\n        notes.forEach((n) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(n.get('Name'));\n            cipher.notes = this.getValueOrDefault(n.get('Text'));\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        websites.concat(applications).forEach((w) => {\n            const cipher = this.initLoginCipher();\n            const nameKey = w.has('Website name') ? 'Website name' : 'Application';\n            cipher.name = this.getValueOrDefault(w.get(nameKey), '');\n            if (!this.isNullOrWhitespace(w.get('Login name'))) {\n                if (!this.isNullOrWhitespace(cipher.name)) {\n                    cipher.name += ': ';\n                }\n                cipher.name += w.get('Login name');\n            }\n            cipher.notes = this.getValueOrDefault(w.get('Comment'));\n            if (w.has('Website URL')) {\n                cipher.login.uris = this.makeUriArray(w.get('Website URL'));\n            }\n            cipher.login.username = this.getValueOrDefault(w.get('Login'));\n            cipher.login.password = this.getValueOrDefault(w.get('Password'));\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n\n    private parseDataCategory(data: string): Array<Map<string, string>> {\n        if (this.isNullOrWhitespace(data) || data.indexOf(Delimiter) === -1) {\n            return [];\n        }\n        const items: Array<Map<string, string>> = [];\n        data.split(Delimiter).forEach((p) => {\n            if (p.indexOf('\\n') === -1) {\n                return;\n            }\n            const item = new Map<string, string>();\n            let itemComment: string;\n            let itemCommentKey: string;\n            p.split('\\n').forEach((l) => {\n                if (itemComment != null) {\n                    itemComment += ('\\n' + l);\n                    return;\n                }\n                const colonIndex = l.indexOf(':');\n                let key: string;\n                let val: string;\n                if (colonIndex === -1) {\n                    return;\n                } else {\n                    key = l.substring(0, colonIndex);\n                    if (l.length > colonIndex + 1) {\n                        val = l.substring(colonIndex + 2);\n                    }\n                }\n                if (key != null) {\n                    item.set(key, val);\n                }\n                if (key === 'Comment' || key === 'Text') {\n                    itemComment = val;\n                    itemCommentKey = key;\n                }\n            });\n            if (itemComment != null && itemCommentKey != null) {\n                item.set(itemCommentKey, itemComment);\n            }\n            if (item.size === 0) {\n                return;\n            }\n            items.push(item);\n        });\n        return items;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { FolderView } from '../models/view/folderView';\n\nexport class KeePass2XmlImporter extends BaseImporter implements Importer {\n    result = new ImportResult();\n\n    parse(data: string): ImportResult {\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            this.result.success = false;\n            return this.result;\n        }\n\n        const rootGroup = doc.querySelector('KeePassFile > Root > Group');\n        if (rootGroup == null) {\n            this.result.errorMessage = 'Missing `KeePassFile > Root > Group` node.';\n            this.result.success = false;\n            return this.result;\n        }\n\n        this.traverse(rootGroup, true, '');\n\n        if (this.organization) {\n            this.moveFoldersToCollections(this.result);\n        }\n\n        this.result.success = true;\n        return this.result;\n    }\n\n    traverse(node: Element, isRootNode: boolean, groupPrefixName: string) {\n        const folderIndex = this.result.folders.length;\n        let groupName = groupPrefixName;\n\n        if (!isRootNode) {\n            if (groupName !== '') {\n                groupName += '/';\n            }\n            const nameEl = this.querySelectorDirectChild(node, 'Name');\n            groupName += nameEl == null ? '-' : nameEl.textContent;\n            const folder = new FolderView();\n            folder.name = groupName;\n            this.result.folders.push(folder);\n        }\n\n        this.querySelectorAllDirectChild(node, 'Entry').forEach((entry) => {\n            const cipherIndex = this.result.ciphers.length;\n\n            const cipher = this.initLoginCipher();\n            this.querySelectorAllDirectChild(entry, 'String').forEach((entryString) => {\n                const valueEl = this.querySelectorDirectChild(entryString, 'Value');\n                const value = valueEl != null ? valueEl.textContent : null;\n                if (this.isNullOrWhitespace(value)) {\n                    return;\n                }\n                const keyEl = this.querySelectorDirectChild(entryString, 'Key');\n                const key = keyEl != null ? keyEl.textContent : null;\n\n                if (key === 'URL') {\n                    cipher.login.uris = this.makeUriArray(value);\n                } else if (key === 'UserName') {\n                    cipher.login.username = value;\n                } else if (key === 'Password') {\n                    cipher.login.password = value;\n                } else if (key === 'Title') {\n                    cipher.name = value;\n                } else if (key === 'Notes') {\n                    cipher.notes += (value + '\\n');\n                } else {\n                    this.processKvp(cipher, key, value);\n                }\n            });\n\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n\n            if (!isRootNode) {\n                this.result.folderRelationships.push([cipherIndex, folderIndex]);\n            }\n        });\n\n        this.querySelectorAllDirectChild(node, 'Group').forEach((group) => {\n            this.traverse(group, false, groupName);\n        });\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class KeePassXCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (this.isNullOrWhitespace(value.Title)) {\n                return;\n            }\n\n            value.Group = !this.isNullOrWhitespace(value.Group) && value.Group.startsWith('Root/') ?\n                value.Group.replace('Root/', '') : value.Group;\n            const groupName = !this.isNullOrWhitespace(value.Group) ? value.Group : null;\n            this.processFolder(result, groupName);\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value.Notes);\n            cipher.name = this.getValueOrDefault(value.Title, '--');\n            cipher.login.username = this.getValueOrDefault(value.Username);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.uris = this.makeUriArray(value.URL);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { FolderView } from '../models/view/folderView';\n\nexport class KeeperCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (value.length < 6) {\n                return;\n            }\n\n            this.processFolder(result, value[0]);\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value[5]) + '\\n';\n            cipher.name = this.getValueOrDefault(value[1], '--');\n            cipher.login.username = this.getValueOrDefault(value[2]);\n            cipher.login.password = this.getValueOrDefault(value[3]);\n            cipher.login.uris = this.makeUriArray(value[4]);\n\n            if (value.length > 7) {\n                // we have some custom fields.\n                for (let i = 7; i < value.length; i = i + 2) {\n                    this.processKvp(cipher, value[i], value[i + 1]);\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { CipherView } from '../models/view/cipherView';\nimport { FolderView } from '../models/view/folderView';\nimport { IdentityView } from '../models/view/identityView';\nimport { LoginView } from '../models/view/loginView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nexport class LastPassCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value, index) => {\n            const cipherIndex = result.ciphers.length;\n            let folderIndex = result.folders.length;\n            let grouping = value.grouping;\n            if (grouping != null) {\n                grouping = grouping.replace(/\\\\/g, '/').replace(/[\\x00-\\x1F\\x7F-\\x9F]/g, '');\n            }\n            const hasFolder = this.getValueOrDefault(grouping, '(none)') !== '(none)';\n            let addFolder = hasFolder;\n\n            if (hasFolder) {\n                for (let i = 0; i < result.folders.length; i++) {\n                    if (result.folders[i].name === grouping) {\n                        addFolder = false;\n                        folderIndex = i;\n                        break;\n                    }\n                }\n            }\n\n            const cipher = this.buildBaseCipher(value);\n            if (cipher.type === CipherType.Login) {\n                cipher.notes = this.getValueOrDefault(value.extra);\n                cipher.login = new LoginView();\n                cipher.login.uris = this.makeUriArray(value.url);\n                cipher.login.username = this.getValueOrDefault(value.username);\n                cipher.login.password = this.getValueOrDefault(value.password);\n            } else if (cipher.type === CipherType.SecureNote) {\n                this.parseSecureNote(value, cipher);\n            } else if (cipher.type === CipherType.Card) {\n                cipher.card = this.parseCard(value);\n                cipher.notes = this.getValueOrDefault(value.notes);\n            } else if (cipher.type === CipherType.Identity) {\n                cipher.identity = this.parseIdentity(value);\n                cipher.notes = this.getValueOrDefault(value.notes);\n                if (!this.isNullOrWhitespace(value.ccnum)) {\n                    // there is a card on this identity too\n                    const cardCipher = this.buildBaseCipher(value);\n                    cardCipher.identity = null;\n                    cardCipher.type = CipherType.Card;\n                    cardCipher.card = this.parseCard(value);\n                    result.ciphers.push(cardCipher);\n                }\n            }\n\n            result.ciphers.push(cipher);\n\n            if (addFolder) {\n                const f = new FolderView();\n                f.name = grouping;\n                result.folders.push(f);\n            }\n            if (hasFolder) {\n                result.folderRelationships.push([cipherIndex, folderIndex]);\n            }\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n\n    private buildBaseCipher(value: any) {\n        const cipher = new CipherView();\n        if (value.hasOwnProperty('profilename') && value.hasOwnProperty('profilelanguage')) {\n            // form fill\n            cipher.favorite = false;\n            cipher.name = this.getValueOrDefault(value.profilename, '--');\n            cipher.type = CipherType.Card;\n\n            if (!this.isNullOrWhitespace(value.title) || !this.isNullOrWhitespace(value.firstname) ||\n                !this.isNullOrWhitespace(value.lastname) || !this.isNullOrWhitespace(value.address1) ||\n                !this.isNullOrWhitespace(value.phone) || !this.isNullOrWhitespace(value.username) ||\n                !this.isNullOrWhitespace(value.email)) {\n                cipher.type = CipherType.Identity;\n            }\n        } else {\n            // site or secure note\n            cipher.favorite = !this.organization && this.getValueOrDefault(value.fav, '0') === '1';\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            cipher.type = value.url === 'http://sn' ? CipherType.SecureNote : CipherType.Login;\n        }\n        return cipher;\n    }\n\n    private parseCard(value: any): CardView {\n        const card = new CardView();\n        card.cardholderName = this.getValueOrDefault(value.ccname);\n        card.number = this.getValueOrDefault(value.ccnum);\n        card.code = this.getValueOrDefault(value.cccsc);\n        card.brand = this.getCardBrand(value.ccnum);\n\n        if (!this.isNullOrWhitespace(value.ccexp) && value.ccexp.indexOf('-') > -1) {\n            const ccexpParts = (value.ccexp as string).split('-');\n            if (ccexpParts.length > 1) {\n                card.expYear = ccexpParts[0];\n                card.expMonth = ccexpParts[1];\n                if (card.expMonth.length === 2 && card.expMonth[0] === '0') {\n                    card.expMonth = card.expMonth[1];\n                }\n            }\n        }\n\n        return card;\n    }\n\n    private parseIdentity(value: any): IdentityView {\n        const identity = new IdentityView();\n        identity.title = this.getValueOrDefault(value.title);\n        identity.firstName = this.getValueOrDefault(value.firstname);\n        identity.middleName = this.getValueOrDefault(value.middlename);\n        identity.lastName = this.getValueOrDefault(value.lastname);\n        identity.username = this.getValueOrDefault(value.username);\n        identity.company = this.getValueOrDefault(value.company);\n        identity.ssn = this.getValueOrDefault(value.ssn);\n        identity.address1 = this.getValueOrDefault(value.address1);\n        identity.address2 = this.getValueOrDefault(value.address2);\n        identity.address3 = this.getValueOrDefault(value.address3);\n        identity.city = this.getValueOrDefault(value.city);\n        identity.state = this.getValueOrDefault(value.state);\n        identity.postalCode = this.getValueOrDefault(value.zip);\n        identity.country = this.getValueOrDefault(value.country);\n        identity.email = this.getValueOrDefault(value.email);\n        identity.phone = this.getValueOrDefault(value.phone);\n\n        if (!this.isNullOrWhitespace(identity.title)) {\n            identity.title = identity.title.charAt(0).toUpperCase() + identity.title.slice(1);\n        }\n\n        return identity;\n    }\n\n    private parseSecureNote(value: any, cipher: CipherView) {\n        const extraParts = this.splitNewLine(value.extra);\n        let processedNote = false;\n\n        if (extraParts.length) {\n            const typeParts = extraParts[0].split(':');\n            if (typeParts.length > 1 && typeParts[0] === 'NoteType' &&\n                (typeParts[1] === 'Credit Card' || typeParts[1] === 'Address')) {\n                if (typeParts[1] === 'Credit Card') {\n                    const mappedData = this.parseSecureNoteMapping<CardView>(extraParts, {\n                        'Number': 'number',\n                        'Name on Card': 'cardholderName',\n                        'Security Code': 'code',\n                    });\n                    cipher.type = CipherType.Card;\n                    cipher.card = mappedData[0];\n                    cipher.notes = mappedData[1];\n                } else if (typeParts[1] === 'Address') {\n                    const mappedData = this.parseSecureNoteMapping<IdentityView>(extraParts, {\n                        'Title': 'title',\n                        'First Name': 'firstName',\n                        'Last Name': 'lastName',\n                        'Middle Name': 'middleName',\n                        'Company': 'company',\n                        'Address 1': 'address1',\n                        'Address 2': 'address2',\n                        'Address 3': 'address3',\n                        'City / Town': 'city',\n                        'State': 'state',\n                        'Zip / Postal Code': 'postalCode',\n                        'Country': 'country',\n                        'Email Address': 'email',\n                        'Username': 'username',\n                    });\n                    cipher.type = CipherType.Identity;\n                    cipher.identity = mappedData[0];\n                    cipher.notes = mappedData[1];\n                }\n                processedNote = true;\n            }\n        }\n\n        if (!processedNote) {\n            cipher.secureNote = new SecureNoteView();\n            cipher.secureNote.type = SecureNoteType.Generic;\n            cipher.notes = this.getValueOrDefault(value.extra);\n        }\n    }\n\n    private parseSecureNoteMapping<T>(extraParts: string[], map: any): [T, string] {\n        let notes: string = null;\n        const dataObj: any = {};\n\n        let processingNotes = false;\n        extraParts.forEach((extraPart) => {\n            let key: string = null;\n            let val: string = null;\n            if (!processingNotes) {\n                if (this.isNullOrWhitespace(extraPart)) {\n                    return;\n                }\n                const colonIndex = extraPart.indexOf(':');\n                if (colonIndex === -1) {\n                    key = extraPart;\n                } else {\n                    key = extraPart.substring(0, colonIndex);\n                    if (extraPart.length > colonIndex) {\n                        val = extraPart.substring(colonIndex + 1);\n                    }\n                }\n                if (this.isNullOrWhitespace(key) || this.isNullOrWhitespace(val) || key === 'NoteType') {\n                    return;\n                }\n            }\n\n            if (processingNotes) {\n                notes += ('\\n' + extraPart);\n            } else if (key === 'Notes') {\n                if (!this.isNullOrWhitespace(notes)) {\n                    notes += ('\\n' + val);\n                } else {\n                    notes = val;\n                }\n                processingNotes = true;\n            } else if (map.hasOwnProperty(key)) {\n                dataObj[map[key]] = val;\n            } else {\n                if (!this.isNullOrWhitespace(notes)) {\n                    notes += '\\n';\n                } else {\n                    notes = '';\n                }\n                notes += (key + ': ' + val);\n            }\n        });\n\n        return [dataObj as T, notes];\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class LogMeOnceCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (value.length < 4) {\n                return;\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[0], '--');\n            cipher.login.username = this.getValueOrDefault(value[2]);\n            cipher.login.password = this.getValueOrDefault(value[3]);\n            cipher.login.uris = this.makeUriArray(value[1]);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class MeldiumCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.DisplayName, '--');\n            cipher.notes = this.getValueOrDefault(value.Notes);\n            cipher.login.username = this.getValueOrDefault(value.UserName);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.uris = this.makeUriArray(value.Url);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nexport class MSecureCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (value.length < 3) {\n                return;\n            }\n\n            const folderName = this.getValueOrDefault(value[0], 'Unassigned') !== 'Unassigned' ? value[0] : null;\n            this.processFolder(result, folderName);\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[2], '--');\n\n            if (value[1] === 'Web Logins' || value[1] === 'Login') {\n                cipher.login.uris = this.makeUriArray(value[4]);\n                cipher.login.username = this.getValueOrDefault(value[5]);\n                cipher.login.password = this.getValueOrDefault(value[6]);\n                cipher.notes = !this.isNullOrWhitespace(value[3]) ? value[3].split('\\\\n').join('\\n') : null;\n            } else if (value.length > 3) {\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote = new SecureNoteView();\n                cipher.secureNote.type = SecureNoteType.Generic;\n                for (let i = 3; i < value.length; i++) {\n                    if (!this.isNullOrWhitespace(value[i])) {\n                        cipher.notes += (value[i] + '\\n');\n                    }\n                }\n            }\n\n            if (!this.isNullOrWhitespace(value[1]) && cipher.type !== CipherType.Login) {\n                cipher.name = value[1] + ': ' + cipher.name;\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nimport { CardView } from '../models/view/cardView';\nimport { IdentityView } from '../models/view/identityView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class MykiCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.nickname, '--');\n            cipher.notes = this.getValueOrDefault(value.additionalInfo);\n\n            if (value.url !== undefined) {\n                // Accounts\n                cipher.login.uris = this.makeUriArray(value.url);\n                cipher.login.username = this.getValueOrDefault(value.username);\n                cipher.login.password = this.getValueOrDefault(value.password);\n                cipher.login.totp = this.getValueOrDefault(value.twoFactAuthToken);\n            } else if (value.cardNumber !== undefined) {\n                // Cards\n                cipher.card = new CardView();\n                cipher.type = CipherType.Card;\n                cipher.card.cardholderName = this.getValueOrDefault(value.cardName);\n                cipher.card.number = this.getValueOrDefault(value.cardNumber);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                cipher.card.expMonth = this.getValueOrDefault(value.exp_month);\n                cipher.card.expYear = this.getValueOrDefault(value.exp_year);\n                cipher.card.code = this.getValueOrDefault(value.cvv);\n            } else if (value.firstName !== undefined) {\n                // Identities\n                cipher.identity = new IdentityView();\n                cipher.type = CipherType.Identity;\n                cipher.identity.title = this.getValueOrDefault(value.title);\n                cipher.identity.firstName = this.getValueOrDefault(value.firstName);\n                cipher.identity.middleName = this.getValueOrDefault(value.middleName);\n                cipher.identity.lastName = this.getValueOrDefault(value.lastName);\n                cipher.identity.phone = this.getValueOrDefault(value.number);\n                cipher.identity.email = this.getValueOrDefault(value.email);\n                cipher.identity.address1 = this.getValueOrDefault(value.firstAddressLine);\n                cipher.identity.address2 = this.getValueOrDefault(value.secondAddressLine);\n                cipher.identity.city = this.getValueOrDefault(value.city);\n                cipher.identity.country = this.getValueOrDefault(value.country);\n                cipher.identity.postalCode = this.getValueOrDefault(value.zipCode);\n            } else if (value.content !== undefined) {\n                // Notes\n                cipher.secureNote = new SecureNoteView();\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote.type = SecureNoteType.Generic;\n                cipher.name = this.getValueOrDefault(value.title, '--');\n                cipher.notes = this.getValueOrDefault(value.content);\n            } else {\n                return;\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { CipherView } from '../models/view/cipherView';\nimport { IdentityView } from '../models/view/identityView';\nimport { PasswordHistoryView } from '../models/view/passwordHistoryView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nexport class OnePassword1PifImporter extends BaseImporter implements Importer {\n    result = new ImportResult();\n\n    parse(data: string): ImportResult {\n        data.split(this.newLineRegex).forEach((line) => {\n            if (this.isNullOrWhitespace(line) || line[0] !== '{') {\n                return;\n            }\n            const item = JSON.parse(line);\n            const cipher = this.initLoginCipher();\n\n            if (this.isNullOrWhitespace(item.hmac)) {\n                this.processStandardItem(item, cipher);\n            } else {\n                this.processWinOpVaultItem(item, cipher);\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n\n        this.result.success = true;\n        return this.result;\n    }\n\n    private processWinOpVaultItem(item: any, cipher: CipherView) {\n        if (item.overview != null) {\n            cipher.name = this.getValueOrDefault(item.overview.title);\n            if (item.overview.URLs != null) {\n                const urls: string[] = [];\n                item.overview.URLs.forEach((url: any) => {\n                    if (!this.isNullOrWhitespace(url.u)) {\n                        urls.push(url.u);\n                    }\n                });\n                cipher.login.uris = this.makeUriArray(urls);\n            }\n        }\n\n        if (item.details != null) {\n            if (!this.isNullOrWhitespace(item.details.ccnum) || !this.isNullOrWhitespace(item.details.cvv)) {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n            } else if (!this.isNullOrWhitespace(item.details.firstname) ||\n                !this.isNullOrWhitespace(item.details.address1)) {\n                cipher.type = CipherType.Identity;\n                cipher.identity = new IdentityView();\n            }\n            if (cipher.type === CipherType.Login && !this.isNullOrWhitespace(item.details.password)) {\n                cipher.login.password = item.details.password;\n            }\n            if (!this.isNullOrWhitespace(item.details.notesPlain)) {\n                cipher.notes = item.details.notesPlain.split(this.newLineRegex).join('\\n') + '\\n';\n            }\n            if (item.details.fields != null) {\n                this.parseFields(item.details.fields, cipher, 'designation', 'value', 'name');\n            }\n            if (item.details.sections != null) {\n                item.details.sections.forEach((section: any) => {\n                    if (section.fields != null) {\n                        this.parseFields(section.fields, cipher, 'n', 'v', 't');\n                    }\n                });\n            }\n            if (item.details.passwordHistory != null) {\n                this.parsePasswordHistory(item.details.passwordHistory, cipher);\n            }\n        }\n    }\n\n    private processStandardItem(item: any, cipher: CipherView) {\n        cipher.favorite = item.openContents && item.openContents.faveIndex ? true : false;\n        cipher.name = this.getValueOrDefault(item.title);\n\n        if (item.typeName === 'securenotes.SecureNote') {\n            cipher.type = CipherType.SecureNote;\n            cipher.secureNote = new SecureNoteView();\n            cipher.secureNote.type = SecureNoteType.Generic;\n        } else if (item.typeName === 'wallet.financial.CreditCard') {\n            cipher.type = CipherType.Card;\n            cipher.card = new CardView();\n        } else if (item.typeName === 'identities.Identity') {\n            cipher.type = CipherType.Identity;\n            cipher.identity = new IdentityView();\n        } else {\n            cipher.login.uris = this.makeUriArray(item.location);\n        }\n\n        if (item.secureContents != null) {\n            if (!this.isNullOrWhitespace(item.secureContents.notesPlain)) {\n                cipher.notes = item.secureContents.notesPlain.split(this.newLineRegex).join('\\n') + '\\n';\n            }\n            if (cipher.type === CipherType.Login) {\n                if (!this.isNullOrWhitespace(item.secureContents.password)) {\n                    cipher.login.password = item.secureContents.password;\n                }\n                if (item.secureContents.URLs != null) {\n                    const urls: string[] = [];\n                    item.secureContents.URLs.forEach((u: any) => {\n                        if (!this.isNullOrWhitespace(u.url)) {\n                            urls.push(u.url);\n                        }\n                    });\n                    if (urls.length > 0) {\n                        cipher.login.uris = this.makeUriArray(urls);\n                    }\n                }\n            }\n            if (item.secureContents.fields != null) {\n                this.parseFields(item.secureContents.fields, cipher, 'designation', 'value', 'name');\n            }\n            if (item.secureContents.sections != null) {\n                item.secureContents.sections.forEach((section: any) => {\n                    if (section.fields != null) {\n                        this.parseFields(section.fields, cipher, 'n', 'v', 't');\n                    }\n                });\n            }\n            if (item.secureContents.passwordHistory != null) {\n                this.parsePasswordHistory(item.secureContents.passwordHistory, cipher);\n            }\n        }\n    }\n\n    private parsePasswordHistory(items: any[], cipher: CipherView) {\n        const maxSize = items.length > 5 ? 5 : items.length;\n        cipher.passwordHistory = items\n            .filter((h: any) => !this.isNullOrWhitespace(h.value) && h.time != null)\n            .sort((a, b) => b.time - a.time)\n            .slice(0, maxSize)\n            .map((h: any) => {\n                const ph = new PasswordHistoryView();\n                ph.password = h.value;\n                ph.lastUsedDate = new Date(('' + h.time).length >= 13 ? h.time : h.time * 1000);\n                return ph;\n            });\n    }\n\n    private parseFields(fields: any[], cipher: CipherView, designationKey: string, valueKey: string, nameKey: string) {\n        fields.forEach((field: any) => {\n            if (field[valueKey] == null || field[valueKey].toString().trim() === '') {\n                return;\n            }\n\n            const fieldValue = field[valueKey].toString();\n            const fieldDesignation = field[designationKey] != null ? field[designationKey].toString() : null;\n\n            if (cipher.type === CipherType.Login) {\n                if (this.isNullOrWhitespace(cipher.login.username) && fieldDesignation === 'username') {\n                    cipher.login.username = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.login.password) && fieldDesignation === 'password') {\n                    cipher.login.password = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.login.totp) && fieldDesignation != null &&\n                    fieldDesignation.startsWith('TOTP_')) {\n                    cipher.login.totp = fieldValue;\n                    return;\n                }\n            } else if (cipher.type === CipherType.Card) {\n                if (this.isNullOrWhitespace(cipher.card.number) && fieldDesignation === 'ccnum') {\n                    cipher.card.number = fieldValue;\n                    cipher.card.brand = this.getCardBrand(fieldValue);\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.card.code) && fieldDesignation === 'cvv') {\n                    cipher.card.code = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.card.cardholderName) && fieldDesignation === 'cardholder') {\n                    cipher.card.cardholderName = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.card.expiration) && fieldDesignation === 'expiry' &&\n                    fieldValue.length === 6) {\n                    cipher.card.expMonth = (fieldValue as string).substr(4, 2);\n                    if (cipher.card.expMonth[0] === '0') {\n                        cipher.card.expMonth = cipher.card.expMonth.substr(1, 1);\n                    }\n                    cipher.card.expYear = (fieldValue as string).substr(0, 4);\n                    return;\n                } else if (fieldDesignation === 'type') {\n                    // Skip since brand was determined from number above\n                    return;\n                }\n            } else if (cipher.type === CipherType.Identity) {\n                const identity = cipher.identity;\n                if (this.isNullOrWhitespace(identity.firstName) && fieldDesignation === 'firstname') {\n                    identity.firstName = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.lastName) && fieldDesignation === 'lastname') {\n                    identity.lastName = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.middleName) && fieldDesignation === 'initial') {\n                    identity.middleName = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.phone) && fieldDesignation === 'defphone') {\n                    identity.phone = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.company) && fieldDesignation === 'company') {\n                    identity.company = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.email) && fieldDesignation === 'email') {\n                    identity.email = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.username) && fieldDesignation === 'username') {\n                    identity.username = fieldValue;\n                    return;\n                } else if (fieldDesignation === 'address') {\n                    // fieldValue is an object casted into a string, so access the plain value instead\n                    const { street, city, country, zip } = field[valueKey];\n                    identity.address1 = this.getValueOrDefault(street);\n                    identity.city = this.getValueOrDefault(city);\n                    if (!this.isNullOrWhitespace(country)) {\n                        identity.country = country.toUpperCase();\n                    }\n                    identity.postalCode = this.getValueOrDefault(zip);\n                    return;\n                }\n            }\n\n            const fieldType = field.k === 'concealed' ? FieldType.Hidden : FieldType.Text;\n            const fieldName = this.isNullOrWhitespace(field[nameKey]) ? 'no_name' : field[nameKey];\n            this.processKvp(cipher, fieldName, fieldValue, fieldType);\n        });\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherType } from '../enums/cipherType';\nimport { CardView } from '../models/view';\n\nconst IgnoredProperties = ['ainfo', 'autosubmit', 'notesPlain', 'ps', 'scope', 'tags', 'title', 'uuid'];\n\nexport class OnePasswordWinCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (this.isNullOrWhitespace(value.title)) {\n                return;\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.title, '--');\n            cipher.notes = this.getValueOrDefault(value.notesPlain, '') + '\\n';\n\n            if (!this.isNullOrWhitespace(value.number) && !this.isNullOrWhitespace(value['expiry date'])) {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n            }\n\n            let altUsername: string = null;\n            for (const property in value) {\n                if (!value.hasOwnProperty(property) || this.isNullOrWhitespace(value[property])) {\n                    continue;\n                }\n\n                if (cipher.type === CipherType.Login) {\n                    if (this.isNullOrWhitespace(cipher.login.password) && property === 'password') {\n                        cipher.login.password = value[property];\n                        continue;\n                    } else if (this.isNullOrWhitespace(cipher.login.username) && property === 'username') {\n                        cipher.login.username = value[property];\n                        continue;\n                    } else if ((cipher.login.uris == null || cipher.login.uri.length === 0) && property === 'urls') {\n                        const urls = value[property].split(this.newLineRegex);\n                        cipher.login.uris = this.makeUriArray(urls);\n                        continue;\n                    }\n                } else if (cipher.type === CipherType.Card) {\n                    if (this.isNullOrWhitespace(cipher.card.number) && property === 'number') {\n                        cipher.card.number = value[property];\n                        cipher.card.brand = this.getCardBrand(value.number);\n                        continue;\n                    } else if (this.isNullOrWhitespace(cipher.card.code) && property === 'verification number') {\n                        cipher.card.code = value[property];\n                        continue;\n                    } else if (this.isNullOrWhitespace(cipher.card.cardholderName) && property === 'cardholder name') {\n                        cipher.card.cardholderName = value[property];\n                        continue;\n                    } else if (this.isNullOrWhitespace(cipher.card.expiration) && property === 'expiry date' &&\n                        value[property].length === 6) {\n                        cipher.card.expMonth = (value[property] as string).substr(4, 2);\n                        if (cipher.card.expMonth[0] === '0') {\n                            cipher.card.expMonth = cipher.card.expMonth.substr(1, 1);\n                        }\n                        cipher.card.expYear = (value[property] as string).substr(0, 4);\n                        continue;\n                    } else if (property === 'type') {\n                        // Skip since brand was determined from number above\n                        continue;\n                    }\n                }\n\n                if (IgnoredProperties.indexOf(property) === -1 && !property.startsWith('section:')) {\n                    if (altUsername == null && property === 'email') {\n                        altUsername = value[property];\n                    }\n                    this.processKvp(cipher, property, value[property]);\n                }\n            }\n\n            if (cipher.type === CipherType.Login && !this.isNullOrWhitespace(altUsername) &&\n                this.isNullOrWhitespace(cipher.login.username) && altUsername.indexOf('://') === -1) {\n                cipher.login.username = altUsername;\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","export { AttachmentView } from './attachmentView';\nexport { CardView } from './cardView';\nexport { CipherView } from './cipherView';\nexport { FieldView } from './fieldView';\nexport { IdentityView } from './identityView';\nexport { LoginUriView } from './loginUriView';\nexport { LoginView } from './loginView';\nexport { SecureNoteView } from './secureNoteView';\nexport { View } from './view';\n","export class View {\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CollectionView } from '../models/view/collectionView';\nimport { FolderView } from '../models/view/folderView';\n\nexport class PadlockCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        let headers: string[] = null;\n        results.forEach((value) => {\n            if (headers == null) {\n                headers = value.map((v: string) => v);\n                return;\n            }\n\n            if (value.length < 2 || value.length !== headers.length) {\n                return;\n            }\n\n            if (!this.isNullOrWhitespace(value[1])) {\n                if (this.organization) {\n                    const tags = (value[1] as string).split(',');\n                    tags.forEach((tag) => {\n                        tag = tag.trim();\n                        let addCollection = true;\n                        let collectionIndex = result.collections.length;\n\n                        for (let i = 0; i < result.collections.length; i++) {\n                            if (result.collections[i].name === tag) {\n                                addCollection = false;\n                                collectionIndex = i;\n                                break;\n                            }\n                        }\n\n                        if (addCollection) {\n                            const collection = new CollectionView();\n                            collection.name = tag;\n                            result.collections.push(collection);\n                        }\n\n                        result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n                    });\n                } else {\n                    const tags = (value[1] as string).split(',');\n                    const tag = tags.length > 0 ? tags[0].trim() : null;\n                    this.processFolder(result, tag);\n                }\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[0], '--');\n\n            for (let i = 2; i < value.length; i++) {\n                const header = headers[i].trim().toLowerCase();\n                if (this.isNullOrWhitespace(value[i]) || this.isNullOrWhitespace(header)) {\n                    continue;\n                }\n\n                if (this.usernameFieldNames.indexOf(header) > -1) {\n                    cipher.login.username = value[i];\n                } else if (this.passwordFieldNames.indexOf(header) > -1) {\n                    cipher.login.password = value[i];\n                } else if (this.uriFieldNames.indexOf(header) > -1) {\n                    cipher.login.uris = this.makeUriArray(value[i]);\n                } else {\n                    this.processKvp(cipher, headers[i], value[i]);\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PassKeepCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            this.processFolder(result, this.getValue('category', value));\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValue('description', value);\n            cipher.name = this.getValueOrDefault(this.getValue('title', value), '--');\n            cipher.login.username = this.getValue('username', value);\n            cipher.login.password = this.getValue('password', value);\n            cipher.login.uris = this.makeUriArray(this.getValue('site', value));\n            this.processKvp(cipher, 'Password 2', this.getValue('password2', value));\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n\n    private getValue(key: string, value: any) {\n        return this.getValueOrDefault(value[key], this.getValueOrDefault(value[(' ' + key)]));\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PassmanJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || results.length === 0) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((credential: any) => {\n            if (credential.tags != null && credential.tags.length > 0) {\n                const folderName = credential.tags[0].text;\n                this.processFolder(result, folderName);\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = credential.label;\n\n            cipher.login.username = this.getValueOrDefault(credential.username);\n            if (this.isNullOrWhitespace(cipher.login.username)) {\n                cipher.login.username = this.getValueOrDefault(credential.email);\n            } else if (!this.isNullOrWhitespace(credential.email)) {\n                cipher.notes = ('Email: ' + credential.email + '\\n');\n            }\n\n            cipher.login.password = this.getValueOrDefault(credential.password);\n            cipher.login.uris = this.makeUriArray(credential.url);\n            cipher.notes += this.getValueOrDefault(credential.description, '');\n            if (credential.otp != null) {\n                cipher.login.totp = this.getValueOrDefault(credential.otp.secret);\n            }\n\n            if (credential.custom_fields != null) {\n                credential.custom_fields.forEach((customField: any) => {\n                    switch (customField.field_type) {\n                        case 'text':\n                        case 'password':\n                            this.processKvp(cipher, customField.label, customField.value);\n                            break;\n                    }\n                });\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CollectionView } from '../models/view/collectionView';\n\nexport class PasspackCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            const tagsJson = !this.isNullOrWhitespace(value.Tags) ? JSON.parse(value.Tags) : null;\n            const tags: string[] = tagsJson != null && tagsJson.tags != null && tagsJson.tags.length > 0 ?\n                tagsJson.tags.map((tagJson: string) => {\n                    try {\n                        const t = JSON.parse(tagJson);\n                        return this.getValueOrDefault(t.tag);\n                    } catch { }\n                    return null;\n                }).filter((t: string) => !this.isNullOrWhitespace(t)) : null;\n\n            if (this.organization && tags != null && tags.length > 0) {\n                tags.forEach((tag) => {\n                    let addCollection = true;\n                    let collectionIndex = result.collections.length;\n\n                    for (let i = 0; i < result.collections.length; i++) {\n                        if (result.collections[i].name === tag) {\n                            addCollection = false;\n                            collectionIndex = i;\n                            break;\n                        }\n                    }\n\n                    if (addCollection) {\n                        const collection = new CollectionView();\n                        collection.name = tag;\n                        result.collections.push(collection);\n                    }\n\n                    result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n                });\n            } else if (!this.organization && tags != null && tags.length > 0) {\n                this.processFolder(result, tags[0]);\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value.Notes, '');\n            cipher.notes += ('\\n\\n' + this.getValueOrDefault(value['Shared Notes'], '') + '\\n');\n            cipher.name = this.getValueOrDefault(value['Entry Name'], '--');\n            cipher.login.username = this.getValueOrDefault(value['User ID']);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.uris = this.makeUriArray(value.URL);\n\n            if (value.__parsed_extra != null && value.__parsed_extra.length > 0) {\n                value.__parsed_extra.forEach((extra: string) => {\n                    if (!this.isNullOrWhitespace(extra)) {\n                        cipher.notes += ('\\n' + extra);\n                    }\n                });\n            }\n\n            const fieldsJson = !this.isNullOrWhitespace(value['Extra Fields']) ?\n                JSON.parse(value['Extra Fields']) : null;\n            const fields = fieldsJson != null && fieldsJson.extraFields != null &&\n                fieldsJson.extraFields.length > 0 ? fieldsJson.extraFields.map((fieldJson: string) => {\n                    try {\n                        return JSON.parse(fieldJson);\n                    } catch { }\n                    return null;\n                }) : null;\n            if (fields != null) {\n                fields.forEach((f: any) => {\n                    if (f != null) {\n                        this.processKvp(cipher, f.name, f.data);\n                    }\n                });\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PasswordAgentCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        let newVersion = true;\n        results.forEach((value) => {\n            if (value.length !== 5 && value.length < 9) {\n                return;\n            }\n            const altFormat = value.length === 10 && value[0] === '0';\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[altFormat ? 1 : 0], '--');\n            cipher.login.username = this.getValueOrDefault(value[altFormat ? 2 : 1]);\n            cipher.login.password = this.getValueOrDefault(value[altFormat ? 3 : 2]);\n            if (value.length === 5) {\n                newVersion = false;\n                cipher.notes = this.getValueOrDefault(value[4]);\n                cipher.login.uris = this.makeUriArray(value[3]);\n            } else {\n                const folder = this.getValueOrDefault(value[altFormat ? 9 : 8], '(None)');\n                let folderName = folder !== '(None)' ? folder.split('\\\\').join('/') : null;\n                if (folderName != null) {\n                    folderName = folder.split(' > ').join('/');\n                    folderName = folder.split('>').join('/');\n                }\n                this.processFolder(result, folderName);\n                cipher.notes = this.getValueOrDefault(value[altFormat ? 5 : 3]);\n                cipher.login.uris = this.makeUriArray(value[4]);\n            }\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (newVersion && this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\n\nimport { CipherType } from '../enums/cipherType';\n\nexport class PasswordBossJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value: any) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            cipher.login.uris = this.makeUriArray(value.login_url);\n\n            if (value.identifiers == null) {\n                return;\n            }\n\n            if (!this.isNullOrWhitespace(value.identifiers.notes)) {\n                cipher.notes = value.identifiers.notes.split('\\\\r\\\\n').join('\\n').split('\\\\n').join('\\n');\n            }\n\n            if (value.type === 'CreditCard') {\n                cipher.card = new CardView();\n                cipher.type = CipherType.Card;\n            }\n\n            for (const property in value.identifiers) {\n                if (!value.identifiers.hasOwnProperty(property)) {\n                    continue;\n                }\n                const valObj = value.identifiers[property];\n                const val = valObj != null ? valObj.toString() : null;\n                if (this.isNullOrWhitespace(val) || property === 'notes' || property === 'ignoreItemInSecurityScore') {\n                    continue;\n                }\n\n                if (cipher.type === CipherType.Card) {\n                    if (property === 'cardNumber') {\n                        cipher.card.number = val;\n                        cipher.card.brand = this.getCardBrand(val);\n                        continue;\n                    } else if (property === 'nameOnCard') {\n                        cipher.card.cardholderName = val;\n                        continue;\n                    } else if (property === 'security_code') {\n                        cipher.card.code = val;\n                        continue;\n                    } else if (property === 'expires') {\n                        try {\n                            const expDate = new Date(val);\n                            cipher.card.expYear = expDate.getFullYear().toString();\n                            cipher.card.expMonth = (expDate.getMonth() + 1).toString();\n                        } catch { }\n                        continue;\n                    } else if (property === 'cardType') {\n                        continue;\n                    }\n                } else {\n                    if (property === 'username') {\n                        cipher.login.username = val;\n                        continue;\n                    } else if (property === 'password') {\n                        cipher.login.password = val;\n                        continue;\n                    } else if ((cipher.login.uris == null || cipher.login.uris.length === 0) &&\n                        this.uriFieldNames.indexOf(property) > -1) {\n                        cipher.login.uris = this.makeUriArray(val);\n                        continue;\n                    }\n                }\n\n                this.processKvp(cipher, property, val);\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PasswordDragonXmlImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return result;\n        }\n\n        const records = doc.querySelectorAll('PasswordManager > record');\n        Array.from(records).forEach((record) => {\n            const category = this.querySelectorDirectChild(record, 'Category');\n            const categoryText = category != null && !this.isNullOrWhitespace(category.textContent) &&\n                category.textContent !== 'Unfiled' ? category.textContent : null;\n            this.processFolder(result, categoryText);\n\n            const accountName = this.querySelectorDirectChild(record, 'Account-Name');\n            const userId = this.querySelectorDirectChild(record, 'User-Id');\n            const password = this.querySelectorDirectChild(record, 'Password');\n            const url = this.querySelectorDirectChild(record, 'URL');\n            const notes = this.querySelectorDirectChild(record, 'Notes');\n            const cipher = this.initLoginCipher();\n            cipher.name = accountName != null ? this.getValueOrDefault(accountName.textContent, '--') : '--';\n            cipher.notes = notes != null ? this.getValueOrDefault(notes.textContent) : '';\n            cipher.login.username = userId != null ? this.getValueOrDefault(userId.textContent) : null;\n            cipher.login.password = password != null ? this.getValueOrDefault(password.textContent) : null;\n            cipher.login.uris = url != null ? this.makeUriArray(url.textContent) : null;\n\n            const attributes: string[] = [];\n            for (let i = 1; i <= 10; i++) {\n                attributes.push('Attribute-' + i);\n            }\n\n            this.querySelectorAllDirectChild(record, attributes.join(',')).forEach((attr) => {\n                if (this.isNullOrWhitespace(attr.textContent) || attr.textContent === 'null') {\n                    return;\n                }\n                this.processKvp(cipher, attr.tagName, attr.textContent);\n            });\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PasswordSafeXmlImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return result;\n        }\n\n        const passwordSafe = doc.querySelector('passwordsafe');\n        if (passwordSafe == null) {\n            result.errorMessage = 'Missing `passwordsafe` node.';\n            result.success = false;\n            return result;\n        }\n\n        const notesDelimiter = passwordSafe.getAttribute('delimiter');\n        const entries = doc.querySelectorAll('passwordsafe > entry');\n        Array.from(entries).forEach((entry) => {\n            const group = this.querySelectorDirectChild(entry, 'group');\n            const groupText = group != null && !this.isNullOrWhitespace(group.textContent) ?\n                group.textContent.split('.').join('/') : null;\n            this.processFolder(result, groupText);\n\n            const title = this.querySelectorDirectChild(entry, 'title');\n            const username = this.querySelectorDirectChild(entry, 'username');\n            const email = this.querySelectorDirectChild(entry, 'email');\n            const password = this.querySelectorDirectChild(entry, 'password');\n            const url = this.querySelectorDirectChild(entry, 'url');\n            const notes = this.querySelectorDirectChild(entry, 'notes');\n            const cipher = this.initLoginCipher();\n            cipher.name = title != null ? this.getValueOrDefault(title.textContent, '--') : '--';\n            cipher.notes = notes != null ?\n                this.getValueOrDefault(notes.textContent, '').split(notesDelimiter).join('\\n') : null;\n            cipher.login.username = username != null ? this.getValueOrDefault(username.textContent) : null;\n            cipher.login.password = password != null ? this.getValueOrDefault(password.textContent) : null;\n            cipher.login.uris = url != null ? this.makeUriArray(url.textContent) : null;\n\n            if (this.isNullOrWhitespace(cipher.login.username) && email != null) {\n                cipher.login.username = this.getValueOrDefault(email.textContent);\n            } else if (email != null && !this.isNullOrWhitespace(email.textContent)) {\n                cipher.notes = this.isNullOrWhitespace(cipher.notes) ? 'Email: ' + email.textContent\n                    : (cipher.notes + '\\n' + 'Email: ' + email.textContent);\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PasswordWalletTxtImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (value.length < 1) {\n                return;\n            }\n            if (value.length > 5) {\n                this.processFolder(result, value[5]);\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[0], '--');\n            if (value.length > 4) {\n                cipher.notes = this.getValueOrDefault(value[4], '').split('¬').join('\\n');\n            }\n            if (value.length > 2) {\n                cipher.login.username = this.getValueOrDefault(value[2]);\n            }\n            if (value.length > 3) {\n                cipher.login.password = this.getValueOrDefault(value[3]);\n            }\n            if (value.length > 1) {\n                cipher.login.uris = this.makeUriArray(value[1]);\n            }\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { CipherType } from '../enums/cipherType';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\n\nexport class RememBearCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (value.trash === 'true') {\n                return;\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name);\n            cipher.notes = this.getValueOrDefault(value.notes);\n            if (value.type === 'LoginItem') {\n                cipher.login.uris = this.makeUriArray(value.website);\n                cipher.login.password = this.getValueOrDefault(value.password);\n                cipher.login.username = this.getValueOrDefault(value.username);\n            } else if (value.type === 'CreditCardItem') {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n                cipher.card.cardholderName = this.getValueOrDefault(value.cardholder);\n                cipher.card.number = this.getValueOrDefault(value.number);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                cipher.card.code = this.getValueOrDefault(value.verification);\n\n                try {\n                    const expMonth = this.getValueOrDefault(value.expiryMonth);\n                    if (expMonth != null) {\n                        const expMonthNumber = parseInt(expMonth, null);\n                        if (expMonthNumber != null && expMonthNumber >= 1 && expMonthNumber <= 12) {\n                            cipher.card.expMonth = expMonthNumber.toString();\n                        }\n                    }\n                } catch { }\n                try {\n                    const expYear = this.getValueOrDefault(value.expiryYear);\n                    if (expYear != null) {\n                        const expYearNumber = parseInt(expYear, null);\n                        if (expYearNumber != null) {\n                            cipher.card.expYear = expYearNumber.toString();\n                        }\n                    }\n                } catch { }\n\n                const pin = this.getValueOrDefault(value.pin);\n                if (pin != null) {\n                    this.processKvp(cipher, 'PIN', pin);\n                }\n                const zip = this.getValueOrDefault(value.zipCode);\n                if (zip != null) {\n                    this.processKvp(cipher, 'Zip Code', zip);\n                }\n            }\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class RoboFormCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        let i = 1;\n        results.forEach((value) => {\n            const folder = !this.isNullOrWhitespace(value.Folder) && value.Folder.startsWith('/') ?\n                value.Folder.replace('/', '') : value.Folder;\n            const folderName = !this.isNullOrWhitespace(folder) ? folder : null;\n            this.processFolder(result, folderName);\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value.Note);\n            cipher.name = this.getValueOrDefault(value.Name, '--');\n            cipher.login.username = this.getValueOrDefault(value.Login);\n            cipher.login.password = this.getValueOrDefault(value.Pwd);\n            cipher.login.uris = this.makeUriArray(value.Url);\n\n            if (!this.isNullOrWhitespace(value.Rf_fields)) {\n                let fields: string[] = [value.Rf_fields];\n                if (value.__parsed_extra != null && value.__parsed_extra.length > 0) {\n                    fields = fields.concat(value.__parsed_extra);\n                }\n                fields.forEach((field: string) => {\n                    const parts = field.split(':');\n                    if (parts.length < 3) {\n                        return;\n                    }\n                    const key = parts[0] === '-no-name-' ? null : parts[0];\n                    const val = parts.length === 4 && parts[2] === 'rck' ? parts[1] : parts[2];\n                    this.processKvp(cipher, key, val);\n                });\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n\n            if (i === results.length && cipher.name === '--' && this.isNullOrWhitespace(cipher.login.password)) {\n                return;\n            }\n\n            result.ciphers.push(cipher);\n            i++;\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { FolderView } from '../models/view/folderView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nexport class SafeInCloudXmlImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return result;\n        }\n\n        const db = doc.querySelector('database');\n        if (db == null) {\n            result.errorMessage = 'Missing `database` node.';\n            result.success = false;\n            return result;\n        }\n\n        const foldersMap = new Map<string, number>();\n\n        Array.from(doc.querySelectorAll('database > label')).forEach((labelEl) => {\n            const name = labelEl.getAttribute('name');\n            const id = labelEl.getAttribute('id');\n            if (!this.isNullOrWhitespace(name) && !this.isNullOrWhitespace(id)) {\n                foldersMap.set(id, result.folders.length);\n                const folder = new FolderView();\n                folder.name = name;\n                result.folders.push(folder);\n            }\n        });\n\n        Array.from(doc.querySelectorAll('database > card')).forEach((cardEl) => {\n            if (cardEl.getAttribute('template') === 'true') {\n                return;\n            }\n\n            const labelIdEl = this.querySelectorDirectChild(cardEl, 'label_id');\n            if (labelIdEl != null) {\n                const labelId = labelIdEl.textContent;\n                if (!this.isNullOrWhitespace(labelId) && foldersMap.has(labelId)) {\n                    result.folderRelationships.push([result.ciphers.length, foldersMap.get(labelId)]);\n                }\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(cardEl.getAttribute('title'), '--');\n\n            const cardType = cardEl.getAttribute('type');\n            if (cardType === 'note') {\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote = new SecureNoteView();\n                cipher.secureNote.type = SecureNoteType.Generic;\n            } else {\n                Array.from(this.querySelectorAllDirectChild(cardEl, 'field')).forEach((fieldEl) => {\n                    const text = fieldEl.textContent;\n                    if (this.isNullOrWhitespace(text)) {\n                        return;\n                    }\n                    const name = fieldEl.getAttribute('name');\n                    const fieldType = this.getValueOrDefault(fieldEl.getAttribute('type'), '').toLowerCase();\n                    if (fieldType === 'login') {\n                        cipher.login.username = text;\n                    } else if (fieldType === 'password') {\n                        cipher.login.password = text;\n                    } else if (fieldType === 'one_time_password') {\n                        cipher.login.totp = text;\n                    } else if (fieldType === 'notes') {\n                        cipher.notes += (text + '\\n');\n                    } else if (fieldType === 'weblogin' || fieldType === 'website') {\n                        cipher.login.uris = this.makeUriArray(text);\n                    } else {\n                        this.processKvp(cipher, name, text);\n                    }\n                });\n            }\n\n            Array.from(this.querySelectorAllDirectChild(cardEl, 'notes')).forEach((notesEl) => {\n                cipher.notes += (notesEl.textContent + '\\n');\n            });\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class SaferPassCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(this.nameFromUrl(value.url), '--');\n            cipher.notes = this.getValueOrDefault(value.notes);\n            cipher.login.username = this.getValueOrDefault(value.username);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(value.url);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class SecureSafeCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.Title);\n            cipher.notes = this.getValueOrDefault(value.Comment);\n            cipher.login.uris = this.makeUriArray(value.Url);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.username = this.getValueOrDefault(value.Username);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\nimport { CipherView } from '../models/view/cipherView';\n\nexport class SplashIdCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (value.length < 3) {\n                return;\n            }\n\n            this.processFolder(result, this.getValueOrDefault(value[value.length - 1]));\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value[value.length - 2], '');\n            cipher.name = this.getValueOrDefault(value[1], '--');\n\n            if (value[0] === 'Web Logins' || value[0] === 'Servers' || value[0] === 'Email Accounts') {\n                cipher.login.username = this.getValueOrDefault(value[2]);\n                cipher.login.password = this.getValueOrDefault(value[3]);\n                cipher.login.uris = this.makeUriArray(value[4]);\n                this.parseFieldsToNotes(cipher, 5, value);\n            } else {\n                this.parseFieldsToNotes(cipher, 2, value);\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n\n    private parseFieldsToNotes(cipher: CipherView, startIndex: number, value: any) {\n        // last 3 rows do not get parsed\n        for (let i = startIndex; i < value.length - 3; i++) {\n            if (this.isNullOrWhitespace(value[i])) {\n                continue;\n            }\n            cipher.notes += (value[i] + '\\n');\n        }\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class StickyPasswordXmlImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return result;\n        }\n\n        const loginNodes = doc.querySelectorAll('root > Database > Logins > Login');\n        Array.from(loginNodes).forEach((loginNode) => {\n            const accountId = loginNode.getAttribute('ID');\n            if (this.isNullOrWhitespace(accountId)) {\n                return;\n            }\n\n            const usernameText = loginNode.getAttribute('Name');\n            const passwordText = loginNode.getAttribute('Password');\n            let titleText: string = null;\n            let linkText: string = null;\n            let notesText: string = null;\n            let groupId: string = null;\n            let groupText: string = null;\n\n            const accountLogin = doc.querySelector('root > Database > Accounts > Account > ' +\n                'LoginLinks > Login[SourceLoginID=\"' + accountId + '\"]');\n            if (accountLogin != null) {\n                const account = accountLogin.parentElement.parentElement;\n                if (account != null) {\n                    titleText = account.getAttribute('Name');\n                    linkText = account.getAttribute('Link');\n                    groupId = account.getAttribute('ParentID');\n                    notesText = account.getAttribute('Comments');\n                    if (!this.isNullOrWhitespace(notesText)) {\n                        notesText = notesText.split('/n').join('\\n');\n                    }\n                }\n            }\n\n            if (!this.isNullOrWhitespace(groupId)) {\n                groupText = this.buildGroupText(doc, groupId, '');\n                this.processFolder(result, groupText);\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(titleText, '--');\n            cipher.notes = this.getValueOrDefault(notesText);\n            cipher.login.username = this.getValueOrDefault(usernameText);\n            cipher.login.password = this.getValueOrDefault(passwordText);\n            cipher.login.uris = this.makeUriArray(linkText);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n\n    buildGroupText(doc: Document, groupId: string, groupText: string): string {\n        const group = doc.querySelector('root > Database > Groups > Group[ID=\"' + groupId + '\"]');\n        if (group == null) {\n            return groupText;\n        }\n        if (!this.isNullOrWhitespace(groupText)) {\n            groupText = '/' + groupText;\n        }\n        groupText = group.getAttribute('Name') + groupText;\n        return this.buildGroupText(doc, group.getAttribute('ParentID'), groupText);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nconst PropertiesToIgnore = ['kind', 'autologin', 'favorite', 'hexcolor', 'protectedwithpassword', 'subdomainonly',\n    'type', 'tk_export_version', 'note', 'title', 'document_content',\n];\n\nexport class TrueKeyCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            const cipher = this.initLoginCipher();\n            cipher.favorite = this.getValueOrDefault(value.favorite, '').toLowerCase() === 'true';\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            cipher.notes = this.getValueOrDefault(value.memo, '');\n            cipher.login.username = this.getValueOrDefault(value.login);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(value.url);\n\n            if (value.kind !== 'login') {\n                cipher.name = this.getValueOrDefault(value.title, '--');\n                cipher.notes = this.getValueOrDefault(value.note, '');\n            }\n\n            if (value.kind === 'cc') {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n                cipher.card.cardholderName = this.getValueOrDefault(value.cardholder);\n                cipher.card.number = this.getValueOrDefault(value.number);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                if (!this.isNullOrWhitespace(value.expiryDate)) {\n                    try {\n                        const expDate = new Date(value.expiryDate);\n                        cipher.card.expYear = expDate.getFullYear().toString();\n                        cipher.card.expMonth = (expDate.getMonth() + 1).toString();\n                    } catch { }\n                }\n            } else if (value.kind !== 'login') {\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote = new SecureNoteView();\n                cipher.secureNote.type = SecureNoteType.Generic;\n                if (!this.isNullOrWhitespace(cipher.notes)) {\n                    cipher.notes = this.getValueOrDefault(value.document_content, '');\n                }\n                for (const property in value) {\n                    if (value.hasOwnProperty(property) && PropertiesToIgnore.indexOf(property.toLowerCase()) < 0 &&\n                        !this.isNullOrWhitespace(value[property])) {\n                        this.processKvp(cipher, property, value[property]);\n                    }\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class UpmCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (value.length !== 5) {\n                return;\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[0], '--');\n            cipher.notes = this.getValueOrDefault(value[4]);\n            cipher.login.username = this.getValueOrDefault(value[1]);\n            cipher.login.password = this.getValueOrDefault(value[2]);\n            cipher.login.uris = this.makeUriArray(value[3]);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\nimport { CipherView } from '../models/view';\n\nexport class ZohoVaultCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (this.isNullOrWhitespace(value['Secret Name'])) {\n                return;\n            }\n            this.processFolder(result, this.getValueOrDefault(value.ChamberName));\n            const cipher = this.initLoginCipher();\n            cipher.favorite = this.getValueOrDefault(value.Favorite, '0') === '1';\n            cipher.notes = this.getValueOrDefault(value.Notes);\n            cipher.name = this.getValueOrDefault(value['Secret Name'], '--');\n            cipher.login.uris = this.makeUriArray(value['Secret URL']);\n            this.parseData(cipher, value.SecretData);\n            this.parseData(cipher, value.CustomData);\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n\n    private parseData(cipher: CipherView, data: string) {\n        if (this.isNullOrWhitespace(data)) {\n            return;\n        }\n        const dataLines = this.splitNewLine(data);\n        dataLines.forEach((line) => {\n            const delimPosition = line.indexOf(':');\n            if (delimPosition < 0) {\n                return;\n            }\n            const field = line.substring(0, delimPosition);\n            const value = line.length > delimPosition ? line.substring(delimPosition + 1) : null;\n            if (this.isNullOrWhitespace(field) || this.isNullOrWhitespace(value) || field === 'SecretType') {\n                return;\n            }\n            const fieldLower = field.toLowerCase();\n            if (cipher.login.username == null && this.usernameFieldNames.indexOf(fieldLower) > -1) {\n                cipher.login.username = value;\n            } else if (cipher.login.password == null && this.passwordFieldNames.indexOf(fieldLower) > -1) {\n                cipher.login.password = value;\n            } else {\n                this.processKvp(cipher, field, value);\n            }\n        });\n    }\n}\n","import * as signalR from '@aspnet/signalr';\nimport * as signalRMsgPack from '@aspnet/signalr-protocol-msgpack';\n\nimport { NotificationType } from '../enums/notificationType';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { AppIdService } from '../abstractions/appId.service';\nimport { EnvironmentService } from '../abstractions/environment.service';\nimport { LockService } from '../abstractions/lock.service';\nimport { NotificationsService as NotificationsServiceAbstraction } from '../abstractions/notifications.service';\nimport { SyncService } from '../abstractions/sync.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport {\n    NotificationResponse,\n    SyncCipherNotification,\n    SyncFolderNotification,\n} from '../models/response/notificationResponse';\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n    private signalrConnection: signalR.HubConnection;\n    private url: string;\n    private connected = false;\n    private inited = false;\n    private inactive = false;\n    private reconnectTimer: any = null;\n\n    constructor(private userService: UserService, private syncService: SyncService,\n        private appIdService: AppIdService, private apiService: ApiService,\n        private lockService: LockService, private logoutCallback: () => Promise<void>) { }\n\n    async init(environmentService: EnvironmentService): Promise<void> {\n        this.inited = false;\n        this.url = 'https://notifications.bitwarden.com';\n        if (environmentService.notificationsUrl != null) {\n            this.url = environmentService.notificationsUrl;\n        } else if (environmentService.baseUrl != null) {\n            this.url = environmentService.baseUrl + '/notifications';\n        }\n\n        // Set notifications server URL to `https://-` to effectively disable communication\n        // with the notifications server from the client app\n        if (this.url === 'https://-') {\n            return;\n        }\n\n        if (this.signalrConnection != null) {\n            this.signalrConnection.off('ReceiveMessage');\n            this.signalrConnection.off('Heartbeat');\n            await this.signalrConnection.stop();\n            this.connected = false;\n            this.signalrConnection = null;\n        }\n\n        this.signalrConnection = new signalR.HubConnectionBuilder()\n            .withUrl(this.url + '/hub', {\n                accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n            })\n            .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol())\n            // .configureLogging(signalR.LogLevel.Trace)\n            .build();\n\n        this.signalrConnection.on('ReceiveMessage',\n            (data: any) => this.processNotification(new NotificationResponse(data)));\n        this.signalrConnection.on('Heartbeat',\n            (data: any) => { /*console.log('Heartbeat!');*/ });\n        this.signalrConnection.onclose(() => {\n            this.connected = false;\n            this.reconnect(true);\n        });\n        this.inited = true;\n        if (await this.isAuthedAndUnlocked()) {\n            await this.reconnect(false);\n        }\n    }\n\n    async updateConnection(sync = false): Promise<void> {\n        if (!this.inited) {\n            return;\n        }\n        try {\n            if (await this.isAuthedAndUnlocked()) {\n                await this.reconnect(sync);\n            } else {\n                await this.signalrConnection.stop();\n            }\n        } catch (e) {\n            // tslint:disable-next-line\n            console.error(e.toString());\n        }\n    }\n\n    async reconnectFromActivity(): Promise<void> {\n        this.inactive = false;\n        if (this.inited && !this.connected) {\n            await this.reconnect(true);\n        }\n    }\n\n    async disconnectFromInactivity(): Promise<void> {\n        this.inactive = true;\n        if (this.inited && this.connected) {\n            await this.signalrConnection.stop();\n        }\n    }\n\n    private async processNotification(notification: NotificationResponse) {\n        const appId = await this.appIdService.getAppId();\n        if (notification == null || notification.contextId === appId) {\n            return;\n        }\n\n        const isAuthenticated = await this.userService.isAuthenticated();\n        const payloadUserId = notification.payload.userId || notification.payload.UserId;\n        const myUserId = await this.userService.getUserId();\n        if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n            return;\n        }\n\n        switch (notification.type) {\n            case NotificationType.SyncCipherCreate:\n            case NotificationType.SyncCipherUpdate:\n                await this.syncService.syncUpsertCipher(notification.payload as SyncCipherNotification,\n                    notification.type === NotificationType.SyncCipherUpdate);\n                break;\n            case NotificationType.SyncCipherDelete:\n            case NotificationType.SyncLoginDelete:\n                await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n                break;\n            case NotificationType.SyncFolderCreate:\n            case NotificationType.SyncFolderUpdate:\n                await this.syncService.syncUpsertFolder(notification.payload as SyncFolderNotification,\n                    notification.type === NotificationType.SyncFolderUpdate);\n                break;\n            case NotificationType.SyncFolderDelete:\n                await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n                break;\n            case NotificationType.SyncVault:\n            case NotificationType.SyncCiphers:\n            case NotificationType.SyncSettings:\n                if (isAuthenticated) {\n                    await this.syncService.fullSync(false);\n                }\n                break;\n            case NotificationType.SyncOrgKeys:\n                if (isAuthenticated) {\n                    await this.apiService.refreshIdentityToken();\n                    await this.syncService.fullSync(true);\n                    // Stop so a reconnect can be made\n                    await this.signalrConnection.stop();\n                }\n                break;\n            case NotificationType.LogOut:\n                if (isAuthenticated) {\n                    this.logoutCallback();\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    private async reconnect(sync: boolean) {\n        if (this.reconnectTimer != null) {\n            clearTimeout(this.reconnectTimer);\n            this.reconnectTimer = null;\n        }\n        if (this.connected || !this.inited || this.inactive) {\n            return;\n        }\n        const authedAndUnlocked = await this.isAuthedAndUnlocked();\n        if (!authedAndUnlocked) {\n            return;\n        }\n\n        try {\n            await this.signalrConnection.start();\n            this.connected = true;\n            if (sync) {\n                await this.syncService.fullSync(false);\n            }\n        } catch { }\n\n        if (!this.connected) {\n            this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n        }\n    }\n\n    private async isAuthedAndUnlocked() {\n        if (await this.userService.isAuthenticated()) {\n            const locked = await this.lockService.isLocked();\n            return !locked;\n        }\n        return false;\n    }\n\n    private random(min: number, max: number) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { NotificationType } from '../../enums/notificationType';\n\nexport class NotificationResponse extends BaseResponse {\n    contextId: string;\n    type: NotificationType;\n    payload: any;\n\n    constructor(response: any) {\n        super(response);\n        this.contextId = this.getResponseProperty('ContextId');\n        this.type = this.getResponseProperty('Type');\n\n        const payload = this.getResponseProperty('Payload');\n        switch (this.type) {\n            case NotificationType.SyncCipherCreate:\n            case NotificationType.SyncCipherDelete:\n            case NotificationType.SyncCipherUpdate:\n            case NotificationType.SyncLoginDelete:\n                this.payload = new SyncCipherNotification(payload);\n                break;\n            case NotificationType.SyncFolderCreate:\n            case NotificationType.SyncFolderDelete:\n            case NotificationType.SyncFolderUpdate:\n                this.payload = new SyncFolderNotification(payload);\n                break;\n            case NotificationType.SyncVault:\n            case NotificationType.SyncCiphers:\n            case NotificationType.SyncOrgKeys:\n            case NotificationType.SyncSettings:\n            case NotificationType.LogOut:\n                this.payload = new UserNotification(payload);\n                break;\n            default:\n                break;\n        }\n    }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n    id: string;\n    userId: string;\n    organizationId: string;\n    collectionIds: string[];\n    revisionDate: Date;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.userId = this.getResponseProperty('UserId');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.collectionIds = this.getResponseProperty('CollectionIds');\n        this.revisionDate = new Date(this.getResponseProperty('RevisionDate'));\n    }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n    id: string;\n    userId: string;\n    revisionDate: Date;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.userId = this.getResponseProperty('UserId');\n        this.revisionDate = new Date(this.getResponseProperty('RevisionDate'));\n    }\n}\n\nexport class UserNotification extends BaseResponse {\n    userId: string;\n    date: Date;\n\n    constructor(response: any) {\n        super(response);\n        this.userId = this.getResponseProperty('UserId');\n        this.date = new Date(this.getResponseProperty('Date'));\n    }\n}\n","import * as lunr from 'lunr';\n\nimport { CipherView } from '../models/view/cipherView';\n\nimport { CipherService } from '../abstractions/cipher.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\nimport { SearchService as SearchServiceAbstraction } from '../abstractions/search.service';\n\nimport { CipherType } from '../enums/cipherType';\nimport { DeviceType } from '../enums/deviceType';\nimport { FieldType } from '../enums/fieldType';\nimport { UriMatchType } from '../enums/uriMatchType';\n\nexport class SearchService implements SearchServiceAbstraction {\n    private indexing = false;\n    private index: lunr.Index = null;\n    private onlySearchName = false;\n\n    constructor(private cipherService: CipherService, platformUtilsService: PlatformUtilsService) {\n        this.onlySearchName = platformUtilsService == null ||\n            platformUtilsService.getDevice() === DeviceType.EdgeExtension;\n    }\n\n    clearIndex(): void {\n        this.index = null;\n    }\n\n    isSearchable(query: string): boolean {\n        const notSearchable = query == null || (this.index == null && query.length < 2) ||\n            (this.index != null && query.length < 2 && query.indexOf('>') !== 0);\n        return !notSearchable;\n    }\n\n    async indexCiphers(): Promise<void> {\n        if (this.indexing) {\n            return;\n        }\n        // tslint:disable-next-line\n        console.time('search indexing');\n        this.indexing = true;\n        this.index = null;\n        const builder = new lunr.Builder();\n        builder.ref('id');\n        (builder as any).field('shortid', { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n        (builder as any).field('name', { boost: 10 });\n        (builder as any).field('subtitle', {\n            boost: 5,\n            extractor: (c: CipherView) => {\n                if (c.subTitle != null && c.type === CipherType.Card) {\n                    return c.subTitle.replace(/\\*/g, '');\n                }\n                return c.subTitle;\n            },\n        });\n        builder.field('notes');\n        (builder as any).field('login.username', {\n            extractor: (c: CipherView) => c.type === CipherType.Login && c.login != null ? c.login.username : null,\n        });\n        (builder as any).field('login.uris', { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n        (builder as any).field('fields', { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n        (builder as any).field('fields_joined', { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n        (builder as any).field('attachments', { extractor: (c: CipherView) => this.attachmentExtractor(c, false) });\n        (builder as any).field('attachments_joined',\n            { extractor: (c: CipherView) => this.attachmentExtractor(c, true) });\n        (builder as any).field('organizationid', { extractor: (c: CipherView) => c.organizationId });\n        const ciphers = await this.cipherService.getAllDecrypted();\n        ciphers.forEach((c) => builder.add(c));\n        this.index = builder.build();\n        this.indexing = false;\n        // tslint:disable-next-line\n        console.timeEnd('search indexing');\n    }\n\n    async searchCiphers(query: string, filter: (cipher: CipherView) => boolean = null, ciphers: CipherView[] = null):\n        Promise<CipherView[]> {\n        const results: CipherView[] = [];\n        if (query != null) {\n            query = query.trim().toLowerCase();\n        }\n        if (query === '') {\n            query = null;\n        }\n\n        if (ciphers == null) {\n            ciphers = await this.cipherService.getAllDecrypted();\n        }\n        if (filter != null) {\n            ciphers = ciphers.filter(filter);\n        }\n\n        if (!this.isSearchable(query)) {\n            return ciphers;\n        }\n\n        if (this.indexing) {\n            await new Promise((r) => setTimeout(r, 250));\n            if (this.indexing) {\n                await new Promise((r) => setTimeout(r, 500));\n            }\n        }\n\n        const index = this.getIndexForSearch();\n        if (index == null) {\n            // Fall back to basic search if index is not available\n            return this.searchCiphersBasic(ciphers, query);\n        }\n\n        const ciphersMap = new Map<string, CipherView>();\n        ciphers.forEach((c) => ciphersMap.set(c.id, c));\n\n        let searchResults: lunr.Index.Result[] = null;\n        const isQueryString = query != null && query.length > 1 && query.indexOf('>') === 0;\n        if (isQueryString) {\n            try {\n                searchResults = index.search(query.substr(1).trim());\n            } catch { }\n        } else {\n            // tslint:disable-next-line\n            const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n            searchResults = index.query((q) => {\n                lunr.tokenizer(query).forEach((token) => {\n                    const t = token.toString();\n                    q.term(t, { fields: ['name'], wildcard: soWild });\n                    q.term(t, { fields: ['subtitle'], wildcard: soWild });\n                    q.term(t, { fields: ['login.uris'], wildcard: soWild });\n                    q.term(t, {});\n                });\n            });\n        }\n\n        if (searchResults != null) {\n            searchResults.forEach((r) => {\n                if (ciphersMap.has(r.ref)) {\n                    results.push(ciphersMap.get(r.ref));\n                }\n            });\n        }\n        return results;\n    }\n\n    searchCiphersBasic(ciphers: CipherView[], query: string) {\n        query = query.trim().toLowerCase();\n        return ciphers.filter((c) => {\n            if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n            if (this.onlySearchName) {\n                return false;\n            }\n            if (query.length >= 8 && c.id.startsWith(query)) {\n                return true;\n            }\n            if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n            if (c.login && c.login.uri != null && c.login.uri.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n            return false;\n        });\n    }\n\n    getIndexForSearch(): lunr.Index {\n        return this.index;\n    }\n\n    private fieldExtractor(c: CipherView, joined: boolean) {\n        if (!c.hasFields) {\n            return null;\n        }\n        let fields: string[] = [];\n        c.fields.forEach((f) => {\n            if (f.name != null) {\n                fields.push(f.name);\n            }\n            if (f.type === FieldType.Text && f.value != null) {\n                fields.push(f.value);\n            }\n        });\n        fields = fields.filter((f) => f.trim() !== '');\n        if (fields.length === 0) {\n            return null;\n        }\n        return joined ? fields.join(' ') : fields;\n    }\n\n    private attachmentExtractor(c: CipherView, joined: boolean) {\n        if (!c.hasAttachments) {\n            return null;\n        }\n        let attachments: string[] = [];\n        c.attachments.forEach((a) => {\n            if (a != null && a.fileName != null) {\n                if (joined && a.fileName.indexOf('.') > -1) {\n                    attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf('.')));\n                } else {\n                    attachments.push(a.fileName);\n                }\n            }\n        });\n        attachments = attachments.filter((f) => f.trim() !== '');\n        if (attachments.length === 0) {\n            return null;\n        }\n        return joined ? attachments.join(' ') : attachments;\n    }\n\n    private uriExtractor(c: CipherView) {\n        if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n            return null;\n        }\n        const uris: string[] = [];\n        c.login.uris.forEach((u) => {\n            if (u.uri == null || u.uri === '') {\n                return;\n            }\n            if (u.hostname != null) {\n                uris.push(u.hostname);\n                return;\n            }\n            let uri = u.uri;\n            if (u.match !== UriMatchType.RegularExpression) {\n                const protocolIndex = uri.indexOf('://');\n                if (protocolIndex > -1) {\n                    uri = uri.substr(protocolIndex + 3);\n                }\n                const queryIndex = uri.search(/\\?|&|#/);\n                if (queryIndex > -1) {\n                    uri = uri.substring(0, queryIndex);\n                }\n            }\n            uris.push(uri);\n        });\n        return uris.length > 0 ? uris : null;\n    }\n}\n","import * as forge from 'node-forge';\n\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\n\nimport { Utils } from '../misc/utils';\n\nimport { DecryptParameters } from '../models/domain/decryptParameters';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n    private crypto: Crypto;\n    private subtle: SubtleCrypto;\n    private isEdge: boolean;\n    private isIE: boolean;\n    private isOldSafari: boolean;\n\n    constructor(private win: Window, private platformUtilsService: PlatformUtilsService) {\n        this.crypto = typeof win.crypto !== 'undefined' ? win.crypto : null;\n        this.subtle = (!!this.crypto && typeof win.crypto.subtle !== 'undefined') ? win.crypto.subtle : null;\n        this.isEdge = platformUtilsService.isEdge();\n        this.isIE = platformUtilsService.isIE();\n        const ua = win.navigator.userAgent;\n        this.isOldSafari = platformUtilsService.isSafari() &&\n            (ua.indexOf(' Version/10.') > -1 || ua.indexOf(' Version/9.') > -1);\n    }\n\n    async pbkdf2(password: string | ArrayBuffer, salt: string | ArrayBuffer, algorithm: 'sha256' | 'sha512',\n        iterations: number): Promise<ArrayBuffer> {\n        if (this.isEdge || this.isIE || this.isOldSafari) {\n            const forgeLen = algorithm === 'sha256' ? 32 : 64;\n            const passwordBytes = this.toByteString(password);\n            const saltBytes = this.toByteString(salt);\n            const derivedKeyBytes = (forge as any).pbkdf2(passwordBytes, saltBytes, iterations, forgeLen, algorithm);\n            return Utils.fromByteStringToArray(derivedKeyBytes).buffer;\n        }\n\n        const wcLen = algorithm === 'sha256' ? 256 : 512;\n        const passwordBuf = this.toBuf(password);\n        const saltBuf = this.toBuf(salt);\n\n        const pbkdf2Params: Pbkdf2Params = {\n            name: 'PBKDF2',\n            salt: saltBuf,\n            iterations: iterations,\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n\n        const impKey = await this.subtle.importKey('raw', passwordBuf, { name: 'PBKDF2' } as any,\n            false, ['deriveBits']);\n        return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n    }\n\n    async hash(value: string | ArrayBuffer, algorithm: 'sha1' | 'sha256' | 'sha512' | 'md5'): Promise<ArrayBuffer> {\n        if (((this.isEdge || this.isIE) && algorithm === 'sha1') || algorithm === 'md5') {\n            const md = algorithm === 'md5' ? forge.md.md5.create() : forge.md.sha1.create();\n            const valueBytes = this.toByteString(value);\n            md.update(valueBytes, 'raw');\n            return Utils.fromByteStringToArray(md.digest().data).buffer;\n        }\n\n        const valueBuf = this.toBuf(value);\n        return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n    }\n\n    async hmac(value: ArrayBuffer, key: ArrayBuffer, algorithm: 'sha1' | 'sha256' | 'sha512'): Promise<ArrayBuffer> {\n        if (this.isIE && algorithm === 'sha512') {\n            const hmac = (forge as any).hmac.create();\n            const keyBytes = this.toByteString(key);\n            const valueBytes = this.toByteString(value);\n            hmac.start(algorithm, keyBytes);\n            hmac.update(valueBytes, 'raw');\n            return Utils.fromByteStringToArray(hmac.digest().data).buffer;\n        }\n\n        const signingAlgorithm = {\n            name: 'HMAC',\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n\n        const impKey = await this.subtle.importKey('raw', key, signingAlgorithm, false, ['sign']);\n        return await this.subtle.sign(signingAlgorithm, impKey, value);\n    }\n\n    // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n    // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n    // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n    async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n        const macKey = await this.randomBytes(32);\n        const signingAlgorithm = {\n            name: 'HMAC',\n            hash: { name: 'SHA-256' },\n        };\n        const impKey = await this.subtle.importKey('raw', macKey, signingAlgorithm, false, ['sign']);\n        const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n        const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n        if (mac1.byteLength !== mac2.byteLength) {\n            return false;\n        }\n\n        const arr1 = new Uint8Array(mac1);\n        const arr2 = new Uint8Array(mac2);\n        for (let i = 0; i < arr2.length; i++) {\n            if (arr1[i] !== arr2[i]) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hmacFast(value: string, key: string, algorithm: 'sha1' | 'sha256' | 'sha512'): Promise<string> {\n        const hmac = (forge as any).hmac.create();\n        hmac.start(algorithm, key);\n        hmac.update(value);\n        const bytes = hmac.digest().getBytes();\n        return Promise.resolve(bytes);\n    }\n\n    async compareFast(a: string, b: string): Promise<boolean> {\n        const rand = await this.randomBytes(32);\n        const bytes = new Uint32Array(rand);\n        const buffer = forge.util.createBuffer();\n        for (let i = 0; i < bytes.length; i++) {\n            buffer.putInt32(bytes[i]);\n        }\n        const macKey = buffer.getBytes();\n\n        const hmac = (forge as any).hmac.create();\n        hmac.start('sha256', macKey);\n        hmac.update(a);\n        const mac1 = hmac.digest().getBytes();\n\n        hmac.start(null, null);\n        hmac.update(b);\n        const mac2 = hmac.digest().getBytes();\n\n        const equals = mac1 === mac2;\n        return equals;\n    }\n\n    async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n        const impKey = await this.subtle.importKey('raw', key, { name: 'AES-CBC' } as any, false, ['encrypt']);\n        return await this.subtle.encrypt({ name: 'AES-CBC', iv: iv }, impKey, data);\n    }\n\n    aesDecryptFastParameters(data: string, iv: string, mac: string, key: SymmetricCryptoKey):\n        DecryptParameters<string> {\n        const p = new DecryptParameters<string>();\n        if (key.meta != null) {\n            p.encKey = key.meta.encKeyByteString;\n            p.macKey = key.meta.macKeyByteString;\n        }\n\n        if (p.encKey == null) {\n            p.encKey = forge.util.decode64(key.encKeyB64);\n        }\n        p.data = forge.util.decode64(data);\n        p.iv = forge.util.decode64(iv);\n        p.macData = p.iv + p.data;\n        if (p.macKey == null && key.macKeyB64 != null) {\n            p.macKey = forge.util.decode64(key.macKeyB64);\n        }\n        if (mac != null) {\n            p.mac = forge.util.decode64(mac);\n        }\n\n        // cache byte string keys for later\n        if (key.meta == null) {\n            key.meta = {};\n        }\n        if (key.meta.encKeyByteString == null) {\n            key.meta.encKeyByteString = p.encKey;\n        }\n        if (p.macKey != null && key.meta.macKeyByteString == null) {\n            key.meta.macKeyByteString = p.macKey;\n        }\n\n        return p;\n    }\n\n    aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n        const dataBuffer = (forge as any).util.createBuffer(parameters.data);\n        const decipher = (forge as any).cipher.createDecipher('AES-CBC', parameters.encKey);\n        decipher.start({ iv: parameters.iv });\n        decipher.update(dataBuffer);\n        decipher.finish();\n        const val = decipher.output.toString('utf8');\n        return Promise.resolve(val);\n    }\n\n    async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n        const impKey = await this.subtle.importKey('raw', key, { name: 'AES-CBC' } as any, false, ['decrypt']);\n        return await this.subtle.decrypt({ name: 'AES-CBC', iv: iv }, impKey, data);\n    }\n\n    async rsaEncrypt(data: ArrayBuffer, publicKey: ArrayBuffer, algorithm: 'sha1' | 'sha256'): Promise<ArrayBuffer> {\n        // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n        // We cannot use the proper types here.\n        const rsaParams = {\n            name: 'RSA-OAEP',\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n        const impKey = await this.subtle.importKey('spki', publicKey, rsaParams, false, ['encrypt']);\n        return await this.subtle.encrypt(rsaParams, impKey, data);\n    }\n\n    async rsaDecrypt(data: ArrayBuffer, privateKey: ArrayBuffer, algorithm: 'sha1' | 'sha256'): Promise<ArrayBuffer> {\n        // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n        // We cannot use the proper types here.\n        const rsaParams = {\n            name: 'RSA-OAEP',\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n        const impKey = await this.subtle.importKey('pkcs8', privateKey, rsaParams, false, ['decrypt']);\n        return await this.subtle.decrypt(rsaParams, impKey, data);\n    }\n\n    async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n        const rsaParams = {\n            name: 'RSA-OAEP',\n            // Have to specify some algorithm\n            hash: { name: this.toWebCryptoAlgorithm('sha1') },\n        };\n        const impPrivateKey = await this.subtle.importKey('pkcs8', privateKey, rsaParams, true, ['decrypt']);\n        const jwkPrivateKey = await this.subtle.exportKey('jwk', impPrivateKey);\n        const jwkPublicKeyParams = {\n            kty: 'RSA',\n            e: jwkPrivateKey.e,\n            n: jwkPrivateKey.n,\n            alg: 'RSA-OAEP',\n            ext: true,\n        };\n        const impPublicKey = await this.subtle.importKey('jwk', jwkPublicKeyParams, rsaParams, true, ['encrypt']);\n        return await this.subtle.exportKey('spki', impPublicKey);\n    }\n\n    async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n        const rsaParams = {\n            name: 'RSA-OAEP',\n            modulusLength: length,\n            publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n            // Have to specify some algorithm\n            hash: { name: this.toWebCryptoAlgorithm('sha1') },\n        };\n        const keyPair = await this.subtle.generateKey(rsaParams, true, ['encrypt', 'decrypt']);\n        const publicKey = await this.subtle.exportKey('spki', keyPair.publicKey);\n        const privateKey = await this.subtle.exportKey('pkcs8', keyPair.privateKey);\n        return [publicKey, privateKey];\n    }\n\n    randomBytes(length: number): Promise<ArrayBuffer> {\n        const arr = new Uint8Array(length);\n        this.crypto.getRandomValues(arr);\n        return Promise.resolve(arr.buffer);\n    }\n\n    private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n        let buf: ArrayBuffer;\n        if (typeof (value) === 'string') {\n            buf = Utils.fromUtf8ToArray(value).buffer;\n        } else {\n            buf = value;\n        }\n        return buf;\n    }\n\n    private toByteString(value: string | ArrayBuffer): string {\n        let bytes: string;\n        if (typeof (value) === 'string') {\n            bytes = forge.util.encodeUtf8(value);\n        } else {\n            bytes = Utils.fromBufferToByteString(value);\n        }\n        return bytes;\n    }\n\n    private toWebCryptoAlgorithm(algorithm: 'sha1' | 'sha256' | 'sha512' | 'md5'): string {\n        if (algorithm === 'md5') {\n            throw new Error('MD5 is not supported in WebCrypto.');\n        }\n        return algorithm === 'sha1' ? 'SHA-1' : algorithm === 'sha256' ? 'SHA-256' : 'SHA-512';\n    }\n}\n","export class DecryptParameters<T> {\n    encKey: T;\n    data: T;\n    iv: T;\n    macKey: T;\n    mac: T;\n    macData: T;\n}\n","import { NgModule } from '@angular/core';\nimport {\n    RouterModule,\n    Routes,\n} from '@angular/router';\n\nimport { FrontendLayoutComponent } from './layouts/frontend-layout.component';\nimport { OrganizationLayoutComponent } from './layouts/organization-layout.component';\nimport { UserLayoutComponent } from './layouts/user-layout.component';\n\nimport { AcceptOrganizationComponent } from './accounts/accept-organization.component';\nimport { HintComponent } from './accounts/hint.component';\nimport { LockComponent } from './accounts/lock.component';\nimport { LoginComponent } from './accounts/login.component';\nimport { RecoverDeleteComponent } from './accounts/recover-delete.component';\nimport { RecoverTwoFactorComponent } from './accounts/recover-two-factor.component';\nimport { RegisterComponent } from './accounts/register.component';\nimport { TwoFactorComponent } from './accounts/two-factor.component';\nimport { VerifyEmailTokenComponent } from './accounts/verify-email-token.component';\nimport { VerifyRecoverDeleteComponent } from './accounts/verify-recover-delete.component';\n\nimport { CollectionsComponent as OrgManageCollectionsComponent } from './organizations/manage/collections.component';\nimport { EventsComponent as OrgEventsComponent } from './organizations/manage/events.component';\nimport { GroupsComponent as OrgGroupsComponent } from './organizations/manage/groups.component';\nimport { ManageComponent as OrgManageComponent } from './organizations/manage/manage.component';\nimport { PeopleComponent as OrgPeopleComponent } from './organizations/manage/people.component';\n\nimport { AccountComponent as OrgAccountComponent } from './organizations/settings/account.component';\nimport { OrganizationBillingComponent } from './organizations/settings/organization-billing.component';\nimport { OrganizationSubscriptionComponent } from './organizations/settings/organization-subscription.component';\nimport { SettingsComponent as OrgSettingsComponent } from './organizations/settings/settings.component';\nimport {\n    TwoFactorSetupComponent as OrgTwoFactorSetupComponent,\n} from './organizations/settings/two-factor-setup.component';\n\nimport { ExportComponent as OrgExportComponent } from './organizations/tools/export.component';\nimport {\n    ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent,\n} from './organizations/tools/exposed-passwords-report.component';\nimport { ImportComponent as OrgImportComponent } from './organizations/tools/import.component';\nimport {\n    InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent,\n} from './organizations/tools/inactive-two-factor-report.component';\nimport {\n    ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent,\n} from './organizations/tools/reused-passwords-report.component';\nimport { ToolsComponent as OrgToolsComponent } from './organizations/tools/tools.component';\nimport {\n    UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent,\n} from './organizations/tools/unsecured-websites-report.component';\nimport {\n    WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent,\n} from './organizations/tools/weak-passwords-report.component';\n\nimport { VaultComponent as OrgVaultComponent } from './organizations/vault/vault.component';\n\nimport { AccountComponent } from './settings/account.component';\nimport { CreateOrganizationComponent } from './settings/create-organization.component';\nimport { DomainRulesComponent } from './settings/domain-rules.component';\nimport { OptionsComponent } from './settings/options.component';\nimport { OrganizationsComponent } from './settings/organizations.component';\nimport { PremiumComponent } from './settings/premium.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { TwoFactorSetupComponent } from './settings/two-factor-setup.component';\nimport { UserBillingComponent } from './settings/user-billing.component';\nimport { UserSubscriptionComponent } from './settings/user-subscription.component';\n\nimport { BreachReportComponent } from './tools/breach-report.component';\nimport { ExportComponent } from './tools/export.component';\nimport { ExposedPasswordsReportComponent } from './tools/exposed-passwords-report.component';\nimport { ImportComponent } from './tools/import.component';\nimport { InactiveTwoFactorReportComponent } from './tools/inactive-two-factor-report.component';\nimport { PasswordGeneratorComponent } from './tools/password-generator.component';\nimport { ReusedPasswordsReportComponent } from './tools/reused-passwords-report.component';\nimport { ToolsComponent } from './tools/tools.component';\nimport { UnsecuredWebsitesReportComponent } from './tools/unsecured-websites-report.component';\nimport { WeakPasswordsReportComponent } from './tools/weak-passwords-report.component';\n\nimport { VaultComponent } from './vault/vault.component';\n\nimport { OrganizationGuardService } from './services/organization-guard.service';\nimport { OrganizationTypeGuardService } from './services/organization-type-guard.service';\nimport { UnauthGuardService } from './services/unauth-guard.service';\n\nimport { AuthGuardService } from 'jslib/angular/services/auth-guard.service';\n\nimport { OrganizationUserType } from 'jslib/enums/organizationUserType';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: FrontendLayoutComponent,\n        children: [\n            { path: '', pathMatch: 'full', component: LoginComponent, canActivate: [UnauthGuardService] },\n            { path: '2fa', component: TwoFactorComponent, canActivate: [UnauthGuardService] },\n            {\n                path: 'register', component: RegisterComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'createAccount' },\n            },\n            {\n                path: 'hint', component: HintComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'passwordHint' },\n            },\n            { path: 'lock', component: LockComponent },\n            { path: 'verify-email', component: VerifyEmailTokenComponent },\n            {\n                path: 'accept-organization',\n                component: AcceptOrganizationComponent,\n                data: { titleId: 'joinOrganization' },\n            },\n            { path: 'recover', pathMatch: 'full', redirectTo: 'recover-2fa' },\n            {\n                path: 'recover-2fa',\n                component: RecoverTwoFactorComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'recoverAccountTwoStep' },\n            },\n            {\n                path: 'recover-delete',\n                component: RecoverDeleteComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'deleteAccount' },\n            },\n            {\n                path: 'verify-recover-delete',\n                component: VerifyRecoverDeleteComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'deleteAccount' },\n            },\n        ],\n    },\n    {\n        path: '',\n        component: UserLayoutComponent,\n        canActivate: [AuthGuardService],\n        children: [\n            { path: 'vault', component: VaultComponent, data: { titleId: 'myVault' } },\n            {\n                path: 'settings',\n                component: SettingsComponent,\n                children: [\n                    { path: '', pathMatch: 'full', redirectTo: 'account' },\n                    { path: 'account', component: AccountComponent, data: { titleId: 'myAccount' } },\n                    { path: 'options', component: OptionsComponent, data: { titleId: 'options' } },\n                    { path: 'domain-rules', component: DomainRulesComponent, data: { titleId: 'domainRules' } },\n                    { path: 'two-factor', component: TwoFactorSetupComponent, data: { titleId: 'twoStepLogin' } },\n                    { path: 'premium', component: PremiumComponent, data: { titleId: 'goPremium' } },\n                    { path: 'billing', component: UserBillingComponent, data: { titleId: 'billing' } },\n                    {\n                        path: 'subscription',\n                        component: UserSubscriptionComponent,\n                        data: { titleId: 'premiumMembership' },\n                    },\n                    { path: 'organizations', component: OrganizationsComponent, data: { titleId: 'organizations' } },\n                    {\n                        path: 'create-organization',\n                        component: CreateOrganizationComponent,\n                        data: { titleId: 'newOrganization' },\n                    },\n                ],\n            },\n            {\n                path: 'tools',\n                component: ToolsComponent,\n                canActivate: [AuthGuardService],\n                children: [\n                    { path: '', pathMatch: 'full', redirectTo: 'generator' },\n                    { path: 'import', component: ImportComponent, data: { titleId: 'importData' } },\n                    { path: 'export', component: ExportComponent, data: { titleId: 'exportVault' } },\n                    {\n                        path: 'generator',\n                        component: PasswordGeneratorComponent,\n                        data: { titleId: 'passwordGenerator' },\n                    },\n                    { path: 'breach-report', component: BreachReportComponent, data: { titleId: 'dataBreachReport' } },\n                    {\n                        path: 'reused-passwords-report',\n                        component: ReusedPasswordsReportComponent,\n                        data: { titleId: 'reusedPasswordsReport' },\n                    },\n                    {\n                        path: 'unsecured-websites-report',\n                        component: UnsecuredWebsitesReportComponent,\n                        data: { titleId: 'unsecuredWebsitesReport' },\n                    },\n                    {\n                        path: 'weak-passwords-report',\n                        component: WeakPasswordsReportComponent,\n                        data: { titleId: 'weakPasswordsReport' },\n                    },\n                    {\n                        path: 'exposed-passwords-report',\n                        component: ExposedPasswordsReportComponent,\n                        data: { titleId: 'exposedPasswordsReport' },\n                    },\n                    {\n                        path: 'inactive-two-factor-report',\n                        component: InactiveTwoFactorReportComponent,\n                        data: { titleId: 'inactive2faReport' },\n                    },\n                ],\n            },\n        ],\n    },\n    {\n        path: 'organizations/:organizationId',\n        component: OrganizationLayoutComponent,\n        canActivate: [AuthGuardService, OrganizationGuardService],\n        children: [\n            { path: '', pathMatch: 'full', redirectTo: 'vault' },\n            { path: 'vault', component: OrgVaultComponent, data: { titleId: 'vault' } },\n            {\n                path: 'tools',\n                component: OrgToolsComponent,\n                canActivate: [OrganizationTypeGuardService],\n                data: { allowedTypes: [OrganizationUserType.Owner, OrganizationUserType.Admin] },\n                children: [\n                    { path: '', pathMatch: 'full', redirectTo: 'import' },\n                    { path: 'import', component: OrgImportComponent, data: { titleId: 'importData' } },\n                    { path: 'export', component: OrgExportComponent, data: { titleId: 'exportVault' } },\n                    {\n                        path: 'exposed-passwords-report',\n                        component: OrgExposedPasswordsReportComponent,\n                        data: { titleId: 'exposedPasswordsReport' },\n                    },\n                    {\n                        path: 'inactive-two-factor-report',\n                        component: OrgInactiveTwoFactorReportComponent,\n                        data: { titleId: 'inactive2faReport' },\n                    },\n                    {\n                        path: 'reused-passwords-report',\n                        component: OrgReusedPasswordsReportComponent,\n                        data: { titleId: 'reusedPasswordsReport' },\n                    },\n                    {\n                        path: 'unsecured-websites-report',\n                        component: OrgUnsecuredWebsitesReportComponent,\n                        data: { titleId: 'unsecuredWebsitesReport' },\n                    },\n                    {\n                        path: 'weak-passwords-report',\n                        component: OrgWeakPasswordsReportComponent,\n                        data: { titleId: 'weakPasswordsReport' },\n                    },\n                ],\n            },\n            {\n                path: 'manage',\n                component: OrgManageComponent,\n                canActivate: [OrganizationTypeGuardService],\n                data: {\n                    allowedTypes: [\n                        OrganizationUserType.Owner,\n                        OrganizationUserType.Admin,\n                        OrganizationUserType.Manager,\n                    ],\n                },\n                children: [\n                    { path: '', pathMatch: 'full', redirectTo: 'people' },\n                    { path: 'collections', component: OrgManageCollectionsComponent, data: { titleId: 'collections' } },\n                    { path: 'events', component: OrgEventsComponent, data: { titleId: 'eventLogs' } },\n                    { path: 'groups', component: OrgGroupsComponent, data: { titleId: 'groups' } },\n                    { path: 'people', component: OrgPeopleComponent, data: { titleId: 'people' } },\n                ],\n            },\n            {\n                path: 'settings',\n                component: OrgSettingsComponent,\n                canActivate: [OrganizationTypeGuardService],\n                data: { allowedTypes: [OrganizationUserType.Owner] },\n                children: [\n                    { path: '', pathMatch: 'full', redirectTo: 'account' },\n                    { path: 'account', component: OrgAccountComponent, data: { titleId: 'myOrganization' } },\n                    { path: 'two-factor', component: OrgTwoFactorSetupComponent, data: { titleId: 'twoStepLogin' } },\n                    {\n                        path: 'billing',\n                        component: OrganizationBillingComponent,\n                        data: { titleId: 'billing' },\n                    },\n                    {\n                        path: 'subscription',\n                        component: OrganizationSubscriptionComponent,\n                        data: { titleId: 'subscription' },\n                    },\n                ],\n            },\n        ],\n    },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, {\n        useHash: true,\n        /*enableTracing: true,*/\n    })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n"],"sourceRoot":""}